[
    {
        "id": "32896441324",
        "type": "WatchEvent",
        "actor": {
            "id": 50513374,
            "login": "cmdr-keen",
            "display_login": "cmdr-keen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cmdr-keen",
            "avatar_url": "https://avatars.githubusercontent.com/u/50513374?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T11:00:40Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32879190338",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 819587,
            "login": "jbaris",
            "display_login": "jbaris",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbaris",
            "avatar_url": "https://avatars.githubusercontent.com/u/819587?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/1926",
                "id": 721289330,
                "node_id": "MDU6SXNzdWU3MjEyODkzMzA=",
                "number": 1926,
                "title": "Setting the fetch size on a CallableStatement does not work.",
                "user": {
                    "login": "jMediaConverter",
                    "id": 22812337,
                    "node_id": "MDQ6VXNlcjIyODEyMzM3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/22812337?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jMediaConverter",
                    "html_url": "https://github.com/jMediaConverter",
                    "followers_url": "https://api.github.com/users/jMediaConverter/followers",
                    "following_url": "https://api.github.com/users/jMediaConverter/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jMediaConverter/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jMediaConverter/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jMediaConverter/subscriptions",
                    "organizations_url": "https://api.github.com/users/jMediaConverter/orgs",
                    "repos_url": "https://api.github.com/users/jMediaConverter/repos",
                    "events_url": "https://api.github.com/users/jMediaConverter/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jMediaConverter/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 13,
                "created_at": "2020-10-14T09:18:20Z",
                "updated_at": "2023-10-26T19:03:24Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Setting the fetch size on a CallableStatement does not work, when reading the resultset the default fetch size is used.  If the default fetch size (that can be configured with the driver property 'defaultRowFetchSize') is left to its default value 0 (load the entire resultset), for CallableStatements, regardless of the fetch size set on the statement the entire resultset is loaded in memory. A heap dump analysis tool can also reveal this. \r\n\r\nDriver Version: 9.4.1211\r\n\r\nJava Version: 11\r\n\r\nOS Version: Windows 10\r\n\r\nPostgreSQL Version:9.6\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n\r\nAssuming the following stored function exists on the database:\r\n\r\n\r\n```\r\nCREATE OR REPLACE FUNCTION GetCostCenters() RETURNS REFCURSOR AS $$ \r\n\t\t\t\tDECLARE  \r\n\t\t\t\t\tcl1 REFCURSOR; \r\n\t\t\t\tBEGIN \r\n\t\t\t\t\tOPEN cl1 FOR\r\n                                        -- any select returning 20 rows for example\r\n\t\t\t\t\tselect CostCenterName, CostCenterNo from CostCenter; \r\n\t\t\t\t      RETURN cl1; \r\n\t\t\t\tEND; \r\n\t\t\t\t$$ LANGUAGE plpgsql;\r\n\r\n```\r\n\r\nSee the following code snippet, nothing is closed to keep things simple:\r\n\r\n```\r\n\t        Connection conn = ....; // get a Connection\r\n\t\tCallableStatement cs = conn.prepareCall(\"{? = call getCostCenters()}\");\r\n\t\tcs.registerOutParameter(1, Types.REF_CURSOR);\r\n\t\tcs.setFetchSize(10);\r\n\t\tcs.execute();\r\n\t\tResultSet rs = (ResultSet) cs.getObject(1);\r\n\t\tSystem.out.println(\"RS fetch size: \" + rs.getFetchSize() + \", should be \" + cs.getFetchSize());\r\n\t\t\r\n\t\tSystem.out.println(\"Checking what is already loaded in the RS ...\");\r\n                // using Spring Framework ReflectionTestUtils to peek into the rows member of the PgResultSet\r\n\t\tList<byte[][]> rows = (List<byte[][]>) ReflectionTestUtils.getField(rs, \"rows\");\r\n\t\tSystem.out.println(rows.size() + \" records already loaded.\");\r\n\r\n```\r\n\r\nExpected behaviour: The fetch size set on the CallableStatement should be used when processing the resultset resulted from the CallableStatement.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1781737627",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/1926#issuecomment-1781737627",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926",
                "id": 1781737627,
                "node_id": "IC_kwDOADNskM5qMyib",
                "user": {
                    "login": "jbaris",
                    "id": 819587,
                    "node_id": "MDQ6VXNlcjgxOTU4Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/819587?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jbaris",
                    "html_url": "https://github.com/jbaris",
                    "followers_url": "https://api.github.com/users/jbaris/followers",
                    "following_url": "https://api.github.com/users/jbaris/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jbaris/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jbaris/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jbaris/subscriptions",
                    "organizations_url": "https://api.github.com/users/jbaris/orgs",
                    "repos_url": "https://api.github.com/users/jbaris/repos",
                    "events_url": "https://api.github.com/users/jbaris/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jbaris/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T19:03:23Z",
                "updated_at": "2023-10-26T19:03:23Z",
                "author_association": "NONE",
                "body": "@davecramer Maybe the issue comes from the class PgResultSet at method [internalGetObject](https://github.com/pgjdbc/pgjdbc/blob/9cf9f36a1d3a1edd9286721f9c0b9cfa9e8422e3/pgjdbc/src/main/java/org/postgresql/jdbc/PgResultSet.java#L288):\r\n\r\n\r\n      if (type.equals(\"refcursor\")) {\r\n          // Fetch all results.\r\n          String cursorName = castNonNull(getString(columnIndex));\r\n\r\n          StringBuilder sb = new StringBuilder(\"FETCH ALL IN \");\r\n          Utils.escapeIdentifier(sb, cursorName);\r\n         \r\n          ResultSet rs =\r\n              connection.execSQLQuery(sb.toString(), resultsettype, ResultSet.CONCUR_READ_ONLY);\r\n\r\nThat call to *execSQLQuery* is missing the fetchSize property.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1781737627/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T19:03:24Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32876420978",
        "type": "IssuesEvent",
        "actor": {
            "id": 111790456,
            "login": "amikish",
            "display_login": "amikish",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amikish",
            "avatar_url": "https://avatars.githubusercontent.com/u/111790456?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2970",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2970/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2970/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2970/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2970",
                "id": 1964002308,
                "node_id": "I_kwDOADNskM51EEwE",
                "number": 2970,
                "title": "adaptiveFetch doesn't work on growing rows",
                "user": {
                    "login": "amikish",
                    "id": 111790456,
                    "node_id": "U_kgDOBqnJeA",
                    "avatar_url": "https://avatars.githubusercontent.com/u/111790456?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/amikish",
                    "html_url": "https://github.com/amikish",
                    "followers_url": "https://api.github.com/users/amikish/followers",
                    "following_url": "https://api.github.com/users/amikish/following{/other_user}",
                    "gists_url": "https://api.github.com/users/amikish/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/amikish/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/amikish/subscriptions",
                    "organizations_url": "https://api.github.com/users/amikish/orgs",
                    "repos_url": "https://api.github.com/users/amikish/repos",
                    "events_url": "https://api.github.com/users/amikish/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/amikish/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T17:10:27Z",
                "updated_at": "2023-10-26T17:10:27Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nadaptiveFetch is not able to handle a case when resultset rows are growing in size.\r\nNumber of rows to fetch is predicted based on maximum row size seen so far.\r\nSubsequent row which is larger than current maximum leads to exception \"Result set exceeded maxResultBuffer limit\".\r\nIncreasing maxResultBuffer doesn't help, because with growing row size we again hit maxResultBuffer.\r\nI have HikariPool with enabled adaptiveFetch and I can't recover from this exception by dynamically disabling adaptiveFetch using only java.sql.Statement options.\r\n\r\n**Driver Version?** \r\n42.5.4\r\n\r\n**Java Version?**\r\nopenjdk version \"11.0.20.1\" 2023-08-24\r\n\r\n**OS Version?**\r\nUbuntu 22.04.3 LTS\r\n\r\n**PostgreSQL Version?**\r\nPostgreSQL 14.9 (Ubuntu 14.9-0ubuntu0.22.04.1) on x86_64-pc-linux-gnu, compiled by gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, 64-bit\r\n\r\n**To Reproduce**\r\n1. Have table\r\n```\r\n    create table growing_rows(id serial, txt text);\r\n    insert into growing_rows (txt) values\r\n        ((select string_agg(md5(random()::text), ' ') from generate_series(1, 1))),\r\n        ((select string_agg(md5(random()::text), ' ') from generate_series(1, 1000))),\r\n        ((select string_agg(md5(random()::text), ' ') from generate_series(1, 2000)));\r\n```\r\n2. Enable adaptiveFetch\r\n```\r\n    props.setProperty(\"adaptiveFetch\", \"true\");\r\n    props.setProperty(\"defaultRowFetchSize\", \"1\");\r\n    props.setProperty(\"maxResultBuffer\", \"90K\");\r\n    Connection conn = DriverManager.getConnection(url, props);\r\n    conn.setAutoCommit(false);\r\n```\r\n3. Execute statement `select * from growing_rows order by id`\r\n\r\n**Expected behaviour**\r\nI want to be able to read resultSet at least partially in case of hitting maxResultBuffer.\r\nOr we may introduce some flexibility with maxResultBuffer: predict fetchSize based on new expectedResultBuffer property and throw exception when hitting maxResultBuffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2970/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2970/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:10:29Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32868966892",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2950",
                "id": 1877920204,
                "node_id": "I_kwDOADNskM5v7snM",
                "number": 2950,
                "title": "OutOfMemoryError should not be wrapped ",
                "user": {
                    "login": "BusyByte",
                    "id": 3882422,
                    "node_id": "MDQ6VXNlcjM4ODI0MjI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3882422?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/BusyByte",
                    "html_url": "https://github.com/BusyByte",
                    "followers_url": "https://api.github.com/users/BusyByte/followers",
                    "following_url": "https://api.github.com/users/BusyByte/following{/other_user}",
                    "gists_url": "https://api.github.com/users/BusyByte/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/BusyByte/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/BusyByte/subscriptions",
                    "organizations_url": "https://api.github.com/users/BusyByte/orgs",
                    "repos_url": "https://api.github.com/users/BusyByte/repos",
                    "events_url": "https://api.github.com/users/BusyByte/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/BusyByte/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 14,
                "created_at": "2023-09-01T18:58:49Z",
                "updated_at": "2023-10-26T13:10:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**I'm submitting a ...**\r\n\r\n  <!--- What kind of an issue is this? Put an `x` in all the boxes that apply: -->\r\n- [X ] bug report\r\n- [ ] feature request\r\n    \r\n\r\n**Describe the issue**\r\nA clear and concise description of what the issue is.\r\n\r\n**Driver Version?** \r\n42.6.0\r\n\r\n**Java Version?**\r\ndocker: amazoncorretto:17\r\n\r\n**OS Version?**\r\ndocker: amazoncorretto:17\r\n\r\n**PostgreSQL Version?**\r\nN/A\r\n\r\n**To Reproduce**\r\n```\r\nj.l.OutOfMemoryError: Java heap space\r\nWrapped by: o.p.u.PSQLException: Ran out of memory retrieving query results.\r\n\tat o.p.c.v.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2372)\r\n\tat o.p.c.v.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)\r\n\tat o.p.jdbc.PgStatement.executeInternal(PgStatement.java:498)\r\n\tat o.p.jdbc.PgStatement.execute(PgStatement.java:415)\r\n\tat o.p.j.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)\r\n\tat o.p.j.PgPreparedStatement.executeQuery(PgPreparedStatement.java:134)\r\n```\r\n\r\n**Expected behaviour**\r\nOur AWS ECS instance would be killed if OOM Error was not wrapped in a PSQLException.\r\nWe purposely use the [Scala NonFatal](https://www.scala-lang.org/api/2.13.3/scala/util/control/NonFatal$.html) in pattern matches but it won't work if OOM Errors are nested under other exceptions.\r\nBest practices are not to try to handle fatal errors and let them kill the JVM/ECS container.\r\n\r\n\r\n**Logs**\r\nIf possible PostgreSQL logs surrounding the occurrence of the issue\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1781093452",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2950#issuecomment-1781093452",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2950",
                "id": 1781093452,
                "node_id": "IC_kwDOADNskM5qKVRM",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T13:10:00Z",
                "updated_at": "2023-10-26T13:10:00Z",
                "author_association": "MEMBER",
                "body": "@BusyByte any progress ?",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1781093452/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:10:01Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32848569493",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/1926",
                "id": 721289330,
                "node_id": "MDU6SXNzdWU3MjEyODkzMzA=",
                "number": 1926,
                "title": "Setting the fetch size on a CallableStatement does not work.",
                "user": {
                    "login": "jMediaConverter",
                    "id": 22812337,
                    "node_id": "MDQ6VXNlcjIyODEyMzM3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/22812337?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jMediaConverter",
                    "html_url": "https://github.com/jMediaConverter",
                    "followers_url": "https://api.github.com/users/jMediaConverter/followers",
                    "following_url": "https://api.github.com/users/jMediaConverter/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jMediaConverter/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jMediaConverter/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jMediaConverter/subscriptions",
                    "organizations_url": "https://api.github.com/users/jMediaConverter/orgs",
                    "repos_url": "https://api.github.com/users/jMediaConverter/repos",
                    "events_url": "https://api.github.com/users/jMediaConverter/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jMediaConverter/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 12,
                "created_at": "2020-10-14T09:18:20Z",
                "updated_at": "2023-10-25T20:27:43Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Setting the fetch size on a CallableStatement does not work, when reading the resultset the default fetch size is used.  If the default fetch size (that can be configured with the driver property 'defaultRowFetchSize') is left to its default value 0 (load the entire resultset), for CallableStatements, regardless of the fetch size set on the statement the entire resultset is loaded in memory. A heap dump analysis tool can also reveal this. \r\n\r\nDriver Version: 9.4.1211\r\n\r\nJava Version: 11\r\n\r\nOS Version: Windows 10\r\n\r\nPostgreSQL Version:9.6\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n\r\nAssuming the following stored function exists on the database:\r\n\r\n\r\n```\r\nCREATE OR REPLACE FUNCTION GetCostCenters() RETURNS REFCURSOR AS $$ \r\n\t\t\t\tDECLARE  \r\n\t\t\t\t\tcl1 REFCURSOR; \r\n\t\t\t\tBEGIN \r\n\t\t\t\t\tOPEN cl1 FOR\r\n                                        -- any select returning 20 rows for example\r\n\t\t\t\t\tselect CostCenterName, CostCenterNo from CostCenter; \r\n\t\t\t\t      RETURN cl1; \r\n\t\t\t\tEND; \r\n\t\t\t\t$$ LANGUAGE plpgsql;\r\n\r\n```\r\n\r\nSee the following code snippet, nothing is closed to keep things simple:\r\n\r\n```\r\n\t        Connection conn = ....; // get a Connection\r\n\t\tCallableStatement cs = conn.prepareCall(\"{? = call getCostCenters()}\");\r\n\t\tcs.registerOutParameter(1, Types.REF_CURSOR);\r\n\t\tcs.setFetchSize(10);\r\n\t\tcs.execute();\r\n\t\tResultSet rs = (ResultSet) cs.getObject(1);\r\n\t\tSystem.out.println(\"RS fetch size: \" + rs.getFetchSize() + \", should be \" + cs.getFetchSize());\r\n\t\t\r\n\t\tSystem.out.println(\"Checking what is already loaded in the RS ...\");\r\n                // using Spring Framework ReflectionTestUtils to peek into the rows member of the PgResultSet\r\n\t\tList<byte[][]> rows = (List<byte[][]>) ReflectionTestUtils.getField(rs, \"rows\");\r\n\t\tSystem.out.println(rows.size() + \" records already loaded.\");\r\n\r\n```\r\n\r\nExpected behaviour: The fetch size set on the CallableStatement should be used when processing the resultset resulted from the CallableStatement.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1780004053",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/1926#issuecomment-1780004053",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926",
                "id": 1780004053,
                "node_id": "IC_kwDOADNskM5qGLTV",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T20:27:43Z",
                "updated_at": "2023-10-25T20:27:43Z",
                "author_association": "MEMBER",
                "body": "Ok, I confirmed that this is really an issue, fixing it is not a trivial task. I will look into it",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1780004053/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T20:27:43Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32837648406",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1147960,
            "login": "evenjn",
            "display_login": "evenjn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenjn",
            "avatar_url": "https://avatars.githubusercontent.com/u/1147960?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 11,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:55:41Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779332986",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779332986",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779332986,
                "node_id": "IC_kwDOADNskM5qDnd6",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:55:41Z",
                "updated_at": "2023-10-25T13:55:41Z",
                "author_association": "NONE",
                "body": "Using prepareThreshold=0 works well for me. Thank you!",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779332986/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:55:42Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32837532374",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 819587,
            "login": "jbaris",
            "display_login": "jbaris",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbaris",
            "avatar_url": "https://avatars.githubusercontent.com/u/819587?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/1926",
                "id": 721289330,
                "node_id": "MDU6SXNzdWU3MjEyODkzMzA=",
                "number": 1926,
                "title": "Setting the fetch size on a CallableStatement does not work.",
                "user": {
                    "login": "jMediaConverter",
                    "id": 22812337,
                    "node_id": "MDQ6VXNlcjIyODEyMzM3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/22812337?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jMediaConverter",
                    "html_url": "https://github.com/jMediaConverter",
                    "followers_url": "https://api.github.com/users/jMediaConverter/followers",
                    "following_url": "https://api.github.com/users/jMediaConverter/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jMediaConverter/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jMediaConverter/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jMediaConverter/subscriptions",
                    "organizations_url": "https://api.github.com/users/jMediaConverter/orgs",
                    "repos_url": "https://api.github.com/users/jMediaConverter/repos",
                    "events_url": "https://api.github.com/users/jMediaConverter/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jMediaConverter/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 11,
                "created_at": "2020-10-14T09:18:20Z",
                "updated_at": "2023-10-25T13:52:18Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Setting the fetch size on a CallableStatement does not work, when reading the resultset the default fetch size is used.  If the default fetch size (that can be configured with the driver property 'defaultRowFetchSize') is left to its default value 0 (load the entire resultset), for CallableStatements, regardless of the fetch size set on the statement the entire resultset is loaded in memory. A heap dump analysis tool can also reveal this. \r\n\r\nDriver Version: 9.4.1211\r\n\r\nJava Version: 11\r\n\r\nOS Version: Windows 10\r\n\r\nPostgreSQL Version:9.6\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n\r\nAssuming the following stored function exists on the database:\r\n\r\n\r\n```\r\nCREATE OR REPLACE FUNCTION GetCostCenters() RETURNS REFCURSOR AS $$ \r\n\t\t\t\tDECLARE  \r\n\t\t\t\t\tcl1 REFCURSOR; \r\n\t\t\t\tBEGIN \r\n\t\t\t\t\tOPEN cl1 FOR\r\n                                        -- any select returning 20 rows for example\r\n\t\t\t\t\tselect CostCenterName, CostCenterNo from CostCenter; \r\n\t\t\t\t      RETURN cl1; \r\n\t\t\t\tEND; \r\n\t\t\t\t$$ LANGUAGE plpgsql;\r\n\r\n```\r\n\r\nSee the following code snippet, nothing is closed to keep things simple:\r\n\r\n```\r\n\t        Connection conn = ....; // get a Connection\r\n\t\tCallableStatement cs = conn.prepareCall(\"{? = call getCostCenters()}\");\r\n\t\tcs.registerOutParameter(1, Types.REF_CURSOR);\r\n\t\tcs.setFetchSize(10);\r\n\t\tcs.execute();\r\n\t\tResultSet rs = (ResultSet) cs.getObject(1);\r\n\t\tSystem.out.println(\"RS fetch size: \" + rs.getFetchSize() + \", should be \" + cs.getFetchSize());\r\n\t\t\r\n\t\tSystem.out.println(\"Checking what is already loaded in the RS ...\");\r\n                // using Spring Framework ReflectionTestUtils to peek into the rows member of the PgResultSet\r\n\t\tList<byte[][]> rows = (List<byte[][]>) ReflectionTestUtils.getField(rs, \"rows\");\r\n\t\tSystem.out.println(rows.size() + \" records already loaded.\");\r\n\r\n```\r\n\r\nExpected behaviour: The fetch size set on the CallableStatement should be used when processing the resultset resulted from the CallableStatement.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779326130",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/1926#issuecomment-1779326130",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/1926",
                "id": 1779326130,
                "node_id": "IC_kwDOADNskM5qDlyy",
                "user": {
                    "login": "jbaris",
                    "id": 819587,
                    "node_id": "MDQ6VXNlcjgxOTU4Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/819587?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jbaris",
                    "html_url": "https://github.com/jbaris",
                    "followers_url": "https://api.github.com/users/jbaris/followers",
                    "following_url": "https://api.github.com/users/jbaris/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jbaris/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jbaris/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jbaris/subscriptions",
                    "organizations_url": "https://api.github.com/users/jbaris/orgs",
                    "repos_url": "https://api.github.com/users/jbaris/repos",
                    "events_url": "https://api.github.com/users/jbaris/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jbaris/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:52:18Z",
                "updated_at": "2023-10-25T13:52:18Z",
                "author_association": "NONE",
                "body": "Hi @davecramer \r\nI created a github repo to reproduce this issue:\r\n\r\nhttps://github.com/jbaris/postgress-issue-1926\r\n\r\nI hope this help, because this is high level issue for calling procedures or functions that returns cursors for a large number of rows.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779326130/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:52:19Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32837456226",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 10,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:50:05Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779321881",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779321881",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779321881,
                "node_id": "IC_kwDOADNskM5qDkwZ",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:50:05Z",
                "updated_at": "2023-10-25T13:50:05Z",
                "author_association": "MEMBER",
                "body": "The better option is to use prepareThreshold=0 and the driver won't use a named statement",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779321881/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:50:06Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32837205987",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1147960,
            "login": "evenjn",
            "display_login": "evenjn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenjn",
            "avatar_url": "https://avatars.githubusercontent.com/u/1147960?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:42:41Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779307720",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779307720",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779307720,
                "node_id": "IC_kwDOADNskM5qDhTI",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:42:41Z",
                "updated_at": "2023-10-25T13:42:41Z",
                "author_association": "NONE",
                "body": "Wow I just noticed 7.4.7 is a pretty old version. It\u2019s not our database, it\u2019s a customer\u2019s.\r\nPerhaps it\u2019s not worth fixing it.\r\nFor the record I found two workarounds: don\u2019t close the PreparedStatement, or open a new connection every single time.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779307720/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:42:42Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32837138074",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968",
                "id": 1959965260,
                "node_id": "I_kwDOADNskM500rJM",
                "number": 2968,
                "title": "Operator does not exist: uuid = character varying error when using UUID column in ON CONFLICT",
                "user": {
                    "login": "rzuljevic",
                    "id": 4770633,
                    "node_id": "MDQ6VXNlcjQ3NzA2MzM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4770633?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rzuljevic",
                    "html_url": "https://github.com/rzuljevic",
                    "followers_url": "https://api.github.com/users/rzuljevic/followers",
                    "following_url": "https://api.github.com/users/rzuljevic/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rzuljevic/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rzuljevic/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rzuljevic/subscriptions",
                    "organizations_url": "https://api.github.com/users/rzuljevic/orgs",
                    "repos_url": "https://api.github.com/users/rzuljevic/repos",
                    "events_url": "https://api.github.com/users/rzuljevic/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rzuljevic/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-24T19:46:50Z",
                "updated_at": "2023-10-25T13:40:44Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nWhen performing an INSERT query with ON CONFLICT via a prepared statement, if the field used is of type UUID, a PSQLException with \"ERROR: operator does not exist: uuid = character varying\" message is thrown. Note that the error happens only if the ON CONFLICT part is triggered (ie there is a conflict).\r\n\r\nExact stack trace:\r\n\r\n```\r\n10:47:43.524 [Thread-0] ERROR com.test.PostgreSQLTest - Failed to execute query.\r\norg.postgresql.util.PSQLException: ERROR: operator does not exist: uuid = character varying\r\n  Hint: No operator matches the given name and argument types. You might need to add explicit type casts.\r\n  Position: 53\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)\r\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)\r\n\tat com.test.PostgreSQLTest.main(PostgreSQLTest.java:20)\r\n```\r\n\r\n**Driver Version?** \r\n\r\n42.6.0\r\n\r\n**Java Version?**\r\n\r\nOpenJDK 17\r\n\r\n**OS Version?**\r\n\r\nUbuntu 22.04\r\n\r\n**PostgreSQL Version?**\r\n\r\n15.4 (Debian 15.4-2.pgdg110+1)\r\n\r\n**To Reproduce**\r\n1. Create table with UUID primary key (or unique index).\r\n2. Connect to database in Java.\r\n3. Create a INSERT ... ON CONFLICT prepared statement.\r\n4. Execute statement that will insert new primary key. (insert goes through)\r\n5. Execute statement with same primary key. (on conflict fails)\r\n\r\n**Expected behaviour**\r\nThe upsert is executed and the conflicting row is updated.\r\n\r\n**Code used:**\r\n\r\nDDL:\r\n\r\n```\r\nCREATE TABLE projects (\r\n   id uuid constraint projects_pkey primary key not null,\r\n   user_id varchar(36) null,\r\n   created_at timestamp not null,\r\n   updated_at timestamp null,\r\n   deleted boolean not null default false\r\n);\r\n```\r\n\r\nJava:\r\n\r\n```\r\nString query = \"\"\"\r\n      INSERT INTO projects(id, user_id, created_at, updated_at)\r\n      VALUES (?::uuid, ?, ?, ?)\r\n      ON CONFLICT (id) DO\r\n      UPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at; \r\n\"\"\";\r\n\r\ntry (Connection conn = DriverManager.getConnection(url, username, password);\r\n      PreparedStatement stmt = conn.prepareStatement(this.query)) {\r\n  stmt.setObject(1, UUID.fromString(\"2466ebea-f38c-467b-84e0-2e6b2e7564e3\"));\r\n  stmt.setString(2, \"u1234\");\r\n  stmt.setObject(3, new Timestamp(System.currentTimeMillis()));\r\n  stmt.setObject(4, new Timestamp(System.currentTimeMillis()));\r\n  stmt.executeUpdate();\r\n} catch (Exception e) {\r\n  log.error(\"Failed to execute query.\", e);\r\n}\r\n```\r\n\r\nNote that I tried executing the following queries directly (using DBeaver) and there were no issues:\r\n\r\n```\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ('2466ebea-f38c-467b-84e0-2e6b2e7564e3'::uuid, 'u1234', NOW(), NOW())\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n```\r\n, and\r\n```\r\nPREPARE stmnt(UUID, TEXT, TIMESTAMP, TIMESTAMP) AS\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ($1::uuid, $2, $3, $4)\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n\r\nEXECUTE stmnt('2466ebea-f38c-467b-84e0-2e6b2e7564e1'::uuid, 'u1235', NOW(), NOW());\r\n```\r\n\r\nI also tried the following in the code, again without any luck:\r\n\r\n1. Using `setString(x, uuid.toString())` and specifying `stringtype=unspecified`.\r\n2. Using PGobject to specify value type.\r\n3. Using `stmt.setObject(x, uuid, Types.OTHER);`.\r\n4. Using the query with and without the explicit `::uuid` cast.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779303415",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968#issuecomment-1779303415",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "id": 1779303415,
                "node_id": "IC_kwDOADNskM5qDgP3",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:40:44Z",
                "updated_at": "2023-10-25T13:40:44Z",
                "author_association": "MEMBER",
                "body": "```public class TestUUID {\r\n\r\n    private  static String TABLE_DEFINITION = \"CREATE TABLE IF NOT EXISTS projects (\"\r\n   + \"id uuid constraint projects_pkey primary key not null,\"\r\n   + \"user_id varchar(36) null,\"\r\n   + \"created_at timestamp not null,\"\r\n   + \"updated_at timestamp null,\"\r\n   + \"deleted boolean not null default false)\";\r\n\r\n    private static String  query = \"INSERT INTO projects(id, user_id, created_at, updated_at) \"\r\n      + \"VALUES (?::uuid, ?, ?, ?) \"\r\n      + \"ON CONFLICT (id) DO \"\r\n      + \"UPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at\";\r\n\r\n    public static final String DB_URL\t\t\t= \"jdbc:postgresql://localhost:5432/test\";\r\n    public static final String DB_USER_ID\t\t= \"test\";\r\n    public static final String DB_USER_PASSWORD\t= \"test\";\r\n\r\n    public static void main(String[] args) {\r\n        try (Connection connection = DriverManager.getConnection(DB_URL, DB_USER_ID, DB_USER_PASSWORD)) {\r\n            createTable(connection, TABLE_DEFINITION);\r\n            insertUUID(connection, query);\r\n            insertUUID(connection, query);\r\n        }\r\n        catch ( Exception ex ){\r\n            ex.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private static void insertUUID(Connection connection, String query) throws SQLException{\r\n        try (PreparedStatement stmt = connection.prepareStatement(query)) {\r\n            stmt.setObject(1, UUID.fromString(\"2466ebea-f38c-467b-84e0-2e6b2e7564e3\"));\r\n            stmt.setString(2, \"u1234\");\r\n            stmt.setObject(3, new Timestamp(System.currentTimeMillis()));\r\n            stmt.setObject(4, new Timestamp(System.currentTimeMillis()));\r\n            stmt.executeUpdate();\r\n        }\r\n    }\r\n\r\n    private static void createTable (Connection connection, String tableDefinition) throws SQLException {\r\n        try (Statement statement = connection.createStatement()){\r\n            statement.execute(tableDefinition);\r\n        }\r\n    }\r\n}\r\n```\r\nproduces no errors on postgreSQL version 16",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779303415/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:40:45Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32836840695",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968",
                "id": 1959965260,
                "node_id": "I_kwDOADNskM500rJM",
                "number": 2968,
                "title": "Operator does not exist: uuid = character varying error when using UUID column in ON CONFLICT",
                "user": {
                    "login": "rzuljevic",
                    "id": 4770633,
                    "node_id": "MDQ6VXNlcjQ3NzA2MzM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4770633?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rzuljevic",
                    "html_url": "https://github.com/rzuljevic",
                    "followers_url": "https://api.github.com/users/rzuljevic/followers",
                    "following_url": "https://api.github.com/users/rzuljevic/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rzuljevic/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rzuljevic/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rzuljevic/subscriptions",
                    "organizations_url": "https://api.github.com/users/rzuljevic/orgs",
                    "repos_url": "https://api.github.com/users/rzuljevic/repos",
                    "events_url": "https://api.github.com/users/rzuljevic/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rzuljevic/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-24T19:46:50Z",
                "updated_at": "2023-10-25T13:32:02Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nWhen performing an INSERT query with ON CONFLICT via a prepared statement, if the field used is of type UUID, a PSQLException with \"ERROR: operator does not exist: uuid = character varying\" message is thrown. Note that the error happens only if the ON CONFLICT part is triggered (ie there is a conflict).\r\n\r\nExact stack trace:\r\n\r\n```\r\n10:47:43.524 [Thread-0] ERROR com.test.PostgreSQLTest - Failed to execute query.\r\norg.postgresql.util.PSQLException: ERROR: operator does not exist: uuid = character varying\r\n  Hint: No operator matches the given name and argument types. You might need to add explicit type casts.\r\n  Position: 53\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)\r\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)\r\n\tat com.test.PostgreSQLTest.main(PostgreSQLTest.java:20)\r\n```\r\n\r\n**Driver Version?** \r\n\r\n42.6.0\r\n\r\n**Java Version?**\r\n\r\nOpenJDK 17\r\n\r\n**OS Version?**\r\n\r\nUbuntu 22.04\r\n\r\n**PostgreSQL Version?**\r\n\r\n15.4 (Debian 15.4-2.pgdg110+1)\r\n\r\n**To Reproduce**\r\n1. Create table with UUID primary key (or unique index).\r\n2. Connect to database in Java.\r\n3. Create a INSERT ... ON CONFLICT prepared statement.\r\n4. Execute statement that will insert new primary key. (insert goes through)\r\n5. Execute statement with same primary key. (on conflict fails)\r\n\r\n**Expected behaviour**\r\nThe upsert is executed and the conflicting row is updated.\r\n\r\n**Code used:**\r\n\r\nDDL:\r\n\r\n```\r\nCREATE TABLE projects (\r\n   id uuid constraint projects_pkey primary key not null,\r\n   user_id varchar(36) null,\r\n   created_at timestamp not null,\r\n   updated_at timestamp null,\r\n   deleted boolean not null default false\r\n);\r\n```\r\n\r\nJava:\r\n\r\n```\r\nString query = \"\"\"\r\n      INSERT INTO projects(id, user_id, created_at, updated_at)\r\n      VALUES (?::uuid, ?, ?, ?)\r\n      ON CONFLICT (id) DO\r\n      UPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at; \r\n\"\"\";\r\n\r\ntry (Connection conn = DriverManager.getConnection(url, username, password);\r\n      PreparedStatement stmt = conn.prepareStatement(this.query)) {\r\n  stmt.setObject(1, UUID.fromString(\"2466ebea-f38c-467b-84e0-2e6b2e7564e3\"));\r\n  stmt.setString(2, \"u1234\");\r\n  stmt.setObject(3, new Timestamp(System.currentTimeMillis()));\r\n  stmt.setObject(4, new Timestamp(System.currentTimeMillis()));\r\n  stmt.executeUpdate();\r\n} catch (Exception e) {\r\n  log.error(\"Failed to execute query.\", e);\r\n}\r\n```\r\n\r\nNote that I tried executing the following queries directly (using DBeaver) and there were no issues:\r\n\r\n```\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ('2466ebea-f38c-467b-84e0-2e6b2e7564e3'::uuid, 'u1234', NOW(), NOW())\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n```\r\n, and\r\n```\r\nPREPARE stmnt(UUID, TEXT, TIMESTAMP, TIMESTAMP) AS\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ($1::uuid, $2, $3, $4)\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n\r\nEXECUTE stmnt('2466ebea-f38c-467b-84e0-2e6b2e7564e1'::uuid, 'u1235', NOW(), NOW());\r\n```\r\n\r\nI also tried the following in the code, again without any luck:\r\n\r\n1. Using `setString(x, uuid.toString())` and specifying `stringtype=unspecified`.\r\n2. Using PGobject to specify value type.\r\n3. Using `stmt.setObject(x, uuid, Types.OTHER);`.\r\n4. Using the query with and without the explicit `::uuid` cast.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779285699",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968#issuecomment-1779285699",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "id": 1779285699,
                "node_id": "IC_kwDOADNskM5qDb7D",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:32:01Z",
                "updated_at": "2023-10-25T13:32:01Z",
                "author_association": "MEMBER",
                "body": "I did not run it twice, let me try that",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779285699/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:32:02Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32836813875",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:31:15Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779284124",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779284124",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779284124,
                "node_id": "IC_kwDOADNskM5qDbic",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:31:14Z",
                "updated_at": "2023-10-25T13:31:14Z",
                "author_association": "MEMBER",
                "body": "I just noticed this. Are you really using postgreSQL version 7.4.7 ??? ",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779284124/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:31:15Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32836732680",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1147960,
            "login": "evenjn",
            "display_login": "evenjn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenjn",
            "avatar_url": "https://avatars.githubusercontent.com/u/1147960?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:28:51Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779279507",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779279507",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779279507,
                "node_id": "IC_kwDOADNskM5qDaaT",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:28:51Z",
                "updated_at": "2023-10-25T13:28:51Z",
                "author_association": "NONE",
                "body": "In the issue text I wrote the date in ISO but this is just a way to write it, I could have written as well midnight Jan 1st 2000. The actual console output of \r\n`System.out.println(rs.getTimestamp(1));`\r\nis\r\n`2000-01-01 00:00:00.0`\r\n\r\nSorry for the confusion.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779279507/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:28:52Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32836464682",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4770633,
            "login": "rzuljevic",
            "display_login": "rzuljevic",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rzuljevic",
            "avatar_url": "https://avatars.githubusercontent.com/u/4770633?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968",
                "id": 1959965260,
                "node_id": "I_kwDOADNskM500rJM",
                "number": 2968,
                "title": "Operator does not exist: uuid = character varying error when using UUID column in ON CONFLICT",
                "user": {
                    "login": "rzuljevic",
                    "id": 4770633,
                    "node_id": "MDQ6VXNlcjQ3NzA2MzM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4770633?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rzuljevic",
                    "html_url": "https://github.com/rzuljevic",
                    "followers_url": "https://api.github.com/users/rzuljevic/followers",
                    "following_url": "https://api.github.com/users/rzuljevic/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rzuljevic/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rzuljevic/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rzuljevic/subscriptions",
                    "organizations_url": "https://api.github.com/users/rzuljevic/orgs",
                    "repos_url": "https://api.github.com/users/rzuljevic/repos",
                    "events_url": "https://api.github.com/users/rzuljevic/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rzuljevic/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-24T19:46:50Z",
                "updated_at": "2023-10-25T13:20:54Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nWhen performing an INSERT query with ON CONFLICT via a prepared statement, if the field used is of type UUID, a PSQLException with \"ERROR: operator does not exist: uuid = character varying\" message is thrown. Note that the error happens only if the ON CONFLICT part is triggered (ie there is a conflict).\r\n\r\nExact stack trace:\r\n\r\n```\r\n10:47:43.524 [Thread-0] ERROR com.test.PostgreSQLTest - Failed to execute query.\r\norg.postgresql.util.PSQLException: ERROR: operator does not exist: uuid = character varying\r\n  Hint: No operator matches the given name and argument types. You might need to add explicit type casts.\r\n  Position: 53\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)\r\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)\r\n\tat com.test.PostgreSQLTest.main(PostgreSQLTest.java:20)\r\n```\r\n\r\n**Driver Version?** \r\n\r\n42.6.0\r\n\r\n**Java Version?**\r\n\r\nOpenJDK 17\r\n\r\n**OS Version?**\r\n\r\nUbuntu 22.04\r\n\r\n**PostgreSQL Version?**\r\n\r\n15.4 (Debian 15.4-2.pgdg110+1)\r\n\r\n**To Reproduce**\r\n1. Create table with UUID primary key (or unique index).\r\n2. Connect to database in Java.\r\n3. Create a INSERT ... ON CONFLICT prepared statement.\r\n4. Execute statement that will insert new primary key. (insert goes through)\r\n5. Execute statement with same primary key. (on conflict fails)\r\n\r\n**Expected behaviour**\r\nThe upsert is executed and the conflicting row is updated.\r\n\r\n**Code used:**\r\n\r\nDDL:\r\n\r\n```\r\nCREATE TABLE projects (\r\n   id uuid constraint projects_pkey primary key not null,\r\n   user_id varchar(36) null,\r\n   created_at timestamp not null,\r\n   updated_at timestamp null,\r\n   deleted boolean not null default false\r\n);\r\n```\r\n\r\nJava:\r\n\r\n```\r\nString query = \"\"\"\r\n      INSERT INTO projects(id, user_id, created_at, updated_at)\r\n      VALUES (?::uuid, ?, ?, ?)\r\n      ON CONFLICT (id) DO\r\n      UPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at; \r\n\"\"\";\r\n\r\ntry (Connection conn = DriverManager.getConnection(url, username, password);\r\n      PreparedStatement stmt = conn.prepareStatement(this.query)) {\r\n  stmt.setObject(1, UUID.fromString(\"2466ebea-f38c-467b-84e0-2e6b2e7564e3\"));\r\n  stmt.setString(2, \"u1234\");\r\n  stmt.setObject(3, new Timestamp(System.currentTimeMillis()));\r\n  stmt.setObject(4, new Timestamp(System.currentTimeMillis()));\r\n  stmt.executeUpdate();\r\n} catch (Exception e) {\r\n  log.error(\"Failed to execute query.\", e);\r\n}\r\n```\r\n\r\nNote that I tried executing the following queries directly (using DBeaver) and there were no issues:\r\n\r\n```\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ('2466ebea-f38c-467b-84e0-2e6b2e7564e3'::uuid, 'u1234', NOW(), NOW())\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n```\r\n, and\r\n```\r\nPREPARE stmnt(UUID, TEXT, TIMESTAMP, TIMESTAMP) AS\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ($1::uuid, $2, $3, $4)\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n\r\nEXECUTE stmnt('2466ebea-f38c-467b-84e0-2e6b2e7564e1'::uuid, 'u1235', NOW(), NOW());\r\n```\r\n\r\nI also tried the following in the code, again without any luck:\r\n\r\n1. Using `setString(x, uuid.toString())` and specifying `stringtype=unspecified`.\r\n2. Using PGobject to specify value type.\r\n3. Using `stmt.setObject(x, uuid, Types.OTHER);`.\r\n4. Using the query with and without the explicit `::uuid` cast.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779263182",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968#issuecomment-1779263182",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "id": 1779263182,
                "node_id": "IC_kwDOADNskM5qDWbO",
                "user": {
                    "login": "rzuljevic",
                    "id": 4770633,
                    "node_id": "MDQ6VXNlcjQ3NzA2MzM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4770633?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rzuljevic",
                    "html_url": "https://github.com/rzuljevic",
                    "followers_url": "https://api.github.com/users/rzuljevic/followers",
                    "following_url": "https://api.github.com/users/rzuljevic/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rzuljevic/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rzuljevic/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rzuljevic/subscriptions",
                    "organizations_url": "https://api.github.com/users/rzuljevic/orgs",
                    "repos_url": "https://api.github.com/users/rzuljevic/repos",
                    "events_url": "https://api.github.com/users/rzuljevic/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rzuljevic/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:20:53Z",
                "updated_at": "2023-10-25T13:20:53Z",
                "author_association": "NONE",
                "body": "@davecramer This is how the driver is declared: `implementation 'org.postgresql:postgresql:42.6.0'`.\r\n\r\nDid you run the example twice? The error is thrown only when there is a conflict, the initial insert goes through without any issues.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779263182/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:20:54Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32836271125",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1147960,
            "login": "evenjn",
            "display_login": "evenjn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenjn",
            "avatar_url": "https://avatars.githubusercontent.com/u/1147960?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:15:13Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779252352",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779252352",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779252352,
                "node_id": "IC_kwDOADNskM5qDTyA",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:15:13Z",
                "updated_at": "2023-10-25T13:15:13Z",
                "author_association": "NONE",
                "body": "After the first 5 good pages of timestamps, they are all `2000-01-01 00:00:00.0`.\r\nThis issue does not occur on my local PostgreSQL 12.11 with test data.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779252352/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:15:13Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32835794683",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T13:01:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779225460",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779225460",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779225460,
                "node_id": "IC_kwDOADNskM5qDNN0",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T13:00:59Z",
                "updated_at": "2023-10-25T13:00:59Z",
                "author_association": "MEMBER",
                "body": "Do they all return `2000-01-01T00:00:00` ?",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779225460/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:01:00Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32835719228",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1147960,
            "login": "evenjn",
            "display_login": "evenjn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenjn",
            "avatar_url": "https://avatars.githubusercontent.com/u/1147960?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T12:58:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779221614",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779221614",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779221614,
                "node_id": "IC_kwDOADNskM5qDMRu",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T12:58:49Z",
                "updated_at": "2023-10-25T12:58:49Z",
                "author_association": "NONE",
                "body": "I don\u2019t have control of the database so I cannot provide many details, however the column is declared as date TIMESTAMP NULL and the dates retrieved look fine when accessed in a single query (i.e. setting no limit). They are all recent values, 2016 onwards so to speak.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779221614/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T12:58:50Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32832259961",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T11:00:12Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```java\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779014984",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1779014984",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1779014984,
                "node_id": "IC_kwDOADNskM5qCZ1I",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T11:00:11Z",
                "updated_at": "2023-10-25T11:00:11Z",
                "author_association": "MEMBER",
                "body": "> We should try to be consistent with `toString` though.\r\n\r\nAgreed, but I'd like to understand this problem fully before commenting",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1779014984/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T11:00:12Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32831869016",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 213894,
            "login": "vlsi",
            "display_login": "vlsi",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vlsi",
            "avatar_url": "https://avatars.githubusercontent.com/u/213894?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T10:45:25Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1778992785",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1778992785",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1778992785,
                "node_id": "IC_kwDOADNskM5qCUaR",
                "user": {
                    "login": "vlsi",
                    "id": 213894,
                    "node_id": "MDQ6VXNlcjIxMzg5NA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/213894?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vlsi",
                    "html_url": "https://github.com/vlsi",
                    "followers_url": "https://api.github.com/users/vlsi/followers",
                    "following_url": "https://api.github.com/users/vlsi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vlsi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vlsi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vlsi/subscriptions",
                    "organizations_url": "https://api.github.com/users/vlsi/orgs",
                    "repos_url": "https://api.github.com/users/vlsi/repos",
                    "events_url": "https://api.github.com/users/vlsi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vlsi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T10:45:24Z",
                "updated_at": "2023-10-25T10:45:24Z",
                "author_association": "MEMBER",
                "body": ">After the 5th execution the driver switches to a named statement and uses binary mode.\r\n\r\nWe should try to be consistent with `toString` though.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1778992785/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T10:45:25Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32831844868",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T10:44:30Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 6 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the sixth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1778991429",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969#issuecomment-1778991429",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "id": 1778991429,
                "node_id": "IC_kwDOADNskM5qCUFF",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T10:44:30Z",
                "updated_at": "2023-10-25T10:44:30Z",
                "author_association": "MEMBER",
                "body": "What is in the database ? \r\n\r\nAfter the 5th execution the driver switches to a named statement and uses binary mode. ",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1778991429/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T10:44:31Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32831137527",
        "type": "IssuesEvent",
        "actor": {
            "id": 1147960,
            "login": "evenjn",
            "display_login": "evenjn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evenjn",
            "avatar_url": "https://avatars.githubusercontent.com/u/1147960?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2969",
                "id": 1961047531,
                "node_id": "I_kwDOADNskM504zXr",
                "number": 2969,
                "title": "ResultSet getTimestamp returns 2000-01-01T00:00:00 after 5 executions of PreparedStatement",
                "user": {
                    "login": "evenjn",
                    "id": 1147960,
                    "node_id": "MDQ6VXNlcjExNDc5NjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1147960?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/evenjn",
                    "html_url": "https://github.com/evenjn",
                    "followers_url": "https://api.github.com/users/evenjn/followers",
                    "following_url": "https://api.github.com/users/evenjn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/evenjn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/evenjn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/evenjn/subscriptions",
                    "organizations_url": "https://api.github.com/users/evenjn/orgs",
                    "repos_url": "https://api.github.com/users/evenjn/repos",
                    "events_url": "https://api.github.com/users/evenjn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/evenjn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T10:19:20Z",
                "updated_at": "2023-10-25T10:19:20Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nResultSet getTimestamp returns 2000-01-01T00:00:00 after 5 executions of PreparedStatement.\r\n\r\n**Driver Version?** \r\n42.6.0, but also 9.4.1212\r\n\r\n**Java Version?**\r\nJDK 17.0.2\r\n\r\n**OS Version?**\r\nmacOS Ventura 13.4 (22F66)\r\n\r\n**PostgreSQL Version?**\r\n7.4.7\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\nCreate a table article with a TIMESTAMP column. Populate the table with a hundred rows, with some realistic timestamp values (no nulls). Retrieve the data using code below.\r\n\r\n**Expected behaviour**\r\nI expected that the resultset produced by a prepared statement always yields the timestamp found in the database.\r\nWhat actually happens is that the fifth time executeQuery is invoked, the getTimestamp returns a value (2000-01-01T00:00:00) which is not what is in the database.\r\n\r\n```\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.Properties;\r\n\r\npublic class TestNullsFirst {\r\n  public static void main(String[] args) throws Exception {\r\n    String query = \"select article.date from article offset ? limit ?\";\r\n    String url = \"jdbc:postgresql://localhost:5432/test\";\r\n\r\n    Properties props = new Properties();\r\n    props.setProperty(\"user\", \"test\");\r\n    props.setProperty(\"password\", \"test\");\r\n    try (Connection conn = DriverManager.getConnection(url, props)) {\r\n      for (int offset = 0; offset < 100; offset = offset + 10) {\r\n        try (PreparedStatement ps = conn.prepareStatement(query); ) {\r\n          ps.setInt(1, offset);\r\n          ps.setInt(2, 10);\r\n          try (ResultSet rs = ps.executeQuery(); ) {\r\n            if (rs.next()) System.out.println(\"Get Timestamp: \" + rs.getTimestamp(1));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2969/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T10:19:21Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32816422863",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968",
                "id": 1959965260,
                "node_id": "I_kwDOADNskM500rJM",
                "number": 2968,
                "title": "Operator does not exist: uuid = character varying error when using UUID column in ON CONFLICT",
                "user": {
                    "login": "rzuljevic",
                    "id": 4770633,
                    "node_id": "MDQ6VXNlcjQ3NzA2MzM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4770633?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rzuljevic",
                    "html_url": "https://github.com/rzuljevic",
                    "followers_url": "https://api.github.com/users/rzuljevic/followers",
                    "following_url": "https://api.github.com/users/rzuljevic/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rzuljevic/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rzuljevic/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rzuljevic/subscriptions",
                    "organizations_url": "https://api.github.com/users/rzuljevic/orgs",
                    "repos_url": "https://api.github.com/users/rzuljevic/repos",
                    "events_url": "https://api.github.com/users/rzuljevic/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rzuljevic/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-24T19:46:50Z",
                "updated_at": "2023-10-24T21:02:21Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nWhen performing an INSERT query with ON CONFLICT via a prepared statement, if the field used is of type UUID, a PSQLException with \"ERROR: operator does not exist: uuid = character varying\" message is thrown. Note that the error happens only if the ON CONFLICT part is triggered (ie there is a conflict).\r\n\r\nExact stack trace:\r\n\r\n```\r\n10:47:43.524 [Thread-0] ERROR com.test.PostgreSQLTest - Failed to execute query.\r\norg.postgresql.util.PSQLException: ERROR: operator does not exist: uuid = character varying\r\n  Hint: No operator matches the given name and argument types. You might need to add explicit type casts.\r\n  Position: 53\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)\r\n\tat org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)\r\n\tat org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)\r\n\tat org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)\r\n\tat org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)\r\n\tat com.test.PostgreSQLTest.main(PostgreSQLTest.java:20)\r\n```\r\n\r\n**Driver Version?** \r\n\r\n42.6.0\r\n\r\n**Java Version?**\r\n\r\nOpenJDK 17\r\n\r\n**OS Version?**\r\n\r\nUbuntu 22.04\r\n\r\n**PostgreSQL Version?**\r\n\r\n15.4 (Debian 15.4-2.pgdg110+1)\r\n\r\n**To Reproduce**\r\n1. Create table with UUID primary key (or unique index).\r\n2. Connect to database in Java.\r\n3. Create a INSERT ... ON CONFLICT prepared statement.\r\n4. Execute statement that will insert new primary key. (insert goes through)\r\n5. Execute statement with same primary key. (on conflict fails)\r\n\r\n**Expected behaviour**\r\nThe upsert is executed and the conflicting row is updated.\r\n\r\n**Code used:**\r\n\r\nDDL:\r\n\r\n```\r\nCREATE TABLE projects (\r\n   id uuid constraint projects_pkey primary key not null,\r\n   user_id varchar(36) null,\r\n   created_at timestamp not null,\r\n   updated_at timestamp null,\r\n   deleted boolean not null default false\r\n);\r\n```\r\n\r\nJava:\r\n\r\n```\r\nString query = \"\"\"\r\n      INSERT INTO projects(id, user_id, created_at, updated_at)\r\n      VALUES (?::uuid, ?, ?, ?)\r\n      ON CONFLICT (id) DO\r\n      UPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at; \r\n\"\"\";\r\n\r\ntry (Connection conn = DriverManager.getConnection(url, username, password);\r\n      PreparedStatement stmt = conn.prepareStatement(this.query)) {\r\n  stmt.setObject(1, UUID.fromString(\"2466ebea-f38c-467b-84e0-2e6b2e7564e3\"));\r\n  stmt.setString(2, \"u1234\");\r\n  stmt.setObject(3, new Timestamp(System.currentTimeMillis()));\r\n  stmt.setObject(4, new Timestamp(System.currentTimeMillis()));\r\n  stmt.executeUpdate();\r\n} catch (Exception e) {\r\n  log.error(\"Failed to execute query.\", e);\r\n}\r\n```\r\n\r\nNote that I tried executing the following queries directly (using DBeaver) and there were no issues:\r\n\r\n```\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ('2466ebea-f38c-467b-84e0-2e6b2e7564e3'::uuid, 'u1234', NOW(), NOW())\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n```\r\n, and\r\n```\r\nPREPARE stmnt(UUID, TEXT, TIMESTAMP, TIMESTAMP) AS\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ($1::uuid, $2, $3, $4)\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n\r\nEXECUTE stmnt('2466ebea-f38c-467b-84e0-2e6b2e7564e1'::uuid, 'u1235', NOW(), NOW());\r\n```\r\n\r\nI also tried the following in the code, again without any luck:\r\n\r\n1. Using `setString(x, uuid.toString())` and specifying `stringtype=unspecified`.\r\n2. Using PGobject to specify value type.\r\n3. Using `stmt.setObject(x, uuid, Types.OTHER);`.\r\n4. Using the query with and without the explicit `::uuid` cast.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1778033156",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968#issuecomment-1778033156",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "id": 1778033156,
                "node_id": "IC_kwDOADNskM5p-qIE",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T21:02:21Z",
                "updated_at": "2023-10-24T21:02:21Z",
                "author_association": "MEMBER",
                "body": "I just ran more or less the same code with no error.\r\n\r\n```table projects ;\r\n                  id                  | user_id |       created_at        |       updated_at        | deleted\r\n--------------------------------------+---------+-------------------------+-------------------------+---------\r\n 2466ebea-f38c-467b-84e0-2e6b2e7564e3 | u1234   | 2023-10-24 17:00:09.862 | 2023-10-24 17:00:09.862 | f\r\n```\r\n\r\nwhat version of the JDBC driver are you using ?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1778033156/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T21:02:22Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32814709186",
        "type": "IssuesEvent",
        "actor": {
            "id": 4770633,
            "login": "rzuljevic",
            "display_login": "rzuljevic",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rzuljevic",
            "avatar_url": "https://avatars.githubusercontent.com/u/4770633?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2968",
                "id": 1959965260,
                "node_id": "I_kwDOADNskM500rJM",
                "number": 2968,
                "title": "Operator does not exist: uuid = character varying error when using UUID column in ON CONFLICT",
                "user": {
                    "login": "rzuljevic",
                    "id": 4770633,
                    "node_id": "MDQ6VXNlcjQ3NzA2MzM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4770633?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rzuljevic",
                    "html_url": "https://github.com/rzuljevic",
                    "followers_url": "https://api.github.com/users/rzuljevic/followers",
                    "following_url": "https://api.github.com/users/rzuljevic/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rzuljevic/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rzuljevic/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rzuljevic/subscriptions",
                    "organizations_url": "https://api.github.com/users/rzuljevic/orgs",
                    "repos_url": "https://api.github.com/users/rzuljevic/repos",
                    "events_url": "https://api.github.com/users/rzuljevic/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rzuljevic/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-24T19:46:50Z",
                "updated_at": "2023-10-24T19:46:50Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Please read https://stackoverflow.com/help/minimal-reproducible-example \r\n\r\n**Describe the issue**\r\nWhen performing an INSERT query with ON CONFLICT via a prepared statement, if the field used is of type UUID, a PSQLException with \"ERROR: operator does not exist: uuid = character varying\" message is thrown.\r\n\r\n**Driver Version?** \r\n\r\n42.6.0\r\n\r\n**Java Version?**\r\n\r\nOpenJDK 17\r\n\r\n**OS Version?**\r\n\r\nUbuntu 22.04\r\n\r\n**PostgreSQL Version?**\r\n\r\n15.4 (Debian 15.4-2.pgdg110+1)\r\n\r\n**To Reproduce**\r\n1. Create table with UUID primary key (or unique index).\r\n2. Connect to database in Java.\r\n3. Create a INSERT ... ON CONFLICT prepared statement.\r\n4. Execute statement\r\n\r\n**Expected behaviour**\r\nThe upsert is executed and the conflicting row is updated.\r\n\r\n**Code used:**\r\n\r\nDDL:\r\n\r\n```\r\nCREATE TABLE projects (\r\n   id uuid constraint projects_pkey primary key not null,\r\n   user_id varchar(36) null,\r\n   created_at timestamp not null,\r\n   updated_at timestamp null,\r\n   deleted boolean not null default false\r\n);\r\n```\r\n\r\nJava:\r\n\r\n```\r\nString query = \"\"\"\r\n      INSERT INTO projects(id, user_id, created_at, updated_at)\r\n      VALUES (?::uuid, ?, ?, ?)\r\n      ON CONFLICT (id) DO\r\n      UPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at; \r\n\"\"\";\r\n\r\ntry (Connection conn = DriverManager.getConnection(url, username, password);\r\n      PreparedStatement stmt = conn.prepareStatement(this.query)) {\r\n  stmt.setObject(1, UUID.fromString(\"2466ebea-f38c-467b-84e0-2e6b2e7564e3\"));\r\n  stmt.setString(2, \"u1234\");\r\n  stmt.setObject(3, new Timestamp(System.currentTimeMillis()));\r\n  stmt.setObject(4, new Timestamp(System.currentTimeMillis()));\r\n  stmt.executeUpdate();\r\n} catch (Exception e) {\r\n  log.error(\"Failed to execute query.\", e);\r\n}\r\n```\r\n\r\nNote that I tried executing the following queries directly (using DBeaver) and there were no issues:\r\n\r\n```\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ('2466ebea-f38c-467b-84e0-2e6b2e7564e3'::uuid, 'u1234', NOW(), NOW())\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n```\r\n, and\r\n```\r\nPREPARE stmnt(UUID, TEXT, TIMESTAMP, TIMESTAMP) AS\r\nINSERT INTO projects(id, user_id, created_at, updated_at)\r\nVALUES ($1::uuid, $2, $3, $4)\r\nON CONFLICT (id) DO\r\nUPDATE SET user_id = EXCLUDED.user_id, created_at = EXCLUDED.created_at, updated_at = EXCLUDED.updated_at;\r\n\r\nEXECUTE stmnt('2466ebea-f38c-467b-84e0-2e6b2e7564e1'::uuid, 'u1235', NOW(), NOW());\r\n```\r\n\r\nI also tried the following in the code, again without any luck:\r\n\r\n1. Using `setString(x, uuid.toString())` and specifying `stringtype=unspecified`.\r\n2. Using PGobject to specify value type.\r\n3. Using `stmt.setObject(x, uuid, Types.OTHER);`.\r\n4. Using the query with and without the explicit `::uuid` cast.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2968/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T19:46:52Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32784384062",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5004262,
            "login": "bowbahdoe",
            "display_login": "bowbahdoe",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bowbahdoe",
            "avatar_url": "https://avatars.githubusercontent.com/u/5004262?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2657",
                "id": 1429146972,
                "node_id": "I_kwDOADNskM5VLw1c",
                "number": 2657,
                "title": "There is no module-info.java",
                "user": {
                    "login": "rackaracka",
                    "id": 41092635,
                    "node_id": "MDQ6VXNlcjQxMDkyNjM1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/41092635?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rackaracka",
                    "html_url": "https://github.com/rackaracka",
                    "followers_url": "https://api.github.com/users/rackaracka/followers",
                    "following_url": "https://api.github.com/users/rackaracka/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rackaracka/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rackaracka/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rackaracka/subscriptions",
                    "organizations_url": "https://api.github.com/users/rackaracka/orgs",
                    "repos_url": "https://api.github.com/users/rackaracka/repos",
                    "events_url": "https://api.github.com/users/rackaracka/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rackaracka/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 23,
                "created_at": "2022-10-31T02:21:52Z",
                "updated_at": "2023-10-23T20:35:31Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The latest version as of the time of writing does not contain a module-info module descriptor, only an automatic module name listed in the manifest of the jar file. \r\nThis makes it impossible to link and pack a platform dependent artefact, because the jlink utility does not accept automatic modules. \r\n\r\nA basic module-info.java can be generated using jdeps.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/reactions",
                    "total_count": 4,
                    "+1": 4,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775978609",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2657#issuecomment-1775978609",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657",
                "id": 1775978609,
                "node_id": "IC_kwDOADNskM5p20hx",
                "user": {
                    "login": "bowbahdoe",
                    "id": 5004262,
                    "node_id": "MDQ6VXNlcjUwMDQyNjI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5004262?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bowbahdoe",
                    "html_url": "https://github.com/bowbahdoe",
                    "followers_url": "https://api.github.com/users/bowbahdoe/followers",
                    "following_url": "https://api.github.com/users/bowbahdoe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bowbahdoe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bowbahdoe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bowbahdoe/subscriptions",
                    "organizations_url": "https://api.github.com/users/bowbahdoe/orgs",
                    "repos_url": "https://api.github.com/users/bowbahdoe/repos",
                    "events_url": "https://api.github.com/users/bowbahdoe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bowbahdoe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T20:35:31Z",
                "updated_at": "2023-10-23T20:35:31Z",
                "author_association": "NONE",
                "body": "@vlsi Guava is, best i can tell, [planning to](https://github.com/google/guava/pull/6606#issuecomment-1621924632). \r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775978609/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T20:35:31Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32783833487",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 213894,
            "login": "vlsi",
            "display_login": "vlsi",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vlsi",
            "avatar_url": "https://avatars.githubusercontent.com/u/213894?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2657",
                "id": 1429146972,
                "node_id": "I_kwDOADNskM5VLw1c",
                "number": 2657,
                "title": "There is no module-info.java",
                "user": {
                    "login": "rackaracka",
                    "id": 41092635,
                    "node_id": "MDQ6VXNlcjQxMDkyNjM1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/41092635?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rackaracka",
                    "html_url": "https://github.com/rackaracka",
                    "followers_url": "https://api.github.com/users/rackaracka/followers",
                    "following_url": "https://api.github.com/users/rackaracka/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rackaracka/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rackaracka/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rackaracka/subscriptions",
                    "organizations_url": "https://api.github.com/users/rackaracka/orgs",
                    "repos_url": "https://api.github.com/users/rackaracka/repos",
                    "events_url": "https://api.github.com/users/rackaracka/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rackaracka/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 22,
                "created_at": "2022-10-31T02:21:52Z",
                "updated_at": "2023-10-23T20:12:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The latest version as of the time of writing does not contain a module-info module descriptor, only an automatic module name listed in the manifest of the jar file. \r\nThis makes it impossible to link and pack a platform dependent artefact, because the jlink utility does not accept automatic modules. \r\n\r\nA basic module-info.java can be generated using jdeps.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/reactions",
                    "total_count": 4,
                    "+1": 4,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775945845",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2657#issuecomment-1775945845",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657",
                "id": 1775945845,
                "node_id": "IC_kwDOADNskM5p2sh1",
                "user": {
                    "login": "vlsi",
                    "id": 213894,
                    "node_id": "MDQ6VXNlcjIxMzg5NA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/213894?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vlsi",
                    "html_url": "https://github.com/vlsi",
                    "followers_url": "https://api.github.com/users/vlsi/followers",
                    "following_url": "https://api.github.com/users/vlsi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vlsi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vlsi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vlsi/subscriptions",
                    "organizations_url": "https://api.github.com/users/vlsi/orgs",
                    "repos_url": "https://api.github.com/users/vlsi/repos",
                    "events_url": "https://api.github.com/users/vlsi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vlsi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T20:11:59Z",
                "updated_at": "2023-10-23T20:11:59Z",
                "author_association": "MEMBER",
                "body": "@bowbahdoe , see https://github.com/pgjdbc/pgjdbc/issues/2053\nIf you convince Guava switch, we follow.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775945845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T20:12:00Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32783253473",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5004262,
            "login": "bowbahdoe",
            "display_login": "bowbahdoe",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bowbahdoe",
            "avatar_url": "https://avatars.githubusercontent.com/u/5004262?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2657",
                "id": 1429146972,
                "node_id": "I_kwDOADNskM5VLw1c",
                "number": 2657,
                "title": "There is no module-info.java",
                "user": {
                    "login": "rackaracka",
                    "id": 41092635,
                    "node_id": "MDQ6VXNlcjQxMDkyNjM1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/41092635?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rackaracka",
                    "html_url": "https://github.com/rackaracka",
                    "followers_url": "https://api.github.com/users/rackaracka/followers",
                    "following_url": "https://api.github.com/users/rackaracka/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rackaracka/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rackaracka/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rackaracka/subscriptions",
                    "organizations_url": "https://api.github.com/users/rackaracka/orgs",
                    "repos_url": "https://api.github.com/users/rackaracka/repos",
                    "events_url": "https://api.github.com/users/rackaracka/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rackaracka/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 21,
                "created_at": "2022-10-31T02:21:52Z",
                "updated_at": "2023-10-23T19:47:48Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The latest version as of the time of writing does not contain a module-info module descriptor, only an automatic module name listed in the manifest of the jar file. \r\nThis makes it impossible to link and pack a platform dependent artefact, because the jlink utility does not accept automatic modules. \r\n\r\nA basic module-info.java can be generated using jdeps.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/reactions",
                    "total_count": 4,
                    "+1": 4,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775912580",
                "html_url": "https://github.com/pgjdbc/pgjdbc/issues/2657#issuecomment-1775912580",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2657",
                "id": 1775912580,
                "node_id": "IC_kwDOADNskM5p2kaE",
                "user": {
                    "login": "bowbahdoe",
                    "id": 5004262,
                    "node_id": "MDQ6VXNlcjUwMDQyNjI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5004262?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bowbahdoe",
                    "html_url": "https://github.com/bowbahdoe",
                    "followers_url": "https://api.github.com/users/bowbahdoe/followers",
                    "following_url": "https://api.github.com/users/bowbahdoe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bowbahdoe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bowbahdoe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bowbahdoe/subscriptions",
                    "organizations_url": "https://api.github.com/users/bowbahdoe/orgs",
                    "repos_url": "https://api.github.com/users/bowbahdoe/repos",
                    "events_url": "https://api.github.com/users/bowbahdoe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bowbahdoe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T19:47:48Z",
                "updated_at": "2023-10-23T19:47:48Z",
                "author_association": "NONE",
                "body": "Annotations with a retention of runtime are still safe to not include at runtime. getAnnotation and similar methods should just omit them.\n\nThere are some asterisks, they just don't apply here.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775912580/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T19:47:49Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32777933795",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1324414,
            "login": "desruisseaux",
            "display_login": "desruisseaux",
            "gravatar_id": "",
            "url": "https://api.github.com/users/desruisseaux",
            "avatar_url": "https://avatars.githubusercontent.com/u/1324414?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                "id": 1957088004,
                "node_id": "PR_kwDOADNskM5dhrtl",
                "number": 2967,
                "title": "Deprecate for removal PGPoint.setLocation(java.awt.Point) to cut dependency to `java.desktop` module",
                "user": {
                    "login": "desruisseaux",
                    "id": 1324414,
                    "node_id": "MDQ6VXNlcjEzMjQ0MTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1324414?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/desruisseaux",
                    "html_url": "https://github.com/desruisseaux",
                    "followers_url": "https://api.github.com/users/desruisseaux/followers",
                    "following_url": "https://api.github.com/users/desruisseaux/following{/other_user}",
                    "gists_url": "https://api.github.com/users/desruisseaux/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/desruisseaux/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/desruisseaux/subscriptions",
                    "organizations_url": "https://api.github.com/users/desruisseaux/orgs",
                    "repos_url": "https://api.github.com/users/desruisseaux/repos",
                    "events_url": "https://api.github.com/users/desruisseaux/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/desruisseaux/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-10-23T12:47:43Z",
                "updated_at": "2023-10-23T16:15:59Z",
                "closed_at": "2023-10-23T13:08:49Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/pulls/2967",
                    "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                    "diff_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.diff",
                    "patch_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.patch",
                    "merged_at": "2023-10-23T13:08:49Z"
                },
                "body": "This pull request deprecates the following method:\r\n\r\n```\r\norg.postgresql.geometric.PGpoint.setLocation(Point)\r\n```\r\n\r\nThis is in anticipation for possible modularisation of PostgreSQL JDBC driver as described in #2657. That method was the only dependency to the huge `java.desktop` module, because of the `java.awt.Point` argument. Removing that dependency would allow PgJDBC users to depend on a much smaller subset of the Java environment. There is no need to provide a replacement, because the implementation is trivial.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775549508",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967#issuecomment-1775549508",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "id": 1775549508,
                "node_id": "IC_kwDOADNskM5p1LxE",
                "user": {
                    "login": "desruisseaux",
                    "id": 1324414,
                    "node_id": "MDQ6VXNlcjEzMjQ0MTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1324414?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/desruisseaux",
                    "html_url": "https://github.com/desruisseaux",
                    "followers_url": "https://api.github.com/users/desruisseaux/followers",
                    "following_url": "https://api.github.com/users/desruisseaux/following{/other_user}",
                    "gists_url": "https://api.github.com/users/desruisseaux/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/desruisseaux/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/desruisseaux/subscriptions",
                    "organizations_url": "https://api.github.com/users/desruisseaux/orgs",
                    "repos_url": "https://api.github.com/users/desruisseaux/repos",
                    "events_url": "https://api.github.com/users/desruisseaux/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/desruisseaux/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T16:15:59Z",
                "updated_at": "2023-10-23T16:15:59Z",
                "author_association": "CONTRIBUTOR",
                "body": "Yes, as said in the last comment, adding a new `Point` class would be useless. I should have added \"Invoke `setLocation(p.x, p.y)` instead\", but I thought that it was so trivial that users would figure out.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775549508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T16:15:59Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32775406435",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                "id": 1957088004,
                "node_id": "PR_kwDOADNskM5dhrtl",
                "number": 2967,
                "title": "Deprecate for removal PGPoint.setLocation(java.awt.Point) to cut dependency to `java.desktop` module",
                "user": {
                    "login": "desruisseaux",
                    "id": 1324414,
                    "node_id": "MDQ6VXNlcjEzMjQ0MTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1324414?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/desruisseaux",
                    "html_url": "https://github.com/desruisseaux",
                    "followers_url": "https://api.github.com/users/desruisseaux/followers",
                    "following_url": "https://api.github.com/users/desruisseaux/following{/other_user}",
                    "gists_url": "https://api.github.com/users/desruisseaux/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/desruisseaux/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/desruisseaux/subscriptions",
                    "organizations_url": "https://api.github.com/users/desruisseaux/orgs",
                    "repos_url": "https://api.github.com/users/desruisseaux/repos",
                    "events_url": "https://api.github.com/users/desruisseaux/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/desruisseaux/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-23T12:47:43Z",
                "updated_at": "2023-10-23T14:53:49Z",
                "closed_at": "2023-10-23T13:08:49Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/pulls/2967",
                    "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                    "diff_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.diff",
                    "patch_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.patch",
                    "merged_at": "2023-10-23T13:08:49Z"
                },
                "body": "This pull request deprecates the following method:\r\n\r\n```\r\norg.postgresql.geometric.PGpoint.setLocation(Point)\r\n```\r\n\r\nThis is in anticipation for possible modularisation of PostgreSQL JDBC driver as described in #2657. That method was the only dependency to the huge `java.desktop` module, because of the `java.awt.Point` argument. Removing that dependency would allow PgJDBC users to depend on a much smaller subset of the Java environment. There is no need to provide a replacement, because the implementation is trivial.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775389225",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967#issuecomment-1775389225",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "id": 1775389225,
                "node_id": "IC_kwDOADNskM5p0kop",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T14:53:48Z",
                "updated_at": "2023-10-23T14:53:48Z",
                "author_association": "MEMBER",
                "body": "Actually looking at this again, there's no good reason to have Point. You can already do new PgPoint(x,y) Creating another class called Point that has a constructor Point(x,y) makes no sense. I think we just deprecate it and remove it later.",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775389225/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T14:53:49Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32775027937",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3110558,
            "login": "svendiedrichsen",
            "display_login": "svendiedrichsen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/svendiedrichsen",
            "avatar_url": "https://avatars.githubusercontent.com/u/3110558?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                "id": 1957088004,
                "node_id": "PR_kwDOADNskM5dhrtl",
                "number": 2967,
                "title": "Deprecate for removal PGPoint.setLocation(java.awt.Point) to cut dependency to `java.desktop` module",
                "user": {
                    "login": "desruisseaux",
                    "id": 1324414,
                    "node_id": "MDQ6VXNlcjEzMjQ0MTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1324414?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/desruisseaux",
                    "html_url": "https://github.com/desruisseaux",
                    "followers_url": "https://api.github.com/users/desruisseaux/followers",
                    "following_url": "https://api.github.com/users/desruisseaux/following{/other_user}",
                    "gists_url": "https://api.github.com/users/desruisseaux/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/desruisseaux/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/desruisseaux/subscriptions",
                    "organizations_url": "https://api.github.com/users/desruisseaux/orgs",
                    "repos_url": "https://api.github.com/users/desruisseaux/repos",
                    "events_url": "https://api.github.com/users/desruisseaux/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/desruisseaux/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-23T12:47:43Z",
                "updated_at": "2023-10-23T14:42:26Z",
                "closed_at": "2023-10-23T13:08:49Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/pulls/2967",
                    "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                    "diff_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.diff",
                    "patch_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.patch",
                    "merged_at": "2023-10-23T13:08:49Z"
                },
                "body": "This pull request deprecates the following method:\r\n\r\n```\r\norg.postgresql.geometric.PGpoint.setLocation(Point)\r\n```\r\n\r\nThis is in anticipation for possible modularisation of PostgreSQL JDBC driver as described in #2657. That method was the only dependency to the huge `java.desktop` module, because of the `java.awt.Point` argument. Removing that dependency would allow PgJDBC users to depend on a much smaller subset of the Java environment. There is no need to provide a replacement, because the implementation is trivial.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775363266",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967#issuecomment-1775363266",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "id": 1775363266,
                "node_id": "IC_kwDOADNskM5p0eTC",
                "user": {
                    "login": "svendiedrichsen",
                    "id": 3110558,
                    "node_id": "MDQ6VXNlcjMxMTA1NTg=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3110558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/svendiedrichsen",
                    "html_url": "https://github.com/svendiedrichsen",
                    "followers_url": "https://api.github.com/users/svendiedrichsen/followers",
                    "following_url": "https://api.github.com/users/svendiedrichsen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/svendiedrichsen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/svendiedrichsen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/svendiedrichsen/subscriptions",
                    "organizations_url": "https://api.github.com/users/svendiedrichsen/orgs",
                    "repos_url": "https://api.github.com/users/svendiedrichsen/repos",
                    "events_url": "https://api.github.com/users/svendiedrichsen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/svendiedrichsen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T14:42:26Z",
                "updated_at": "2023-10-23T14:42:26Z",
                "author_association": "CONTRIBUTOR",
                "body": "But if there is another way to achive the same you could have mentioned it in the deprecation Javadoc.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775363266/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T14:42:27Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    },
    {
        "id": "32774988174",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 406518,
            "login": "davecramer",
            "display_login": "davecramer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davecramer",
            "avatar_url": "https://avatars.githubusercontent.com/u/406518?"
        },
        "repo": {
            "id": 3370128,
            "name": "pgjdbc/pgjdbc",
            "url": "https://api.github.com/repos/pgjdbc/pgjdbc"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "repository_url": "https://api.github.com/repos/pgjdbc/pgjdbc",
                "labels_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/labels{/name}",
                "comments_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/comments",
                "events_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/events",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                "id": 1957088004,
                "node_id": "PR_kwDOADNskM5dhrtl",
                "number": 2967,
                "title": "Deprecate for removal PGPoint.setLocation(java.awt.Point) to cut dependency to `java.desktop` module",
                "user": {
                    "login": "desruisseaux",
                    "id": 1324414,
                    "node_id": "MDQ6VXNlcjEzMjQ0MTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1324414?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/desruisseaux",
                    "html_url": "https://github.com/desruisseaux",
                    "followers_url": "https://api.github.com/users/desruisseaux/followers",
                    "following_url": "https://api.github.com/users/desruisseaux/following{/other_user}",
                    "gists_url": "https://api.github.com/users/desruisseaux/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/desruisseaux/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/desruisseaux/subscriptions",
                    "organizations_url": "https://api.github.com/users/desruisseaux/orgs",
                    "repos_url": "https://api.github.com/users/desruisseaux/repos",
                    "events_url": "https://api.github.com/users/desruisseaux/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/desruisseaux/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-23T12:47:43Z",
                "updated_at": "2023-10-23T14:41:14Z",
                "closed_at": "2023-10-23T13:08:49Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/pulls/2967",
                    "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967",
                    "diff_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.diff",
                    "patch_url": "https://github.com/pgjdbc/pgjdbc/pull/2967.patch",
                    "merged_at": "2023-10-23T13:08:49Z"
                },
                "body": "This pull request deprecates the following method:\r\n\r\n```\r\norg.postgresql.geometric.PGpoint.setLocation(Point)\r\n```\r\n\r\nThis is in anticipation for possible modularisation of PostgreSQL JDBC driver as described in #2657. That method was the only dependency to the huge `java.desktop` module, because of the `java.awt.Point` argument. Removing that dependency would allow PgJDBC users to depend on a much smaller subset of the Java environment. There is no need to provide a replacement, because the implementation is trivial.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775360658",
                "html_url": "https://github.com/pgjdbc/pgjdbc/pull/2967#issuecomment-1775360658",
                "issue_url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/2967",
                "id": 1775360658,
                "node_id": "IC_kwDOADNskM5p0dqS",
                "user": {
                    "login": "davecramer",
                    "id": 406518,
                    "node_id": "MDQ6VXNlcjQwNjUxOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/406518?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davecramer",
                    "html_url": "https://github.com/davecramer",
                    "followers_url": "https://api.github.com/users/davecramer/followers",
                    "following_url": "https://api.github.com/users/davecramer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davecramer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davecramer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davecramer/subscriptions",
                    "organizations_url": "https://api.github.com/users/davecramer/orgs",
                    "repos_url": "https://api.github.com/users/davecramer/repos",
                    "events_url": "https://api.github.com/users/davecramer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davecramer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T14:41:14Z",
                "updated_at": "2023-10-23T14:41:14Z",
                "author_association": "MEMBER",
                "body": "I tend to agree, we really only use this as a proxy for set x,y",
                "reactions": {
                    "url": "https://api.github.com/repos/pgjdbc/pgjdbc/issues/comments/1775360658/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T14:41:15Z",
        "org": {
            "id": 1371956,
            "login": "pgjdbc",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pgjdbc",
            "avatar_url": "https://avatars.githubusercontent.com/u/1371956?"
        }
    }
]