[
    {
        "id": "32896196299",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7973",
                "id": 1964911374,
                "node_id": "I_kwDOAA5iFc51HisO",
                "number": 7973,
                "title": "Whether Chinese queries are not supported",
                "user": {
                    "login": "qiandi",
                    "id": 11673386,
                    "node_id": "MDQ6VXNlcjExNjczMzg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11673386?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qiandi",
                    "html_url": "https://github.com/qiandi",
                    "followers_url": "https://api.github.com/users/qiandi/followers",
                    "following_url": "https://api.github.com/users/qiandi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qiandi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qiandi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qiandi/subscriptions",
                    "organizations_url": "https://api.github.com/users/qiandi/orgs",
                    "repos_url": "https://api.github.com/users/qiandi/repos",
                    "events_url": "https://api.github.com/users/qiandi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qiandi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T07:14:06Z",
                "updated_at": "2023-10-27T10:50:24Z",
                "closed_at": "2023-10-27T10:36:28Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:8.10\r\n\r\n**Elasticsearch version**:8.10\r\n\r\n**.NET runtime version**:aspnetcore 3.1\r\n\r\n**Operating system version**:linux\r\n\r\nChinese characters are converted to Unicode\u3002\r\nI wanted to query Chinese \"\u65b0\u5e74\u5feb\u4e50\", but through the logs, it became \"\\u65B0\\u5E74\\u5FEB\\u4E50\"\r\n![QQ\u622a\u56fe20231027150258](https://github.com/elastic/elasticsearch-net/assets/11673386/0fbf6ff3-aa32-4fa7-a6e0-7c25ecc03631)\r\n![QQ\u622a\u56fe20231027150339](https://github.com/elastic/elasticsearch-net/assets/11673386/e685526a-886c-4c64-a5c0-2aba6704f40d)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1782704948",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7973#issuecomment-1782704948",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973",
                "id": 1782704948,
                "node_id": "IC_kwDOAA5iFc5qQes0",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:50:24Z",
                "updated_at": "2023-10-27T10:50:24Z",
                "author_association": "MEMBER",
                "body": "Hi! This behavior is defined in the JSON standard. The ES server should be able to handle this correctly.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1782704948/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:50:25Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32895865008",
        "type": "IssuesEvent",
        "actor": {
            "id": 11673386,
            "login": "qiandi",
            "display_login": "qiandi",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qiandi",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673386?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7973",
                "id": 1964911374,
                "node_id": "I_kwDOAA5iFc51HisO",
                "number": 7973,
                "title": "Whether Chinese queries are not supported",
                "user": {
                    "login": "qiandi",
                    "id": 11673386,
                    "node_id": "MDQ6VXNlcjExNjczMzg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11673386?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qiandi",
                    "html_url": "https://github.com/qiandi",
                    "followers_url": "https://api.github.com/users/qiandi/followers",
                    "following_url": "https://api.github.com/users/qiandi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qiandi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qiandi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qiandi/subscriptions",
                    "organizations_url": "https://api.github.com/users/qiandi/orgs",
                    "repos_url": "https://api.github.com/users/qiandi/repos",
                    "events_url": "https://api.github.com/users/qiandi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qiandi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T07:14:06Z",
                "updated_at": "2023-10-27T10:36:28Z",
                "closed_at": "2023-10-27T10:36:28Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:8.10\r\n\r\n**Elasticsearch version**:8.10\r\n\r\n**.NET runtime version**:aspnetcore 3.1\r\n\r\n**Operating system version**:linux\r\n\r\nChinese characters are converted to Unicode\u3002\r\nI wanted to query Chinese \"\u65b0\u5e74\u5feb\u4e50\", but through the logs, it became \"\\u65B0\\u5E74\\u5FEB\\u4E50\"\r\n![QQ\u622a\u56fe20231027150258](https://github.com/elastic/elasticsearch-net/assets/11673386/0fbf6ff3-aa32-4fa7-a6e0-7c25ecc03631)\r\n![QQ\u622a\u56fe20231027150339](https://github.com/elastic/elasticsearch-net/assets/11673386/e685526a-886c-4c64-a5c0-2aba6704f40d)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:36:29Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32893564247",
        "type": "WatchEvent",
        "actor": {
            "id": 12584587,
            "login": "jieke-wang",
            "display_login": "jieke-wang",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jieke-wang",
            "avatar_url": "https://avatars.githubusercontent.com/u/12584587?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:09:10Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32890687953",
        "type": "IssuesEvent",
        "actor": {
            "id": 11673386,
            "login": "qiandi",
            "display_login": "qiandi",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qiandi",
            "avatar_url": "https://avatars.githubusercontent.com/u/11673386?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7973",
                "id": 1964911374,
                "node_id": "I_kwDOAA5iFc51HisO",
                "number": 7973,
                "title": "Whether Chinese queries are not supported",
                "user": {
                    "login": "qiandi",
                    "id": 11673386,
                    "node_id": "MDQ6VXNlcjExNjczMzg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11673386?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qiandi",
                    "html_url": "https://github.com/qiandi",
                    "followers_url": "https://api.github.com/users/qiandi/followers",
                    "following_url": "https://api.github.com/users/qiandi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qiandi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qiandi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qiandi/subscriptions",
                    "organizations_url": "https://api.github.com/users/qiandi/orgs",
                    "repos_url": "https://api.github.com/users/qiandi/repos",
                    "events_url": "https://api.github.com/users/qiandi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qiandi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T07:14:06Z",
                "updated_at": "2023-10-27T07:14:06Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:8.10\r\n\r\n**Elasticsearch version**:8.10\r\n\r\n**.NET runtime version**:aspnetcore 3.1\r\n\r\n**Operating system version**:linux\r\n\r\nChinese characters are converted to Unicode\u3002\r\nI wanted to query Chinese \"\u65b0\u5e74\u5feb\u4e50\", but through the logs, it became \"\\u65B0\\u5E74\\u5FEB\\u4E50\"\r\n![QQ\u622a\u56fe20231027150258](https://github.com/elastic/elasticsearch-net/assets/11673386/0fbf6ff3-aa32-4fa7-a6e0-7c25ecc03631)\r\n![QQ\u622a\u56fe20231027150339](https://github.com/elastic/elasticsearch-net/assets/11673386/e685526a-886c-4c64-a5c0-2aba6704f40d)\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7973/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T07:14:08Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32867160917",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3975939,
            "login": "yansklyarenko",
            "display_login": "yansklyarenko",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yansklyarenko",
            "avatar_url": "https://avatars.githubusercontent.com/u/3975939?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972",
                "id": 1956631728,
                "node_id": "I_kwDOAA5iFc50n9Sw",
                "number": 7972,
                "title": "The client.Indices.GetAsync() call fails with the JSON parsing exception if certain settings are present",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94632697,
                        "node_id": "MDU6TGFiZWw5NDYzMjY5Nw==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    },
                    {
                        "id": 4929338243,
                        "node_id": "LA_kwDOAA5iFc8AAAABJc-7gw",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/specification",
                        "name": "specification",
                        "color": "7B59F6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-23T08:30:14Z",
                "updated_at": "2023-10-26T12:12:47Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**: 8.10\r\n\r\n**Elasticsearch version**: 8.2.2\r\n\r\n**.NET runtime version**: 7.0\r\n\r\n**Operating system version**: Windows 10\r\n\r\n**Steps to reproduce**:\r\nCreate an index with the following call:\r\n\r\n```\r\nvar createResponse = await client.Indices.CreateAsync(\"my-test-index\", d => d\r\n                       .Settings(s => s\r\n                                   .Analysis(a => a\r\n                                       .TokenFilters(tf => tf\r\n                                         .WordDelimiterGraph(\"test_filter\", sel => sel.SplitOnNumerics(false)\r\n                                       )))), default).ConfigureAwait(false);\r\n```\r\n\r\nThis works just fine. The index is created with the following settings:\r\n\r\n```\r\n{\r\n  \"my-test-index\" : {\r\n    \"settings\" : {\r\n      \"index\" : {\r\n        \"routing\" : {\r\n          \"allocation\" : {\r\n            \"include\" : {\r\n              \"_tier_preference\" : \"data_content\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_shards\" : \"1\",\r\n        \"provided_name\" : \"my-test-index\",\r\n        \"creation_date\" : \"1698047329433\",\r\n        \"analysis\" : {\r\n          \"filter\" : {\r\n            \"test_filter\" : {\r\n              \"type\" : \"word_delimiter_graph\",\r\n              \"split_on_numerics\" : \"false\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_replicas\" : \"1\",\r\n        \"uuid\" : \"2wzv2HGIS729KaxIaODsHw\",\r\n        \"version\" : {\r\n          \"created\" : \"8020299\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHowever, if you try to get the index with the following call:\r\n\r\n```\r\nvar getResponse = await client.Indices.GetAsync(\"my-test-index\", default).ConfigureAwait(false);\r\n```\r\n\r\nIt fails with the following exception:\r\n\r\n```\r\n# FailureReason: Unrecoverable/Unexpected BadResponse while attempting GET on https://localhost:9292/my-test-index?pretty=true&error_trace=true\r\n - [1] BadResponse: Node: https://localhost:9292/ Exception: JsonException Took: 00:00:00.0795701\r\n# Audit exception in step 1 BadResponse:\r\nSystem.Text.Json.JsonException: The JSON value could not be converted to System.Nullable`1[System.Boolean]. Path: $.split_on_numerics | LineNumber: 2 | BytePositionInLine: 43.\r\n ---> System.InvalidOperationException: Cannot get the value of a token type 'String' as a boolean.\r\n   at System.Text.Json.Utf8JsonReader.GetBoolean()\r\n   at System.Text.Json.Serialization.Converters.BooleanConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Converters.NullableConverter`1.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.ReadJsonAndSetMember(Object obj, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   --- End of inner exception stack trace ---\r\n   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, Utf8JsonReader& reader, Exception ex)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.ReadCore[TValue](JsonConverter jsonConverter, Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.Read[TValue](Utf8JsonReader& reader, JsonTypeInfo jsonTypeInfo)\r\n   at Elastic.Clients.Elasticsearch.Analysis.TokenFilterInterfaceConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options) in /_/src/Elastic.Clients.Elasticsearch/_Generated/Types/Analysis/TokenFilters.g.cs:line 252\r\n\r\n```\r\n\r\n**Some mode details**\r\nAs far as I can see, it doesn't like the fact that `split_on_numerics` is of a string type, not bool, and it fails when it tries to deserialize it to bool. The exception stack trace mentions the `Read` method of the `TokenFilterInterfaceConverter` class. It tries to deserialize the `word_delimiter_graph` part like this:\r\n```\r\nJsonSerializer.Deserialize<WordDelimiterGraphTokenFilter>(ref reader, options);\r\n```\r\nIt looks like the `WordDelimiterGraphTokenFilter` doesn't set the proper convertor on each required `bool?` property. For example, the mentioned `split_on_numerics` property is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"split_on_numerics\")]\r\npublic bool? SplitOnNumerics { get; set; }\r\n```\r\nWhile another `bool?` property `preserve_original` is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"preserve_original\")]\r\n[JsonConverter(typeof(StringifiedBoolConverter))]\r\npublic bool? PreserveOriginal { get; set; }\r\n```\r\n\r\n**An assumption for the fix**\r\nIt looks like the fix here is to decorate all `bool?` properties with `StringifiedBoolConverter` attribute. I've checked the sample above, replacing the `split_on_numerics` with `preserve_original`, and it was able to return the index response just fine.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780990731",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972#issuecomment-1780990731",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "id": 1780990731,
                "node_id": "IC_kwDOAA5iFc5qJ8ML",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:12:46Z",
                "updated_at": "2023-10-26T12:12:46Z",
                "author_association": "NONE",
                "body": "Thanks a lot, @flobernd!\r\nJust FYI, I've tried registering the converters in the default converter list locally, and it fixes the problem in my case. All the tests have also passed locally.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780990731/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:12:47Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32867030943",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972",
                "id": 1956631728,
                "node_id": "I_kwDOAA5iFc50n9Sw",
                "number": 7972,
                "title": "The client.Indices.GetAsync() call fails with the JSON parsing exception if certain settings are present",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94632697,
                        "node_id": "MDU6TGFiZWw5NDYzMjY5Nw==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    },
                    {
                        "id": 4929338243,
                        "node_id": "LA_kwDOAA5iFc8AAAABJc-7gw",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/specification",
                        "name": "specification",
                        "color": "7B59F6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-23T08:30:14Z",
                "updated_at": "2023-10-26T12:08:18Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**: 8.10\r\n\r\n**Elasticsearch version**: 8.2.2\r\n\r\n**.NET runtime version**: 7.0\r\n\r\n**Operating system version**: Windows 10\r\n\r\n**Steps to reproduce**:\r\nCreate an index with the following call:\r\n\r\n```\r\nvar createResponse = await client.Indices.CreateAsync(\"my-test-index\", d => d\r\n                       .Settings(s => s\r\n                                   .Analysis(a => a\r\n                                       .TokenFilters(tf => tf\r\n                                         .WordDelimiterGraph(\"test_filter\", sel => sel.SplitOnNumerics(false)\r\n                                       )))), default).ConfigureAwait(false);\r\n```\r\n\r\nThis works just fine. The index is created with the following settings:\r\n\r\n```\r\n{\r\n  \"my-test-index\" : {\r\n    \"settings\" : {\r\n      \"index\" : {\r\n        \"routing\" : {\r\n          \"allocation\" : {\r\n            \"include\" : {\r\n              \"_tier_preference\" : \"data_content\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_shards\" : \"1\",\r\n        \"provided_name\" : \"my-test-index\",\r\n        \"creation_date\" : \"1698047329433\",\r\n        \"analysis\" : {\r\n          \"filter\" : {\r\n            \"test_filter\" : {\r\n              \"type\" : \"word_delimiter_graph\",\r\n              \"split_on_numerics\" : \"false\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_replicas\" : \"1\",\r\n        \"uuid\" : \"2wzv2HGIS729KaxIaODsHw\",\r\n        \"version\" : {\r\n          \"created\" : \"8020299\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHowever, if you try to get the index with the following call:\r\n\r\n```\r\nvar getResponse = await client.Indices.GetAsync(\"my-test-index\", default).ConfigureAwait(false);\r\n```\r\n\r\nIt fails with the following exception:\r\n\r\n```\r\n# FailureReason: Unrecoverable/Unexpected BadResponse while attempting GET on https://localhost:9292/my-test-index?pretty=true&error_trace=true\r\n - [1] BadResponse: Node: https://localhost:9292/ Exception: JsonException Took: 00:00:00.0795701\r\n# Audit exception in step 1 BadResponse:\r\nSystem.Text.Json.JsonException: The JSON value could not be converted to System.Nullable`1[System.Boolean]. Path: $.split_on_numerics | LineNumber: 2 | BytePositionInLine: 43.\r\n ---> System.InvalidOperationException: Cannot get the value of a token type 'String' as a boolean.\r\n   at System.Text.Json.Utf8JsonReader.GetBoolean()\r\n   at System.Text.Json.Serialization.Converters.BooleanConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Converters.NullableConverter`1.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.ReadJsonAndSetMember(Object obj, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   --- End of inner exception stack trace ---\r\n   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, Utf8JsonReader& reader, Exception ex)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.ReadCore[TValue](JsonConverter jsonConverter, Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.Read[TValue](Utf8JsonReader& reader, JsonTypeInfo jsonTypeInfo)\r\n   at Elastic.Clients.Elasticsearch.Analysis.TokenFilterInterfaceConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options) in /_/src/Elastic.Clients.Elasticsearch/_Generated/Types/Analysis/TokenFilters.g.cs:line 252\r\n\r\n```\r\n\r\n**Some mode details**\r\nAs far as I can see, it doesn't like the fact that `split_on_numerics` is of a string type, not bool, and it fails when it tries to deserialize it to bool. The exception stack trace mentions the `Read` method of the `TokenFilterInterfaceConverter` class. It tries to deserialize the `word_delimiter_graph` part like this:\r\n```\r\nJsonSerializer.Deserialize<WordDelimiterGraphTokenFilter>(ref reader, options);\r\n```\r\nIt looks like the `WordDelimiterGraphTokenFilter` doesn't set the proper convertor on each required `bool?` property. For example, the mentioned `split_on_numerics` property is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"split_on_numerics\")]\r\npublic bool? SplitOnNumerics { get; set; }\r\n```\r\nWhile another `bool?` property `preserve_original` is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"preserve_original\")]\r\n[JsonConverter(typeof(StringifiedBoolConverter))]\r\npublic bool? PreserveOriginal { get; set; }\r\n```\r\n\r\n**An assumption for the fix**\r\nIt looks like the fix here is to decorate all `bool?` properties with `StringifiedBoolConverter` attribute. I've checked the sample above, replacing the `split_on_numerics` with `preserve_original`, and it was able to return the index response just fine.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780984518",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972#issuecomment-1780984518",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "id": 1780984518,
                "node_id": "IC_kwDOAA5iFc5qJ6rG",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:08:17Z",
                "updated_at": "2023-10-26T12:08:17Z",
                "author_association": "MEMBER",
                "body": "@yansklyarenko Yes, this was something I'm considering as well. There might be a minor performance hit, but I know that e.g. the Go client does it the same way and always accepts strings for numbers and bools.\n\nI got something else to finish first, but no worries, I'll try to fix these stringify problems in a timely manner (either by adding the attributes or by registering the converters in the default converter list).",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780984518/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:08:18Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32861502849",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3975939,
            "login": "yansklyarenko",
            "display_login": "yansklyarenko",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yansklyarenko",
            "avatar_url": "https://avatars.githubusercontent.com/u/3975939?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972",
                "id": 1956631728,
                "node_id": "I_kwDOAA5iFc50n9Sw",
                "number": 7972,
                "title": "The client.Indices.GetAsync() call fails with the JSON parsing exception if certain settings are present",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94632697,
                        "node_id": "MDU6TGFiZWw5NDYzMjY5Nw==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    },
                    {
                        "id": 4929338243,
                        "node_id": "LA_kwDOAA5iFc8AAAABJc-7gw",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/specification",
                        "name": "specification",
                        "color": "7B59F6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-23T08:30:14Z",
                "updated_at": "2023-10-26T08:51:15Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**: 8.10\r\n\r\n**Elasticsearch version**: 8.2.2\r\n\r\n**.NET runtime version**: 7.0\r\n\r\n**Operating system version**: Windows 10\r\n\r\n**Steps to reproduce**:\r\nCreate an index with the following call:\r\n\r\n```\r\nvar createResponse = await client.Indices.CreateAsync(\"my-test-index\", d => d\r\n                       .Settings(s => s\r\n                                   .Analysis(a => a\r\n                                       .TokenFilters(tf => tf\r\n                                         .WordDelimiterGraph(\"test_filter\", sel => sel.SplitOnNumerics(false)\r\n                                       )))), default).ConfigureAwait(false);\r\n```\r\n\r\nThis works just fine. The index is created with the following settings:\r\n\r\n```\r\n{\r\n  \"my-test-index\" : {\r\n    \"settings\" : {\r\n      \"index\" : {\r\n        \"routing\" : {\r\n          \"allocation\" : {\r\n            \"include\" : {\r\n              \"_tier_preference\" : \"data_content\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_shards\" : \"1\",\r\n        \"provided_name\" : \"my-test-index\",\r\n        \"creation_date\" : \"1698047329433\",\r\n        \"analysis\" : {\r\n          \"filter\" : {\r\n            \"test_filter\" : {\r\n              \"type\" : \"word_delimiter_graph\",\r\n              \"split_on_numerics\" : \"false\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_replicas\" : \"1\",\r\n        \"uuid\" : \"2wzv2HGIS729KaxIaODsHw\",\r\n        \"version\" : {\r\n          \"created\" : \"8020299\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHowever, if you try to get the index with the following call:\r\n\r\n```\r\nvar getResponse = await client.Indices.GetAsync(\"my-test-index\", default).ConfigureAwait(false);\r\n```\r\n\r\nIt fails with the following exception:\r\n\r\n```\r\n# FailureReason: Unrecoverable/Unexpected BadResponse while attempting GET on https://localhost:9292/my-test-index?pretty=true&error_trace=true\r\n - [1] BadResponse: Node: https://localhost:9292/ Exception: JsonException Took: 00:00:00.0795701\r\n# Audit exception in step 1 BadResponse:\r\nSystem.Text.Json.JsonException: The JSON value could not be converted to System.Nullable`1[System.Boolean]. Path: $.split_on_numerics | LineNumber: 2 | BytePositionInLine: 43.\r\n ---> System.InvalidOperationException: Cannot get the value of a token type 'String' as a boolean.\r\n   at System.Text.Json.Utf8JsonReader.GetBoolean()\r\n   at System.Text.Json.Serialization.Converters.BooleanConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Converters.NullableConverter`1.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.ReadJsonAndSetMember(Object obj, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   --- End of inner exception stack trace ---\r\n   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, Utf8JsonReader& reader, Exception ex)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.ReadCore[TValue](JsonConverter jsonConverter, Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.Read[TValue](Utf8JsonReader& reader, JsonTypeInfo jsonTypeInfo)\r\n   at Elastic.Clients.Elasticsearch.Analysis.TokenFilterInterfaceConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options) in /_/src/Elastic.Clients.Elasticsearch/_Generated/Types/Analysis/TokenFilters.g.cs:line 252\r\n\r\n```\r\n\r\n**Some mode details**\r\nAs far as I can see, it doesn't like the fact that `split_on_numerics` is of a string type, not bool, and it fails when it tries to deserialize it to bool. The exception stack trace mentions the `Read` method of the `TokenFilterInterfaceConverter` class. It tries to deserialize the `word_delimiter_graph` part like this:\r\n```\r\nJsonSerializer.Deserialize<WordDelimiterGraphTokenFilter>(ref reader, options);\r\n```\r\nIt looks like the `WordDelimiterGraphTokenFilter` doesn't set the proper convertor on each required `bool?` property. For example, the mentioned `split_on_numerics` property is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"split_on_numerics\")]\r\npublic bool? SplitOnNumerics { get; set; }\r\n```\r\nWhile another `bool?` property `preserve_original` is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"preserve_original\")]\r\n[JsonConverter(typeof(StringifiedBoolConverter))]\r\npublic bool? PreserveOriginal { get; set; }\r\n```\r\n\r\n**An assumption for the fix**\r\nIt looks like the fix here is to decorate all `bool?` properties with `StringifiedBoolConverter` attribute. I've checked the sample above, replacing the `split_on_numerics` with `preserve_original`, and it was able to return the index response just fine.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780686536",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972#issuecomment-1780686536",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "id": 1780686536,
                "node_id": "IC_kwDOAA5iFc5qIx7I",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T08:51:14Z",
                "updated_at": "2023-10-26T08:51:14Z",
                "author_association": "NONE",
                "body": "@flobernd Perhaps, it would be easier to add those [Stringified convertors](https://github.com/elastic/elasticsearch-net/blob/b1416abe89771402f889928b870ec2b5d63dbf45/src/Elastic.Clients.Elasticsearch/Serialization/Stringified.cs) to the [list of converters for DefaultRequestResponseSerializer](https://github.com/elastic/elasticsearch-net/blob/main/src/Elastic.Clients.Elasticsearch/Serialization/DefaultRequestResponseSerializer.cs#L28)?\r\nDo you think it is a _dirtier_ fix than the one you mentioned above (manually add attributes on demand)?",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780686536/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T08:51:15Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32859956004",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 10741012,
            "login": "TheFireCookie",
            "display_login": "TheFireCookie",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheFireCookie",
            "avatar_url": "https://avatars.githubusercontent.com/u/10741012?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7825",
                "id": 1800839964,
                "node_id": "I_kwDOAA5iFc5rVqMc",
                "number": 7825,
                "title": "[FEATURE] Source, SourceIncludes & SourceExcludes to support lambda targeting types & list",
                "user": {
                    "login": "TheFireCookie",
                    "id": 10741012,
                    "node_id": "MDQ6VXNlcjEwNzQxMDEy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10741012?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheFireCookie",
                    "html_url": "https://github.com/TheFireCookie",
                    "followers_url": "https://api.github.com/users/TheFireCookie/followers",
                    "following_url": "https://api.github.com/users/TheFireCookie/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheFireCookie/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheFireCookie/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheFireCookie/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheFireCookie/orgs",
                    "repos_url": "https://api.github.com/users/TheFireCookie/repos",
                    "events_url": "https://api.github.com/users/TheFireCookie/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheFireCookie/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 10,
                "created_at": "2023-07-12T12:06:58Z",
                "updated_at": "2023-10-26T07:56:53Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm frustrated upgrading from 7 to 8 because in the include/exclude & general source filtering in NEST, we could work with lambda pointing to properties of a specific document (mydoc => mydoc.MyField), in the new ES8 client, we can only work with list of strings and the mapping is not easy.\r\n\r\nNEST:\r\n```csharp\r\ngd => gd.SourceIncludes(doc=> doc.Id, doc=> doc.CreationDate)\r\n```\r\n\r\n**Describe the solution you'd like**\r\nHandling of the list (in addition of array etc) on the Fields class\r\n\r\n```csharp\r\nvar esIncludeFields = new List<string> { \"id\", \"type\" };\r\nnew SearchRequestDescriptor<TDoc>()\r\n.SourceIncludes(esIncludeFields)\r\n```\r\n\r\n\r\nHandling of the .NET lambda targeting type properties\r\n\r\n```csharp\r\nnew SearchRequestDescriptor<TDoc>()\r\n.SourceIncludes(doc => doc.Id, doc => doc.CreationDate)\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nRight now I'm using workaround of course :)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/reactions",
                    "total_count": 3,
                    "+1": 3,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780602434",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7825#issuecomment-1780602434",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825",
                "id": 1780602434,
                "node_id": "IC_kwDOAA5iFc5qIdZC",
                "user": {
                    "login": "TheFireCookie",
                    "id": 10741012,
                    "node_id": "MDQ6VXNlcjEwNzQxMDEy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10741012?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheFireCookie",
                    "html_url": "https://github.com/TheFireCookie",
                    "followers_url": "https://api.github.com/users/TheFireCookie/followers",
                    "following_url": "https://api.github.com/users/TheFireCookie/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheFireCookie/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheFireCookie/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheFireCookie/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheFireCookie/orgs",
                    "repos_url": "https://api.github.com/users/TheFireCookie/repos",
                    "events_url": "https://api.github.com/users/TheFireCookie/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheFireCookie/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T07:56:53Z",
                "updated_at": "2023-10-26T07:56:53Z",
                "author_association": "CONTRIBUTOR",
                "body": "> I agree with @jade-lucas comment, I'm having problems grasping the new way of \"talking to Elasticsearch\" compared to how this worked in Nest. Maybe I've missed some kind of basic explanation of the architecture in the new client? The code snippets you talk about @flobernd would probably be very helpful to get access to. Any idea about when these will be available?\r\n> \r\n> An example of a query I want to migrate to the new client, a MatchAll-query that in Nest looks like this (fieldNames being a list of strings):\r\n> \r\n> `await Client.SearchAsync<T>(sd => sd.Index(indexAlias).Query(q => q.MatchAll()).Size(10000).Source(sfd => sfd.Includes(descriptor => descriptor.Fields(fieldNames.ToArray()))));`\r\n> \r\n> How do I translate this to using the new client?\r\n\r\n```cs\r\n    var fieldNames = new List<string> { \"abc\", \"def\" };\r\n    var indexAlias = \"my-index\";\r\n    await elasticsearchClient.SearchAsync<T>(sd => sd.Index(indexAlias).Query(q => q.MatchAll()).Size(10000).SourceIncludes(fieldNames.ToArray()));\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1780602434/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T07:56:54Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32816341888",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 9945377,
            "login": "MEmanuelsson",
            "display_login": "MEmanuelsson",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MEmanuelsson",
            "avatar_url": "https://avatars.githubusercontent.com/u/9945377?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7825",
                "id": 1800839964,
                "node_id": "I_kwDOAA5iFc5rVqMc",
                "number": 7825,
                "title": "[FEATURE] Source, SourceIncludes & SourceExcludes to support lambda targeting types & list",
                "user": {
                    "login": "TheFireCookie",
                    "id": 10741012,
                    "node_id": "MDQ6VXNlcjEwNzQxMDEy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10741012?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheFireCookie",
                    "html_url": "https://github.com/TheFireCookie",
                    "followers_url": "https://api.github.com/users/TheFireCookie/followers",
                    "following_url": "https://api.github.com/users/TheFireCookie/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheFireCookie/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheFireCookie/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheFireCookie/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheFireCookie/orgs",
                    "repos_url": "https://api.github.com/users/TheFireCookie/repos",
                    "events_url": "https://api.github.com/users/TheFireCookie/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheFireCookie/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-07-12T12:06:58Z",
                "updated_at": "2023-10-24T20:58:43Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm frustrated upgrading from 7 to 8 because in the include/exclude & general source filtering in NEST, we could work with lambda pointing to properties of a specific document (mydoc => mydoc.MyField), in the new ES8 client, we can only work with list of strings and the mapping is not easy.\r\n\r\nNEST:\r\n```csharp\r\ngd => gd.SourceIncludes(doc=> doc.Id, doc=> doc.CreationDate)\r\n```\r\n\r\n**Describe the solution you'd like**\r\nHandling of the list (in addition of array etc) on the Fields class\r\n\r\n```csharp\r\nvar esIncludeFields = new List<string> { \"id\", \"type\" };\r\nnew SearchRequestDescriptor<TDoc>()\r\n.SourceIncludes(esIncludeFields)\r\n```\r\n\r\n\r\nHandling of the .NET lambda targeting type properties\r\n\r\n```csharp\r\nnew SearchRequestDescriptor<TDoc>()\r\n.SourceIncludes(doc => doc.Id, doc => doc.CreationDate)\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nRight now I'm using workaround of course :)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/reactions",
                    "total_count": 3,
                    "+1": 3,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1778027782",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7825#issuecomment-1778027782",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7825",
                "id": 1778027782,
                "node_id": "IC_kwDOAA5iFc5p-o0G",
                "user": {
                    "login": "MEmanuelsson",
                    "id": 9945377,
                    "node_id": "MDQ6VXNlcjk5NDUzNzc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9945377?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MEmanuelsson",
                    "html_url": "https://github.com/MEmanuelsson",
                    "followers_url": "https://api.github.com/users/MEmanuelsson/followers",
                    "following_url": "https://api.github.com/users/MEmanuelsson/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MEmanuelsson/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MEmanuelsson/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MEmanuelsson/subscriptions",
                    "organizations_url": "https://api.github.com/users/MEmanuelsson/orgs",
                    "repos_url": "https://api.github.com/users/MEmanuelsson/repos",
                    "events_url": "https://api.github.com/users/MEmanuelsson/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MEmanuelsson/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T20:58:43Z",
                "updated_at": "2023-10-24T20:58:43Z",
                "author_association": "NONE",
                "body": "I agree with @jade-lucas comment, I'm having problems grasping the new way of \"talking to Elasticsearch\" compared to how this worked in Nest. Maybe I've missed some kind of basic explanation of the architecture in the new client? The code snippets you talk about @flobernd would probably be very helpful to get access to. Any idea about when these will be available?",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1778027782/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T20:58:44Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32810246790",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3975939,
            "login": "yansklyarenko",
            "display_login": "yansklyarenko",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yansklyarenko",
            "avatar_url": "https://avatars.githubusercontent.com/u/3975939?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972",
                "id": 1956631728,
                "node_id": "I_kwDOAA5iFc50n9Sw",
                "number": 7972,
                "title": "The client.Indices.GetAsync() call fails with the JSON parsing exception if certain settings are present",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94632697,
                        "node_id": "MDU6TGFiZWw5NDYzMjY5Nw==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    },
                    {
                        "id": 4929338243,
                        "node_id": "LA_kwDOAA5iFc8AAAABJc-7gw",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/specification",
                        "name": "specification",
                        "color": "7B59F6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-23T08:30:14Z",
                "updated_at": "2023-10-24T16:42:22Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**: 8.10\r\n\r\n**Elasticsearch version**: 8.2.2\r\n\r\n**.NET runtime version**: 7.0\r\n\r\n**Operating system version**: Windows 10\r\n\r\n**Steps to reproduce**:\r\nCreate an index with the following call:\r\n\r\n```\r\nvar createResponse = await client.Indices.CreateAsync(\"my-test-index\", d => d\r\n                       .Settings(s => s\r\n                                   .Analysis(a => a\r\n                                       .TokenFilters(tf => tf\r\n                                         .WordDelimiterGraph(\"test_filter\", sel => sel.SplitOnNumerics(false)\r\n                                       )))), default).ConfigureAwait(false);\r\n```\r\n\r\nThis works just fine. The index is created with the following settings:\r\n\r\n```\r\n{\r\n  \"my-test-index\" : {\r\n    \"settings\" : {\r\n      \"index\" : {\r\n        \"routing\" : {\r\n          \"allocation\" : {\r\n            \"include\" : {\r\n              \"_tier_preference\" : \"data_content\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_shards\" : \"1\",\r\n        \"provided_name\" : \"my-test-index\",\r\n        \"creation_date\" : \"1698047329433\",\r\n        \"analysis\" : {\r\n          \"filter\" : {\r\n            \"test_filter\" : {\r\n              \"type\" : \"word_delimiter_graph\",\r\n              \"split_on_numerics\" : \"false\"\r\n            }\r\n          }\r\n        },\r\n        \"number_of_replicas\" : \"1\",\r\n        \"uuid\" : \"2wzv2HGIS729KaxIaODsHw\",\r\n        \"version\" : {\r\n          \"created\" : \"8020299\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nHowever, if you try to get the index with the following call:\r\n\r\n```\r\nvar getResponse = await client.Indices.GetAsync(\"my-test-index\", default).ConfigureAwait(false);\r\n```\r\n\r\nIt fails with the following exception:\r\n\r\n```\r\n# FailureReason: Unrecoverable/Unexpected BadResponse while attempting GET on https://localhost:9292/my-test-index?pretty=true&error_trace=true\r\n - [1] BadResponse: Node: https://localhost:9292/ Exception: JsonException Took: 00:00:00.0795701\r\n# Audit exception in step 1 BadResponse:\r\nSystem.Text.Json.JsonException: The JSON value could not be converted to System.Nullable`1[System.Boolean]. Path: $.split_on_numerics | LineNumber: 2 | BytePositionInLine: 43.\r\n ---> System.InvalidOperationException: Cannot get the value of a token type 'String' as a boolean.\r\n   at System.Text.Json.Utf8JsonReader.GetBoolean()\r\n   at System.Text.Json.Serialization.Converters.BooleanConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Converters.NullableConverter`1.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options)\r\n   at System.Text.Json.Serialization.Metadata.JsonPropertyInfo`1.ReadJsonAndSetMember(Object obj, ReadStack& state, Utf8JsonReader& reader)\r\n   at System.Text.Json.Serialization.Converters.ObjectDefaultConverter`1.OnTryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.TryRead(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options, ReadStack& state, T& value)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   --- End of inner exception stack trace ---\r\n   at System.Text.Json.ThrowHelper.ReThrowWithPath(ReadStack& state, Utf8JsonReader& reader, Exception ex)\r\n   at System.Text.Json.Serialization.JsonConverter`1.ReadCore(Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.ReadCore[TValue](JsonConverter jsonConverter, Utf8JsonReader& reader, JsonSerializerOptions options, ReadStack& state)\r\n   at System.Text.Json.JsonSerializer.Read[TValue](Utf8JsonReader& reader, JsonTypeInfo jsonTypeInfo)\r\n   at Elastic.Clients.Elasticsearch.Analysis.TokenFilterInterfaceConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options) in /_/src/Elastic.Clients.Elasticsearch/_Generated/Types/Analysis/TokenFilters.g.cs:line 252\r\n\r\n```\r\n\r\n**Some mode details**\r\nAs far as I can see, it doesn't like the fact that `split_on_numerics` is of a string type, not bool, and it fails when it tries to deserialize it to bool. The exception stack trace mentions the `Read` method of the `TokenFilterInterfaceConverter` class. It tries to deserialize the `word_delimiter_graph` part like this:\r\n```\r\nJsonSerializer.Deserialize<WordDelimiterGraphTokenFilter>(ref reader, options);\r\n```\r\nIt looks like the `WordDelimiterGraphTokenFilter` doesn't set the proper convertor on each required `bool?` property. For example, the mentioned `split_on_numerics` property is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"split_on_numerics\")]\r\npublic bool? SplitOnNumerics { get; set; }\r\n```\r\nWhile another `bool?` property `preserve_original` is defined like this:\r\n```\r\n[JsonInclude]\r\n[JsonPropertyName(\"preserve_original\")]\r\n[JsonConverter(typeof(StringifiedBoolConverter))]\r\npublic bool? PreserveOriginal { get; set; }\r\n```\r\n\r\n**An assumption for the fix**\r\nIt looks like the fix here is to decorate all `bool?` properties with `StringifiedBoolConverter` attribute. I've checked the sample above, replacing the `split_on_numerics` with `preserve_original`, and it was able to return the index response just fine.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777623770",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7972#issuecomment-1777623770",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7972",
                "id": 1777623770,
                "node_id": "IC_kwDOAA5iFc5p9GLa",
                "user": {
                    "login": "yansklyarenko",
                    "id": 3975939,
                    "node_id": "MDQ6VXNlcjM5NzU5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3975939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yansklyarenko",
                    "html_url": "https://github.com/yansklyarenko",
                    "followers_url": "https://api.github.com/users/yansklyarenko/followers",
                    "following_url": "https://api.github.com/users/yansklyarenko/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yansklyarenko/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yansklyarenko/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yansklyarenko/subscriptions",
                    "organizations_url": "https://api.github.com/users/yansklyarenko/orgs",
                    "repos_url": "https://api.github.com/users/yansklyarenko/repos",
                    "events_url": "https://api.github.com/users/yansklyarenko/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yansklyarenko/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T16:42:22Z",
                "updated_at": "2023-10-24T16:42:22Z",
                "author_association": "NONE",
                "body": "Thanks for your answer, @flobernd. Yep, I've seen that proposal and I understand that is not a trivial change.\r\nFor this particular bug, is it possible to cover only the `IndexState` class and its counterparts (`IndexSettings`, `TypeMapping`, etc.)?\r\n\r\nIn the meantime, is there a workaround you can suggest? If I issue a low-level request and get `StringResponse` back, I'm still not able to deserialize its `Body` to `IndexState`. Is there a better approach than manually parsing the raw JSON for now? Thanks for your time, I really appreciate it.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777623770/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T16:42:22Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32804473600",
        "type": "WatchEvent",
        "actor": {
            "id": 43777839,
            "login": "asaintsever",
            "display_login": "asaintsever",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asaintsever",
            "avatar_url": "https://avatars.githubusercontent.com/u/43777839?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T13:36:21Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32804190548",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7967",
                "id": 1937293049,
                "node_id": "I_kwDOAA5iFc5zeL75",
                "number": 7967,
                "title": "Properties of derived class are not serialized",
                "user": {
                    "login": "tiptobi",
                    "id": 4949694,
                    "node_id": "MDQ6VXNlcjQ5NDk2OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4949694?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tiptobi",
                    "html_url": "https://github.com/tiptobi",
                    "followers_url": "https://api.github.com/users/tiptobi/followers",
                    "following_url": "https://api.github.com/users/tiptobi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tiptobi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tiptobi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tiptobi/subscriptions",
                    "organizations_url": "https://api.github.com/users/tiptobi/orgs",
                    "repos_url": "https://api.github.com/users/tiptobi/repos",
                    "events_url": "https://api.github.com/users/tiptobi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tiptobi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-11T09:22:18Z",
                "updated_at": "2023-10-24T13:27:27Z",
                "closed_at": "2023-10-24T13:27:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:  8.10.0\r\n\r\n**Elasticsearch version**: 8.6.2\r\n\r\n**.NET runtime version**: 6.0\r\n\r\n**Operating system version**: \r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWhen using the .NET client to create or update a document where the model is a derived class, the properties that are in the derived class are not serialized / they don't appear in the request. This was working perfectly fine on the NEST v7 client.\r\n\r\n**Steps to reproduce**:\r\n 1. Having the following model classes \r\n```\r\npublic abstract class BaseEntity\r\n{\r\n    public string GeneralProperty { get; set; }\r\n}\r\n\r\npublic class ConcreteEntity : BaseEntity\r\n{\r\n    public string DerivedProperty { get; set; };\r\n}\r\n```\r\n\r\nAnd the following logic to index a document:\r\n```\r\npublic async Task IndexAsync<T>(T entity) where T : BaseEntity\r\n{\r\n    var index = GetIndexByEntity(entity);\r\n\r\n    await _client.IndexAsync(entity, descriptor => descriptor.Index(index));\r\n}\r\n```\r\n\r\n2. Call the index function like: \r\n```\r\nvar entity = new ConcreteEntity { GeneralProperty = \"general\", DerivedProperty = \"derived\" };\r\nawait IndexAsync(entity);\r\n```\r\n\r\n3. The generated HTTP request body of the V8 client then is:\r\n```\r\n{\r\n    \"generalProperty\": \"general\"\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nThe generated request should include the properties from the base class AND the derived class:\r\n```\r\n{\r\n    \"generalProperty\": \"general\",\r\n    \"derivedProperty\": \"derived\"\r\n}\r\n```\r\n\r\n**Note**: The same behaviour can be observed on all writing client functions like IndexAsync(), UpdateAsync() and BulkAsync().\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T13:27:28Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32804190357",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7967",
                "id": 1937293049,
                "node_id": "I_kwDOAA5iFc5zeL75",
                "number": 7967,
                "title": "Properties of derived class are not serialized",
                "user": {
                    "login": "tiptobi",
                    "id": 4949694,
                    "node_id": "MDQ6VXNlcjQ5NDk2OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4949694?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tiptobi",
                    "html_url": "https://github.com/tiptobi",
                    "followers_url": "https://api.github.com/users/tiptobi/followers",
                    "following_url": "https://api.github.com/users/tiptobi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tiptobi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tiptobi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tiptobi/subscriptions",
                    "organizations_url": "https://api.github.com/users/tiptobi/orgs",
                    "repos_url": "https://api.github.com/users/tiptobi/repos",
                    "events_url": "https://api.github.com/users/tiptobi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tiptobi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-11T09:22:18Z",
                "updated_at": "2023-10-24T13:27:27Z",
                "closed_at": "2023-10-24T13:27:26Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:  8.10.0\r\n\r\n**Elasticsearch version**: 8.6.2\r\n\r\n**.NET runtime version**: 6.0\r\n\r\n**Operating system version**: \r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWhen using the .NET client to create or update a document where the model is a derived class, the properties that are in the derived class are not serialized / they don't appear in the request. This was working perfectly fine on the NEST v7 client.\r\n\r\n**Steps to reproduce**:\r\n 1. Having the following model classes \r\n```\r\npublic abstract class BaseEntity\r\n{\r\n    public string GeneralProperty { get; set; }\r\n}\r\n\r\npublic class ConcreteEntity : BaseEntity\r\n{\r\n    public string DerivedProperty { get; set; };\r\n}\r\n```\r\n\r\nAnd the following logic to index a document:\r\n```\r\npublic async Task IndexAsync<T>(T entity) where T : BaseEntity\r\n{\r\n    var index = GetIndexByEntity(entity);\r\n\r\n    await _client.IndexAsync(entity, descriptor => descriptor.Index(index));\r\n}\r\n```\r\n\r\n2. Call the index function like: \r\n```\r\nvar entity = new ConcreteEntity { GeneralProperty = \"general\", DerivedProperty = \"derived\" };\r\nawait IndexAsync(entity);\r\n```\r\n\r\n3. The generated HTTP request body of the V8 client then is:\r\n```\r\n{\r\n    \"generalProperty\": \"general\"\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nThe generated request should include the properties from the base class AND the derived class:\r\n```\r\n{\r\n    \"generalProperty\": \"general\",\r\n    \"derivedProperty\": \"derived\"\r\n}\r\n```\r\n\r\n**Note**: The same behaviour can be observed on all writing client functions like IndexAsync(), UpdateAsync() and BulkAsync().\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777204477",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7967#issuecomment-1777204477",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967",
                "id": 1777204477,
                "node_id": "IC_kwDOAA5iFc5p7fz9",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T13:27:26Z",
                "updated_at": "2023-10-24T13:27:26Z",
                "author_association": "MEMBER",
                "body": "Thanks for confirming @stevejgordon! Hoping that answers your open questions for now @tiptobi . Feel free to reach out again, if you have further problems.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777204477/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T13:27:27Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32803890573",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3669103,
            "login": "stevejgordon",
            "display_login": "stevejgordon",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stevejgordon",
            "avatar_url": "https://avatars.githubusercontent.com/u/3669103?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7967",
                "id": 1937293049,
                "node_id": "I_kwDOAA5iFc5zeL75",
                "number": 7967,
                "title": "Properties of derived class are not serialized",
                "user": {
                    "login": "tiptobi",
                    "id": 4949694,
                    "node_id": "MDQ6VXNlcjQ5NDk2OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4949694?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tiptobi",
                    "html_url": "https://github.com/tiptobi",
                    "followers_url": "https://api.github.com/users/tiptobi/followers",
                    "following_url": "https://api.github.com/users/tiptobi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tiptobi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tiptobi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tiptobi/subscriptions",
                    "organizations_url": "https://api.github.com/users/tiptobi/orgs",
                    "repos_url": "https://api.github.com/users/tiptobi/repos",
                    "events_url": "https://api.github.com/users/tiptobi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tiptobi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-11T09:22:18Z",
                "updated_at": "2023-10-24T13:17:56Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:  8.10.0\r\n\r\n**Elasticsearch version**: 8.6.2\r\n\r\n**.NET runtime version**: 6.0\r\n\r\n**Operating system version**: \r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nWhen using the .NET client to create or update a document where the model is a derived class, the properties that are in the derived class are not serialized / they don't appear in the request. This was working perfectly fine on the NEST v7 client.\r\n\r\n**Steps to reproduce**:\r\n 1. Having the following model classes \r\n```\r\npublic abstract class BaseEntity\r\n{\r\n    public string GeneralProperty { get; set; }\r\n}\r\n\r\npublic class ConcreteEntity : BaseEntity\r\n{\r\n    public string DerivedProperty { get; set; };\r\n}\r\n```\r\n\r\nAnd the following logic to index a document:\r\n```\r\npublic async Task IndexAsync<T>(T entity) where T : BaseEntity\r\n{\r\n    var index = GetIndexByEntity(entity);\r\n\r\n    await _client.IndexAsync(entity, descriptor => descriptor.Index(index));\r\n}\r\n```\r\n\r\n2. Call the index function like: \r\n```\r\nvar entity = new ConcreteEntity { GeneralProperty = \"general\", DerivedProperty = \"derived\" };\r\nawait IndexAsync(entity);\r\n```\r\n\r\n3. The generated HTTP request body of the V8 client then is:\r\n```\r\n{\r\n    \"generalProperty\": \"general\"\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nThe generated request should include the properties from the base class AND the derived class:\r\n```\r\n{\r\n    \"generalProperty\": \"general\",\r\n    \"derivedProperty\": \"derived\"\r\n}\r\n```\r\n\r\n**Note**: The same behaviour can be observed on all writing client functions like IndexAsync(), UpdateAsync() and BulkAsync().\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777188566",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7967#issuecomment-1777188566",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7967",
                "id": 1777188566,
                "node_id": "IC_kwDOAA5iFc5p7b7W",
                "user": {
                    "login": "stevejgordon",
                    "id": 3669103,
                    "node_id": "MDQ6VXNlcjM2NjkxMDM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3669103?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/stevejgordon",
                    "html_url": "https://github.com/stevejgordon",
                    "followers_url": "https://api.github.com/users/stevejgordon/followers",
                    "following_url": "https://api.github.com/users/stevejgordon/following{/other_user}",
                    "gists_url": "https://api.github.com/users/stevejgordon/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/stevejgordon/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/stevejgordon/subscriptions",
                    "organizations_url": "https://api.github.com/users/stevejgordon/orgs",
                    "repos_url": "https://api.github.com/users/stevejgordon/repos",
                    "events_url": "https://api.github.com/users/stevejgordon/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/stevejgordon/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T13:17:56Z",
                "updated_at": "2023-10-24T13:17:56Z",
                "author_association": "CONTRIBUTOR",
                "body": "@flobernd That's correct. We default to using STJ for source serialization, which until .NET didn't natively support polymorphic serialization without a custom converter on the type. Since .NET 7, this is now supported, and this [Microsoft doc](https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/polymorphism?pivots=dotnet-7-0) details the steps. The behaviour isn't something our library can directly influence. It is also possible to [customise the source serialization](https://www.elastic.co/guide/en/elasticsearch/client/net-api/current/source-serialization.html) in several ways.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777188566/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T13:17:56Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32801538738",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7717",
                "id": 1705892039,
                "node_id": "I_kwDOAA5iFc5lrdjH",
                "number": 7717,
                "title": "[FEATURE] Support ML Infer endpoint",
                "user": {
                    "login": "virtualaidev",
                    "id": 116691120,
                    "node_id": "U_kgDOBvSQsA",
                    "avatar_url": "https://avatars.githubusercontent.com/u/116691120?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/virtualaidev",
                    "html_url": "https://github.com/virtualaidev",
                    "followers_url": "https://api.github.com/users/virtualaidev/followers",
                    "following_url": "https://api.github.com/users/virtualaidev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/virtualaidev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/virtualaidev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/virtualaidev/subscriptions",
                    "organizations_url": "https://api.github.com/users/virtualaidev/orgs",
                    "repos_url": "https://api.github.com/users/virtualaidev/repos",
                    "events_url": "https://api.github.com/users/virtualaidev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/virtualaidev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-05-11T14:08:31Z",
                "updated_at": "2023-10-24T11:55:19Z",
                "closed_at": "2023-10-24T11:55:19Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nWe're using ML for vector search, currently the below sample request does not have equivalent when implementing it .NET.\r\n\r\n```\r\nPOST /_ml/trained_models/sentence-transformers__all-minilm-l12-v2/_infer\r\n{\r\n  \"docs\": {\r\n    \"text_field\": \"similar movies of resident evil\"\r\n  }\r\n}\r\n```\r\n\r\n**Describe the solution you'd like**\r\n```\r\nvar response = _client.MachineLearning.Infer(\r\n  \"sentence-transformers__all-minilm-l12-v2\",\r\n  new InferRequest <Document> {\r\n    Docs = new List <Document> {\r\n      new Document {\r\n        TextField = \"similar movies of resident evil\"\r\n      }\r\n    }\r\n  }\r\n);\r\n```\r\n\r\nIf we could have something like the above that would be a great help in using ML in .NET.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T11:55:20Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32801538573",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7717",
                "id": 1705892039,
                "node_id": "I_kwDOAA5iFc5lrdjH",
                "number": 7717,
                "title": "[FEATURE] Support ML Infer endpoint",
                "user": {
                    "login": "virtualaidev",
                    "id": 116691120,
                    "node_id": "U_kgDOBvSQsA",
                    "avatar_url": "https://avatars.githubusercontent.com/u/116691120?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/virtualaidev",
                    "html_url": "https://github.com/virtualaidev",
                    "followers_url": "https://api.github.com/users/virtualaidev/followers",
                    "following_url": "https://api.github.com/users/virtualaidev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/virtualaidev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/virtualaidev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/virtualaidev/subscriptions",
                    "organizations_url": "https://api.github.com/users/virtualaidev/orgs",
                    "repos_url": "https://api.github.com/users/virtualaidev/repos",
                    "events_url": "https://api.github.com/users/virtualaidev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/virtualaidev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-05-11T14:08:31Z",
                "updated_at": "2023-10-24T11:55:19Z",
                "closed_at": "2023-10-24T11:55:19Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nWe're using ML for vector search, currently the below sample request does not have equivalent when implementing it .NET.\r\n\r\n```\r\nPOST /_ml/trained_models/sentence-transformers__all-minilm-l12-v2/_infer\r\n{\r\n  \"docs\": {\r\n    \"text_field\": \"similar movies of resident evil\"\r\n  }\r\n}\r\n```\r\n\r\n**Describe the solution you'd like**\r\n```\r\nvar response = _client.MachineLearning.Infer(\r\n  \"sentence-transformers__all-minilm-l12-v2\",\r\n  new InferRequest <Document> {\r\n    Docs = new List <Document> {\r\n      new Document {\r\n        TextField = \"similar movies of resident evil\"\r\n      }\r\n    }\r\n  }\r\n);\r\n```\r\n\r\nIf we could have something like the above that would be a great help in using ML in .NET.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777063047",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7717#issuecomment-1777063047",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7717",
                "id": 1777063047,
                "node_id": "IC_kwDOAA5iFc5p69SH",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T11:55:19Z",
                "updated_at": "2023-10-24T11:55:19Z",
                "author_association": "MEMBER",
                "body": "I'm currently working on the code generator with the ultimate goal to bring back all missing endpoints and additionally support all new endpoints of 8.x.\r\n\r\nAs these code generator changes will allow me to pretty much generate all missing functionality in one go when it is done, I'm now closing all related feature request issues to clean up the issue tracker a little bit.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1777063047/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T11:55:20Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32800329832",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7970",
                "id": 1948919896,
                "node_id": "I_kwDOAA5iFc50KihY",
                "number": 7970,
                "title": "Use MultisearchBodyDescriptor with MultiSearchRequestDescriptor",
                "user": {
                    "login": "Tora-Bora",
                    "id": 3995168,
                    "node_id": "MDQ6VXNlcjM5OTUxNjg=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3995168?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Tora-Bora",
                    "html_url": "https://github.com/Tora-Bora",
                    "followers_url": "https://api.github.com/users/Tora-Bora/followers",
                    "following_url": "https://api.github.com/users/Tora-Bora/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Tora-Bora/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Tora-Bora/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Tora-Bora/subscriptions",
                    "organizations_url": "https://api.github.com/users/Tora-Bora/orgs",
                    "repos_url": "https://api.github.com/users/Tora-Bora/repos",
                    "events_url": "https://api.github.com/users/Tora-Bora/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Tora-Bora/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-18T06:12:13Z",
                "updated_at": "2023-10-24T11:05:37Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm trying to migrate our code from NEST to the new client. Unable to migrate the `MultiSearchAsync` using descriptors. The method accepts type `MultiSearchRequestDescriptor`, also I found the type `MultisearchBodyDescriptor` that I can use to build a search request. But seems like there is no way to use `MultisearchBodyDescriptor` at all.  \r\n\r\nThe `MultiSearchRequestDescriptor.AddSearch` accepts `SearchRequestItem` and there is no option to provide the `MultisearchBodyDescriptor` anyhow.\r\n\r\n**Describe the solution you'd like**\r\nAdd method to `MultiSearchRequestDescriptor.AddSearch` that accepts `MultisearchBodyDescriptor` parameter\r\n\r\n**Describe alternatives you've considered**\r\nWould be also great if we can to cast `SearchRequestDescriptor` to `MultisearchBodyDescriptor`\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776994829",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7970#issuecomment-1776994829",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7970",
                "id": 1776994829,
                "node_id": "IC_kwDOAA5iFc5p6soN",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T11:05:37Z",
                "updated_at": "2023-10-24T11:05:37Z",
                "author_association": "MEMBER",
                "body": "Improving usability of the multisearch endpoint is definitely on my list. The initializer based approach works for now, but I agree it might be useful to support descriptors here as well:\r\n\r\n```csharp\r\nvar multiSearchResponse = await _elasticsearchClient.MultiSearchAsync<Place>(r =>\r\n{\r\n    foreach (var fullTextQuery in fullTextQueries)\r\n    {\r\n        r.AddSearch(new SearchRequestItem(\r\n            new MultisearchHeader { Index = \"my-index\" },\r\n            new MultisearchBody { /*...*/ }));\r\n    }\r\n});\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776994829/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T11:05:38Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32800206866",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7754",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7754/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7754/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7754/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7754",
                "id": 1760215154,
                "node_id": "I_kwDOAA5iFc5o6sBy",
                "number": 7754,
                "title": "Make it possible to get the serializer options used to serialize documents",
                "user": {
                    "login": "erik-kallen",
                    "id": 688028,
                    "node_id": "MDQ6VXNlcjY4ODAyOA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/688028?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/erik-kallen",
                    "html_url": "https://github.com/erik-kallen",
                    "followers_url": "https://api.github.com/users/erik-kallen/followers",
                    "following_url": "https://api.github.com/users/erik-kallen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/erik-kallen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/erik-kallen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/erik-kallen/subscriptions",
                    "organizations_url": "https://api.github.com/users/erik-kallen/orgs",
                    "repos_url": "https://api.github.com/users/erik-kallen/repos",
                    "events_url": "https://api.github.com/users/erik-kallen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/erik-kallen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-06-16T08:56:04Z",
                "updated_at": "2023-10-24T11:00:28Z",
                "closed_at": "2023-10-24T11:00:28Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nSometimes we need to for example find the elastic field name that corresponds to a property. There are solutions to do this, but the nicest, non-duplicated way would be to ask the serializer that would actually be used for serializing the requests.\r\n\r\nAlso, if serializing requests (eg. for logs), the serializer needs to be set up correctly.\r\n\r\n**Describe the solution you'd like**\r\nThere is an internal property `SystemTextJsonSerializer.Options`. Making this property public would solve the problem.\r\n\r\n**Describe alternatives you've considered**\r\nFor example hacking around it by assuming that it uses a camel case naming strategy. Or private reflection. I don't like either of these alternatives particularly well.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7754/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7754/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T11:00:28Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32800180632",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7759",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7759/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7759/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7759/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7759",
                "id": 1765435294,
                "node_id": "I_kwDOAA5iFc5pOmee",
                "number": 7759,
                "title": "Does it support geographic coordinates filter?",
                "user": {
                    "login": "paymansh1992",
                    "id": 43530894,
                    "node_id": "MDQ6VXNlcjQzNTMwODk0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/43530894?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/paymansh1992",
                    "html_url": "https://github.com/paymansh1992",
                    "followers_url": "https://api.github.com/users/paymansh1992/followers",
                    "following_url": "https://api.github.com/users/paymansh1992/following{/other_user}",
                    "gists_url": "https://api.github.com/users/paymansh1992/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/paymansh1992/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/paymansh1992/subscriptions",
                    "organizations_url": "https://api.github.com/users/paymansh1992/orgs",
                    "repos_url": "https://api.github.com/users/paymansh1992/repos",
                    "events_url": "https://api.github.com/users/paymansh1992/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/paymansh1992/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1002602125,
                        "node_id": "MDU6TGFiZWwxMDAyNjAyMTI1",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Awaiting%20Response",
                        "name": "Awaiting Response",
                        "color": "d93f0b",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-06-20T13:39:56Z",
                "updated_at": "2023-10-24T10:59:23Z",
                "closed_at": "2023-10-24T10:59:23Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I want to use the GeoDistance like I use the Nest,\r\ndoes support it?\r\n\r\n\r\nNest sample:\r\n```ruby\r\nvar results = client.Search<MyDataType>(s => s\r\n.Filter(m => m.GeoDistance(\r\n  c => c.Location, \r\n  f => f.Distance(\"100 mi\").Location(40.7, -74.0)));\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7759/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7759/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T10:59:24Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32800177354",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7760",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7760/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7760/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7760/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7760",
                "id": 1769234708,
                "node_id": "I_kwDOAA5iFc5pdGEU",
                "number": 7760,
                "title": "Transform request for differences between two indexes",
                "user": {
                    "login": "momcina08",
                    "id": 136501776,
                    "node_id": "U_kgDOCCLaEA",
                    "avatar_url": "https://avatars.githubusercontent.com/u/136501776?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/momcina08",
                    "html_url": "https://github.com/momcina08",
                    "followers_url": "https://api.github.com/users/momcina08/followers",
                    "following_url": "https://api.github.com/users/momcina08/following{/other_user}",
                    "gists_url": "https://api.github.com/users/momcina08/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/momcina08/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/momcina08/subscriptions",
                    "organizations_url": "https://api.github.com/users/momcina08/orgs",
                    "repos_url": "https://api.github.com/users/momcina08/repos",
                    "events_url": "https://api.github.com/users/momcina08/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/momcina08/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 1002602125,
                        "node_id": "MDU6TGFiZWwxMDAyNjAyMTI1",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Awaiting%20Response",
                        "name": "Awaiting Response",
                        "color": "d93f0b",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-06-22T08:50:17Z",
                "updated_at": "2023-10-24T10:59:15Z",
                "closed_at": "2023-10-24T10:59:15Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Is it possible to run this query equivalent in c# for this nugget?\r\n`POST _transform/_preview\r\n{\r\n  \"id\" : \"index_compare\",\r\n  \"source\" : { \r\n    \"index\" : [\r\n      \"index1\",\r\n      \"index2\"\r\n    ],\r\n    \"query\" : {\r\n      \"match_all\" : { }\r\n    }\r\n  },\r\n  \"dest\" : { \r\n    \"index\" : \"compare\"\r\n  },\r\n  \"pivot\" : {\r\n    \"group_by\" : {\r\n      \"unique-id\" : {\r\n        \"terms\" : {\r\n          \"field\" : \"<unique-id-field>\" \r\n        }\r\n      }\r\n    },\r\n    \"aggregations\" : {\r\n      \"compare\" : { \r\n        \"scripted_metric\" : {\r\n          \"map_script\" : \"state.doc = new HashMap(params['_source'])\", \r\n          \"combine_script\" : \"return state\", \r\n          \"reduce_script\" : \"\"\" \r\n            if (states.size() != 2) {\r\n              return \"count_mismatch\"\r\n            }\r\n            if (states.get(0).equals(states.get(1))) {\r\n              return \"match\"\r\n            } else {\r\n              return \"mismatch\"\r\n            }\r\n            \"\"\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`\r\n\r\nIs there any way to leverage the ElasticClient to create something like this?\r\nI couldn't find anything inside the documentation so thats why im asking here. Thanks :)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7760/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7760/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T10:59:16Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798350269",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7877",
                "id": 1839824688,
                "node_id": "I_kwDOAA5iFc5tqX8w",
                "number": 7877,
                "title": "FilterAggregation is missing in the 8.x library",
                "user": {
                    "login": "rustunooldu",
                    "id": 11268047,
                    "node_id": "MDQ6VXNlcjExMjY4MDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11268047?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rustunooldu",
                    "html_url": "https://github.com/rustunooldu",
                    "followers_url": "https://api.github.com/users/rustunooldu/followers",
                    "following_url": "https://api.github.com/users/rustunooldu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rustunooldu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rustunooldu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rustunooldu/subscriptions",
                    "organizations_url": "https://api.github.com/users/rustunooldu/orgs",
                    "repos_url": "https://api.github.com/users/rustunooldu/repos",
                    "events_url": "https://api.github.com/users/rustunooldu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rustunooldu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-08-07T16:22:42Z",
                "updated_at": "2023-10-24T09:47:41Z",
                "closed_at": "2023-10-24T09:47:41Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\n```FilterAggregation``` was supported in NEST, but isn't generated for the 8.x version of the client.\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filter-aggregation.html\r\n\r\n**Describe the solution you'd like**\r\nThe multi-bucket version of this aggregation (```FiltersAggregation```) is already implemented and can be used to achieve the same result, however it would be nice to re-introduce the ```FilterAggregation``` functionality to avoid the extra steps and potential performance impact as well.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/reactions",
                    "total_count": 1,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 1,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:47:42Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798350107",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7877",
                "id": 1839824688,
                "node_id": "I_kwDOAA5iFc5tqX8w",
                "number": 7877,
                "title": "FilterAggregation is missing in the 8.x library",
                "user": {
                    "login": "rustunooldu",
                    "id": 11268047,
                    "node_id": "MDQ6VXNlcjExMjY4MDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11268047?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rustunooldu",
                    "html_url": "https://github.com/rustunooldu",
                    "followers_url": "https://api.github.com/users/rustunooldu/followers",
                    "following_url": "https://api.github.com/users/rustunooldu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rustunooldu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rustunooldu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rustunooldu/subscriptions",
                    "organizations_url": "https://api.github.com/users/rustunooldu/orgs",
                    "repos_url": "https://api.github.com/users/rustunooldu/repos",
                    "events_url": "https://api.github.com/users/rustunooldu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rustunooldu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-08-07T16:22:42Z",
                "updated_at": "2023-10-24T09:47:41Z",
                "closed_at": "2023-10-24T09:47:41Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\n```FilterAggregation``` was supported in NEST, but isn't generated for the 8.x version of the client.\r\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-filter-aggregation.html\r\n\r\n**Describe the solution you'd like**\r\nThe multi-bucket version of this aggregation (```FiltersAggregation```) is already implemented and can be used to achieve the same result, however it would be nice to re-introduce the ```FilterAggregation``` functionality to avoid the extra steps and potential performance impact as well.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/reactions",
                    "total_count": 1,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 1,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776881095",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7877#issuecomment-1776881095",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7877",
                "id": 1776881095,
                "node_id": "IC_kwDOAA5iFc5p6Q3H",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T09:47:41Z",
                "updated_at": "2023-10-24T09:47:41Z",
                "author_association": "MEMBER",
                "body": "Thanks for reporting! This will be back as soon as I finish my work on the code generator. I'm closing this issue for now.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776881095/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:47:41Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798309749",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7881",
                "id": 1841766299,
                "node_id": "I_kwDOAA5iFc5txx-b",
                "number": 7881,
                "title": "HTMLStrip processor",
                "user": {
                    "login": "rmalca",
                    "id": 3759745,
                    "node_id": "MDQ6VXNlcjM3NTk3NDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3759745?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rmalca",
                    "html_url": "https://github.com/rmalca",
                    "followers_url": "https://api.github.com/users/rmalca/followers",
                    "following_url": "https://api.github.com/users/rmalca/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rmalca/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rmalca/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rmalca/subscriptions",
                    "organizations_url": "https://api.github.com/users/rmalca/orgs",
                    "repos_url": "https://api.github.com/users/rmalca/repos",
                    "events_url": "https://api.github.com/users/rmalca/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rmalca/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-08-08T18:02:58Z",
                "updated_at": "2023-10-24T09:46:14Z",
                "closed_at": "2023-10-24T09:46:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nHello, I would like to request that the HTMLStrip processor be added to the ProcessorsDescriptor or some way that an undefined processor can be added in the PutPipeline method.\r\n\r\n**Additional context**\r\nReference: https://www.elastic.co/guide/en/elasticsearch/reference/current/htmlstrip-processor.html\r\n\r\n![image](https://github.com/elastic/elasticsearch-net/assets/3759745/9e3d2e3a-f06a-4f66-a831-58f1a84ff8f2)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:46:15Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798309572",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7881",
                "id": 1841766299,
                "node_id": "I_kwDOAA5iFc5txx-b",
                "number": 7881,
                "title": "HTMLStrip processor",
                "user": {
                    "login": "rmalca",
                    "id": 3759745,
                    "node_id": "MDQ6VXNlcjM3NTk3NDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3759745?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rmalca",
                    "html_url": "https://github.com/rmalca",
                    "followers_url": "https://api.github.com/users/rmalca/followers",
                    "following_url": "https://api.github.com/users/rmalca/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rmalca/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rmalca/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rmalca/subscriptions",
                    "organizations_url": "https://api.github.com/users/rmalca/orgs",
                    "repos_url": "https://api.github.com/users/rmalca/repos",
                    "events_url": "https://api.github.com/users/rmalca/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rmalca/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-08-08T18:02:58Z",
                "updated_at": "2023-10-24T09:46:14Z",
                "closed_at": "2023-10-24T09:46:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nHello, I would like to request that the HTMLStrip processor be added to the ProcessorsDescriptor or some way that an undefined processor can be added in the PutPipeline method.\r\n\r\n**Additional context**\r\nReference: https://www.elastic.co/guide/en/elasticsearch/reference/current/htmlstrip-processor.html\r\n\r\n![image](https://github.com/elastic/elasticsearch-net/assets/3759745/9e3d2e3a-f06a-4f66-a831-58f1a84ff8f2)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776878887",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7881#issuecomment-1776878887",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7881",
                "id": 1776878887,
                "node_id": "IC_kwDOAA5iFc5p6QUn",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T09:46:14Z",
                "updated_at": "2023-10-24T09:46:14Z",
                "author_association": "MEMBER",
                "body": "I've created an issue in the specification repository:\r\nhttps://github.com/elastic/elasticsearch-specification/issues/2231\r\n\r\nI'll close this one for now.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776878887/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:46:15Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798249756",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7895",
                "id": 1856663602,
                "node_id": "I_kwDOAA5iFc5uqnAy",
                "number": 7895,
                "title": "Update index settings API is missing",
                "user": {
                    "login": "TheFireCookie",
                    "id": 10741012,
                    "node_id": "MDQ6VXNlcjEwNzQxMDEy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10741012?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheFireCookie",
                    "html_url": "https://github.com/TheFireCookie",
                    "followers_url": "https://api.github.com/users/TheFireCookie/followers",
                    "following_url": "https://api.github.com/users/TheFireCookie/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheFireCookie/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheFireCookie/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheFireCookie/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheFireCookie/orgs",
                    "repos_url": "https://api.github.com/users/TheFireCookie/repos",
                    "events_url": "https://api.github.com/users/TheFireCookie/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheFireCookie/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-08-18T12:44:11Z",
                "updated_at": "2023-10-24T09:44:06Z",
                "closed_at": "2023-10-24T09:44:05Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:\r\n8.9.2\r\n\r\n**Elasticsearch version**:\r\n8.9.0\r\n\r\n**.NET runtime version**:\r\n7.0.10\r\n\r\n**Operating system version**:\r\nWindows 11\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nThe update settings API of the Index endpoint seems to be missing ( this one : https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-update-settings.html )\r\n\r\n**Steps to reproduce**:\r\nUse the client and try to find the update settings methods\r\n![image](https://github.com/elastic/elasticsearch-net/assets/10741012/eda03e50-a959-46e0-a290-b8a83b4163af)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:44:07Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798249546",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7895",
                "id": 1856663602,
                "node_id": "I_kwDOAA5iFc5uqnAy",
                "number": 7895,
                "title": "Update index settings API is missing",
                "user": {
                    "login": "TheFireCookie",
                    "id": 10741012,
                    "node_id": "MDQ6VXNlcjEwNzQxMDEy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10741012?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheFireCookie",
                    "html_url": "https://github.com/TheFireCookie",
                    "followers_url": "https://api.github.com/users/TheFireCookie/followers",
                    "following_url": "https://api.github.com/users/TheFireCookie/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheFireCookie/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheFireCookie/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheFireCookie/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheFireCookie/orgs",
                    "repos_url": "https://api.github.com/users/TheFireCookie/repos",
                    "events_url": "https://api.github.com/users/TheFireCookie/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheFireCookie/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94634855,
                        "node_id": "MDU6TGFiZWw5NDYzNDg1NQ==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/Feature",
                        "name": "Feature",
                        "color": "5319e7",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-08-18T12:44:11Z",
                "updated_at": "2023-10-24T09:44:06Z",
                "closed_at": "2023-10-24T09:44:05Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:\r\n8.9.2\r\n\r\n**Elasticsearch version**:\r\n8.9.0\r\n\r\n**.NET runtime version**:\r\n7.0.10\r\n\r\n**Operating system version**:\r\nWindows 11\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nThe update settings API of the Index endpoint seems to be missing ( this one : https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-update-settings.html )\r\n\r\n**Steps to reproduce**:\r\nUse the client and try to find the update settings methods\r\n![image](https://github.com/elastic/elasticsearch-net/assets/10741012/eda03e50-a959-46e0-a290-b8a83b4163af)",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776875412",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7895#issuecomment-1776875412",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7895",
                "id": 1776875412,
                "node_id": "IC_kwDOAA5iFc5p6PeU",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T09:44:06Z",
                "updated_at": "2023-10-24T09:44:06Z",
                "author_association": "MEMBER",
                "body": "FYI: I'm closing this issue as all of the missing endpoints will be reimplemented anyways as soon as I've finished my work on the code generator.",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776875412/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:44:06Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798193340",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7912",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7912/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7912/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7912/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7912",
                "id": 1869537211,
                "node_id": "I_kwDOAA5iFc5vbt-7",
                "number": 7912,
                "title": "Search response - deserialization of numbers (int, double)",
                "user": {
                    "login": "zsonglorman",
                    "id": 19626247,
                    "node_id": "MDQ6VXNlcjE5NjI2MjQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19626247?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/zsonglorman",
                    "html_url": "https://github.com/zsonglorman",
                    "followers_url": "https://api.github.com/users/zsonglorman/followers",
                    "following_url": "https://api.github.com/users/zsonglorman/following{/other_user}",
                    "gists_url": "https://api.github.com/users/zsonglorman/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/zsonglorman/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/zsonglorman/subscriptions",
                    "organizations_url": "https://api.github.com/users/zsonglorman/orgs",
                    "repos_url": "https://api.github.com/users/zsonglorman/repos",
                    "events_url": "https://api.github.com/users/zsonglorman/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/zsonglorman/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2688345573,
                        "node_id": "MDU6TGFiZWwyNjg4MzQ1NTcz",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/question",
                        "name": "question",
                        "color": "C948BB",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-08-28T11:06:03Z",
                "updated_at": "2023-10-24T09:42:01Z",
                "closed_at": "2023-10-24T09:42:01Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**: 8.9.0\r\n\r\n**Elasticsearch version**: 8.8.1\r\n\r\n**.NET runtime version**: 6.0\r\n\r\n**Operating system version**: Windows 10\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\nNumber data types in search response hits source are lost (whether it is a double, int, etc.)\r\n\r\n**Steps to reproduce**:\r\n 1. Create index with the following mappings:\r\n \r\n```\r\n\"category\": {\r\n  \"type\": \"keyword\"\r\n},\r\n\"availabilityValue\": {\r\n  \"type\": \"integer\"\r\n},\r\n\"dimension\": {\r\n  \"type\": \"double\"\r\n}\r\n```\r\n\r\n 2. Upload some documents\r\n 3. Execute search request: `var result = client.SearchAsync<Dictionary<string, object>>(request);`\r\n 4. \r\n\r\nIn the older NEST client, the response hits source contained all fields in their respective data types, so it was easy to use them i.e.:\r\n\r\nresult.Hits.First().Source[\"category\"].GetType().Name -> String\r\nresult.Hits.First().Source[\"availabilityValue\"].GetType().Name -> **Int32**\r\nresult.Hits.First().Source[\"dimension\"].GetType().Name -> **Double**\r\n\r\nHowever, in the new Elastic.Clients.Elasticsearch client, these hit sources are JsonElements, where type of number is lost:\r\nresult.Hits.First().Source[\"category\"] -> ValueKind = String\r\nresult.Hits.First().Source[\"availabilityValue\"] -> **ValueKind = Number**\r\nresult.Hits.First().Source[\"dimension\"] -> **ValueKind = Number**\r\n\r\nFor the 2 numbers, the information whether it was originally a double or int is lost, so we are unable to decide whether to call GetInt32 or GetDouble on the json element to get its value.\r\n\r\nI'm not sure whether it's a bug, or there's a solution to our problem that we are not aware of.\r\nThank you in advance!\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7912/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7912/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:42:01Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798161102",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7922",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7922/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7922/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7922/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7922",
                "id": 1886996974,
                "node_id": "I_kwDOAA5iFc5weUnu",
                "number": 7922,
                "title": "How to Use Completion Suggester in Elasticsearch8",
                "user": {
                    "login": "ynanech",
                    "id": 20282409,
                    "node_id": "MDQ6VXNlcjIwMjgyNDA5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/20282409?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ynanech",
                    "html_url": "https://github.com/ynanech",
                    "followers_url": "https://api.github.com/users/ynanech/followers",
                    "following_url": "https://api.github.com/users/ynanech/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ynanech/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ynanech/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ynanech/subscriptions",
                    "organizations_url": "https://api.github.com/users/ynanech/orgs",
                    "repos_url": "https://api.github.com/users/ynanech/repos",
                    "events_url": "https://api.github.com/users/ynanech/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ynanech/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 94632697,
                        "node_id": "MDU6TGFiZWw5NDYzMjY5Nw==",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/bug",
                        "name": "bug",
                        "color": "e11d21",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 3949770730,
                        "node_id": "LA_kwDOAA5iFc7rbLfq",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/8.x",
                        "name": "8.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to  8.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-09-08T06:07:45Z",
                "updated_at": "2023-10-24T09:40:48Z",
                "closed_at": "2023-10-24T09:40:48Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Elastic.Clients.Elasticsearch version**:8.9.2\r\n\r\n**Elasticsearch version**:8.7.0\r\n\r\n**.NET runtime version**:net7.0\r\n\r\n**Operating system version**:win11\r\n\r\n**Description of the problem including expected versus actual behavior**:\r\n\r\n**Question 1.**\r\n\r\n When creating a suggestion field and setting Contexts, the following methods do not take effect\uff1a\r\n\r\n` \r\n\r\n.Completion(t => t.Suggestions, //Settings not effective\r\nt => t.Analyzer(\"suggest_analyzer\")\r\n                                                .Contexts(c => c\r\n                                                    .Type(\"CATEGORY\")\r\n                                                    .Name(\"merchantTab\")\r\n                                                    .Path(cp => cp.MerchantId.Suffix(\"tab\"))\r\n                                                )\r\n                                            )\r\n\r\n`\r\n![image](https://github.com/elastic/elasticsearch-net/assets/20282409/6d59aabf-f61e-41e3-aa0c-6a771593d06d)\r\n\r\n\r\nThe following methods are effective\uff1a\r\n\r\n`\r\n                        .Completion(t => t.Suggestions, //Setting is valid\r\n                        t => t.Analyzer(\"suggest_analyzer\")\r\n                                                                         .Contexts(new SuggestContext[] {\r\n                                                                             new SuggestContext\r\n                                                                             {\r\n                                                                                 Type = \"CATEGORY\",\r\n                                                                                 Name = $\"merchantTab\",\r\n                                                                                 Path = new Field(\"merchantId.tab\")\r\n                                                                             }\r\n                                                                         })\r\n                                                                      )\r\n\r\n`\r\n\r\n![image](https://github.com/elastic/elasticsearch-net/assets/20282409/3327cb25-6ebc-4782-935b-3fde9ee43e52)\r\n\r\n\r\n**Question 2.** \r\n\r\nSuggest doesn't work and won't get any results,But I used the same data, and there were results in Elasticsearch 7.17.5\uff1a\r\n\r\n`\r\n\r\n        public async Task<object> Suggest(string input)\r\n        {\r\n            var suggester = FieldSuggester.Completion(new CompletionSuggester\r\n            {\r\n                Contexts = new Dictionary<Field, ICollection<CompletionContext>> {\r\n                       {\"merchantTab\", new List<CompletionContext>{ new CompletionContext {\r\n                        Context=new Context (\"\"),\r\n                        Prefix=true,\r\n                       } } }\r\n                     },\r\n                Fuzzy = new SuggestFuzziness\r\n                {\r\n                    Fuzziness = new Fuzziness(\"auto\"),\r\n                    MinLength = 1,\r\n                    PrefixLength = 2,\r\n                    Transpositions = true,\r\n                    UnicodeAware = false\r\n                },\r\n                Field = \"suggestions\",\r\n                Size = 10,\r\n\r\n                SkipDuplicates = true,\r\n            });\r\n            suggester.Prefix = input;\r\n            //suggester.Text = input;\r\n\r\n            string name = \"product-suggest\";\r\n            var result = await _elasticClient.SearchAsync<ProductInfoDoc8>(m => m\r\n                               .Index(\"frame.product8x\")\r\n                               .Suggest(new Suggester\r\n                               {\r\n                                   Suggesters = new Dictionary<string, FieldSuggester> {\r\n                                       { name, suggester}\r\n                                   }\r\n                               }\r\n                            ));\r\n            return result.Fields.FirstOrDefault();\r\n        }\r\n\r\n`\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7922/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7922/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:40:49Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798062103",
        "type": "IssuesEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7954",
                "id": 1917680201,
                "node_id": "I_kwDOAA5iFc5yTXpJ",
                "number": 7954,
                "title": "UnexpectedElasticsearchClientException while logging with Nlog.Targets.ElasticSearch (reopen of #5702)",
                "user": {
                    "login": "dmitryzarubin",
                    "id": 31827085,
                    "node_id": "MDQ6VXNlcjMxODI3MDg1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/31827085?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dmitryzarubin",
                    "html_url": "https://github.com/dmitryzarubin",
                    "followers_url": "https://api.github.com/users/dmitryzarubin/followers",
                    "following_url": "https://api.github.com/users/dmitryzarubin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dmitryzarubin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dmitryzarubin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dmitryzarubin/subscriptions",
                    "organizations_url": "https://api.github.com/users/dmitryzarubin/orgs",
                    "repos_url": "https://api.github.com/users/dmitryzarubin/repos",
                    "events_url": "https://api.github.com/users/dmitryzarubin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dmitryzarubin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1901669845,
                        "node_id": "MDU6TGFiZWwxOTAxNjY5ODQ1",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/7.x",
                        "name": "7.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to a 7.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-09-28T14:32:13Z",
                "updated_at": "2023-10-24T09:37:06Z",
                "closed_at": "2023-10-24T09:37:06Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**NEST/Elasticsearch.Net version**: 7.17.5\r\n\r\n**Elasticsearch version**: doesn't matter\r\n\r\n**.NET runtime version**:  7.0.8\r\n\r\n**Operating system version**: Windows 11\r\n\r\n\r\n**Stack trace:**\r\n```\r\nException: Elasticsearch.Net.UnexpectedElasticsearchClientException: Failed to serialize anonymous type: System.RuntimeType.\r\nThe type defines the following properties:\r\n'IsCollectible' of type System.Boolean\r\n'DeclaringMethod' of type System.Reflection.MethodBase\r\n'FullName' of type System.String\r\n.....\r\n'IsSerializable' of type System.Boolean\r\n'IsVisible' of type System.Boolean\r\n'CustomAttributes' of type System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]\r\n ---> Elasticsearch.Net.Utf8Json.Resolvers.AnonymousTypeSerializationException: Failed to serialize anonymous type: System.RuntimeType.\r\nThe type defines the following properties:\r\n'IsCollectible' of type System.Boolean\r\n'DeclaringMethod' of type System.Reflection.MethodBase\r\n'FullName' of type System.String\r\n'AssemblyQualifiedName' of type System.String\r\n'Namespace' of type System.String\r\n.......\r\n'TypeInitializer' of type System.Reflection.ConstructorInfo\r\n'IsSerializable' of type System.Boolean\r\n'IsVisible' of type System.Boolean\r\n'CustomAttributes' of type System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]\r\n ---> System.InvalidOperationException: Method may only be called on a Type for which Type.IsGenericParameter is true.\r\n   at System.RuntimeType.get_DeclaringMethod()\r\n   at Serialize(Byte[][], Object[], JsonWriter&, RuntimeType, IJsonFormatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Resolvers.DynamicMethodAnonymousFormatter`1.Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver)\r\n   --- End of inner exception stack trace ---\r\n   at Elasticsearch.Net.Utf8Json.Resolvers.DynamicMethodAnonymousFormatter`1.Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Formatters.DynamicObjectTypeFallbackFormatter.Serialize(JsonWriter& writer, Object value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`5.Serialize(JsonWriter& writer, TDictionary value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Formatters.DynamicObjectTypeFallbackFormatter.Serialize(JsonWriter& writer, Object value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.JsonSerializer.SerializeUnsafe[T](T value, IJsonFormatterResolver resolver)\r\n   at Elasticsearch.Net.Utf8Json.JsonSerializer.Serialize[T](Stream stream, T value, IJsonFormatterResolver resolver)\r\n   at Elasticsearch.Net.DiagnosticsSerializerProxy.Serialize[T](T data, Stream stream, SerializationFormatting formatting)\r\n   at Elasticsearch.Net.PostData`1.Write(Stream writableStream, IConnectionConfigurationValues settings)\r\n   at Elasticsearch.Net.HttpConnection.SetContent(HttpRequestMessage message, RequestData requestData)\r\n   at Elasticsearch.Net.HttpConnection.Request[TResponse](RequestData requestData)\r\n   at Elasticsearch.Net.RequestPipeline.CallElasticsearch[TResponse](RequestData requestData)\r\n   at Elasticsearch.Net.Transport`1.Request[TResponse](HttpMethod method, String path, PostData data, IRequestParameters requestParameters)\r\n   --- End of inner exception stack trace ---\r\n   at Elasticsearch.Net.Transport`1.Request[TResponse](HttpMethod method, String path, PostData data, IRequestParameters requestParameters)\r\n   at Elasticsearch.Net.ElasticLowLevelClient.Bulk[TResponse](PostData body, BulkRequestParameters requestParameters)\r\n   at Common.Log.ElasticSearchTarget.SendBatch(ICollection`1 logEvents)\r\n```\r\n\r\n\r\n\r\n**NLog configuration:**\r\n```\r\n\"Nlog\": {\r\n\"throwConfigExceptions\": true,\r\n\"variables\": {\r\n  \"serverAddress\": \"https://some-elastic-server:9260\",\r\n  \"indexName\": \"some-index\",\r\n  \"serviceName\": \"SomeService\",\r\n  \"login\": \"write\",\r\n  \"password\": \"PWD\"\r\n},\r\n\"targets\": {\r\n  \"async\": true,\r\n  \"elastic\": {\r\n\t\"type\": \"BufferingWrapper\",\r\n\t\"flushTimeout\": 5000,\r\n\t\"bufferSize\": 100,\r\n\t\"target\": {\r\n\t  \"type\": \"ElasticSearch\",\r\n\t  \"layout\": \"${message}\",\r\n\t  \"includeAllProperties\": true,\r\n\t  \"uri\": \"${serverAddress}\",\r\n\t  \"disablePing\": true,\r\n\t  \"index\": \"${indexName}\",\r\n\t  \"serviceName\": \"${serviceName}\",\r\n\t  \"requireAuth\": true,\r\n\t  \"username\": \"${login}\",\r\n\t  \"password\": \"${password}\",\r\n\t  \"requestTimeout\": 1000\r\n\t}\r\n  }\r\n},\r\n\"rules\": [\r\n  {\r\n\t\"logger\": \"*\",\r\n\t\"minLevel\": \"Debug\",\r\n\t\"writeTo\": \"elastic\"\r\n  }\r\n]\r\n}\r\n```\r\n\r\n\r\nThe cause of the exception is that someone is using a complex object in structural logging and that object might throw an exception from one of its properties.\r\n\r\n\r\nExample from ASP.Net MVC (MvcCoreLoggerExtensions class):\r\n```\r\n[LoggerMessage(45, LogLevel.Debug, \"Done attempting to bind parameter '{ParameterName}' of type '{ModelType}'.\", EventName = \"DoneAttemptingToBindParameterModel\", SkipEnabledCheck = true)]\r\nprivate static partial void DoneAttemptingToBindParameterModel(ILogger logger, string? parameterName, Type modelType);\r\n\r\n```\r\n\r\n\r\nAs you can see, the second parameter of structured logging is \"modelType\" of the Type class. And when Nlog + Elasticsearch.Net tries to send the message and its properties to Elastic, it tries to serialize all properties of the \"modelType\" parameter, using the reflection (I guess). But the Type class can throw exceptions from some of its properties (for example, GenericParameterAttributes property throws InvalidOperationException if it's not a generic class). So Elasticsearch.Net.Utf8Json throws an UnexpectedElasticsearchClientException and the entire batch of log messages is lost.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:37:07Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    },
    {
        "id": "32798061922",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 8585557,
            "login": "flobernd",
            "display_login": "flobernd",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flobernd",
            "avatar_url": "https://avatars.githubusercontent.com/u/8585557?"
        },
        "repo": {
            "id": 942613,
            "name": "elastic/elasticsearch-net",
            "url": "https://api.github.com/repos/elastic/elasticsearch-net"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954",
                "repository_url": "https://api.github.com/repos/elastic/elasticsearch-net",
                "labels_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/labels{/name}",
                "comments_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/comments",
                "events_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/events",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7954",
                "id": 1917680201,
                "node_id": "I_kwDOAA5iFc5yTXpJ",
                "number": 7954,
                "title": "UnexpectedElasticsearchClientException while logging with Nlog.Targets.ElasticSearch (reopen of #5702)",
                "user": {
                    "login": "dmitryzarubin",
                    "id": 31827085,
                    "node_id": "MDQ6VXNlcjMxODI3MDg1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/31827085?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dmitryzarubin",
                    "html_url": "https://github.com/dmitryzarubin",
                    "followers_url": "https://api.github.com/users/dmitryzarubin/followers",
                    "following_url": "https://api.github.com/users/dmitryzarubin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dmitryzarubin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dmitryzarubin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dmitryzarubin/subscriptions",
                    "organizations_url": "https://api.github.com/users/dmitryzarubin/orgs",
                    "repos_url": "https://api.github.com/users/dmitryzarubin/repos",
                    "events_url": "https://api.github.com/users/dmitryzarubin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dmitryzarubin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1901669845,
                        "node_id": "MDU6TGFiZWwxOTAxNjY5ODQ1",
                        "url": "https://api.github.com/repos/elastic/elasticsearch-net/labels/7.x",
                        "name": "7.x",
                        "color": "b2ffd7",
                        "default": false,
                        "description": "Relates to a 7.x client version"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-09-28T14:32:13Z",
                "updated_at": "2023-10-24T09:37:06Z",
                "closed_at": "2023-10-24T09:37:06Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**NEST/Elasticsearch.Net version**: 7.17.5\r\n\r\n**Elasticsearch version**: doesn't matter\r\n\r\n**.NET runtime version**:  7.0.8\r\n\r\n**Operating system version**: Windows 11\r\n\r\n\r\n**Stack trace:**\r\n```\r\nException: Elasticsearch.Net.UnexpectedElasticsearchClientException: Failed to serialize anonymous type: System.RuntimeType.\r\nThe type defines the following properties:\r\n'IsCollectible' of type System.Boolean\r\n'DeclaringMethod' of type System.Reflection.MethodBase\r\n'FullName' of type System.String\r\n.....\r\n'IsSerializable' of type System.Boolean\r\n'IsVisible' of type System.Boolean\r\n'CustomAttributes' of type System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]\r\n ---> Elasticsearch.Net.Utf8Json.Resolvers.AnonymousTypeSerializationException: Failed to serialize anonymous type: System.RuntimeType.\r\nThe type defines the following properties:\r\n'IsCollectible' of type System.Boolean\r\n'DeclaringMethod' of type System.Reflection.MethodBase\r\n'FullName' of type System.String\r\n'AssemblyQualifiedName' of type System.String\r\n'Namespace' of type System.String\r\n.......\r\n'TypeInitializer' of type System.Reflection.ConstructorInfo\r\n'IsSerializable' of type System.Boolean\r\n'IsVisible' of type System.Boolean\r\n'CustomAttributes' of type System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]\r\n ---> System.InvalidOperationException: Method may only be called on a Type for which Type.IsGenericParameter is true.\r\n   at System.RuntimeType.get_DeclaringMethod()\r\n   at Serialize(Byte[][], Object[], JsonWriter&, RuntimeType, IJsonFormatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Resolvers.DynamicMethodAnonymousFormatter`1.Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver)\r\n   --- End of inner exception stack trace ---\r\n   at Elasticsearch.Net.Utf8Json.Resolvers.DynamicMethodAnonymousFormatter`1.Serialize(JsonWriter& writer, T value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Formatters.DynamicObjectTypeFallbackFormatter.Serialize(JsonWriter& writer, Object value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Formatters.DictionaryFormatterBase`5.Serialize(JsonWriter& writer, TDictionary value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.Formatters.DynamicObjectTypeFallbackFormatter.Serialize(JsonWriter& writer, Object value, IJsonFormatterResolver formatterResolver)\r\n   at Elasticsearch.Net.Utf8Json.JsonSerializer.SerializeUnsafe[T](T value, IJsonFormatterResolver resolver)\r\n   at Elasticsearch.Net.Utf8Json.JsonSerializer.Serialize[T](Stream stream, T value, IJsonFormatterResolver resolver)\r\n   at Elasticsearch.Net.DiagnosticsSerializerProxy.Serialize[T](T data, Stream stream, SerializationFormatting formatting)\r\n   at Elasticsearch.Net.PostData`1.Write(Stream writableStream, IConnectionConfigurationValues settings)\r\n   at Elasticsearch.Net.HttpConnection.SetContent(HttpRequestMessage message, RequestData requestData)\r\n   at Elasticsearch.Net.HttpConnection.Request[TResponse](RequestData requestData)\r\n   at Elasticsearch.Net.RequestPipeline.CallElasticsearch[TResponse](RequestData requestData)\r\n   at Elasticsearch.Net.Transport`1.Request[TResponse](HttpMethod method, String path, PostData data, IRequestParameters requestParameters)\r\n   --- End of inner exception stack trace ---\r\n   at Elasticsearch.Net.Transport`1.Request[TResponse](HttpMethod method, String path, PostData data, IRequestParameters requestParameters)\r\n   at Elasticsearch.Net.ElasticLowLevelClient.Bulk[TResponse](PostData body, BulkRequestParameters requestParameters)\r\n   at Common.Log.ElasticSearchTarget.SendBatch(ICollection`1 logEvents)\r\n```\r\n\r\n\r\n\r\n**NLog configuration:**\r\n```\r\n\"Nlog\": {\r\n\"throwConfigExceptions\": true,\r\n\"variables\": {\r\n  \"serverAddress\": \"https://some-elastic-server:9260\",\r\n  \"indexName\": \"some-index\",\r\n  \"serviceName\": \"SomeService\",\r\n  \"login\": \"write\",\r\n  \"password\": \"PWD\"\r\n},\r\n\"targets\": {\r\n  \"async\": true,\r\n  \"elastic\": {\r\n\t\"type\": \"BufferingWrapper\",\r\n\t\"flushTimeout\": 5000,\r\n\t\"bufferSize\": 100,\r\n\t\"target\": {\r\n\t  \"type\": \"ElasticSearch\",\r\n\t  \"layout\": \"${message}\",\r\n\t  \"includeAllProperties\": true,\r\n\t  \"uri\": \"${serverAddress}\",\r\n\t  \"disablePing\": true,\r\n\t  \"index\": \"${indexName}\",\r\n\t  \"serviceName\": \"${serviceName}\",\r\n\t  \"requireAuth\": true,\r\n\t  \"username\": \"${login}\",\r\n\t  \"password\": \"${password}\",\r\n\t  \"requestTimeout\": 1000\r\n\t}\r\n  }\r\n},\r\n\"rules\": [\r\n  {\r\n\t\"logger\": \"*\",\r\n\t\"minLevel\": \"Debug\",\r\n\t\"writeTo\": \"elastic\"\r\n  }\r\n]\r\n}\r\n```\r\n\r\n\r\nThe cause of the exception is that someone is using a complex object in structural logging and that object might throw an exception from one of its properties.\r\n\r\n\r\nExample from ASP.Net MVC (MvcCoreLoggerExtensions class):\r\n```\r\n[LoggerMessage(45, LogLevel.Debug, \"Done attempting to bind parameter '{ParameterName}' of type '{ModelType}'.\", EventName = \"DoneAttemptingToBindParameterModel\", SkipEnabledCheck = true)]\r\nprivate static partial void DoneAttemptingToBindParameterModel(ILogger logger, string? parameterName, Type modelType);\r\n\r\n```\r\n\r\n\r\nAs you can see, the second parameter of structured logging is \"modelType\" of the Type class. And when Nlog + Elasticsearch.Net tries to send the message and its properties to Elastic, it tries to serialize all properties of the \"modelType\" parameter, using the reflection (I guess). But the Type class can throw exceptions from some of its properties (for example, GenericParameterAttributes property throws InvalidOperationException if it's not a generic class). So Elasticsearch.Net.Utf8Json throws an UnexpectedElasticsearchClientException and the entire batch of log messages is lost.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776864741",
                "html_url": "https://github.com/elastic/elasticsearch-net/issues/7954#issuecomment-1776864741",
                "issue_url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/7954",
                "id": 1776864741,
                "node_id": "IC_kwDOAA5iFc5p6M3l",
                "user": {
                    "login": "flobernd",
                    "id": 8585557,
                    "node_id": "MDQ6VXNlcjg1ODU1NTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8585557?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flobernd",
                    "html_url": "https://github.com/flobernd",
                    "followers_url": "https://api.github.com/users/flobernd/followers",
                    "following_url": "https://api.github.com/users/flobernd/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flobernd/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flobernd/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flobernd/subscriptions",
                    "organizations_url": "https://api.github.com/users/flobernd/orgs",
                    "repos_url": "https://api.github.com/users/flobernd/repos",
                    "events_url": "https://api.github.com/users/flobernd/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flobernd/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T09:37:06Z",
                "updated_at": "2023-10-24T09:37:06Z",
                "author_association": "MEMBER",
                "body": "Hi, thanks for doing the investigation work, but that does not seem like something that should be fixed on our side \ud83d\ude42 ",
                "reactions": {
                    "url": "https://api.github.com/repos/elastic/elasticsearch-net/issues/comments/1776864741/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:37:07Z",
        "org": {
            "id": 6764390,
            "login": "elastic",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/elastic",
            "avatar_url": "https://avatars.githubusercontent.com/u/6764390?"
        }
    }
]