[
    {
        "id": "32887561648",
        "type": "WatchEvent",
        "actor": {
            "id": 148535764,
            "login": "YujieFeng1",
            "display_login": "YujieFeng1",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YujieFeng1",
            "avatar_url": "https://avatars.githubusercontent.com/u/148535764?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T03:57:40Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32783312219",
        "type": "WatchEvent",
        "actor": {
            "id": 5157213,
            "login": "Lossoh",
            "display_login": "Lossoh",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lossoh",
            "avatar_url": "https://avatars.githubusercontent.com/u/5157213?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-23T19:50:19Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32779515695",
        "type": "WatchEvent",
        "actor": {
            "id": 31676903,
            "login": "kenjihiraoka",
            "display_login": "kenjihiraoka",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kenjihiraoka",
            "avatar_url": "https://avatars.githubusercontent.com/u/31676903?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-23T17:16:34Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773209216",
        "type": "DeleteEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "ref": "pyup-scheduled-update-2023-10-16",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-23T13:49:15Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773208351",
        "type": "PullRequestEvent",
        "actor": {
            "id": 16239342,
            "login": "pyup-bot",
            "display_login": "pyup-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pyup-bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/16239342?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "closed",
            "number": 726,
            "pull_request": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726",
                "id": 1558646245,
                "node_id": "PR_kwDOB21qNs5c5w3l",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726",
                "diff_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726.diff",
                "patch_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726.patch",
                "issue_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726",
                "number": 726,
                "state": "closed",
                "locked": false,
                "title": "Scheduled weekly dependency update for week 42",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\n\n\n\n\n### Update [urllib3](https://pypi.org/project/urllib3) from **1.26.17** to **2.0.6**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 2.0.6\n   ```\n   ==================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ==================\n\n- Allowed pyOpenSSL third-party module without any deprecation warning. (`3126 &lt;https://github.com/urllib3/urllib3/issues/3126&gt;`__)\n- Fixed default ``blocksize`` of ``HTTPConnection`` classes to match high-level classes. Previously was 8KiB, now 16KiB. (`3066 &lt;https://github.com/urllib3/urllib3/issues/3066&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ==================\n\n- Added support for union operators to ``HTTPHeaderDict`` (`2254 &lt;https://github.com/urllib3/urllib3/issues/2254&gt;`__)\n- Added ``BaseHTTPResponse`` to ``urllib3.__all__`` (`3078 &lt;https://github.com/urllib3/urllib3/issues/3078&gt;`__)\n- Fixed ``urllib3.connection.HTTPConnection`` to raise the ``http.client.connect`` audit event to have the same behavior as the standard library HTTP client (`2757 &lt;https://github.com/urllib3/urllib3/issues/2757&gt;`__)\n- Relied on the standard library for checking hostnames in supported PyPy releases (`3087 &lt;https://github.com/urllib3/urllib3/issues/3087&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ==================\n\n- Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (`3020 &lt;https://github.com/urllib3/urllib3/issues/3020&gt;`__)\n- Deprecated URLs which don&#x27;t have an explicit scheme (`2950 &lt;https://github.com/urllib3/urllib3/pull/2950&gt;`_)\n- Fixed response decoding with Zstandard when compressed data is made of several frames. (`3008 &lt;https://github.com/urllib3/urllib3/issues/3008&gt;`__)\n- Fixed ``assert_hostname=False`` to correctly skip hostname check. (`3051 &lt;https://github.com/urllib3/urllib3/issues/3051&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ==================\n\n- Fixed ``HTTPResponse.stream()`` to continue yielding bytes if buffered decompressed data\n  was still available to be read even if the underlying socket is closed. This prevents\n  a compressed response from being truncated. (`3009 &lt;https://github.com/urllib3/urllib3/issues/3009&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ==================\n\n- Fixed a socket leak when fingerprint or hostname verifications fail. (`2991 &lt;https://github.com/urllib3/urllib3/issues/2991&gt;`__)\n- Fixed an error when ``HTTPResponse.read(0)`` was the first ``read`` call or when the internal response body buffer was otherwise empty. (`2998 &lt;https://github.com/urllib3/urllib3/issues/2998&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ==================\n\nRead the `v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;`__ for help upgrading to the latest version of urllib3.\n\nRemoved\n-------\n\n* Removed support for Python 2.7, 3.5, and 3.6 (`883 &lt;https://github.com/urllib3/urllib3/issues/883&gt;`__, `#2336 &lt;https://github.com/urllib3/urllib3/issues/2336&gt;`__).\n* Removed fallback on certificate ``commonName`` in ``match_hostname()`` function.\n  This behavior was deprecated in May 2000 in RFC 2818. Instead only ``subjectAltName``\n  is used to verify the hostname by default. To enable verifying the hostname against\n  ``commonName`` use ``SSLContext.hostname_checks_common_name = True`` (`2113 &lt;https://github.com/urllib3/urllib3/issues/2113&gt;`__).\n* Removed support for Python with an ``ssl`` module compiled with LibreSSL, CiscoSSL,\n  wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed support for OpenSSL versions earlier than 1.1.1 or that don&#x27;t have SNI support.\n  When an incompatible OpenSSL version is detected an ``ImportError`` is raised (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the list of default ciphers for OpenSSL 1.1.1+ and SecureTransport as their own defaults are already secure (`2082 &lt;https://github.com/urllib3/urllib3/issues/2082&gt;`__).\n* Removed ``urllib3.contrib.appengine.AppEngineManager`` and support for Google App Engine Standard Environment (`2044 &lt;https://github.com/urllib3/urllib3/issues/2044&gt;`__).\n* Removed deprecated ``Retry`` options ``method_whitelist``, ``DEFAULT_REDIRECT_HEADERS_BLACKLIST`` (`2086 &lt;https://github.com/urllib3/urllib3/issues/2086&gt;`__).\n* Removed ``urllib3.HTTPResponse.from_httplib`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Removed default value of ``None`` for the ``request_context`` parameter of ``urllib3.PoolManager.connection_from_pool_key``. This change should have no effect on users as the default value of ``None`` was an invalid option and was never used (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Removed the ``urllib3.request`` module. ``urllib3.request.RequestMethods`` has been made a private API.\n  This change was made to ensure that ``from urllib3 import request`` imported the top-level ``request()``\n  function instead of the ``urllib3.request`` module (`2269 &lt;https://github.com/urllib3/urllib3/issues/2269&gt;`__).\n* Removed support for SSLv3.0 from the ``urllib3.contrib.pyopenssl`` even when support is available from the compiled OpenSSL library (`2233 &lt;https://github.com/urllib3/urllib3/issues/2233&gt;`__).\n* Removed the deprecated ``urllib3.contrib.ntlmpool`` module (`2339 &lt;https://github.com/urllib3/urllib3/issues/2339&gt;`__).\n* Removed ``DEFAULT_CIPHERS``, ``HAS_SNI``, ``USE_DEFAULT_SSLCONTEXT_CIPHERS``, from the private module ``urllib3.util.ssl_`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed ``urllib3.exceptions.SNIMissingWarning`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the ``_prepare_conn`` method from ``HTTPConnectionPool``. Previously this was only used to call ``HTTPSConnection.set_cert()`` by ``HTTPSConnectionPool`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed ``tls_in_tls_required`` property from ``HTTPSConnection``. This is now determined from the ``scheme`` parameter in ``HTTPConnection.set_tunnel()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed the ``strict`` parameter/attribute from ``HTTPConnection``, ``HTTPSConnection``, ``HTTPConnectionPool``, ``HTTPSConnectionPool``, and ``HTTPResponse`` (`2064 &lt;https://github.com/urllib3/urllib3/issues/2064&gt;`__).\n\nDeprecated\n----------\n\n* Deprecated ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` which will be removed in urllib3 v2.1.0. Instead use ``HTTPResponse.headers`` and ``HTTPResponse.headers.get(name, default)``. (`1543 &lt;https://github.com/urllib3/urllib3/issues/1543&gt;`__, `#2814 &lt;https://github.com/urllib3/urllib3/issues/2814&gt;`__).\n* Deprecated ``urllib3.contrib.pyopenssl`` module which will be removed in urllib3 v2.1.0 (`2691 &lt;https://github.com/urllib3/urllib3/issues/2691&gt;`__).\n* Deprecated ``urllib3.contrib.securetransport`` module which will be removed in urllib3 v2.1.0 (`2692 &lt;https://github.com/urllib3/urllib3/issues/2692&gt;`__).\n* Deprecated ``ssl_version`` option in favor of ``ssl_minimum_version``. ``ssl_version`` will be removed in urllib3 v2.1.0 (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Deprecated the ``strict`` parameter of ``PoolManager.connection_from_context()`` as it&#x27;s not longer needed in Python 3.x. It will be removed in urllib3 v2.1.0 (`2267 &lt;https://github.com/urllib3/urllib3/issues/2267&gt;`__)\n* Deprecated the ``NewConnectionError.pool`` attribute which will be removed in urllib3 v2.1.0 (`2271 &lt;https://github.com/urllib3/urllib3/issues/2271&gt;`__).\n* Deprecated ``format_header_param_html5`` and ``format_header_param`` in favor of ``format_multipart_header_param`` (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``RequestField.header_formatter`` parameter which will be removed in urllib3 v2.1.0 (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``HTTPSConnection.set_cert()`` method. Instead pass parameters to the ``HTTPSConnection`` constructor (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Deprecated ``HTTPConnection.request_chunked()`` method which will be removed in urllib3 v2.1.0. Instead pass ``chunked=True`` to ``HTTPConnection.request()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n\nAdded\n-----\n\n* Added top-level ``urllib3.request`` function which uses a preconfigured module-global ``PoolManager`` instance (`2150 &lt;https://github.com/urllib3/urllib3/issues/2150&gt;`__).\n* Added the ``json`` parameter to ``urllib3.request()``, ``PoolManager.request()``, and ``ConnectionPool.request()`` methods to send JSON bodies in requests. Using this parameter will set the header ``Content-Type: application/json`` if ``Content-Type`` isn&#x27;t already defined.\n  Added support for parsing JSON response bodies with ``HTTPResponse.json()`` method (`2243 &lt;https://github.com/urllib3/urllib3/issues/2243&gt;`__).\n* Added type hints to the ``urllib3`` module (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Added ``ssl_minimum_version`` and ``ssl_maximum_version`` options which set\n  ``SSLContext.minimum_version`` and ``SSLContext.maximum_version`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Added support for Zstandard (RFC 8878) when ``zstandard`` 1.18.0 or later is installed.\n  Added the ``zstd`` extra which installs the ``zstandard`` package (`1992 &lt;https://github.com/urllib3/urllib3/issues/1992&gt;`__).\n* Added ``urllib3.response.BaseHTTPResponse`` class. All future response classes will be subclasses of ``BaseHTTPResponse`` (`2083 &lt;https://github.com/urllib3/urllib3/issues/2083&gt;`__).\n* Added ``FullPoolError`` which is raised when ``PoolManager(block=True)`` and a connection is returned to a full pool (`2197 &lt;https://github.com/urllib3/urllib3/issues/2197&gt;`__).\n* Added ``HTTPHeaderDict`` to the top-level ``urllib3`` namespace (`2216 &lt;https://github.com/urllib3/urllib3/issues/2216&gt;`__).\n* Added support for configuring header merging behavior with HTTPHeaderDict\n  When using a ``HTTPHeaderDict`` to provide headers for a request, by default duplicate\n  header values will be repeated. But if ``combine=True`` is passed into a call to\n  ``HTTPHeaderDict.add``, then the added header value will be merged in with an existing\n  value into a comma-separated list (``X-My-Header: foo, bar``) (`2242 &lt;https://github.com/urllib3/urllib3/issues/2242&gt;`__).\n* Added ``NameResolutionError`` exception when a DNS error occurs (`2305 &lt;https://github.com/urllib3/urllib3/issues/2305&gt;`__).\n* Added ``proxy_assert_hostname`` and ``proxy_assert_fingerprint`` kwargs to ``ProxyManager`` (`2409 &lt;https://github.com/urllib3/urllib3/issues/2409&gt;`__).\n* Added a configurable ``backoff_max`` parameter to the ``Retry`` class.\n  If a custom ``backoff_max`` is provided to the ``Retry`` class, it\n  will replace the ``Retry.DEFAULT_BACKOFF_MAX`` (`2494 &lt;https://github.com/urllib3/urllib3/issues/2494&gt;`__).\n* Added the ``authority`` property to the Url class as per RFC 3986 3.2. This property should be used in place of ``netloc`` for users who want to include the userinfo (auth) component of the URI (`2520 &lt;https://github.com/urllib3/urllib3/issues/2520&gt;`__).\n* Added the ``scheme`` parameter to ``HTTPConnection.set_tunnel`` to configure the scheme of the origin being tunnelled to (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added the ``is_closed``, ``is_connected`` and ``has_connected_to_proxy`` properties to ``HTTPConnection`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added optional ``backoff_jitter`` parameter to ``Retry``. (`2952 &lt;https://github.com/urllib3/urllib3/issues/2952&gt;`__)\n\nChanged\n-------\n\n* Changed ``urllib3.response.HTTPResponse.read`` to respect the semantics of ``io.BufferedIOBase`` regardless of compression. Specifically, this method:\n\n  * Only returns an empty bytes object to indicate EOF (that is, the response has been fully consumed).\n  * Never returns more bytes than requested.\n  * Can issue any number of system calls: zero, one or multiple.\n\n  If you want each ``urllib3.response.HTTPResponse.read`` call to issue a single system call, you need to disable decompression by setting ``decode_content=False`` (`2128 &lt;https://github.com/urllib3/urllib3/issues/2128&gt;`__).\n* Changed ``urllib3.HTTPConnection.getresponse`` to return an instance of ``urllib3.HTTPResponse`` instead of ``http.client.HTTPResponse`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Changed ``ssl_version`` to instead set the corresponding ``SSLContext.minimum_version``\n  and ``SSLContext.maximum_version`` values.  Regardless of ``ssl_version`` passed\n  ``SSLContext`` objects are now constructed using ``ssl.PROTOCOL_TLS_CLIENT`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Changed default ``SSLContext.minimum_version`` to be ``TLSVersion.TLSv1_2`` in line with Python 3.10 (`2373 &lt;https://github.com/urllib3/urllib3/issues/2373&gt;`__).\n* Changed ``ProxyError`` to wrap any connection error (timeout, TLS, DNS) that occurs when connecting to the proxy (`2482 &lt;https://github.com/urllib3/urllib3/pull/2482&gt;`__).\n* Changed ``urllib3.util.create_urllib3_context`` to not override the system cipher suites with\n  a default value. The new default will be cipher suites configured by the operating system (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Changed ``multipart/form-data`` header parameter formatting matches the WHATWG HTML Standard as of 2021-06-10. Control characters in filenames are no longer percent encoded (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Changed the error raised when connecting via HTTPS when the ``ssl`` module isn&#x27;t available from ``SSLError`` to ``ImportError`` (`2589 &lt;https://github.com/urllib3/urllib3/issues/2589&gt;`__).\n* Changed ``HTTPConnection.request()`` to always use lowercase chunk boundaries when sending requests with ``Transfer-Encoding: chunked`` (`2515 &lt;https://github.com/urllib3/urllib3/issues/2515&gt;`__).\n* Changed ``enforce_content_length`` default to True, preventing silent data loss when reading streamed responses (`2514 &lt;https://github.com/urllib3/urllib3/issues/2514&gt;`__).\n* Changed internal implementation of ``HTTPHeaderDict`` to use ``dict`` instead of ``collections.OrderedDict`` for better performance (`2080 &lt;https://github.com/urllib3/urllib3/issues/2080&gt;`__).\n* Changed the ``urllib3.contrib.pyopenssl`` module to wrap ``OpenSSL.SSL.Error`` with ``ssl.SSLError`` in ``PyOpenSSLContext.load_cert_chain`` (`2628 &lt;https://github.com/urllib3/urllib3/issues/2628&gt;`__).\n* Changed usage of the deprecated ``socket.error`` to ``OSError`` (`2120 &lt;https://github.com/urllib3/urllib3/issues/2120&gt;`__).\n* Changed all parameters in the ``HTTPConnection`` and ``HTTPSConnection`` constructors to be keyword-only except ``host`` and ``port`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed ``HTTPConnection.getresponse()`` to set the socket timeout from ``HTTPConnection.timeout`` value before reading\n  data from the socket. This previously was done manually by the ``HTTPConnectionPool`` calling ``HTTPConnection.sock.settimeout(...)`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed the ``_proxy_host`` property to ``_tunnel_host`` in ``HTTPConnectionPool`` to more closely match how the property is used (value in ``HTTPConnection.set_tunnel()``) (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed name of ``Retry.BACK0FF_MAX`` to be ``Retry.DEFAULT_BACKOFF_MAX``.\n* Changed TLS handshakes to use ``SSLContext.check_hostname`` when possible (`2452 &lt;https://github.com/urllib3/urllib3/pull/2452&gt;`__).\n* Changed ``server_hostname`` to behave like other parameters only used by ``HTTPSConnectionPool`` (`2537 &lt;https://github.com/urllib3/urllib3/pull/2537&gt;`__).\n* Changed the default ``blocksize`` to 16KB to match OpenSSL&#x27;s default read amounts (`2348 &lt;https://github.com/urllib3/urllib3/pull/2348&gt;`__).\n* Changed ``HTTPResponse.read()`` to raise an error when calling with ``decode_content=False`` after using ``decode_content=True`` to prevent data loss (`2800 &lt;https://github.com/urllib3/urllib3/issues/2800&gt;`__).\n\nFixed\n-----\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins would cause connection pools to be closed while requests are in progress (`1252 &lt;https://github.com/urllib3/urllib3/issues/1252&gt;`__).\n* Fixed an issue where an ``HTTPConnection`` instance would erroneously reuse the socket read timeout value from reading the previous response instead of a newly configured connect timeout.\n  Instead now if ``HTTPConnection.timeout`` is updated before sending the next request the new timeout value will be used (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__).\n* Fixed ``socket.error.errno`` when raised from pyOpenSSL&#x27;s ``OpenSSL.SSL.SysCallError`` (`2118 &lt;https://github.com/urllib3/urllib3/issues/2118&gt;`__).\n* Fixed the default value of ``HTTPSConnection.socket_options`` to match ``HTTPConnection`` (`2213 &lt;https://github.com/urllib3/urllib3/issues/2213&gt;`__).\n* Fixed a bug where ``headers`` would be modified by the ``remove_headers_on_redirect`` feature (`2272 &lt;https://github.com/urllib3/urllib3/issues/2272&gt;`__).\n* Fixed a reference cycle bug in ``urllib3.util.connection.create_connection()`` (`2277 &lt;https://github.com/urllib3/urllib3/issues/2277&gt;`__).\n* Fixed a socket leak if ``HTTPConnection.connect()`` fails (`2571 &lt;https://github.com/urllib3/urllib3/pull/2571&gt;`__).\n* Fixed ``urllib3.contrib.pyopenssl.WrappedSocket`` and ``urllib3.contrib.securetransport.WrappedSocket`` close methods (`2970 &lt;https://github.com/urllib3/urllib3/issues/2970&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.16\n   ```\n   ====================\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins\n  would cause connection pools to be closed while requests are in progress (`2954 &lt;https://github.com/urllib3/urllib3/pull/2954&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.15\n   ```\n   ====================\n\n* Fix socket timeout value when ``HTTPConnection`` is reused (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__)\n* Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n  (`2899 &lt;https://github.com/urllib3/urllib3/issues/2899&gt;`__)\n* Fix IDNA handling of &#x27;\\x80&#x27; byte (`2901 &lt;https://github.com/urllib3/urllib3/issues/2901&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.14\n   ```\n   ====================\n\n* Fixed parsing of port 0 (zero) returning None, instead of 0. (`2850 &lt;https://github.com/urllib3/urllib3/issues/2850&gt;`__)\n* Removed deprecated getheaders() calls in contrib module. Fixed the type hint of ``PoolKey.key_retries`` by adding ``bool`` to the union. (`2865 &lt;https://github.com/urllib3/urllib3/issues/2865&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.13\n   ```\n   ====================\n\n* Deprecated the ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` methods.\n* Fixed an issue where parsing a URL with leading zeroes in the port would be rejected\n  even when the port number after removing the zeroes was valid.\n* Fixed a deprecation warning when using cryptography v39.0.0.\n* Removed the ``&lt;4`` in the ``Requires-Python`` packaging metadata field.\n   ```\n   \n  \n  \n   ### 1.26.12\n   ```\n   ====================\n\n* Deprecated the `urllib3[secure]` extra and the `urllib3.contrib.pyopenssl` module.\n  Both will be removed in v2.x. See this `GitHub issue &lt;https://github.com/urllib3/urllib3/issues/2680&gt;`_\n  for justification and info on how to migrate.\n   ```\n   \n  \n  \n   ### 1.26.11\n   ```\n   ====================\n\n* Fixed an issue where reading more than 2 GiB in a call to ``HTTPResponse.read`` would\n  raise an ``OverflowError`` on Python 3.9 and earlier.\n   ```\n   \n  \n  \n   ### 1.26.10\n   ```\n   ====================\n\n* Removed support for Python 3.5\n* Fixed an issue where a ``ProxyError`` recommending configuring the proxy as HTTP\n  instead of HTTPS could appear even when an HTTPS proxy wasn&#x27;t configured.\n   ```\n   \n  \n  \n   ### 1.26.9\n   ```\n   ===================\n\n* Changed ``urllib3[brotli]`` extra to favor installing Brotli libraries that are still\n  receiving updates like ``brotli`` and ``brotlicffi`` instead of ``brotlipy``.\n  This change does not impact behavior of urllib3, only which dependencies are installed.\n* Fixed a socket leaking when ``HTTPSConnection.connect()`` raises an exception.\n* Fixed ``server_hostname`` being forwarded from ``PoolManager`` to ``HTTPConnectionPool``\n  when requesting an HTTP URL. Should only be forwarded when requesting an HTTPS URL.\n   ```\n   \n  \n  \n   ### 1.26.8\n   ```\n   ===================\n\n* Added extra message to ``urllib3.exceptions.ProxyError`` when urllib3 detects that\n  a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.\n* Added a mention of the size of the connection pool when discarding a connection due to the pool being full.\n* Added explicit support for Python 3.11.\n* Deprecated the ``Retry.MAX_BACKOFF`` class property in favor of ``Retry.DEFAULT_MAX_BACKOFF``\n  to better match the rest of the default parameter names. ``Retry.MAX_BACKOFF`` is removed in v2.0.\n* Changed location of the vendored ``ssl.match_hostname`` function from ``urllib3.packages.ssl_match_hostname``\n  to ``urllib3.util.ssl_match_hostname`` to ensure Python 3.10+ compatibility after being repackaged\n  by downstream distributors.\n* Fixed absolute imports, all imports are now relative.\n   ```\n   \n  \n  \n   ### 1.26.7\n   ```\n   ===================\n\n* Fixed a bug with HTTPS hostname verification involving IP addresses and lack\n  of SNI. (Issue 2400)\n* Fixed a bug where IPv6 braces weren&#x27;t stripped during certificate hostname\n  matching. (Issue 2240)\n   ```\n   \n  \n  \n   ### 1.26.6\n   ```\n   ===================\n\n* Deprecated the ``urllib3.contrib.ntlmpool`` module. urllib3 is not able to support\n  it properly due to `reasons listed in this issue &lt;https://github.com/urllib3/urllib3/issues/2282&gt;`_.\n  If you are a user of this module please leave a comment.\n* Changed ``HTTPConnection.request_chunked()`` to not erroneously emit multiple\n  ``Transfer-Encoding`` headers in the case that one is already specified.\n* Fixed typo in deprecation message to recommend ``Retry.DEFAULT_ALLOWED_METHODS``.\n   ```\n   \n  \n  \n   ### 1.26.5\n   ```\n   ===================\n\n* Fixed deprecation warnings emitted in Python 3.10.\n* Updated vendored ``six`` library to 1.16.0.\n* Improved performance of URL parser when splitting\n  the authority component.\n   ```\n   \n  \n  \n   ### 1.26.4\n   ```\n   ===================\n\n* Changed behavior of the default ``SSLContext`` when connecting to HTTPS proxy\n  during HTTPS requests. The default ``SSLContext`` now sets ``check_hostname=True``.\n   ```\n   \n  \n  \n   ### 1.26.3\n   ```\n   ===================\n\n* Fixed bytes and string comparison issue with headers (Pull 2141)\n\n* Changed ``ProxySchemeUnknown`` error message to be\n  more actionable if the user supplies a proxy URL without\n  a scheme. (Pull 2107)\n   ```\n   \n  \n  \n   ### 1.26.2\n   ```\n   ===================\n\n* Fixed an issue where ``wrap_socket`` and ``CERT_REQUIRED`` wouldn&#x27;t\n  be imported properly on Python 2.7.8 and earlier (Pull 2052)\n   ```\n   \n  \n  \n   ### 1.26.1\n   ```\n   ===================\n\n* Fixed an issue where two ``User-Agent`` headers would be sent if a\n  ``User-Agent`` header key is passed as ``bytes`` (Pull 2047)\n   ```\n   \n  \n  \n   ### 1.26.0\n   ```\n   ===================\n\n* **NOTE: urllib3 v2.0 will drop support for Python 2**.\n  `Read more in the v2.0 Roadmap &lt;https://urllib3.readthedocs.io/en/latest/v2-roadmap.html&gt;`_.\n\n* Added support for HTTPS proxies contacting HTTPS servers (Pull 1923, Pull 1806)\n\n* Deprecated negotiating TLSv1 and TLSv1.1 by default. Users that\n  still wish to use TLS earlier than 1.2 without a deprecation warning\n  should opt-in explicitly by setting ``ssl_version=ssl.PROTOCOL_TLSv1_1`` (Pull 2002)\n  **Starting in urllib3 v2.0: Connections that receive a ``DeprecationWarning`` will fail**\n\n* Deprecated ``Retry`` options ``Retry.DEFAULT_METHOD_WHITELIST``, ``Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST``\n  and ``Retry(method_whitelist=...)`` in favor of ``Retry.DEFAULT_ALLOWED_METHODS``,\n  ``Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT``, and ``Retry(allowed_methods=...)``\n  (Pull 2000) **Starting in urllib3 v2.0: Deprecated options will be removed**\n\n* Added default ``User-Agent`` header to every request (Pull 1750)\n\n* Added ``urllib3.util.SKIP_HEADER`` for skipping ``User-Agent``, ``Accept-Encoding``,\n  and ``Host`` headers from being automatically emitted with requests (Pull 2018)\n\n* Collapse ``transfer-encoding: chunked`` request data and framing into\n  the same ``socket.send()`` call (Pull 1906)\n\n* Send ``http/1.1`` ALPN identifier with every TLS handshake by default (Pull 1894)\n\n* Properly terminate SecureTransport connections when CA verification fails (Pull 1977)\n\n* Don&#x27;t emit an ``SNIMissingWarning`` when passing ``server_hostname=None``\n  to SecureTransport (Pull 1903)\n\n* Disabled requesting TLSv1.2 session tickets as they weren&#x27;t being used by urllib3 (Pull 1970)\n\n* Suppress ``BrokenPipeError`` when writing request body after the server\n  has closed the socket (Pull 1524)\n\n* Wrap ``ssl.SSLError`` that can be raised from reading a socket (e.g. &quot;bad MAC&quot;)\n  into an ``urllib3.exceptions.SSLError`` (Pull 1939)\n   ```\n   \n  \n  \n   ### 1.25.11\n   ```\n   ====================\n\n* Fix retry backoff time parsed from ``Retry-After`` header when given\n  in the HTTP date format. The HTTP date was parsed as the local timezone\n  rather than accounting for the timezone in the HTTP date (typically\n  UTC) (Pull 1932, Pull 1935, Pull 1938, Pull 1949)\n\n* Fix issue where an error would be raised when the ``SSLKEYLOGFILE``\n  environment variable was set to the empty string. Now ``SSLContext.keylog_file``\n  is not set in this situation (Pull 2016)\n   ```\n   \n  \n  \n   ### 1.25.10\n   ```\n   ====================\n\n* Added support for ``SSLKEYLOGFILE`` environment variable for\n  logging TLS session keys with use with programs like\n  Wireshark for decrypting captured web traffic (Pull 1867)\n\n* Fixed loading of SecureTransport libraries on macOS Big Sur\n  due to the new dynamic linker cache (Pull 1905)\n\n* Collapse chunked request bodies data and framing into one\n  call to ``send()`` to reduce the number of TCP packets by 2-4x (Pull 1906)\n\n* Don&#x27;t insert ``None`` into ``ConnectionPool`` if the pool\n  was empty when requesting a connection (Pull 1866)\n\n* Avoid ``hasattr`` call in ``BrotliDecoder.decompress()`` (Pull 1858)\n   ```\n   \n  \n  \n   ### 1.25.9\n   ```\n   ===================\n\n* Added ``InvalidProxyConfigurationWarning`` which is raised when\n  erroneously specifying an HTTPS proxy URL. urllib3 doesn&#x27;t currently\n  support connecting to HTTPS proxies but will soon be able to\n  and we would like users to migrate properly without much breakage.\n\n  See `this GitHub issue &lt;https://github.com/urllib3/urllib3/issues/1850&gt;`_\n  for more information on how to fix your proxy config. (Pull 1851)\n\n* Drain connection after ``PoolManager`` redirect (Pull 1817)\n\n* Ensure ``load_verify_locations`` raises ``SSLError`` for all backends (Pull 1812)\n\n* Rename ``VerifiedHTTPSConnection`` to ``HTTPSConnection`` (Pull 1805)\n\n* Allow the CA certificate data to be passed as a string (Pull 1804)\n\n* Raise ``ValueError`` if method contains control characters (Pull 1800)\n\n* Add ``__repr__`` to ``Timeout`` (Pull 1795)\n   ```\n   \n  \n  \n   ### 1.25.8\n   ```\n   ===================\n\n* Drop support for EOL Python 3.4 (Pull 1774)\n\n* Optimize _encode_invalid_chars (Pull 1787)\n   ```\n   \n  \n  \n   ### 1.25.7\n   ```\n   ===================\n\n* Preserve ``chunked`` parameter on retries (Pull 1715, Pull 1734)\n\n* Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull 1704, Issue 1470)\n\n* Fix issue where URL fragment was sent within the request target. (Pull 1732)\n\n* Fix issue where an empty query section in a URL would fail to parse. (Pull 1732)\n\n* Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull 1703)\n   ```\n   \n  \n  \n   ### 1.25.6\n   ```\n   ===================\n\n* Fix issue where tilde (``~``) characters were incorrectly\n  percent-encoded in the path. (Pull 1692)\n   ```\n   \n  \n  \n   ### 1.25.5\n   ```\n   ===================\n\n* Add mitigation for BPO-37428 affecting Python &lt;3.7.4 and OpenSSL 1.1.1+ which\n  caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n  (Issue 1682)\n   ```\n   \n  \n  \n   ### 1.25.4\n   ```\n   ===================\n\n* Propagate Retry-After header settings to subsequent retries. (Pull 1607)\n\n* Fix edge case where Retry-After header was still respected even when\n  explicitly opted out of. (Pull 1607)\n\n* Remove dependency on ``rfc3986`` for URL parsing.\n\n* Fix issue where URLs containing invalid characters within ``Url.auth`` would\n  raise an exception instead of percent-encoding those characters.\n\n* Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n  work well with BufferedReaders and other ``io`` module features. (Pull 1652)\n\n* Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull 1673)\n   ```\n   \n  \n  \n   ### 1.25.3\n   ```\n   ===================\n\n* Change ``HTTPSConnection`` to load system CA certificates\n  when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n  unspecified. (Pull 1608, Issue 1603)\n\n* Upgrade bundled rfc3986 to v1.3.2. (Pull 1609, Issue 1605)\n   ```\n   \n  \n  \n   ### 1.25.2\n   ```\n   ===================\n\n* Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull 1583)\n\n* Change ``parse_url`` to percent-encode invalid characters within the\n  path, query, and target components. (Pull 1586)\n   ```\n   \n  \n  \n   ### 1.25.1\n   ```\n   ===================\n\n* Add support for Google&#x27;s ``Brotli`` package. (Pull 1572, Pull 1579)\n\n* Upgrade bundled rfc3986 to v1.3.1 (Pull 1578)\n   ```\n   \n  \n  \n   ### 1.25\n   ```\n   =================\n\n* Require and validate certificates by default when using HTTPS (Pull 1507)\n\n* Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull 1487)\n\n* Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n  encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull 1489)\n\n* Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n  implementations. (Pull 1496)\n\n* Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue 303, Pull 1492)\n\n* Fixed issue where OpenSSL would block if an encrypted client private key was\n  given and no password was given. Instead an ``SSLError`` is raised. (Pull 1489)\n\n* Added support for Brotli content encoding. It is enabled automatically if\n  ``brotlipy`` package is installed which can be requested with\n  ``urllib3[brotli]`` extra. (Pull 1532)\n\n* Drop ciphers using DSS key exchange from default TLS cipher suites.\n  Improve default ciphers when using SecureTransport. (Pull 1496)\n\n* Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue 1483)\n   ```\n   \n  \n  \n   ### 1.24.3\n   ```\n   ===================\n\n* Apply fix for CVE-2019-9740. (Pull 1591)\n   ```\n   \n  \n  \n   ### 1.24.2\n   ```\n   ===================\n\n* Don&#x27;t load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n  ``ssl_context`` parameters are specified.\n\n* Remove Authorization header regardless of case when redirecting to cross-site. (Issue 1510)\n\n* Add support for IPv6 addresses in subjectAltName section of certificates. (Issue 1269)\n   ```\n   \n  \n  \n   ### 1.24.1\n   ```\n   ===================\n\n* Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue 1467)\n\n* Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue 1462)\n   ```\n   \n  \n  \n   ### 1.24\n   ```\n   =================\n\n* Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull 1449)\n\n* Test against Python 3.7 on AppVeyor. (Pull 1453)\n\n* Early-out ipv6 checks when running on App Engine. (Pull 1450)\n\n* Change ambiguous description of backoff_factor (Pull 1436)\n\n* Add ability to handle multiple Content-Encodings (Issue 1441 and Pull 1442)\n\n* Skip DNS names that can&#x27;t be idna-decoded when using pyOpenSSL (Issue 1405).\n\n* Add a server_hostname parameter to HTTPSConnection which allows for\n  overriding the SNI hostname sent in the handshake. (Pull 1397)\n\n* Drop support for EOL Python 2.6 (Pull 1429 and Pull 1430)\n\n* Fixed bug where responses with header Content-Type: message/* erroneously\n  raised HeaderParsingError, resulting in a warning being logged. (Pull 1439)\n\n* Move urllib3 to src/urllib3 (Pull 1409)\n   ```\n   \n  \n  \n   ### 1.23\n   ```\n   =================\n\n* Allow providing a list of headers to strip from requests when redirecting\n  to a different host. Defaults to the ``Authorization`` header. Different\n  headers can be set via ``Retry.remove_headers_on_redirect``. (Issue 1316)\n\n* Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue 1247).\n\n* Dropped Python 3.3 support. (Pull 1242)\n\n* Put the connection back in the pool when calling stream() or read_chunked() on\n  a chunked HEAD response. (Issue 1234)\n\n* Fixed pyOpenSSL-specific ssl client authentication issue when clients\n  attempted to auth via certificate + chain (Issue 1060)\n\n* Add the port to the connectionpool connect print (Pull 1251)\n\n* Don&#x27;t use the ``uuid`` module to create multipart data boundaries. (Pull 1380)\n\n* ``read_chunked()`` on a closed response returns no chunks. (Issue 1088)\n\n* Add Python 2.6 support to ``contrib.securetransport`` (Pull 1359)\n\n* Added support for auth info in url for SOCKS proxy (Pull 1363)\n   ```\n   \n  \n  \n   ### 1.22\n   ```\n   =================\n\n* Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n  IPv6 proxy. (Issue 1222)\n\n* Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n  is available on ``MaxRetryError.reason``. (Issue 1112)\n\n* Drain and release connection before recursing on retry/redirect.  Fixes\n  deadlocks with a blocking connectionpool. (Issue 1167)\n\n* Fixed compatibility for cookiejar. (Issue 1229)\n\n* pyopenssl: Use vendored version of ``six``. (Issue 1231)\n   ```\n   \n  \n  \n   ### 1.21.1\n   ```\n   ===================\n\n* Fixed SecureTransport issue that would cause long delays in response body\n  delivery. (Pull 1154)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``socket_options`` flag to the ``PoolManager``.  (Issue 1165)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n  (Pull 1157)\n   ```\n   \n  \n  \n   ### 1.21\n   ```\n   =================\n\n* Improved performance of certain selector system calls on Python 3.5 and\n  later. (Pull 1095)\n\n* Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n  exceptions appropriately when sending data. (Pull 1125)\n\n* Selectors now detects a monkey-patched select module after import for modules\n  that patch the select module like eventlet, greenlet. (Pull 1128)\n\n* Reduced memory consumption when streaming zlib-compressed responses\n  (as opposed to raw deflate streams). (Pull 1129)\n\n* Connection pools now use the entire request context when constructing the\n  pool key. (Pull 1016)\n\n* ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n  ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n  (Pull 1016)\n\n* Add retry counter for ``status_forcelist``. (Issue 1147)\n\n* Added ``contrib`` module for using SecureTransport on macOS:\n  ``urllib3.contrib.securetransport``.  (Pull 1122)\n\n* urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n  for schemes it does not recognise, it assumes they are case-sensitive and\n  leaves them unchanged.\n  (Issue 1080)\n   ```\n   \n  \n  \n   ### 1.20\n   ```\n   =================\n\n* Added support for waiting for I/O using selectors other than select,\n  improving urllib3&#x27;s behaviour with large numbers of concurrent connections.\n  (Pull 1001)\n\n* Updated the date for the system clock check. (Issue 1005)\n\n* ConnectionPools now correctly consider hostnames to be case-insensitive.\n  (Issue 1032)\n\n* Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Pull 1063)\n\n* Outdated versions of cryptography now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Issue 1044)\n\n* Automatically attempt to rewind a file-like body object when a request is\n  retried or redirected. (Pull 1039)\n\n* Fix some bugs that occur when modules incautiously patch the queue module.\n  (Pull 1061)\n\n* Prevent retries from occurring on read timeouts for which the request method\n  was not in the method whitelist. (Issue 1059)\n\n* Changed the PyOpenSSL contrib module to lazily load idna to avoid\n  unnecessarily bloating the memory of programs that don&#x27;t need it. (Pull\n  1076)\n\n* Add support for IPv6 literals with zone identifiers. (Pull 1013)\n\n* Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n  proxies, and controlled remote DNS appropriately. (Issue 1035)\n   ```\n   \n  \n  \n   ### 1.19.1\n   ```\n   ===================\n\n* Fixed AppEngine import that didn&#x27;t function on Python 3.5. (Pull 1025)\n   ```\n   \n  \n  \n   ### 1.19\n   ```\n   =================\n\n* urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n  using the default retry logic. (Pull 955)\n\n* Remove markers from setup.py to assist ancient setuptools versions. (Issue\n  986)\n\n* Disallow superscripts and other integerish things in URL ports. (Issue 989)\n\n* Allow urllib3&#x27;s HTTPResponse.stream() method to continue to work with\n  non-httplib underlying FPs. (Pull 990)\n\n* Empty filenames in multipart headers are now emitted as such, rather than\n  being suppressed. (Issue 1015)\n\n* Prefer user-supplied Host headers on chunked uploads. (Issue 1009)\n   ```\n   \n  \n  \n   ### 1.18.1\n   ```\n   ===================\n\n* CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n  PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n  release fixes a vulnerability whereby urllib3 in the above configuration\n  would silently fail to validate TLS certificates due to erroneously setting\n  invalid flags in OpenSSL&#x27;s ``SSL_CTX_set_verify`` function. These erroneous\n  flags do not cause a problem in OpenSSL versions before 1.1.0, which\n  interprets the presence of any flag as requesting certificate validation.\n\n  There is no PR for this patch, as it was prepared for simultaneous disclosure\n  and release. The master branch received the same fix in Pull 1010.\n   ```\n   \n  \n  \n   ### 1.18\n   ```\n   =================\n\n* Fixed incorrect message for IncompleteRead exception. (Pull 973)\n\n* Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n  (Issue 258)\n\n* Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n  (Issue 977)\n\n* Fixed handling of wildcard certificates when using PyOpenSSL. (Issue 979)\n   ```\n   \n  \n  \n   ### 1.17\n   ```\n   =================\n\n* Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue 835)\n\n* ConnectionPool debug log now includes scheme, host, and port. (Issue 897)\n\n* Substantially refactored documentation. (Issue 887)\n\n* Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n  (Issue 858)\n\n* Normalize the scheme and host in the URL parser (Issue 833)\n\n* ``HTTPResponse`` contains the last ``Retry`` object, which now also\n  contains retries history. (Issue 848)\n\n* Timeout can no longer be set as boolean, and must be greater than zero.\n  (Pull 924)\n\n* Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n  now use cryptography and idna, both of which are already dependencies of\n  PyOpenSSL. (Pull 930)\n\n* Fixed infinite loop in ``stream`` when amt=None. (Issue 928)\n\n* Try to use the operating system&#x27;s certificates when we are using an\n  ``SSLContext``. (Pull 941)\n\n* Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n  ChaCha20, but ChaCha20 is then preferred to everything else. (Pull 947)\n\n* Updated cipher suite list to remove 3DES-based cipher suites. (Pull 958)\n\n* Removed the cipher suite fallback to allow HIGH ciphers. (Pull 958)\n\n* Implemented ``length_remaining`` to determine remaining content\n  to be read. (Pull 949)\n\n* Implemented ``enforce_content_length`` to enable exceptions when\n  incomplete data chunks are received. (Pull 949)\n\n* Dropped connection start, dropped connection reset, redirect, forced retry,\n  and new HTTPS connection log levels to DEBUG, from INFO. (Pull 967)\n   ```\n   \n  \n  \n   ### 1.16\n   ```\n   =================\n\n* Disable IPv6 DNS when IPv6 connections are not possible. (Issue 840)\n\n* Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n  overridden. (Issue 830)\n\n* Normalize scheme and host to lowercase for pool keys, and include\n  ``source_address``. (Issue 830)\n\n* Cleaner exception chain in Python 3 for ``_make_request``.\n  (Issue 861)\n\n* Fixed installing ``urllib3[socks]`` extra. (Issue 864)\n\n* Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n  called by subclasses. (Issue 873)\n\n* Retain ``release_conn`` state across retries. (Issues 651, 866)\n\n* Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n  ``HTTPResponse`` but can be replaced with a subclass. (Issue 879)\n   ```\n   \n  \n  \n   ### 1.15.1\n   ```\n   ===================\n\n* Fix packaging to include backports module. (Issue 841)\n   ```\n   \n  \n  \n   ### 1.15\n   ```\n   =================\n\n* Added Retry(raise_on_status=False). (Issue 720)\n\n* Always use setuptools, no more distutils fallback. (Issue 785)\n\n* Dropped support for Python 3.2. (Issue 786)\n\n* Chunked transfer encoding when requesting with ``chunked=True``.\n  (Issue 790)\n\n* Fixed regression with IPv6 port parsing. (Issue 801)\n\n* Append SNIMissingWarning messages to allow users to specify it in\n  the PYTHONWARNINGS environment variable. (Issue 816)\n\n* Handle unicode headers in Py2. (Issue 818)\n\n* Log certificate when there is a hostname mismatch. (Issue 820)\n\n* Preserve order of request/response headers. (Issue 821)\n   ```\n   \n  \n  \n   ### 1.14\n   ```\n   =================\n\n* contrib: SOCKS proxy support! (Issue 762)\n\n* Fixed AppEngine handling of transfer-encoding header and bug\n  in Timeout defaults checking. (Issue 763)\n   ```\n   \n  \n  \n   ### 1.13.1\n   ```\n   ===================\n\n* Fixed regression in IPv6 + SSL for match_hostname. (Issue 761)\n   ```\n   \n  \n  \n   ### 1.13\n   ```\n   =================\n\n* Fixed ``pip install urllib3[secure]`` on modern pip. (Issue 706)\n\n* pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue 717)\n\n* pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue 696)\n\n* Close connections more defensively on exception. (Issue 734)\n\n* Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n  repeatedly flushing the decoder, to function better on Jython. (Issue 743)\n\n* Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue 758)\n   ```\n   \n  \n  \n   ### 1.12\n   ```\n   =================\n\n* Rely on ``six`` for importing ``httplib`` to work around\n  conflicts with other Python 3 shims. (Issue 688)\n\n* Add support for directories of certificate authorities, as supported by\n  OpenSSL. (Issue 701)\n\n* New exception: ``NewConnectionError``, raised when we fail to establish\n  a new connection, usually ``ECONNREFUSED`` socket error.\n   ```\n   \n  \n  \n   ### 1.11\n   ```\n   =================\n\n* When ``ca_certs`` is given, ``cert_reqs`` defaults to\n  ``&#x27;CERT_REQUIRED&#x27;``. (Issue 650)\n\n* ``pip install urllib3[secure]`` will install Certifi and\n  PyOpenSSL as dependencies. (Issue 678)\n\n* Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n  (Issues 632, 679)\n\n* Added `urllib3.contrib.appengine &lt;https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine&gt;`_\n  which has an ``AppEngineManager`` for using ``URLFetch`` in a\n  Google AppEngine environment. (Issue 664)\n\n* Dev: Added test suite for AppEngine. (Issue 631)\n\n* Fix performance regression when using PyOpenSSL. (Issue 626)\n\n* Passing incorrect scheme (e.g. ``foo://``) will raise\n  ``ValueError`` instead of ``AssertionError`` (backwards\n  compatible for now, but please migrate). (Issue 640)\n\n* Fix pools not getting replenished when an error occurs during a\n  request using ``release_conn=False``. (Issue 644)\n\n* Fix pool-default headers not applying for url-encoded requests\n  like GET. (Issue 657)\n\n* log.warning in Python 3 when headers are skipped due to parsing\n  errors. (Issue 642)\n\n* Close and discard connections if an error occurs during read.\n  (Issue 660)\n\n* Fix host parsing for IPv6 proxies. (Issue 668)\n\n* Separate warning type SubjectAltNameWarning, now issued once\n  per host. (Issue 671)\n\n* Fix ``httplib.IncompleteRead`` not getting converted to\n  ``ProtocolError`` when using ``HTTPResponse.stream()``\n  (Issue 674)\n   ```\n   \n  \n  \n   ### 1.10.4\n   ```\n   ===================\n\n* Migrate tests to Tornado 4. (Issue 594)\n\n* Append default warning configuration rather than overwrite.\n  (Issue 603)\n\n* Fix streaming decoding regression. (Issue 595)\n\n* Fix chunked requests losing state across keep-alive connections.\n  (Issue 599)\n\n* Fix hanging when chunked HEAD response has no body. (Issue 605)\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ===================\n\n* Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n  (Issue 558)\n\n* Fix regression of duplicate header keys being discarded.\n  (Issue 563)\n\n* ``Response.stream()`` returns a generator for chunked responses.\n  (Issue 560)\n\n* Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n  (Issue 585)\n\n* Work on platforms without `ssl` module for plain HTTP requests.\n  (Issue 587)\n\n* Stop relying on the stdlib&#x27;s default cipher list. (Issue 588)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ===================\n\n* Fix file descriptor leakage on retries. (Issue 548)\n\n* Removed RC4 from default cipher list. (Issue 551)\n\n* Header performance improvements. (Issue 544)\n\n* Fix PoolManager not obeying redirect retry settings. (Issue 553)\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ===================\n\n* Pools can be used as context managers. (Issue 545)\n\n* Don&#x27;t re-use connections which experienced an SSLError. (Issue 529)\n\n* Don&#x27;t fail when gzip decoding an empty stream. (Issue 535)\n\n* Add sha256 support for fingerprint verification. (Issue 540)\n\n* Fixed handling of header values containing commas. (Issue 533)\n   ```\n   \n  \n  \n   ### 1.10\n   ```\n   =================\n\n* Disabled SSLv3. (Issue 473)\n\n* Add ``Url.url`` property to return the composed url string. (Issue 394)\n\n* Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue 412)\n\n* ``MaxRetryError.reason`` will always be an exception, not string.\n  (Issue 481)\n\n* Fixed SSL-related timeouts not being detected as timeouts. (Issue 492)\n\n* Py3: Use ``ssl.create_default_context()`` when available. (Issue 473)\n\n* Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n  (Issue 496)\n\n* Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n  (Issue 499)\n\n* Close and discard sockets which experienced SSL-related errors.\n  (Issue 501)\n\n* Handle ``body`` param in ``.request(...)``. (Issue 513)\n\n* Respect timeout with HTTPS proxy. (Issue 505)\n\n* PyOpenSSL: Handle ZeroReturnError exception. (Issue 520)\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ==================\n\n* Apply socket arguments before binding. (Issue 427)\n\n* More careful checks if fp-like object is closed. (Issue 435)\n\n* Fixed packaging issues of some development-related files not\n  getting included. (Issue 440)\n\n* Allow performing *only* fingerprint verification. (Issue 444)\n\n* Emit ``SecurityWarning`` if system clock is waaay off. (Issue 445)\n\n* Fixed PyOpenSSL compatibility with PyPy. (Issue 450)\n\n* Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n  (Issue 443)\n   ```\n   \n  \n  \n   ### 1.9\n   ```\n   ================\n\n* Shuffled around development-related files. If you&#x27;re maintaining a distro\n  package of urllib3, you may need to tweak things. (Issue 415)\n\n* Unverified HTTPS requests will trigger a warning on the first request. See\n  our new `security documentation\n  &lt;https://urllib3.readthedocs.io/en/latest/security.html&gt;`_ for details.\n  (Issue 426)\n\n* New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n  (Issue 326)\n\n* All raised exceptions should now wrapped in a\n  ``urllib3.exceptions.HTTPException``-extending exception. (Issue 326)\n\n* All errors during a retry-enabled request should be wrapped in\n  ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n  which were previously exempt. Underlying error is accessible from the\n  ``.reason`` property. (Issue 326)\n\n* ``urllib3.exceptions.ConnectionError`` renamed to\n  ``urllib3.exceptions.ProtocolError``. (Issue 326)\n\n* Errors during response read (such as IncompleteRead) are now wrapped in\n  ``urllib3.exceptions.ProtocolError``. (Issue 418)\n\n* Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n  (Issue 417)\n\n* Catch read timeouts over SSL connections as\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 419)\n\n* Apply socket arguments before connecting. (Issue 427)\n   ```\n   \n  \n  \n   ### 1.8.3\n   ```\n   ==================\n\n* Fix TLS verification when using a proxy in Python 3.4.1. (Issue 385)\n\n* Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue 393)\n\n* Wrap ``socket.timeout`` exception with\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 399)\n\n* Fixed proxy-related bug where connections were being reused incorrectly.\n  (Issues 366, 369)\n\n* Added ``socket_options`` keyword parameter which allows to define\n  ``setsockopt`` configuration of new sockets. (Issue 397)\n\n* Removed ``HTTPConnection.tcp_nodelay`` in favor of\n  ``HTTPConnection.default_socket_options``. (Issue 397)\n\n* Fixed ``TypeError`` bug in Python 2.6.4. (Issue 411)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ==================\n\n* Fix ``urllib3.util`` not being included in the package.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ==================\n\n* Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue 356)\n\n* Don&#x27;t install ``dummyserver`` into ``site-packages`` as it&#x27;s only needed\n  for the test suite. (Issue 362)\n\n* Added support for specifying ``source_address``. (Issue 352)\n   ```\n   \n  \n  \n   ### 1.8\n   ```\n   ================\n\n* Improved url parsing in ``urllib3.util.parse_url`` (properly parse &#x27;&#x27; in\n  username, and blank ports like &#x27;hostname:&#x27;).\n\n* New ``urllib3.connection`` module which contains all the HTTPConnection\n  objects.\n\n* Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n  signature to a more sensible order. [Backwards incompatible]\n  (Issues 252, 262, 263)\n\n* Use ``backports.ssl_match_hostname`` if it&#x27;s installed. (Issue 274)\n\n* Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n  returns the number of bytes read so far. (Issue 277)\n\n* Support for platforms without threading. (Issue 289)\n\n* Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n  to allow a pool with no specified port to be considered equal to to an\n  HTTP/HTTPS url with port 80/443 explicitly provided. (Issue 305)\n\n* Improved default SSL/TLS settings to avoid vulnerabilities.\n  (Issue 309)\n\n* Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n  (Issue 310)\n\n* Disable Nagle&#x27;s Algorithm on the socket for non-proxies. A subset of requests\n  will send the entire HTTP request ~200 milliseconds faster; however, some of\n  the resulting TCP packets will be smaller. (Issue 254)\n\n* Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n  from the default 64 to 1024 in a single certificate. (Issue 318)\n\n* Headers are now passed and stored as a custom\n  ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n  (Issue 329, 333)\n\n* Headers no longer lose their case on Python 3. (Issue 236)\n\n* ``urllib3.contrib.pyopenssl`` now uses the operating system&#x27;s default CA\n  certificates on inject. (Issue 332)\n\n* Requests with ``retries=False`` will immediately raise any exceptions without\n  wrapping them in ``MaxRetryError``. (Issue 348)\n\n* Fixed open socket leak with SSL-related failures. (Issue 344, 348)\n   ```\n   \n  \n  \n   ### 1.7.1\n   ```\n   ==================\n\n* Added granular timeout support with new ``urllib3.util.Timeout`` class.\n  (Issue 231)\n\n* Fixed Python 3.4 support. (Issue 238)\n   ```\n   \n  \n  \n   ### 1.7\n   ```\n   ================\n\n* More exceptions are now pickle-able, with tests. (Issue 174)\n\n* Fixed redirecting with relative URLs in Location header. (Issue 178)\n\n* Support for relative urls in ``Location: ...`` header. (Issue 179)\n\n* ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n  file-like functionality. (Issue 187)\n\n* Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n  skip hostname verification for SSL connections. (Issue 194)\n\n* New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n  generator wrapped around ``.read(...)``. (Issue 198)\n\n* IPv6 url parsing enforces brackets around the hostname. (Issue 199)\n\n* Fixed thread race condition in\n  ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue 204)\n\n* ``ProxyManager`` requests now include non-default port in ``Host: ...``\n  header. (Issue 217)\n\n* Added HTTPS proxy support in ``ProxyManager``. (Issue 170 139)\n\n* New ``RequestField`` object can be passed to the ``fields=...`` param which\n  can specify headers. (Issue 220)\n\n* Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n  (Issue 221)\n\n* Use international headers when posting file names. (Issue 119)\n\n* Improved IPv6 support. (Issue 203)\n   ```\n   \n  \n  \n   ### 1.6\n   ```\n   ================\n\n* Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue 156)\n\n* ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n\n* Improved SSL-related code. ``cert_req`` now optionally takes a string like\n  &quot;REQUIRED&quot; or &quot;NONE&quot;. Same with ``ssl_version`` takes strings like &quot;SSLv23&quot;\n  The string values reflect the suffix of the respective constant variable.\n  (Issue 130)\n\n* Vendored ``socksipy`` now based on Anorov&#x27;s fork which handles unexpectedly\n  closed proxy connections and larger read buffers. (Issue 135)\n\n* Ensure the connection is closed if no data is received, fixes connection leak\n  on some platforms. (Issue 133)\n\n* Added SNI support for SSL/TLS connections on Py32+. (Issue 89)\n\n* Tests fixed to be compatible with Py26 again. (Issue 125)\n\n* Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n  to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue 109)\n\n* Allow an explicit content type to be specified when encoding file fields.\n  (Issue 126)\n\n* Exceptions are now pickleable, with tests. (Issue 101)\n\n* Fixed default headers not getting passed in some cases. (Issue 99)\n\n* Treat &quot;content-encoding&quot; header value as case-insensitive, per RFC 2616\n  Section 3.5. (Issue 110)\n\n* &quot;Connection Refused&quot; SocketErrors will get retried rather than raised.\n  (Issue 92)\n\n* Updated vendored ``six``, no longer overrides the global ``six`` module\n  namespace. (Issue 113)\n\n* ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n  the exception that prompted the final retry. If ``reason is None`` then it\n  was due to a redirect. (Issue 92, 114)\n\n* Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n  (Issue 149)\n\n* Don&#x27;t assume ``Content-Type: text/plain`` for multi-part encoding parameters\n  that are not files. (Issue 111)\n\n* Pass `strict` param down to ``httplib.HTTPConnection``. (Issue 122)\n\n* Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n  against an arbitrary hostname (when connecting by IP or for misconfigured\n  servers). (Issue 140)\n\n* Streaming decompression support. (Issue 159)\n   ```\n   \n  \n  \n   ### 1.5\n   ```\n   ================\n\n* Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n  logging in urllib3.\n\n* Native full URL parsing (including auth, path, query, fragment) available in\n  ``urllib3.util.parse_url(url)``.\n\n* Built-in redirect will switch method to &#x27;GET&#x27; if status code is 303.\n  (Issue 11)\n\n* ``urllib3.PoolManager`` strips the scheme and host before sending the request\n  uri. (Issue 8)\n\n* New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n  based on the Content-Type header, fails.\n\n* Fixed bug with pool depletion and leaking connections (Issue 76). Added\n  explicit connection closing on pool eviction. Added\n  ``urllib3.PoolManager.clear()``.\n\n* 99% -&gt; 100% unit test coverage.\n   ```\n   \n  \n  \n   ### 1.4\n   ```\n   ================\n\n* Minor AppEngine-related fixes.\n\n* Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n\n* Improved url parsing. (Issue 73)\n\n* IPv6 url support. (Issue 72)\n   ```\n   \n  \n  \n   ### 1.3\n   ```\n   ================\n\n* Removed pre-1.0 deprecated API.\n\n* Refactored helpers into a ``urllib3.util`` submodule.\n\n* Fixed multipart encoding to support list-of-tuples for keys with multiple\n  values. (Issue 48)\n\n* Fixed multiple Set-Cookie headers in response not getting merged properly in\n  Python 3. (Issue 53)\n\n* AppEngine support with Py27. (Issue 61)\n\n* Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n  bytes.\n   ```\n   \n  \n  \n   ### 1.2.2\n   ```\n   ==================\n\n* Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue 47)\n   ```\n   \n  \n  \n   ### 1.2.1\n   ```\n   ==================\n\n* Fixed another bug related to when ``ssl`` module is not available. (Issue 41)\n\n* Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n  which inherits from ``ValueError``.\n   ```\n   \n  \n  \n   ### 1.2\n   ```\n   ================\n\n* Added Python 3 support (tested on 3.2.2)\n\n* Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n\n* Use ``select.poll`` instead of ``select.select`` for platforms that support\n  it.\n\n* Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n  connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n\n* Fixed ``ImportError`` during install when ``ssl`` module is not available.\n  (Issue 41)\n\n* Fixed ``PoolManager`` redirects between schemes (such as HTTP -&gt; HTTPS) not\n  completing properly. (Issue 28, uncovered by Issue 10 in v1.1)\n\n* Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n  ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n  Added socket-level tests.\n\n* More tests. Achievement Unlocked: 99% Coverage.\n   ```\n   \n  \n  \n   ### 1.1\n   ```\n   ================\n\n* Refactored ``dummyserver`` to its own root namespace module (used for\n  testing).\n\n* Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n  Py32&#x27;s ``ssl_match_hostname``. (Issue 25)\n\n* Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue 10)\n\n* Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n  27)\n\n* Fixed timeout-related bugs. (Issues 17, 23)\n   ```\n   \n  \n  \n   ### 1.0.2\n   ```\n   ==================\n\n* Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n  you&#x27;re using the object manually. (Thanks pyos)\n\n* Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n  wrapping the access log in a mutex. (Thanks christer)\n\n* Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n  ``__getitem__`` behaviour), with tests. Shouldn&#x27;t affect core urllib3 code.\n   ```\n   \n  \n  \n   ### 1.0.1\n   ```\n   ==================\n\n* Fixed a bug where the same connection would get returned into the pool twice,\n  causing extraneous &quot;HttpConnectionPool is full&quot; log warnings.\n   ```\n   \n  \n  \n   ### 1.0\n   ```\n   ================\n\n* Added ``PoolManager`` with LRU expiration of connections (tested and\n  documented).\n* Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n  with HTTPS proxies).\n* Added optional partial-read support for responses when\n  ``preload_content=False``. You can now make requests and just read the headers\n  without loading the content.\n* Made response decoding optional (default on, same as before).\n* Added optional explicit boundary string for ``encode_multipart_formdata``.\n* Convenience request methods are now inherited from ``RequestMethods``. Old\n  helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n  the new ``request(method, url, ...)``.\n* Refactored code to be even more decoupled, reusable, and extendable.\n* License header added to ``.py`` files.\n* Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n  and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n* Embettered all the things!\n* Started writing this file.\n   ```\n   \n  \n  \n   ### 0.4.1\n   ```\n   ==================\n\n* Minor bug fixes, code cleanup.\n   ```\n   \n  \n  \n   ### 0.4\n   ```\n   ================\n\n* Better unicode support.\n* Added ``VerifiedHTTPSConnection``.\n* Added ``NTLMConnectionPool`` in contrib.\n* Minor improvements.\n   ```\n   \n  \n  \n   ### 0.3.1\n   ```\n   ==================\n\n* Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n   ```\n   \n  \n  \n   ### 0.3\n   ```\n   ================\n\n* Added HTTPS support.\n* Minor bug fixes.\n* Refactored, broken backwards compatibility with 0.2.\n* API to be treated as stable from this version forward.\n   ```\n   \n  \n  \n   ### 0.2\n   ```\n   ================\n\n* Added unit tests.\n* Bug fixes.\n   ```\n   \n  \n  \n   ### 0.1\n   ```\n   ================\n\n* First release.\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/urllib3\n  - Changelog: https://data.safetycli.com/changelogs/urllib3/\n</details>\n\n\n\n\n\n### Update [websockets](https://pypi.org/project/websockets) from **10.4** to **11.0.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 11.0.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.4\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 7.0\n   ```\n   See https://websockets.",
                "created_at": "2023-10-16T13:49:06Z",
                "updated_at": "2023-10-23T13:49:13Z",
                "closed_at": "2023-10-23T13:49:12Z",
                "merged_at": null,
                "merge_commit_sha": "c6414d488236798ec6d484f2c590c994e77606ea",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/commits",
                "review_comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/comments",
                "review_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/comments",
                "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/2f83f4f36babb98da89fb21b3eb142acd5daa9f6",
                "head": {
                    "label": "alpacahq:pyup-scheduled-update-2023-10-16",
                    "ref": "pyup-scheduled-update-2023-10-16",
                    "sha": "2f83f4f36babb98da89fb21b3eb142acd5daa9f6",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-23T11:03:45Z",
                        "pushed_at": "2023-10-23T13:49:09Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1632,
                        "watchers_count": 1632,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 553,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 54,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 553,
                        "open_issues": 54,
                        "watchers": 1632,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "alpacahq:master",
                    "ref": "master",
                    "sha": "f54b5a529591dae708cd1a52e77bef45965e012d",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-23T11:03:45Z",
                        "pushed_at": "2023-10-23T13:49:09Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1632,
                        "watchers_count": 1632,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 553,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 54,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 553,
                        "open_issues": 54,
                        "watchers": 1632,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726"
                    },
                    "html": {
                        "href": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/2f83f4f36babb98da89fb21b3eb142acd5daa9f6"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": true,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 1,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 5,
                "additions": 5,
                "deletions": 5,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-23T13:49:14Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773207682",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 16239342,
            "login": "pyup-bot",
            "display_login": "pyup-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pyup-bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/16239342?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726",
                "repository_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/labels{/name}",
                "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/comments",
                "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/events",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726",
                "id": 1945265762,
                "node_id": "PR_kwDOB21qNs5c5w3l",
                "number": 726,
                "title": "Scheduled weekly dependency update for week 42",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-16T13:49:06Z",
                "updated_at": "2023-10-23T13:49:12Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726",
                    "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726",
                    "diff_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726.diff",
                    "patch_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726.patch",
                    "merged_at": null
                },
                "body": "\n\n\n\n\n### Update [urllib3](https://pypi.org/project/urllib3) from **1.26.17** to **2.0.6**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 2.0.6\n   ```\n   ==================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ==================\n\n- Allowed pyOpenSSL third-party module without any deprecation warning. (`3126 &lt;https://github.com/urllib3/urllib3/issues/3126&gt;`__)\n- Fixed default ``blocksize`` of ``HTTPConnection`` classes to match high-level classes. Previously was 8KiB, now 16KiB. (`3066 &lt;https://github.com/urllib3/urllib3/issues/3066&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ==================\n\n- Added support for union operators to ``HTTPHeaderDict`` (`2254 &lt;https://github.com/urllib3/urllib3/issues/2254&gt;`__)\n- Added ``BaseHTTPResponse`` to ``urllib3.__all__`` (`3078 &lt;https://github.com/urllib3/urllib3/issues/3078&gt;`__)\n- Fixed ``urllib3.connection.HTTPConnection`` to raise the ``http.client.connect`` audit event to have the same behavior as the standard library HTTP client (`2757 &lt;https://github.com/urllib3/urllib3/issues/2757&gt;`__)\n- Relied on the standard library for checking hostnames in supported PyPy releases (`3087 &lt;https://github.com/urllib3/urllib3/issues/3087&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ==================\n\n- Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (`3020 &lt;https://github.com/urllib3/urllib3/issues/3020&gt;`__)\n- Deprecated URLs which don&#x27;t have an explicit scheme (`2950 &lt;https://github.com/urllib3/urllib3/pull/2950&gt;`_)\n- Fixed response decoding with Zstandard when compressed data is made of several frames. (`3008 &lt;https://github.com/urllib3/urllib3/issues/3008&gt;`__)\n- Fixed ``assert_hostname=False`` to correctly skip hostname check. (`3051 &lt;https://github.com/urllib3/urllib3/issues/3051&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ==================\n\n- Fixed ``HTTPResponse.stream()`` to continue yielding bytes if buffered decompressed data\n  was still available to be read even if the underlying socket is closed. This prevents\n  a compressed response from being truncated. (`3009 &lt;https://github.com/urllib3/urllib3/issues/3009&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ==================\n\n- Fixed a socket leak when fingerprint or hostname verifications fail. (`2991 &lt;https://github.com/urllib3/urllib3/issues/2991&gt;`__)\n- Fixed an error when ``HTTPResponse.read(0)`` was the first ``read`` call or when the internal response body buffer was otherwise empty. (`2998 &lt;https://github.com/urllib3/urllib3/issues/2998&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ==================\n\nRead the `v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;`__ for help upgrading to the latest version of urllib3.\n\nRemoved\n-------\n\n* Removed support for Python 2.7, 3.5, and 3.6 (`883 &lt;https://github.com/urllib3/urllib3/issues/883&gt;`__, `#2336 &lt;https://github.com/urllib3/urllib3/issues/2336&gt;`__).\n* Removed fallback on certificate ``commonName`` in ``match_hostname()`` function.\n  This behavior was deprecated in May 2000 in RFC 2818. Instead only ``subjectAltName``\n  is used to verify the hostname by default. To enable verifying the hostname against\n  ``commonName`` use ``SSLContext.hostname_checks_common_name = True`` (`2113 &lt;https://github.com/urllib3/urllib3/issues/2113&gt;`__).\n* Removed support for Python with an ``ssl`` module compiled with LibreSSL, CiscoSSL,\n  wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed support for OpenSSL versions earlier than 1.1.1 or that don&#x27;t have SNI support.\n  When an incompatible OpenSSL version is detected an ``ImportError`` is raised (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the list of default ciphers for OpenSSL 1.1.1+ and SecureTransport as their own defaults are already secure (`2082 &lt;https://github.com/urllib3/urllib3/issues/2082&gt;`__).\n* Removed ``urllib3.contrib.appengine.AppEngineManager`` and support for Google App Engine Standard Environment (`2044 &lt;https://github.com/urllib3/urllib3/issues/2044&gt;`__).\n* Removed deprecated ``Retry`` options ``method_whitelist``, ``DEFAULT_REDIRECT_HEADERS_BLACKLIST`` (`2086 &lt;https://github.com/urllib3/urllib3/issues/2086&gt;`__).\n* Removed ``urllib3.HTTPResponse.from_httplib`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Removed default value of ``None`` for the ``request_context`` parameter of ``urllib3.PoolManager.connection_from_pool_key``. This change should have no effect on users as the default value of ``None`` was an invalid option and was never used (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Removed the ``urllib3.request`` module. ``urllib3.request.RequestMethods`` has been made a private API.\n  This change was made to ensure that ``from urllib3 import request`` imported the top-level ``request()``\n  function instead of the ``urllib3.request`` module (`2269 &lt;https://github.com/urllib3/urllib3/issues/2269&gt;`__).\n* Removed support for SSLv3.0 from the ``urllib3.contrib.pyopenssl`` even when support is available from the compiled OpenSSL library (`2233 &lt;https://github.com/urllib3/urllib3/issues/2233&gt;`__).\n* Removed the deprecated ``urllib3.contrib.ntlmpool`` module (`2339 &lt;https://github.com/urllib3/urllib3/issues/2339&gt;`__).\n* Removed ``DEFAULT_CIPHERS``, ``HAS_SNI``, ``USE_DEFAULT_SSLCONTEXT_CIPHERS``, from the private module ``urllib3.util.ssl_`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed ``urllib3.exceptions.SNIMissingWarning`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the ``_prepare_conn`` method from ``HTTPConnectionPool``. Previously this was only used to call ``HTTPSConnection.set_cert()`` by ``HTTPSConnectionPool`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed ``tls_in_tls_required`` property from ``HTTPSConnection``. This is now determined from the ``scheme`` parameter in ``HTTPConnection.set_tunnel()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed the ``strict`` parameter/attribute from ``HTTPConnection``, ``HTTPSConnection``, ``HTTPConnectionPool``, ``HTTPSConnectionPool``, and ``HTTPResponse`` (`2064 &lt;https://github.com/urllib3/urllib3/issues/2064&gt;`__).\n\nDeprecated\n----------\n\n* Deprecated ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` which will be removed in urllib3 v2.1.0. Instead use ``HTTPResponse.headers`` and ``HTTPResponse.headers.get(name, default)``. (`1543 &lt;https://github.com/urllib3/urllib3/issues/1543&gt;`__, `#2814 &lt;https://github.com/urllib3/urllib3/issues/2814&gt;`__).\n* Deprecated ``urllib3.contrib.pyopenssl`` module which will be removed in urllib3 v2.1.0 (`2691 &lt;https://github.com/urllib3/urllib3/issues/2691&gt;`__).\n* Deprecated ``urllib3.contrib.securetransport`` module which will be removed in urllib3 v2.1.0 (`2692 &lt;https://github.com/urllib3/urllib3/issues/2692&gt;`__).\n* Deprecated ``ssl_version`` option in favor of ``ssl_minimum_version``. ``ssl_version`` will be removed in urllib3 v2.1.0 (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Deprecated the ``strict`` parameter of ``PoolManager.connection_from_context()`` as it&#x27;s not longer needed in Python 3.x. It will be removed in urllib3 v2.1.0 (`2267 &lt;https://github.com/urllib3/urllib3/issues/2267&gt;`__)\n* Deprecated the ``NewConnectionError.pool`` attribute which will be removed in urllib3 v2.1.0 (`2271 &lt;https://github.com/urllib3/urllib3/issues/2271&gt;`__).\n* Deprecated ``format_header_param_html5`` and ``format_header_param`` in favor of ``format_multipart_header_param`` (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``RequestField.header_formatter`` parameter which will be removed in urllib3 v2.1.0 (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``HTTPSConnection.set_cert()`` method. Instead pass parameters to the ``HTTPSConnection`` constructor (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Deprecated ``HTTPConnection.request_chunked()`` method which will be removed in urllib3 v2.1.0. Instead pass ``chunked=True`` to ``HTTPConnection.request()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n\nAdded\n-----\n\n* Added top-level ``urllib3.request`` function which uses a preconfigured module-global ``PoolManager`` instance (`2150 &lt;https://github.com/urllib3/urllib3/issues/2150&gt;`__).\n* Added the ``json`` parameter to ``urllib3.request()``, ``PoolManager.request()``, and ``ConnectionPool.request()`` methods to send JSON bodies in requests. Using this parameter will set the header ``Content-Type: application/json`` if ``Content-Type`` isn&#x27;t already defined.\n  Added support for parsing JSON response bodies with ``HTTPResponse.json()`` method (`2243 &lt;https://github.com/urllib3/urllib3/issues/2243&gt;`__).\n* Added type hints to the ``urllib3`` module (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Added ``ssl_minimum_version`` and ``ssl_maximum_version`` options which set\n  ``SSLContext.minimum_version`` and ``SSLContext.maximum_version`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Added support for Zstandard (RFC 8878) when ``zstandard`` 1.18.0 or later is installed.\n  Added the ``zstd`` extra which installs the ``zstandard`` package (`1992 &lt;https://github.com/urllib3/urllib3/issues/1992&gt;`__).\n* Added ``urllib3.response.BaseHTTPResponse`` class. All future response classes will be subclasses of ``BaseHTTPResponse`` (`2083 &lt;https://github.com/urllib3/urllib3/issues/2083&gt;`__).\n* Added ``FullPoolError`` which is raised when ``PoolManager(block=True)`` and a connection is returned to a full pool (`2197 &lt;https://github.com/urllib3/urllib3/issues/2197&gt;`__).\n* Added ``HTTPHeaderDict`` to the top-level ``urllib3`` namespace (`2216 &lt;https://github.com/urllib3/urllib3/issues/2216&gt;`__).\n* Added support for configuring header merging behavior with HTTPHeaderDict\n  When using a ``HTTPHeaderDict`` to provide headers for a request, by default duplicate\n  header values will be repeated. But if ``combine=True`` is passed into a call to\n  ``HTTPHeaderDict.add``, then the added header value will be merged in with an existing\n  value into a comma-separated list (``X-My-Header: foo, bar``) (`2242 &lt;https://github.com/urllib3/urllib3/issues/2242&gt;`__).\n* Added ``NameResolutionError`` exception when a DNS error occurs (`2305 &lt;https://github.com/urllib3/urllib3/issues/2305&gt;`__).\n* Added ``proxy_assert_hostname`` and ``proxy_assert_fingerprint`` kwargs to ``ProxyManager`` (`2409 &lt;https://github.com/urllib3/urllib3/issues/2409&gt;`__).\n* Added a configurable ``backoff_max`` parameter to the ``Retry`` class.\n  If a custom ``backoff_max`` is provided to the ``Retry`` class, it\n  will replace the ``Retry.DEFAULT_BACKOFF_MAX`` (`2494 &lt;https://github.com/urllib3/urllib3/issues/2494&gt;`__).\n* Added the ``authority`` property to the Url class as per RFC 3986 3.2. This property should be used in place of ``netloc`` for users who want to include the userinfo (auth) component of the URI (`2520 &lt;https://github.com/urllib3/urllib3/issues/2520&gt;`__).\n* Added the ``scheme`` parameter to ``HTTPConnection.set_tunnel`` to configure the scheme of the origin being tunnelled to (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added the ``is_closed``, ``is_connected`` and ``has_connected_to_proxy`` properties to ``HTTPConnection`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added optional ``backoff_jitter`` parameter to ``Retry``. (`2952 &lt;https://github.com/urllib3/urllib3/issues/2952&gt;`__)\n\nChanged\n-------\n\n* Changed ``urllib3.response.HTTPResponse.read`` to respect the semantics of ``io.BufferedIOBase`` regardless of compression. Specifically, this method:\n\n  * Only returns an empty bytes object to indicate EOF (that is, the response has been fully consumed).\n  * Never returns more bytes than requested.\n  * Can issue any number of system calls: zero, one or multiple.\n\n  If you want each ``urllib3.response.HTTPResponse.read`` call to issue a single system call, you need to disable decompression by setting ``decode_content=False`` (`2128 &lt;https://github.com/urllib3/urllib3/issues/2128&gt;`__).\n* Changed ``urllib3.HTTPConnection.getresponse`` to return an instance of ``urllib3.HTTPResponse`` instead of ``http.client.HTTPResponse`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Changed ``ssl_version`` to instead set the corresponding ``SSLContext.minimum_version``\n  and ``SSLContext.maximum_version`` values.  Regardless of ``ssl_version`` passed\n  ``SSLContext`` objects are now constructed using ``ssl.PROTOCOL_TLS_CLIENT`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Changed default ``SSLContext.minimum_version`` to be ``TLSVersion.TLSv1_2`` in line with Python 3.10 (`2373 &lt;https://github.com/urllib3/urllib3/issues/2373&gt;`__).\n* Changed ``ProxyError`` to wrap any connection error (timeout, TLS, DNS) that occurs when connecting to the proxy (`2482 &lt;https://github.com/urllib3/urllib3/pull/2482&gt;`__).\n* Changed ``urllib3.util.create_urllib3_context`` to not override the system cipher suites with\n  a default value. The new default will be cipher suites configured by the operating system (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Changed ``multipart/form-data`` header parameter formatting matches the WHATWG HTML Standard as of 2021-06-10. Control characters in filenames are no longer percent encoded (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Changed the error raised when connecting via HTTPS when the ``ssl`` module isn&#x27;t available from ``SSLError`` to ``ImportError`` (`2589 &lt;https://github.com/urllib3/urllib3/issues/2589&gt;`__).\n* Changed ``HTTPConnection.request()`` to always use lowercase chunk boundaries when sending requests with ``Transfer-Encoding: chunked`` (`2515 &lt;https://github.com/urllib3/urllib3/issues/2515&gt;`__).\n* Changed ``enforce_content_length`` default to True, preventing silent data loss when reading streamed responses (`2514 &lt;https://github.com/urllib3/urllib3/issues/2514&gt;`__).\n* Changed internal implementation of ``HTTPHeaderDict`` to use ``dict`` instead of ``collections.OrderedDict`` for better performance (`2080 &lt;https://github.com/urllib3/urllib3/issues/2080&gt;`__).\n* Changed the ``urllib3.contrib.pyopenssl`` module to wrap ``OpenSSL.SSL.Error`` with ``ssl.SSLError`` in ``PyOpenSSLContext.load_cert_chain`` (`2628 &lt;https://github.com/urllib3/urllib3/issues/2628&gt;`__).\n* Changed usage of the deprecated ``socket.error`` to ``OSError`` (`2120 &lt;https://github.com/urllib3/urllib3/issues/2120&gt;`__).\n* Changed all parameters in the ``HTTPConnection`` and ``HTTPSConnection`` constructors to be keyword-only except ``host`` and ``port`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed ``HTTPConnection.getresponse()`` to set the socket timeout from ``HTTPConnection.timeout`` value before reading\n  data from the socket. This previously was done manually by the ``HTTPConnectionPool`` calling ``HTTPConnection.sock.settimeout(...)`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed the ``_proxy_host`` property to ``_tunnel_host`` in ``HTTPConnectionPool`` to more closely match how the property is used (value in ``HTTPConnection.set_tunnel()``) (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed name of ``Retry.BACK0FF_MAX`` to be ``Retry.DEFAULT_BACKOFF_MAX``.\n* Changed TLS handshakes to use ``SSLContext.check_hostname`` when possible (`2452 &lt;https://github.com/urllib3/urllib3/pull/2452&gt;`__).\n* Changed ``server_hostname`` to behave like other parameters only used by ``HTTPSConnectionPool`` (`2537 &lt;https://github.com/urllib3/urllib3/pull/2537&gt;`__).\n* Changed the default ``blocksize`` to 16KB to match OpenSSL&#x27;s default read amounts (`2348 &lt;https://github.com/urllib3/urllib3/pull/2348&gt;`__).\n* Changed ``HTTPResponse.read()`` to raise an error when calling with ``decode_content=False`` after using ``decode_content=True`` to prevent data loss (`2800 &lt;https://github.com/urllib3/urllib3/issues/2800&gt;`__).\n\nFixed\n-----\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins would cause connection pools to be closed while requests are in progress (`1252 &lt;https://github.com/urllib3/urllib3/issues/1252&gt;`__).\n* Fixed an issue where an ``HTTPConnection`` instance would erroneously reuse the socket read timeout value from reading the previous response instead of a newly configured connect timeout.\n  Instead now if ``HTTPConnection.timeout`` is updated before sending the next request the new timeout value will be used (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__).\n* Fixed ``socket.error.errno`` when raised from pyOpenSSL&#x27;s ``OpenSSL.SSL.SysCallError`` (`2118 &lt;https://github.com/urllib3/urllib3/issues/2118&gt;`__).\n* Fixed the default value of ``HTTPSConnection.socket_options`` to match ``HTTPConnection`` (`2213 &lt;https://github.com/urllib3/urllib3/issues/2213&gt;`__).\n* Fixed a bug where ``headers`` would be modified by the ``remove_headers_on_redirect`` feature (`2272 &lt;https://github.com/urllib3/urllib3/issues/2272&gt;`__).\n* Fixed a reference cycle bug in ``urllib3.util.connection.create_connection()`` (`2277 &lt;https://github.com/urllib3/urllib3/issues/2277&gt;`__).\n* Fixed a socket leak if ``HTTPConnection.connect()`` fails (`2571 &lt;https://github.com/urllib3/urllib3/pull/2571&gt;`__).\n* Fixed ``urllib3.contrib.pyopenssl.WrappedSocket`` and ``urllib3.contrib.securetransport.WrappedSocket`` close methods (`2970 &lt;https://github.com/urllib3/urllib3/issues/2970&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.16\n   ```\n   ====================\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins\n  would cause connection pools to be closed while requests are in progress (`2954 &lt;https://github.com/urllib3/urllib3/pull/2954&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.15\n   ```\n   ====================\n\n* Fix socket timeout value when ``HTTPConnection`` is reused (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__)\n* Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n  (`2899 &lt;https://github.com/urllib3/urllib3/issues/2899&gt;`__)\n* Fix IDNA handling of &#x27;\\x80&#x27; byte (`2901 &lt;https://github.com/urllib3/urllib3/issues/2901&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.14\n   ```\n   ====================\n\n* Fixed parsing of port 0 (zero) returning None, instead of 0. (`2850 &lt;https://github.com/urllib3/urllib3/issues/2850&gt;`__)\n* Removed deprecated getheaders() calls in contrib module. Fixed the type hint of ``PoolKey.key_retries`` by adding ``bool`` to the union. (`2865 &lt;https://github.com/urllib3/urllib3/issues/2865&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.13\n   ```\n   ====================\n\n* Deprecated the ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` methods.\n* Fixed an issue where parsing a URL with leading zeroes in the port would be rejected\n  even when the port number after removing the zeroes was valid.\n* Fixed a deprecation warning when using cryptography v39.0.0.\n* Removed the ``&lt;4`` in the ``Requires-Python`` packaging metadata field.\n   ```\n   \n  \n  \n   ### 1.26.12\n   ```\n   ====================\n\n* Deprecated the `urllib3[secure]` extra and the `urllib3.contrib.pyopenssl` module.\n  Both will be removed in v2.x. See this `GitHub issue &lt;https://github.com/urllib3/urllib3/issues/2680&gt;`_\n  for justification and info on how to migrate.\n   ```\n   \n  \n  \n   ### 1.26.11\n   ```\n   ====================\n\n* Fixed an issue where reading more than 2 GiB in a call to ``HTTPResponse.read`` would\n  raise an ``OverflowError`` on Python 3.9 and earlier.\n   ```\n   \n  \n  \n   ### 1.26.10\n   ```\n   ====================\n\n* Removed support for Python 3.5\n* Fixed an issue where a ``ProxyError`` recommending configuring the proxy as HTTP\n  instead of HTTPS could appear even when an HTTPS proxy wasn&#x27;t configured.\n   ```\n   \n  \n  \n   ### 1.26.9\n   ```\n   ===================\n\n* Changed ``urllib3[brotli]`` extra to favor installing Brotli libraries that are still\n  receiving updates like ``brotli`` and ``brotlicffi`` instead of ``brotlipy``.\n  This change does not impact behavior of urllib3, only which dependencies are installed.\n* Fixed a socket leaking when ``HTTPSConnection.connect()`` raises an exception.\n* Fixed ``server_hostname`` being forwarded from ``PoolManager`` to ``HTTPConnectionPool``\n  when requesting an HTTP URL. Should only be forwarded when requesting an HTTPS URL.\n   ```\n   \n  \n  \n   ### 1.26.8\n   ```\n   ===================\n\n* Added extra message to ``urllib3.exceptions.ProxyError`` when urllib3 detects that\n  a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.\n* Added a mention of the size of the connection pool when discarding a connection due to the pool being full.\n* Added explicit support for Python 3.11.\n* Deprecated the ``Retry.MAX_BACKOFF`` class property in favor of ``Retry.DEFAULT_MAX_BACKOFF``\n  to better match the rest of the default parameter names. ``Retry.MAX_BACKOFF`` is removed in v2.0.\n* Changed location of the vendored ``ssl.match_hostname`` function from ``urllib3.packages.ssl_match_hostname``\n  to ``urllib3.util.ssl_match_hostname`` to ensure Python 3.10+ compatibility after being repackaged\n  by downstream distributors.\n* Fixed absolute imports, all imports are now relative.\n   ```\n   \n  \n  \n   ### 1.26.7\n   ```\n   ===================\n\n* Fixed a bug with HTTPS hostname verification involving IP addresses and lack\n  of SNI. (Issue 2400)\n* Fixed a bug where IPv6 braces weren&#x27;t stripped during certificate hostname\n  matching. (Issue 2240)\n   ```\n   \n  \n  \n   ### 1.26.6\n   ```\n   ===================\n\n* Deprecated the ``urllib3.contrib.ntlmpool`` module. urllib3 is not able to support\n  it properly due to `reasons listed in this issue &lt;https://github.com/urllib3/urllib3/issues/2282&gt;`_.\n  If you are a user of this module please leave a comment.\n* Changed ``HTTPConnection.request_chunked()`` to not erroneously emit multiple\n  ``Transfer-Encoding`` headers in the case that one is already specified.\n* Fixed typo in deprecation message to recommend ``Retry.DEFAULT_ALLOWED_METHODS``.\n   ```\n   \n  \n  \n   ### 1.26.5\n   ```\n   ===================\n\n* Fixed deprecation warnings emitted in Python 3.10.\n* Updated vendored ``six`` library to 1.16.0.\n* Improved performance of URL parser when splitting\n  the authority component.\n   ```\n   \n  \n  \n   ### 1.26.4\n   ```\n   ===================\n\n* Changed behavior of the default ``SSLContext`` when connecting to HTTPS proxy\n  during HTTPS requests. The default ``SSLContext`` now sets ``check_hostname=True``.\n   ```\n   \n  \n  \n   ### 1.26.3\n   ```\n   ===================\n\n* Fixed bytes and string comparison issue with headers (Pull 2141)\n\n* Changed ``ProxySchemeUnknown`` error message to be\n  more actionable if the user supplies a proxy URL without\n  a scheme. (Pull 2107)\n   ```\n   \n  \n  \n   ### 1.26.2\n   ```\n   ===================\n\n* Fixed an issue where ``wrap_socket`` and ``CERT_REQUIRED`` wouldn&#x27;t\n  be imported properly on Python 2.7.8 and earlier (Pull 2052)\n   ```\n   \n  \n  \n   ### 1.26.1\n   ```\n   ===================\n\n* Fixed an issue where two ``User-Agent`` headers would be sent if a\n  ``User-Agent`` header key is passed as ``bytes`` (Pull 2047)\n   ```\n   \n  \n  \n   ### 1.26.0\n   ```\n   ===================\n\n* **NOTE: urllib3 v2.0 will drop support for Python 2**.\n  `Read more in the v2.0 Roadmap &lt;https://urllib3.readthedocs.io/en/latest/v2-roadmap.html&gt;`_.\n\n* Added support for HTTPS proxies contacting HTTPS servers (Pull 1923, Pull 1806)\n\n* Deprecated negotiating TLSv1 and TLSv1.1 by default. Users that\n  still wish to use TLS earlier than 1.2 without a deprecation warning\n  should opt-in explicitly by setting ``ssl_version=ssl.PROTOCOL_TLSv1_1`` (Pull 2002)\n  **Starting in urllib3 v2.0: Connections that receive a ``DeprecationWarning`` will fail**\n\n* Deprecated ``Retry`` options ``Retry.DEFAULT_METHOD_WHITELIST``, ``Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST``\n  and ``Retry(method_whitelist=...)`` in favor of ``Retry.DEFAULT_ALLOWED_METHODS``,\n  ``Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT``, and ``Retry(allowed_methods=...)``\n  (Pull 2000) **Starting in urllib3 v2.0: Deprecated options will be removed**\n\n* Added default ``User-Agent`` header to every request (Pull 1750)\n\n* Added ``urllib3.util.SKIP_HEADER`` for skipping ``User-Agent``, ``Accept-Encoding``,\n  and ``Host`` headers from being automatically emitted with requests (Pull 2018)\n\n* Collapse ``transfer-encoding: chunked`` request data and framing into\n  the same ``socket.send()`` call (Pull 1906)\n\n* Send ``http/1.1`` ALPN identifier with every TLS handshake by default (Pull 1894)\n\n* Properly terminate SecureTransport connections when CA verification fails (Pull 1977)\n\n* Don&#x27;t emit an ``SNIMissingWarning`` when passing ``server_hostname=None``\n  to SecureTransport (Pull 1903)\n\n* Disabled requesting TLSv1.2 session tickets as they weren&#x27;t being used by urllib3 (Pull 1970)\n\n* Suppress ``BrokenPipeError`` when writing request body after the server\n  has closed the socket (Pull 1524)\n\n* Wrap ``ssl.SSLError`` that can be raised from reading a socket (e.g. &quot;bad MAC&quot;)\n  into an ``urllib3.exceptions.SSLError`` (Pull 1939)\n   ```\n   \n  \n  \n   ### 1.25.11\n   ```\n   ====================\n\n* Fix retry backoff time parsed from ``Retry-After`` header when given\n  in the HTTP date format. The HTTP date was parsed as the local timezone\n  rather than accounting for the timezone in the HTTP date (typically\n  UTC) (Pull 1932, Pull 1935, Pull 1938, Pull 1949)\n\n* Fix issue where an error would be raised when the ``SSLKEYLOGFILE``\n  environment variable was set to the empty string. Now ``SSLContext.keylog_file``\n  is not set in this situation (Pull 2016)\n   ```\n   \n  \n  \n   ### 1.25.10\n   ```\n   ====================\n\n* Added support for ``SSLKEYLOGFILE`` environment variable for\n  logging TLS session keys with use with programs like\n  Wireshark for decrypting captured web traffic (Pull 1867)\n\n* Fixed loading of SecureTransport libraries on macOS Big Sur\n  due to the new dynamic linker cache (Pull 1905)\n\n* Collapse chunked request bodies data and framing into one\n  call to ``send()`` to reduce the number of TCP packets by 2-4x (Pull 1906)\n\n* Don&#x27;t insert ``None`` into ``ConnectionPool`` if the pool\n  was empty when requesting a connection (Pull 1866)\n\n* Avoid ``hasattr`` call in ``BrotliDecoder.decompress()`` (Pull 1858)\n   ```\n   \n  \n  \n   ### 1.25.9\n   ```\n   ===================\n\n* Added ``InvalidProxyConfigurationWarning`` which is raised when\n  erroneously specifying an HTTPS proxy URL. urllib3 doesn&#x27;t currently\n  support connecting to HTTPS proxies but will soon be able to\n  and we would like users to migrate properly without much breakage.\n\n  See `this GitHub issue &lt;https://github.com/urllib3/urllib3/issues/1850&gt;`_\n  for more information on how to fix your proxy config. (Pull 1851)\n\n* Drain connection after ``PoolManager`` redirect (Pull 1817)\n\n* Ensure ``load_verify_locations`` raises ``SSLError`` for all backends (Pull 1812)\n\n* Rename ``VerifiedHTTPSConnection`` to ``HTTPSConnection`` (Pull 1805)\n\n* Allow the CA certificate data to be passed as a string (Pull 1804)\n\n* Raise ``ValueError`` if method contains control characters (Pull 1800)\n\n* Add ``__repr__`` to ``Timeout`` (Pull 1795)\n   ```\n   \n  \n  \n   ### 1.25.8\n   ```\n   ===================\n\n* Drop support for EOL Python 3.4 (Pull 1774)\n\n* Optimize _encode_invalid_chars (Pull 1787)\n   ```\n   \n  \n  \n   ### 1.25.7\n   ```\n   ===================\n\n* Preserve ``chunked`` parameter on retries (Pull 1715, Pull 1734)\n\n* Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull 1704, Issue 1470)\n\n* Fix issue where URL fragment was sent within the request target. (Pull 1732)\n\n* Fix issue where an empty query section in a URL would fail to parse. (Pull 1732)\n\n* Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull 1703)\n   ```\n   \n  \n  \n   ### 1.25.6\n   ```\n   ===================\n\n* Fix issue where tilde (``~``) characters were incorrectly\n  percent-encoded in the path. (Pull 1692)\n   ```\n   \n  \n  \n   ### 1.25.5\n   ```\n   ===================\n\n* Add mitigation for BPO-37428 affecting Python &lt;3.7.4 and OpenSSL 1.1.1+ which\n  caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n  (Issue 1682)\n   ```\n   \n  \n  \n   ### 1.25.4\n   ```\n   ===================\n\n* Propagate Retry-After header settings to subsequent retries. (Pull 1607)\n\n* Fix edge case where Retry-After header was still respected even when\n  explicitly opted out of. (Pull 1607)\n\n* Remove dependency on ``rfc3986`` for URL parsing.\n\n* Fix issue where URLs containing invalid characters within ``Url.auth`` would\n  raise an exception instead of percent-encoding those characters.\n\n* Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n  work well with BufferedReaders and other ``io`` module features. (Pull 1652)\n\n* Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull 1673)\n   ```\n   \n  \n  \n   ### 1.25.3\n   ```\n   ===================\n\n* Change ``HTTPSConnection`` to load system CA certificates\n  when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n  unspecified. (Pull 1608, Issue 1603)\n\n* Upgrade bundled rfc3986 to v1.3.2. (Pull 1609, Issue 1605)\n   ```\n   \n  \n  \n   ### 1.25.2\n   ```\n   ===================\n\n* Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull 1583)\n\n* Change ``parse_url`` to percent-encode invalid characters within the\n  path, query, and target components. (Pull 1586)\n   ```\n   \n  \n  \n   ### 1.25.1\n   ```\n   ===================\n\n* Add support for Google&#x27;s ``Brotli`` package. (Pull 1572, Pull 1579)\n\n* Upgrade bundled rfc3986 to v1.3.1 (Pull 1578)\n   ```\n   \n  \n  \n   ### 1.25\n   ```\n   =================\n\n* Require and validate certificates by default when using HTTPS (Pull 1507)\n\n* Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull 1487)\n\n* Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n  encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull 1489)\n\n* Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n  implementations. (Pull 1496)\n\n* Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue 303, Pull 1492)\n\n* Fixed issue where OpenSSL would block if an encrypted client private key was\n  given and no password was given. Instead an ``SSLError`` is raised. (Pull 1489)\n\n* Added support for Brotli content encoding. It is enabled automatically if\n  ``brotlipy`` package is installed which can be requested with\n  ``urllib3[brotli]`` extra. (Pull 1532)\n\n* Drop ciphers using DSS key exchange from default TLS cipher suites.\n  Improve default ciphers when using SecureTransport. (Pull 1496)\n\n* Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue 1483)\n   ```\n   \n  \n  \n   ### 1.24.3\n   ```\n   ===================\n\n* Apply fix for CVE-2019-9740. (Pull 1591)\n   ```\n   \n  \n  \n   ### 1.24.2\n   ```\n   ===================\n\n* Don&#x27;t load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n  ``ssl_context`` parameters are specified.\n\n* Remove Authorization header regardless of case when redirecting to cross-site. (Issue 1510)\n\n* Add support for IPv6 addresses in subjectAltName section of certificates. (Issue 1269)\n   ```\n   \n  \n  \n   ### 1.24.1\n   ```\n   ===================\n\n* Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue 1467)\n\n* Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue 1462)\n   ```\n   \n  \n  \n   ### 1.24\n   ```\n   =================\n\n* Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull 1449)\n\n* Test against Python 3.7 on AppVeyor. (Pull 1453)\n\n* Early-out ipv6 checks when running on App Engine. (Pull 1450)\n\n* Change ambiguous description of backoff_factor (Pull 1436)\n\n* Add ability to handle multiple Content-Encodings (Issue 1441 and Pull 1442)\n\n* Skip DNS names that can&#x27;t be idna-decoded when using pyOpenSSL (Issue 1405).\n\n* Add a server_hostname parameter to HTTPSConnection which allows for\n  overriding the SNI hostname sent in the handshake. (Pull 1397)\n\n* Drop support for EOL Python 2.6 (Pull 1429 and Pull 1430)\n\n* Fixed bug where responses with header Content-Type: message/* erroneously\n  raised HeaderParsingError, resulting in a warning being logged. (Pull 1439)\n\n* Move urllib3 to src/urllib3 (Pull 1409)\n   ```\n   \n  \n  \n   ### 1.23\n   ```\n   =================\n\n* Allow providing a list of headers to strip from requests when redirecting\n  to a different host. Defaults to the ``Authorization`` header. Different\n  headers can be set via ``Retry.remove_headers_on_redirect``. (Issue 1316)\n\n* Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue 1247).\n\n* Dropped Python 3.3 support. (Pull 1242)\n\n* Put the connection back in the pool when calling stream() or read_chunked() on\n  a chunked HEAD response. (Issue 1234)\n\n* Fixed pyOpenSSL-specific ssl client authentication issue when clients\n  attempted to auth via certificate + chain (Issue 1060)\n\n* Add the port to the connectionpool connect print (Pull 1251)\n\n* Don&#x27;t use the ``uuid`` module to create multipart data boundaries. (Pull 1380)\n\n* ``read_chunked()`` on a closed response returns no chunks. (Issue 1088)\n\n* Add Python 2.6 support to ``contrib.securetransport`` (Pull 1359)\n\n* Added support for auth info in url for SOCKS proxy (Pull 1363)\n   ```\n   \n  \n  \n   ### 1.22\n   ```\n   =================\n\n* Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n  IPv6 proxy. (Issue 1222)\n\n* Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n  is available on ``MaxRetryError.reason``. (Issue 1112)\n\n* Drain and release connection before recursing on retry/redirect.  Fixes\n  deadlocks with a blocking connectionpool. (Issue 1167)\n\n* Fixed compatibility for cookiejar. (Issue 1229)\n\n* pyopenssl: Use vendored version of ``six``. (Issue 1231)\n   ```\n   \n  \n  \n   ### 1.21.1\n   ```\n   ===================\n\n* Fixed SecureTransport issue that would cause long delays in response body\n  delivery. (Pull 1154)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``socket_options`` flag to the ``PoolManager``.  (Issue 1165)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n  (Pull 1157)\n   ```\n   \n  \n  \n   ### 1.21\n   ```\n   =================\n\n* Improved performance of certain selector system calls on Python 3.5 and\n  later. (Pull 1095)\n\n* Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n  exceptions appropriately when sending data. (Pull 1125)\n\n* Selectors now detects a monkey-patched select module after import for modules\n  that patch the select module like eventlet, greenlet. (Pull 1128)\n\n* Reduced memory consumption when streaming zlib-compressed responses\n  (as opposed to raw deflate streams). (Pull 1129)\n\n* Connection pools now use the entire request context when constructing the\n  pool key. (Pull 1016)\n\n* ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n  ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n  (Pull 1016)\n\n* Add retry counter for ``status_forcelist``. (Issue 1147)\n\n* Added ``contrib`` module for using SecureTransport on macOS:\n  ``urllib3.contrib.securetransport``.  (Pull 1122)\n\n* urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n  for schemes it does not recognise, it assumes they are case-sensitive and\n  leaves them unchanged.\n  (Issue 1080)\n   ```\n   \n  \n  \n   ### 1.20\n   ```\n   =================\n\n* Added support for waiting for I/O using selectors other than select,\n  improving urllib3&#x27;s behaviour with large numbers of concurrent connections.\n  (Pull 1001)\n\n* Updated the date for the system clock check. (Issue 1005)\n\n* ConnectionPools now correctly consider hostnames to be case-insensitive.\n  (Issue 1032)\n\n* Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Pull 1063)\n\n* Outdated versions of cryptography now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Issue 1044)\n\n* Automatically attempt to rewind a file-like body object when a request is\n  retried or redirected. (Pull 1039)\n\n* Fix some bugs that occur when modules incautiously patch the queue module.\n  (Pull 1061)\n\n* Prevent retries from occurring on read timeouts for which the request method\n  was not in the method whitelist. (Issue 1059)\n\n* Changed the PyOpenSSL contrib module to lazily load idna to avoid\n  unnecessarily bloating the memory of programs that don&#x27;t need it. (Pull\n  1076)\n\n* Add support for IPv6 literals with zone identifiers. (Pull 1013)\n\n* Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n  proxies, and controlled remote DNS appropriately. (Issue 1035)\n   ```\n   \n  \n  \n   ### 1.19.1\n   ```\n   ===================\n\n* Fixed AppEngine import that didn&#x27;t function on Python 3.5. (Pull 1025)\n   ```\n   \n  \n  \n   ### 1.19\n   ```\n   =================\n\n* urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n  using the default retry logic. (Pull 955)\n\n* Remove markers from setup.py to assist ancient setuptools versions. (Issue\n  986)\n\n* Disallow superscripts and other integerish things in URL ports. (Issue 989)\n\n* Allow urllib3&#x27;s HTTPResponse.stream() method to continue to work with\n  non-httplib underlying FPs. (Pull 990)\n\n* Empty filenames in multipart headers are now emitted as such, rather than\n  being suppressed. (Issue 1015)\n\n* Prefer user-supplied Host headers on chunked uploads. (Issue 1009)\n   ```\n   \n  \n  \n   ### 1.18.1\n   ```\n   ===================\n\n* CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n  PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n  release fixes a vulnerability whereby urllib3 in the above configuration\n  would silently fail to validate TLS certificates due to erroneously setting\n  invalid flags in OpenSSL&#x27;s ``SSL_CTX_set_verify`` function. These erroneous\n  flags do not cause a problem in OpenSSL versions before 1.1.0, which\n  interprets the presence of any flag as requesting certificate validation.\n\n  There is no PR for this patch, as it was prepared for simultaneous disclosure\n  and release. The master branch received the same fix in Pull 1010.\n   ```\n   \n  \n  \n   ### 1.18\n   ```\n   =================\n\n* Fixed incorrect message for IncompleteRead exception. (Pull 973)\n\n* Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n  (Issue 258)\n\n* Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n  (Issue 977)\n\n* Fixed handling of wildcard certificates when using PyOpenSSL. (Issue 979)\n   ```\n   \n  \n  \n   ### 1.17\n   ```\n   =================\n\n* Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue 835)\n\n* ConnectionPool debug log now includes scheme, host, and port. (Issue 897)\n\n* Substantially refactored documentation. (Issue 887)\n\n* Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n  (Issue 858)\n\n* Normalize the scheme and host in the URL parser (Issue 833)\n\n* ``HTTPResponse`` contains the last ``Retry`` object, which now also\n  contains retries history. (Issue 848)\n\n* Timeout can no longer be set as boolean, and must be greater than zero.\n  (Pull 924)\n\n* Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n  now use cryptography and idna, both of which are already dependencies of\n  PyOpenSSL. (Pull 930)\n\n* Fixed infinite loop in ``stream`` when amt=None. (Issue 928)\n\n* Try to use the operating system&#x27;s certificates when we are using an\n  ``SSLContext``. (Pull 941)\n\n* Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n  ChaCha20, but ChaCha20 is then preferred to everything else. (Pull 947)\n\n* Updated cipher suite list to remove 3DES-based cipher suites. (Pull 958)\n\n* Removed the cipher suite fallback to allow HIGH ciphers. (Pull 958)\n\n* Implemented ``length_remaining`` to determine remaining content\n  to be read. (Pull 949)\n\n* Implemented ``enforce_content_length`` to enable exceptions when\n  incomplete data chunks are received. (Pull 949)\n\n* Dropped connection start, dropped connection reset, redirect, forced retry,\n  and new HTTPS connection log levels to DEBUG, from INFO. (Pull 967)\n   ```\n   \n  \n  \n   ### 1.16\n   ```\n   =================\n\n* Disable IPv6 DNS when IPv6 connections are not possible. (Issue 840)\n\n* Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n  overridden. (Issue 830)\n\n* Normalize scheme and host to lowercase for pool keys, and include\n  ``source_address``. (Issue 830)\n\n* Cleaner exception chain in Python 3 for ``_make_request``.\n  (Issue 861)\n\n* Fixed installing ``urllib3[socks]`` extra. (Issue 864)\n\n* Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n  called by subclasses. (Issue 873)\n\n* Retain ``release_conn`` state across retries. (Issues 651, 866)\n\n* Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n  ``HTTPResponse`` but can be replaced with a subclass. (Issue 879)\n   ```\n   \n  \n  \n   ### 1.15.1\n   ```\n   ===================\n\n* Fix packaging to include backports module. (Issue 841)\n   ```\n   \n  \n  \n   ### 1.15\n   ```\n   =================\n\n* Added Retry(raise_on_status=False). (Issue 720)\n\n* Always use setuptools, no more distutils fallback. (Issue 785)\n\n* Dropped support for Python 3.2. (Issue 786)\n\n* Chunked transfer encoding when requesting with ``chunked=True``.\n  (Issue 790)\n\n* Fixed regression with IPv6 port parsing. (Issue 801)\n\n* Append SNIMissingWarning messages to allow users to specify it in\n  the PYTHONWARNINGS environment variable. (Issue 816)\n\n* Handle unicode headers in Py2. (Issue 818)\n\n* Log certificate when there is a hostname mismatch. (Issue 820)\n\n* Preserve order of request/response headers. (Issue 821)\n   ```\n   \n  \n  \n   ### 1.14\n   ```\n   =================\n\n* contrib: SOCKS proxy support! (Issue 762)\n\n* Fixed AppEngine handling of transfer-encoding header and bug\n  in Timeout defaults checking. (Issue 763)\n   ```\n   \n  \n  \n   ### 1.13.1\n   ```\n   ===================\n\n* Fixed regression in IPv6 + SSL for match_hostname. (Issue 761)\n   ```\n   \n  \n  \n   ### 1.13\n   ```\n   =================\n\n* Fixed ``pip install urllib3[secure]`` on modern pip. (Issue 706)\n\n* pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue 717)\n\n* pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue 696)\n\n* Close connections more defensively on exception. (Issue 734)\n\n* Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n  repeatedly flushing the decoder, to function better on Jython. (Issue 743)\n\n* Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue 758)\n   ```\n   \n  \n  \n   ### 1.12\n   ```\n   =================\n\n* Rely on ``six`` for importing ``httplib`` to work around\n  conflicts with other Python 3 shims. (Issue 688)\n\n* Add support for directories of certificate authorities, as supported by\n  OpenSSL. (Issue 701)\n\n* New exception: ``NewConnectionError``, raised when we fail to establish\n  a new connection, usually ``ECONNREFUSED`` socket error.\n   ```\n   \n  \n  \n   ### 1.11\n   ```\n   =================\n\n* When ``ca_certs`` is given, ``cert_reqs`` defaults to\n  ``&#x27;CERT_REQUIRED&#x27;``. (Issue 650)\n\n* ``pip install urllib3[secure]`` will install Certifi and\n  PyOpenSSL as dependencies. (Issue 678)\n\n* Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n  (Issues 632, 679)\n\n* Added `urllib3.contrib.appengine &lt;https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine&gt;`_\n  which has an ``AppEngineManager`` for using ``URLFetch`` in a\n  Google AppEngine environment. (Issue 664)\n\n* Dev: Added test suite for AppEngine. (Issue 631)\n\n* Fix performance regression when using PyOpenSSL. (Issue 626)\n\n* Passing incorrect scheme (e.g. ``foo://``) will raise\n  ``ValueError`` instead of ``AssertionError`` (backwards\n  compatible for now, but please migrate). (Issue 640)\n\n* Fix pools not getting replenished when an error occurs during a\n  request using ``release_conn=False``. (Issue 644)\n\n* Fix pool-default headers not applying for url-encoded requests\n  like GET. (Issue 657)\n\n* log.warning in Python 3 when headers are skipped due to parsing\n  errors. (Issue 642)\n\n* Close and discard connections if an error occurs during read.\n  (Issue 660)\n\n* Fix host parsing for IPv6 proxies. (Issue 668)\n\n* Separate warning type SubjectAltNameWarning, now issued once\n  per host. (Issue 671)\n\n* Fix ``httplib.IncompleteRead`` not getting converted to\n  ``ProtocolError`` when using ``HTTPResponse.stream()``\n  (Issue 674)\n   ```\n   \n  \n  \n   ### 1.10.4\n   ```\n   ===================\n\n* Migrate tests to Tornado 4. (Issue 594)\n\n* Append default warning configuration rather than overwrite.\n  (Issue 603)\n\n* Fix streaming decoding regression. (Issue 595)\n\n* Fix chunked requests losing state across keep-alive connections.\n  (Issue 599)\n\n* Fix hanging when chunked HEAD response has no body. (Issue 605)\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ===================\n\n* Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n  (Issue 558)\n\n* Fix regression of duplicate header keys being discarded.\n  (Issue 563)\n\n* ``Response.stream()`` returns a generator for chunked responses.\n  (Issue 560)\n\n* Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n  (Issue 585)\n\n* Work on platforms without `ssl` module for plain HTTP requests.\n  (Issue 587)\n\n* Stop relying on the stdlib&#x27;s default cipher list. (Issue 588)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ===================\n\n* Fix file descriptor leakage on retries. (Issue 548)\n\n* Removed RC4 from default cipher list. (Issue 551)\n\n* Header performance improvements. (Issue 544)\n\n* Fix PoolManager not obeying redirect retry settings. (Issue 553)\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ===================\n\n* Pools can be used as context managers. (Issue 545)\n\n* Don&#x27;t re-use connections which experienced an SSLError. (Issue 529)\n\n* Don&#x27;t fail when gzip decoding an empty stream. (Issue 535)\n\n* Add sha256 support for fingerprint verification. (Issue 540)\n\n* Fixed handling of header values containing commas. (Issue 533)\n   ```\n   \n  \n  \n   ### 1.10\n   ```\n   =================\n\n* Disabled SSLv3. (Issue 473)\n\n* Add ``Url.url`` property to return the composed url string. (Issue 394)\n\n* Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue 412)\n\n* ``MaxRetryError.reason`` will always be an exception, not string.\n  (Issue 481)\n\n* Fixed SSL-related timeouts not being detected as timeouts. (Issue 492)\n\n* Py3: Use ``ssl.create_default_context()`` when available. (Issue 473)\n\n* Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n  (Issue 496)\n\n* Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n  (Issue 499)\n\n* Close and discard sockets which experienced SSL-related errors.\n  (Issue 501)\n\n* Handle ``body`` param in ``.request(...)``. (Issue 513)\n\n* Respect timeout with HTTPS proxy. (Issue 505)\n\n* PyOpenSSL: Handle ZeroReturnError exception. (Issue 520)\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ==================\n\n* Apply socket arguments before binding. (Issue 427)\n\n* More careful checks if fp-like object is closed. (Issue 435)\n\n* Fixed packaging issues of some development-related files not\n  getting included. (Issue 440)\n\n* Allow performing *only* fingerprint verification. (Issue 444)\n\n* Emit ``SecurityWarning`` if system clock is waaay off. (Issue 445)\n\n* Fixed PyOpenSSL compatibility with PyPy. (Issue 450)\n\n* Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n  (Issue 443)\n   ```\n   \n  \n  \n   ### 1.9\n   ```\n   ================\n\n* Shuffled around development-related files. If you&#x27;re maintaining a distro\n  package of urllib3, you may need to tweak things. (Issue 415)\n\n* Unverified HTTPS requests will trigger a warning on the first request. See\n  our new `security documentation\n  &lt;https://urllib3.readthedocs.io/en/latest/security.html&gt;`_ for details.\n  (Issue 426)\n\n* New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n  (Issue 326)\n\n* All raised exceptions should now wrapped in a\n  ``urllib3.exceptions.HTTPException``-extending exception. (Issue 326)\n\n* All errors during a retry-enabled request should be wrapped in\n  ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n  which were previously exempt. Underlying error is accessible from the\n  ``.reason`` property. (Issue 326)\n\n* ``urllib3.exceptions.ConnectionError`` renamed to\n  ``urllib3.exceptions.ProtocolError``. (Issue 326)\n\n* Errors during response read (such as IncompleteRead) are now wrapped in\n  ``urllib3.exceptions.ProtocolError``. (Issue 418)\n\n* Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n  (Issue 417)\n\n* Catch read timeouts over SSL connections as\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 419)\n\n* Apply socket arguments before connecting. (Issue 427)\n   ```\n   \n  \n  \n   ### 1.8.3\n   ```\n   ==================\n\n* Fix TLS verification when using a proxy in Python 3.4.1. (Issue 385)\n\n* Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue 393)\n\n* Wrap ``socket.timeout`` exception with\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 399)\n\n* Fixed proxy-related bug where connections were being reused incorrectly.\n  (Issues 366, 369)\n\n* Added ``socket_options`` keyword parameter which allows to define\n  ``setsockopt`` configuration of new sockets. (Issue 397)\n\n* Removed ``HTTPConnection.tcp_nodelay`` in favor of\n  ``HTTPConnection.default_socket_options``. (Issue 397)\n\n* Fixed ``TypeError`` bug in Python 2.6.4. (Issue 411)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ==================\n\n* Fix ``urllib3.util`` not being included in the package.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ==================\n\n* Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue 356)\n\n* Don&#x27;t install ``dummyserver`` into ``site-packages`` as it&#x27;s only needed\n  for the test suite. (Issue 362)\n\n* Added support for specifying ``source_address``. (Issue 352)\n   ```\n   \n  \n  \n   ### 1.8\n   ```\n   ================\n\n* Improved url parsing in ``urllib3.util.parse_url`` (properly parse &#x27;&#x27; in\n  username, and blank ports like &#x27;hostname:&#x27;).\n\n* New ``urllib3.connection`` module which contains all the HTTPConnection\n  objects.\n\n* Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n  signature to a more sensible order. [Backwards incompatible]\n  (Issues 252, 262, 263)\n\n* Use ``backports.ssl_match_hostname`` if it&#x27;s installed. (Issue 274)\n\n* Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n  returns the number of bytes read so far. (Issue 277)\n\n* Support for platforms without threading. (Issue 289)\n\n* Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n  to allow a pool with no specified port to be considered equal to to an\n  HTTP/HTTPS url with port 80/443 explicitly provided. (Issue 305)\n\n* Improved default SSL/TLS settings to avoid vulnerabilities.\n  (Issue 309)\n\n* Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n  (Issue 310)\n\n* Disable Nagle&#x27;s Algorithm on the socket for non-proxies. A subset of requests\n  will send the entire HTTP request ~200 milliseconds faster; however, some of\n  the resulting TCP packets will be smaller. (Issue 254)\n\n* Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n  from the default 64 to 1024 in a single certificate. (Issue 318)\n\n* Headers are now passed and stored as a custom\n  ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n  (Issue 329, 333)\n\n* Headers no longer lose their case on Python 3. (Issue 236)\n\n* ``urllib3.contrib.pyopenssl`` now uses the operating system&#x27;s default CA\n  certificates on inject. (Issue 332)\n\n* Requests with ``retries=False`` will immediately raise any exceptions without\n  wrapping them in ``MaxRetryError``. (Issue 348)\n\n* Fixed open socket leak with SSL-related failures. (Issue 344, 348)\n   ```\n   \n  \n  \n   ### 1.7.1\n   ```\n   ==================\n\n* Added granular timeout support with new ``urllib3.util.Timeout`` class.\n  (Issue 231)\n\n* Fixed Python 3.4 support. (Issue 238)\n   ```\n   \n  \n  \n   ### 1.7\n   ```\n   ================\n\n* More exceptions are now pickle-able, with tests. (Issue 174)\n\n* Fixed redirecting with relative URLs in Location header. (Issue 178)\n\n* Support for relative urls in ``Location: ...`` header. (Issue 179)\n\n* ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n  file-like functionality. (Issue 187)\n\n* Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n  skip hostname verification for SSL connections. (Issue 194)\n\n* New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n  generator wrapped around ``.read(...)``. (Issue 198)\n\n* IPv6 url parsing enforces brackets around the hostname. (Issue 199)\n\n* Fixed thread race condition in\n  ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue 204)\n\n* ``ProxyManager`` requests now include non-default port in ``Host: ...``\n  header. (Issue 217)\n\n* Added HTTPS proxy support in ``ProxyManager``. (Issue 170 139)\n\n* New ``RequestField`` object can be passed to the ``fields=...`` param which\n  can specify headers. (Issue 220)\n\n* Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n  (Issue 221)\n\n* Use international headers when posting file names. (Issue 119)\n\n* Improved IPv6 support. (Issue 203)\n   ```\n   \n  \n  \n   ### 1.6\n   ```\n   ================\n\n* Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue 156)\n\n* ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n\n* Improved SSL-related code. ``cert_req`` now optionally takes a string like\n  &quot;REQUIRED&quot; or &quot;NONE&quot;. Same with ``ssl_version`` takes strings like &quot;SSLv23&quot;\n  The string values reflect the suffix of the respective constant variable.\n  (Issue 130)\n\n* Vendored ``socksipy`` now based on Anorov&#x27;s fork which handles unexpectedly\n  closed proxy connections and larger read buffers. (Issue 135)\n\n* Ensure the connection is closed if no data is received, fixes connection leak\n  on some platforms. (Issue 133)\n\n* Added SNI support for SSL/TLS connections on Py32+. (Issue 89)\n\n* Tests fixed to be compatible with Py26 again. (Issue 125)\n\n* Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n  to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue 109)\n\n* Allow an explicit content type to be specified when encoding file fields.\n  (Issue 126)\n\n* Exceptions are now pickleable, with tests. (Issue 101)\n\n* Fixed default headers not getting passed in some cases. (Issue 99)\n\n* Treat &quot;content-encoding&quot; header value as case-insensitive, per RFC 2616\n  Section 3.5. (Issue 110)\n\n* &quot;Connection Refused&quot; SocketErrors will get retried rather than raised.\n  (Issue 92)\n\n* Updated vendored ``six``, no longer overrides the global ``six`` module\n  namespace. (Issue 113)\n\n* ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n  the exception that prompted the final retry. If ``reason is None`` then it\n  was due to a redirect. (Issue 92, 114)\n\n* Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n  (Issue 149)\n\n* Don&#x27;t assume ``Content-Type: text/plain`` for multi-part encoding parameters\n  that are not files. (Issue 111)\n\n* Pass `strict` param down to ``httplib.HTTPConnection``. (Issue 122)\n\n* Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n  against an arbitrary hostname (when connecting by IP or for misconfigured\n  servers). (Issue 140)\n\n* Streaming decompression support. (Issue 159)\n   ```\n   \n  \n  \n   ### 1.5\n   ```\n   ================\n\n* Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n  logging in urllib3.\n\n* Native full URL parsing (including auth, path, query, fragment) available in\n  ``urllib3.util.parse_url(url)``.\n\n* Built-in redirect will switch method to &#x27;GET&#x27; if status code is 303.\n  (Issue 11)\n\n* ``urllib3.PoolManager`` strips the scheme and host before sending the request\n  uri. (Issue 8)\n\n* New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n  based on the Content-Type header, fails.\n\n* Fixed bug with pool depletion and leaking connections (Issue 76). Added\n  explicit connection closing on pool eviction. Added\n  ``urllib3.PoolManager.clear()``.\n\n* 99% -&gt; 100% unit test coverage.\n   ```\n   \n  \n  \n   ### 1.4\n   ```\n   ================\n\n* Minor AppEngine-related fixes.\n\n* Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n\n* Improved url parsing. (Issue 73)\n\n* IPv6 url support. (Issue 72)\n   ```\n   \n  \n  \n   ### 1.3\n   ```\n   ================\n\n* Removed pre-1.0 deprecated API.\n\n* Refactored helpers into a ``urllib3.util`` submodule.\n\n* Fixed multipart encoding to support list-of-tuples for keys with multiple\n  values. (Issue 48)\n\n* Fixed multiple Set-Cookie headers in response not getting merged properly in\n  Python 3. (Issue 53)\n\n* AppEngine support with Py27. (Issue 61)\n\n* Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n  bytes.\n   ```\n   \n  \n  \n   ### 1.2.2\n   ```\n   ==================\n\n* Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue 47)\n   ```\n   \n  \n  \n   ### 1.2.1\n   ```\n   ==================\n\n* Fixed another bug related to when ``ssl`` module is not available. (Issue 41)\n\n* Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n  which inherits from ``ValueError``.\n   ```\n   \n  \n  \n   ### 1.2\n   ```\n   ================\n\n* Added Python 3 support (tested on 3.2.2)\n\n* Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n\n* Use ``select.poll`` instead of ``select.select`` for platforms that support\n  it.\n\n* Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n  connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n\n* Fixed ``ImportError`` during install when ``ssl`` module is not available.\n  (Issue 41)\n\n* Fixed ``PoolManager`` redirects between schemes (such as HTTP -&gt; HTTPS) not\n  completing properly. (Issue 28, uncovered by Issue 10 in v1.1)\n\n* Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n  ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n  Added socket-level tests.\n\n* More tests. Achievement Unlocked: 99% Coverage.\n   ```\n   \n  \n  \n   ### 1.1\n   ```\n   ================\n\n* Refactored ``dummyserver`` to its own root namespace module (used for\n  testing).\n\n* Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n  Py32&#x27;s ``ssl_match_hostname``. (Issue 25)\n\n* Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue 10)\n\n* Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n  27)\n\n* Fixed timeout-related bugs. (Issues 17, 23)\n   ```\n   \n  \n  \n   ### 1.0.2\n   ```\n   ==================\n\n* Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n  you&#x27;re using the object manually. (Thanks pyos)\n\n* Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n  wrapping the access log in a mutex. (Thanks christer)\n\n* Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n  ``__getitem__`` behaviour), with tests. Shouldn&#x27;t affect core urllib3 code.\n   ```\n   \n  \n  \n   ### 1.0.1\n   ```\n   ==================\n\n* Fixed a bug where the same connection would get returned into the pool twice,\n  causing extraneous &quot;HttpConnectionPool is full&quot; log warnings.\n   ```\n   \n  \n  \n   ### 1.0\n   ```\n   ================\n\n* Added ``PoolManager`` with LRU expiration of connections (tested and\n  documented).\n* Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n  with HTTPS proxies).\n* Added optional partial-read support for responses when\n  ``preload_content=False``. You can now make requests and just read the headers\n  without loading the content.\n* Made response decoding optional (default on, same as before).\n* Added optional explicit boundary string for ``encode_multipart_formdata``.\n* Convenience request methods are now inherited from ``RequestMethods``. Old\n  helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n  the new ``request(method, url, ...)``.\n* Refactored code to be even more decoupled, reusable, and extendable.\n* License header added to ``.py`` files.\n* Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n  and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n* Embettered all the things!\n* Started writing this file.\n   ```\n   \n  \n  \n   ### 0.4.1\n   ```\n   ==================\n\n* Minor bug fixes, code cleanup.\n   ```\n   \n  \n  \n   ### 0.4\n   ```\n   ================\n\n* Better unicode support.\n* Added ``VerifiedHTTPSConnection``.\n* Added ``NTLMConnectionPool`` in contrib.\n* Minor improvements.\n   ```\n   \n  \n  \n   ### 0.3.1\n   ```\n   ==================\n\n* Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n   ```\n   \n  \n  \n   ### 0.3\n   ```\n   ================\n\n* Added HTTPS support.\n* Minor bug fixes.\n* Refactored, broken backwards compatibility with 0.2.\n* API to be treated as stable from this version forward.\n   ```\n   \n  \n  \n   ### 0.2\n   ```\n   ================\n\n* Added unit tests.\n* Bug fixes.\n   ```\n   \n  \n  \n   ### 0.1\n   ```\n   ================\n\n* First release.\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/urllib3\n  - Changelog: https://data.safetycli.com/changelogs/urllib3/\n</details>\n\n\n\n\n\n### Update [websockets](https://pypi.org/project/websockets) from **10.4** to **11.0.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 11.0.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.4\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 7.0\n   ```\n   See https://websockets.",
                "reactions": {
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments/1775243948",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726#issuecomment-1775243948",
                "issue_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726",
                "id": 1775243948,
                "node_id": "IC_kwDOB21qNs5p0BKs",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T13:49:12Z",
                "updated_at": "2023-10-23T13:49:12Z",
                "author_association": "COLLABORATOR",
                "body": "Closing this in favor of #727",
                "reactions": {
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments/1775243948/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T13:49:12Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773206542",
        "type": "PullRequestEvent",
        "actor": {
            "id": 16239342,
            "login": "pyup-bot",
            "display_login": "pyup-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pyup-bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/16239342?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "opened",
            "number": 727,
            "pull_request": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/727",
                "id": 1569230809,
                "node_id": "PR_kwDOB21qNs5diI_Z",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/727",
                "diff_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/727.diff",
                "patch_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/727.patch",
                "issue_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/727",
                "number": 727,
                "state": "open",
                "locked": false,
                "title": "Scheduled weekly dependency update for week 43",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\n\n\n\n\n### Update [urllib3](https://pypi.org/project/urllib3) from **1.26.18** to **2.0.7**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 2.0.7\n   ```\n   ==================\n\n* Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.\n   ```\n   \n  \n  \n   ### 2.0.6\n   ```\n   ==================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ==================\n\n- Allowed pyOpenSSL third-party module without any deprecation warning. (`3126 &lt;https://github.com/urllib3/urllib3/issues/3126&gt;`__)\n- Fixed default ``blocksize`` of ``HTTPConnection`` classes to match high-level classes. Previously was 8KiB, now 16KiB. (`3066 &lt;https://github.com/urllib3/urllib3/issues/3066&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ==================\n\n- Added support for union operators to ``HTTPHeaderDict`` (`2254 &lt;https://github.com/urllib3/urllib3/issues/2254&gt;`__)\n- Added ``BaseHTTPResponse`` to ``urllib3.__all__`` (`3078 &lt;https://github.com/urllib3/urllib3/issues/3078&gt;`__)\n- Fixed ``urllib3.connection.HTTPConnection`` to raise the ``http.client.connect`` audit event to have the same behavior as the standard library HTTP client (`2757 &lt;https://github.com/urllib3/urllib3/issues/2757&gt;`__)\n- Relied on the standard library for checking hostnames in supported PyPy releases (`3087 &lt;https://github.com/urllib3/urllib3/issues/3087&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ==================\n\n- Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (`3020 &lt;https://github.com/urllib3/urllib3/issues/3020&gt;`__)\n- Deprecated URLs which don&#x27;t have an explicit scheme (`2950 &lt;https://github.com/urllib3/urllib3/pull/2950&gt;`_)\n- Fixed response decoding with Zstandard when compressed data is made of several frames. (`3008 &lt;https://github.com/urllib3/urllib3/issues/3008&gt;`__)\n- Fixed ``assert_hostname=False`` to correctly skip hostname check. (`3051 &lt;https://github.com/urllib3/urllib3/issues/3051&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ==================\n\n- Fixed ``HTTPResponse.stream()`` to continue yielding bytes if buffered decompressed data\n  was still available to be read even if the underlying socket is closed. This prevents\n  a compressed response from being truncated. (`3009 &lt;https://github.com/urllib3/urllib3/issues/3009&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ==================\n\n- Fixed a socket leak when fingerprint or hostname verifications fail. (`2991 &lt;https://github.com/urllib3/urllib3/issues/2991&gt;`__)\n- Fixed an error when ``HTTPResponse.read(0)`` was the first ``read`` call or when the internal response body buffer was otherwise empty. (`2998 &lt;https://github.com/urllib3/urllib3/issues/2998&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ==================\n\nRead the `v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;`__ for help upgrading to the latest version of urllib3.\n\nRemoved\n-------\n\n* Removed support for Python 2.7, 3.5, and 3.6 (`883 &lt;https://github.com/urllib3/urllib3/issues/883&gt;`__, `#2336 &lt;https://github.com/urllib3/urllib3/issues/2336&gt;`__).\n* Removed fallback on certificate ``commonName`` in ``match_hostname()`` function.\n  This behavior was deprecated in May 2000 in RFC 2818. Instead only ``subjectAltName``\n  is used to verify the hostname by default. To enable verifying the hostname against\n  ``commonName`` use ``SSLContext.hostname_checks_common_name = True`` (`2113 &lt;https://github.com/urllib3/urllib3/issues/2113&gt;`__).\n* Removed support for Python with an ``ssl`` module compiled with LibreSSL, CiscoSSL,\n  wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed support for OpenSSL versions earlier than 1.1.1 or that don&#x27;t have SNI support.\n  When an incompatible OpenSSL version is detected an ``ImportError`` is raised (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the list of default ciphers for OpenSSL 1.1.1+ and SecureTransport as their own defaults are already secure (`2082 &lt;https://github.com/urllib3/urllib3/issues/2082&gt;`__).\n* Removed ``urllib3.contrib.appengine.AppEngineManager`` and support for Google App Engine Standard Environment (`2044 &lt;https://github.com/urllib3/urllib3/issues/2044&gt;`__).\n* Removed deprecated ``Retry`` options ``method_whitelist``, ``DEFAULT_REDIRECT_HEADERS_BLACKLIST`` (`2086 &lt;https://github.com/urllib3/urllib3/issues/2086&gt;`__).\n* Removed ``urllib3.HTTPResponse.from_httplib`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Removed default value of ``None`` for the ``request_context`` parameter of ``urllib3.PoolManager.connection_from_pool_key``. This change should have no effect on users as the default value of ``None`` was an invalid option and was never used (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Removed the ``urllib3.request`` module. ``urllib3.request.RequestMethods`` has been made a private API.\n  This change was made to ensure that ``from urllib3 import request`` imported the top-level ``request()``\n  function instead of the ``urllib3.request`` module (`2269 &lt;https://github.com/urllib3/urllib3/issues/2269&gt;`__).\n* Removed support for SSLv3.0 from the ``urllib3.contrib.pyopenssl`` even when support is available from the compiled OpenSSL library (`2233 &lt;https://github.com/urllib3/urllib3/issues/2233&gt;`__).\n* Removed the deprecated ``urllib3.contrib.ntlmpool`` module (`2339 &lt;https://github.com/urllib3/urllib3/issues/2339&gt;`__).\n* Removed ``DEFAULT_CIPHERS``, ``HAS_SNI``, ``USE_DEFAULT_SSLCONTEXT_CIPHERS``, from the private module ``urllib3.util.ssl_`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed ``urllib3.exceptions.SNIMissingWarning`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the ``_prepare_conn`` method from ``HTTPConnectionPool``. Previously this was only used to call ``HTTPSConnection.set_cert()`` by ``HTTPSConnectionPool`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed ``tls_in_tls_required`` property from ``HTTPSConnection``. This is now determined from the ``scheme`` parameter in ``HTTPConnection.set_tunnel()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed the ``strict`` parameter/attribute from ``HTTPConnection``, ``HTTPSConnection``, ``HTTPConnectionPool``, ``HTTPSConnectionPool``, and ``HTTPResponse`` (`2064 &lt;https://github.com/urllib3/urllib3/issues/2064&gt;`__).\n\nDeprecated\n----------\n\n* Deprecated ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` which will be removed in urllib3 v2.1.0. Instead use ``HTTPResponse.headers`` and ``HTTPResponse.headers.get(name, default)``. (`1543 &lt;https://github.com/urllib3/urllib3/issues/1543&gt;`__, `#2814 &lt;https://github.com/urllib3/urllib3/issues/2814&gt;`__).\n* Deprecated ``urllib3.contrib.pyopenssl`` module which will be removed in urllib3 v2.1.0 (`2691 &lt;https://github.com/urllib3/urllib3/issues/2691&gt;`__).\n* Deprecated ``urllib3.contrib.securetransport`` module which will be removed in urllib3 v2.1.0 (`2692 &lt;https://github.com/urllib3/urllib3/issues/2692&gt;`__).\n* Deprecated ``ssl_version`` option in favor of ``ssl_minimum_version``. ``ssl_version`` will be removed in urllib3 v2.1.0 (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Deprecated the ``strict`` parameter of ``PoolManager.connection_from_context()`` as it&#x27;s not longer needed in Python 3.x. It will be removed in urllib3 v2.1.0 (`2267 &lt;https://github.com/urllib3/urllib3/issues/2267&gt;`__)\n* Deprecated the ``NewConnectionError.pool`` attribute which will be removed in urllib3 v2.1.0 (`2271 &lt;https://github.com/urllib3/urllib3/issues/2271&gt;`__).\n* Deprecated ``format_header_param_html5`` and ``format_header_param`` in favor of ``format_multipart_header_param`` (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``RequestField.header_formatter`` parameter which will be removed in urllib3 v2.1.0 (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``HTTPSConnection.set_cert()`` method. Instead pass parameters to the ``HTTPSConnection`` constructor (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Deprecated ``HTTPConnection.request_chunked()`` method which will be removed in urllib3 v2.1.0. Instead pass ``chunked=True`` to ``HTTPConnection.request()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n\nAdded\n-----\n\n* Added top-level ``urllib3.request`` function which uses a preconfigured module-global ``PoolManager`` instance (`2150 &lt;https://github.com/urllib3/urllib3/issues/2150&gt;`__).\n* Added the ``json`` parameter to ``urllib3.request()``, ``PoolManager.request()``, and ``ConnectionPool.request()`` methods to send JSON bodies in requests. Using this parameter will set the header ``Content-Type: application/json`` if ``Content-Type`` isn&#x27;t already defined.\n  Added support for parsing JSON response bodies with ``HTTPResponse.json()`` method (`2243 &lt;https://github.com/urllib3/urllib3/issues/2243&gt;`__).\n* Added type hints to the ``urllib3`` module (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Added ``ssl_minimum_version`` and ``ssl_maximum_version`` options which set\n  ``SSLContext.minimum_version`` and ``SSLContext.maximum_version`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Added support for Zstandard (RFC 8878) when ``zstandard`` 1.18.0 or later is installed.\n  Added the ``zstd`` extra which installs the ``zstandard`` package (`1992 &lt;https://github.com/urllib3/urllib3/issues/1992&gt;`__).\n* Added ``urllib3.response.BaseHTTPResponse`` class. All future response classes will be subclasses of ``BaseHTTPResponse`` (`2083 &lt;https://github.com/urllib3/urllib3/issues/2083&gt;`__).\n* Added ``FullPoolError`` which is raised when ``PoolManager(block=True)`` and a connection is returned to a full pool (`2197 &lt;https://github.com/urllib3/urllib3/issues/2197&gt;`__).\n* Added ``HTTPHeaderDict`` to the top-level ``urllib3`` namespace (`2216 &lt;https://github.com/urllib3/urllib3/issues/2216&gt;`__).\n* Added support for configuring header merging behavior with HTTPHeaderDict\n  When using a ``HTTPHeaderDict`` to provide headers for a request, by default duplicate\n  header values will be repeated. But if ``combine=True`` is passed into a call to\n  ``HTTPHeaderDict.add``, then the added header value will be merged in with an existing\n  value into a comma-separated list (``X-My-Header: foo, bar``) (`2242 &lt;https://github.com/urllib3/urllib3/issues/2242&gt;`__).\n* Added ``NameResolutionError`` exception when a DNS error occurs (`2305 &lt;https://github.com/urllib3/urllib3/issues/2305&gt;`__).\n* Added ``proxy_assert_hostname`` and ``proxy_assert_fingerprint`` kwargs to ``ProxyManager`` (`2409 &lt;https://github.com/urllib3/urllib3/issues/2409&gt;`__).\n* Added a configurable ``backoff_max`` parameter to the ``Retry`` class.\n  If a custom ``backoff_max`` is provided to the ``Retry`` class, it\n  will replace the ``Retry.DEFAULT_BACKOFF_MAX`` (`2494 &lt;https://github.com/urllib3/urllib3/issues/2494&gt;`__).\n* Added the ``authority`` property to the Url class as per RFC 3986 3.2. This property should be used in place of ``netloc`` for users who want to include the userinfo (auth) component of the URI (`2520 &lt;https://github.com/urllib3/urllib3/issues/2520&gt;`__).\n* Added the ``scheme`` parameter to ``HTTPConnection.set_tunnel`` to configure the scheme of the origin being tunnelled to (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added the ``is_closed``, ``is_connected`` and ``has_connected_to_proxy`` properties to ``HTTPConnection`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added optional ``backoff_jitter`` parameter to ``Retry``. (`2952 &lt;https://github.com/urllib3/urllib3/issues/2952&gt;`__)\n\nChanged\n-------\n\n* Changed ``urllib3.response.HTTPResponse.read`` to respect the semantics of ``io.BufferedIOBase`` regardless of compression. Specifically, this method:\n\n  * Only returns an empty bytes object to indicate EOF (that is, the response has been fully consumed).\n  * Never returns more bytes than requested.\n  * Can issue any number of system calls: zero, one or multiple.\n\n  If you want each ``urllib3.response.HTTPResponse.read`` call to issue a single system call, you need to disable decompression by setting ``decode_content=False`` (`2128 &lt;https://github.com/urllib3/urllib3/issues/2128&gt;`__).\n* Changed ``urllib3.HTTPConnection.getresponse`` to return an instance of ``urllib3.HTTPResponse`` instead of ``http.client.HTTPResponse`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Changed ``ssl_version`` to instead set the corresponding ``SSLContext.minimum_version``\n  and ``SSLContext.maximum_version`` values.  Regardless of ``ssl_version`` passed\n  ``SSLContext`` objects are now constructed using ``ssl.PROTOCOL_TLS_CLIENT`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Changed default ``SSLContext.minimum_version`` to be ``TLSVersion.TLSv1_2`` in line with Python 3.10 (`2373 &lt;https://github.com/urllib3/urllib3/issues/2373&gt;`__).\n* Changed ``ProxyError`` to wrap any connection error (timeout, TLS, DNS) that occurs when connecting to the proxy (`2482 &lt;https://github.com/urllib3/urllib3/pull/2482&gt;`__).\n* Changed ``urllib3.util.create_urllib3_context`` to not override the system cipher suites with\n  a default value. The new default will be cipher suites configured by the operating system (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Changed ``multipart/form-data`` header parameter formatting matches the WHATWG HTML Standard as of 2021-06-10. Control characters in filenames are no longer percent encoded (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Changed the error raised when connecting via HTTPS when the ``ssl`` module isn&#x27;t available from ``SSLError`` to ``ImportError`` (`2589 &lt;https://github.com/urllib3/urllib3/issues/2589&gt;`__).\n* Changed ``HTTPConnection.request()`` to always use lowercase chunk boundaries when sending requests with ``Transfer-Encoding: chunked`` (`2515 &lt;https://github.com/urllib3/urllib3/issues/2515&gt;`__).\n* Changed ``enforce_content_length`` default to True, preventing silent data loss when reading streamed responses (`2514 &lt;https://github.com/urllib3/urllib3/issues/2514&gt;`__).\n* Changed internal implementation of ``HTTPHeaderDict`` to use ``dict`` instead of ``collections.OrderedDict`` for better performance (`2080 &lt;https://github.com/urllib3/urllib3/issues/2080&gt;`__).\n* Changed the ``urllib3.contrib.pyopenssl`` module to wrap ``OpenSSL.SSL.Error`` with ``ssl.SSLError`` in ``PyOpenSSLContext.load_cert_chain`` (`2628 &lt;https://github.com/urllib3/urllib3/issues/2628&gt;`__).\n* Changed usage of the deprecated ``socket.error`` to ``OSError`` (`2120 &lt;https://github.com/urllib3/urllib3/issues/2120&gt;`__).\n* Changed all parameters in the ``HTTPConnection`` and ``HTTPSConnection`` constructors to be keyword-only except ``host`` and ``port`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed ``HTTPConnection.getresponse()`` to set the socket timeout from ``HTTPConnection.timeout`` value before reading\n  data from the socket. This previously was done manually by the ``HTTPConnectionPool`` calling ``HTTPConnection.sock.settimeout(...)`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed the ``_proxy_host`` property to ``_tunnel_host`` in ``HTTPConnectionPool`` to more closely match how the property is used (value in ``HTTPConnection.set_tunnel()``) (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed name of ``Retry.BACK0FF_MAX`` to be ``Retry.DEFAULT_BACKOFF_MAX``.\n* Changed TLS handshakes to use ``SSLContext.check_hostname`` when possible (`2452 &lt;https://github.com/urllib3/urllib3/pull/2452&gt;`__).\n* Changed ``server_hostname`` to behave like other parameters only used by ``HTTPSConnectionPool`` (`2537 &lt;https://github.com/urllib3/urllib3/pull/2537&gt;`__).\n* Changed the default ``blocksize`` to 16KB to match OpenSSL&#x27;s default read amounts (`2348 &lt;https://github.com/urllib3/urllib3/pull/2348&gt;`__).\n* Changed ``HTTPResponse.read()`` to raise an error when calling with ``decode_content=False`` after using ``decode_content=True`` to prevent data loss (`2800 &lt;https://github.com/urllib3/urllib3/issues/2800&gt;`__).\n\nFixed\n-----\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins would cause connection pools to be closed while requests are in progress (`1252 &lt;https://github.com/urllib3/urllib3/issues/1252&gt;`__).\n* Fixed an issue where an ``HTTPConnection`` instance would erroneously reuse the socket read timeout value from reading the previous response instead of a newly configured connect timeout.\n  Instead now if ``HTTPConnection.timeout`` is updated before sending the next request the new timeout value will be used (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__).\n* Fixed ``socket.error.errno`` when raised from pyOpenSSL&#x27;s ``OpenSSL.SSL.SysCallError`` (`2118 &lt;https://github.com/urllib3/urllib3/issues/2118&gt;`__).\n* Fixed the default value of ``HTTPSConnection.socket_options`` to match ``HTTPConnection`` (`2213 &lt;https://github.com/urllib3/urllib3/issues/2213&gt;`__).\n* Fixed a bug where ``headers`` would be modified by the ``remove_headers_on_redirect`` feature (`2272 &lt;https://github.com/urllib3/urllib3/issues/2272&gt;`__).\n* Fixed a reference cycle bug in ``urllib3.util.connection.create_connection()`` (`2277 &lt;https://github.com/urllib3/urllib3/issues/2277&gt;`__).\n* Fixed a socket leak if ``HTTPConnection.connect()`` fails (`2571 &lt;https://github.com/urllib3/urllib3/pull/2571&gt;`__).\n* Fixed ``urllib3.contrib.pyopenssl.WrappedSocket`` and ``urllib3.contrib.securetransport.WrappedSocket`` close methods (`2970 &lt;https://github.com/urllib3/urllib3/issues/2970&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.18\n   ```\n   ====================\n\n* Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.\n   ```\n   \n  \n  \n   ### 1.26.17\n   ```\n   ====================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``. (`3139 &lt;https://github.com/urllib3/urllib3/pull/3139&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.16\n   ```\n   ====================\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins\n  would cause connection pools to be closed while requests are in progress (`2954 &lt;https://github.com/urllib3/urllib3/pull/2954&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.15\n   ```\n   ====================\n\n* Fix socket timeout value when ``HTTPConnection`` is reused (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__)\n* Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n  (`2899 &lt;https://github.com/urllib3/urllib3/issues/2899&gt;`__)\n* Fix IDNA handling of &#x27;\\x80&#x27; byte (`2901 &lt;https://github.com/urllib3/urllib3/issues/2901&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.14\n   ```\n   ====================\n\n* Fixed parsing of port 0 (zero) returning None, instead of 0. (`2850 &lt;https://github.com/urllib3/urllib3/issues/2850&gt;`__)\n* Removed deprecated getheaders() calls in contrib module. Fixed the type hint of ``PoolKey.key_retries`` by adding ``bool`` to the union. (`2865 &lt;https://github.com/urllib3/urllib3/issues/2865&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.13\n   ```\n   ====================\n\n* Deprecated the ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` methods.\n* Fixed an issue where parsing a URL with leading zeroes in the port would be rejected\n  even when the port number after removing the zeroes was valid.\n* Fixed a deprecation warning when using cryptography v39.0.0.\n* Removed the ``&lt;4`` in the ``Requires-Python`` packaging metadata field.\n   ```\n   \n  \n  \n   ### 1.26.12\n   ```\n   ====================\n\n* Deprecated the `urllib3[secure]` extra and the `urllib3.contrib.pyopenssl` module.\n  Both will be removed in v2.x. See this `GitHub issue &lt;https://github.com/urllib3/urllib3/issues/2680&gt;`_\n  for justification and info on how to migrate.\n   ```\n   \n  \n  \n   ### 1.26.11\n   ```\n   ====================\n\n* Fixed an issue where reading more than 2 GiB in a call to ``HTTPResponse.read`` would\n  raise an ``OverflowError`` on Python 3.9 and earlier.\n   ```\n   \n  \n  \n   ### 1.26.10\n   ```\n   ====================\n\n* Removed support for Python 3.5\n* Fixed an issue where a ``ProxyError`` recommending configuring the proxy as HTTP\n  instead of HTTPS could appear even when an HTTPS proxy wasn&#x27;t configured.\n   ```\n   \n  \n  \n   ### 1.26.9\n   ```\n   ===================\n\n* Changed ``urllib3[brotli]`` extra to favor installing Brotli libraries that are still\n  receiving updates like ``brotli`` and ``brotlicffi`` instead of ``brotlipy``.\n  This change does not impact behavior of urllib3, only which dependencies are installed.\n* Fixed a socket leaking when ``HTTPSConnection.connect()`` raises an exception.\n* Fixed ``server_hostname`` being forwarded from ``PoolManager`` to ``HTTPConnectionPool``\n  when requesting an HTTP URL. Should only be forwarded when requesting an HTTPS URL.\n   ```\n   \n  \n  \n   ### 1.26.8\n   ```\n   ===================\n\n* Added extra message to ``urllib3.exceptions.ProxyError`` when urllib3 detects that\n  a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.\n* Added a mention of the size of the connection pool when discarding a connection due to the pool being full.\n* Added explicit support for Python 3.11.\n* Deprecated the ``Retry.MAX_BACKOFF`` class property in favor of ``Retry.DEFAULT_MAX_BACKOFF``\n  to better match the rest of the default parameter names. ``Retry.MAX_BACKOFF`` is removed in v2.0.\n* Changed location of the vendored ``ssl.match_hostname`` function from ``urllib3.packages.ssl_match_hostname``\n  to ``urllib3.util.ssl_match_hostname`` to ensure Python 3.10+ compatibility after being repackaged\n  by downstream distributors.\n* Fixed absolute imports, all imports are now relative.\n   ```\n   \n  \n  \n   ### 1.26.7\n   ```\n   ===================\n\n* Fixed a bug with HTTPS hostname verification involving IP addresses and lack\n  of SNI. (Issue 2400)\n* Fixed a bug where IPv6 braces weren&#x27;t stripped during certificate hostname\n  matching. (Issue 2240)\n   ```\n   \n  \n  \n   ### 1.26.6\n   ```\n   ===================\n\n* Deprecated the ``urllib3.contrib.ntlmpool`` module. urllib3 is not able to support\n  it properly due to `reasons listed in this issue &lt;https://github.com/urllib3/urllib3/issues/2282&gt;`_.\n  If you are a user of this module please leave a comment.\n* Changed ``HTTPConnection.request_chunked()`` to not erroneously emit multiple\n  ``Transfer-Encoding`` headers in the case that one is already specified.\n* Fixed typo in deprecation message to recommend ``Retry.DEFAULT_ALLOWED_METHODS``.\n   ```\n   \n  \n  \n   ### 1.26.5\n   ```\n   ===================\n\n* Fixed deprecation warnings emitted in Python 3.10.\n* Updated vendored ``six`` library to 1.16.0.\n* Improved performance of URL parser when splitting\n  the authority component.\n   ```\n   \n  \n  \n   ### 1.26.4\n   ```\n   ===================\n\n* Changed behavior of the default ``SSLContext`` when connecting to HTTPS proxy\n  during HTTPS requests. The default ``SSLContext`` now sets ``check_hostname=True``.\n   ```\n   \n  \n  \n   ### 1.26.3\n   ```\n   ===================\n\n* Fixed bytes and string comparison issue with headers (Pull 2141)\n\n* Changed ``ProxySchemeUnknown`` error message to be\n  more actionable if the user supplies a proxy URL without\n  a scheme. (Pull 2107)\n   ```\n   \n  \n  \n   ### 1.26.2\n   ```\n   ===================\n\n* Fixed an issue where ``wrap_socket`` and ``CERT_REQUIRED`` wouldn&#x27;t\n  be imported properly on Python 2.7.8 and earlier (Pull 2052)\n   ```\n   \n  \n  \n   ### 1.26.1\n   ```\n   ===================\n\n* Fixed an issue where two ``User-Agent`` headers would be sent if a\n  ``User-Agent`` header key is passed as ``bytes`` (Pull 2047)\n   ```\n   \n  \n  \n   ### 1.26.0\n   ```\n   ===================\n\n* **NOTE: urllib3 v2.0 will drop support for Python 2**.\n  `Read more in the v2.0 Roadmap &lt;https://urllib3.readthedocs.io/en/latest/v2-roadmap.html&gt;`_.\n\n* Added support for HTTPS proxies contacting HTTPS servers (Pull 1923, Pull 1806)\n\n* Deprecated negotiating TLSv1 and TLSv1.1 by default. Users that\n  still wish to use TLS earlier than 1.2 without a deprecation warning\n  should opt-in explicitly by setting ``ssl_version=ssl.PROTOCOL_TLSv1_1`` (Pull 2002)\n  **Starting in urllib3 v2.0: Connections that receive a ``DeprecationWarning`` will fail**\n\n* Deprecated ``Retry`` options ``Retry.DEFAULT_METHOD_WHITELIST``, ``Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST``\n  and ``Retry(method_whitelist=...)`` in favor of ``Retry.DEFAULT_ALLOWED_METHODS``,\n  ``Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT``, and ``Retry(allowed_methods=...)``\n  (Pull 2000) **Starting in urllib3 v2.0: Deprecated options will be removed**\n\n* Added default ``User-Agent`` header to every request (Pull 1750)\n\n* Added ``urllib3.util.SKIP_HEADER`` for skipping ``User-Agent``, ``Accept-Encoding``,\n  and ``Host`` headers from being automatically emitted with requests (Pull 2018)\n\n* Collapse ``transfer-encoding: chunked`` request data and framing into\n  the same ``socket.send()`` call (Pull 1906)\n\n* Send ``http/1.1`` ALPN identifier with every TLS handshake by default (Pull 1894)\n\n* Properly terminate SecureTransport connections when CA verification fails (Pull 1977)\n\n* Don&#x27;t emit an ``SNIMissingWarning`` when passing ``server_hostname=None``\n  to SecureTransport (Pull 1903)\n\n* Disabled requesting TLSv1.2 session tickets as they weren&#x27;t being used by urllib3 (Pull 1970)\n\n* Suppress ``BrokenPipeError`` when writing request body after the server\n  has closed the socket (Pull 1524)\n\n* Wrap ``ssl.SSLError`` that can be raised from reading a socket (e.g. &quot;bad MAC&quot;)\n  into an ``urllib3.exceptions.SSLError`` (Pull 1939)\n   ```\n   \n  \n  \n   ### 1.25.11\n   ```\n   ====================\n\n* Fix retry backoff time parsed from ``Retry-After`` header when given\n  in the HTTP date format. The HTTP date was parsed as the local timezone\n  rather than accounting for the timezone in the HTTP date (typically\n  UTC) (Pull 1932, Pull 1935, Pull 1938, Pull 1949)\n\n* Fix issue where an error would be raised when the ``SSLKEYLOGFILE``\n  environment variable was set to the empty string. Now ``SSLContext.keylog_file``\n  is not set in this situation (Pull 2016)\n   ```\n   \n  \n  \n   ### 1.25.10\n   ```\n   ====================\n\n* Added support for ``SSLKEYLOGFILE`` environment variable for\n  logging TLS session keys with use with programs like\n  Wireshark for decrypting captured web traffic (Pull 1867)\n\n* Fixed loading of SecureTransport libraries on macOS Big Sur\n  due to the new dynamic linker cache (Pull 1905)\n\n* Collapse chunked request bodies data and framing into one\n  call to ``send()`` to reduce the number of TCP packets by 2-4x (Pull 1906)\n\n* Don&#x27;t insert ``None`` into ``ConnectionPool`` if the pool\n  was empty when requesting a connection (Pull 1866)\n\n* Avoid ``hasattr`` call in ``BrotliDecoder.decompress()`` (Pull 1858)\n   ```\n   \n  \n  \n   ### 1.25.9\n   ```\n   ===================\n\n* Added ``InvalidProxyConfigurationWarning`` which is raised when\n  erroneously specifying an HTTPS proxy URL. urllib3 doesn&#x27;t currently\n  support connecting to HTTPS proxies but will soon be able to\n  and we would like users to migrate properly without much breakage.\n\n  See `this GitHub issue &lt;https://github.com/urllib3/urllib3/issues/1850&gt;`_\n  for more information on how to fix your proxy config. (Pull 1851)\n\n* Drain connection after ``PoolManager`` redirect (Pull 1817)\n\n* Ensure ``load_verify_locations`` raises ``SSLError`` for all backends (Pull 1812)\n\n* Rename ``VerifiedHTTPSConnection`` to ``HTTPSConnection`` (Pull 1805)\n\n* Allow the CA certificate data to be passed as a string (Pull 1804)\n\n* Raise ``ValueError`` if method contains control characters (Pull 1800)\n\n* Add ``__repr__`` to ``Timeout`` (Pull 1795)\n   ```\n   \n  \n  \n   ### 1.25.8\n   ```\n   ===================\n\n* Drop support for EOL Python 3.4 (Pull 1774)\n\n* Optimize _encode_invalid_chars (Pull 1787)\n   ```\n   \n  \n  \n   ### 1.25.7\n   ```\n   ===================\n\n* Preserve ``chunked`` parameter on retries (Pull 1715, Pull 1734)\n\n* Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull 1704, Issue 1470)\n\n* Fix issue where URL fragment was sent within the request target. (Pull 1732)\n\n* Fix issue where an empty query section in a URL would fail to parse. (Pull 1732)\n\n* Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull 1703)\n   ```\n   \n  \n  \n   ### 1.25.6\n   ```\n   ===================\n\n* Fix issue where tilde (``~``) characters were incorrectly\n  percent-encoded in the path. (Pull 1692)\n   ```\n   \n  \n  \n   ### 1.25.5\n   ```\n   ===================\n\n* Add mitigation for BPO-37428 affecting Python &lt;3.7.4 and OpenSSL 1.1.1+ which\n  caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n  (Issue 1682)\n   ```\n   \n  \n  \n   ### 1.25.4\n   ```\n   ===================\n\n* Propagate Retry-After header settings to subsequent retries. (Pull 1607)\n\n* Fix edge case where Retry-After header was still respected even when\n  explicitly opted out of. (Pull 1607)\n\n* Remove dependency on ``rfc3986`` for URL parsing.\n\n* Fix issue where URLs containing invalid characters within ``Url.auth`` would\n  raise an exception instead of percent-encoding those characters.\n\n* Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n  work well with BufferedReaders and other ``io`` module features. (Pull 1652)\n\n* Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull 1673)\n   ```\n   \n  \n  \n   ### 1.25.3\n   ```\n   ===================\n\n* Change ``HTTPSConnection`` to load system CA certificates\n  when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n  unspecified. (Pull 1608, Issue 1603)\n\n* Upgrade bundled rfc3986 to v1.3.2. (Pull 1609, Issue 1605)\n   ```\n   \n  \n  \n   ### 1.25.2\n   ```\n   ===================\n\n* Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull 1583)\n\n* Change ``parse_url`` to percent-encode invalid characters within the\n  path, query, and target components. (Pull 1586)\n   ```\n   \n  \n  \n   ### 1.25.1\n   ```\n   ===================\n\n* Add support for Google&#x27;s ``Brotli`` package. (Pull 1572, Pull 1579)\n\n* Upgrade bundled rfc3986 to v1.3.1 (Pull 1578)\n   ```\n   \n  \n  \n   ### 1.25\n   ```\n   =================\n\n* Require and validate certificates by default when using HTTPS (Pull 1507)\n\n* Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull 1487)\n\n* Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n  encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull 1489)\n\n* Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n  implementations. (Pull 1496)\n\n* Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue 303, Pull 1492)\n\n* Fixed issue where OpenSSL would block if an encrypted client private key was\n  given and no password was given. Instead an ``SSLError`` is raised. (Pull 1489)\n\n* Added support for Brotli content encoding. It is enabled automatically if\n  ``brotlipy`` package is installed which can be requested with\n  ``urllib3[brotli]`` extra. (Pull 1532)\n\n* Drop ciphers using DSS key exchange from default TLS cipher suites.\n  Improve default ciphers when using SecureTransport. (Pull 1496)\n\n* Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue 1483)\n   ```\n   \n  \n  \n   ### 1.24.3\n   ```\n   ===================\n\n* Apply fix for CVE-2019-9740. (Pull 1591)\n   ```\n   \n  \n  \n   ### 1.24.2\n   ```\n   ===================\n\n* Don&#x27;t load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n  ``ssl_context`` parameters are specified.\n\n* Remove Authorization header regardless of case when redirecting to cross-site. (Issue 1510)\n\n* Add support for IPv6 addresses in subjectAltName section of certificates. (Issue 1269)\n   ```\n   \n  \n  \n   ### 1.24.1\n   ```\n   ===================\n\n* Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue 1467)\n\n* Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue 1462)\n   ```\n   \n  \n  \n   ### 1.24\n   ```\n   =================\n\n* Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull 1449)\n\n* Test against Python 3.7 on AppVeyor. (Pull 1453)\n\n* Early-out ipv6 checks when running on App Engine. (Pull 1450)\n\n* Change ambiguous description of backoff_factor (Pull 1436)\n\n* Add ability to handle multiple Content-Encodings (Issue 1441 and Pull 1442)\n\n* Skip DNS names that can&#x27;t be idna-decoded when using pyOpenSSL (Issue 1405).\n\n* Add a server_hostname parameter to HTTPSConnection which allows for\n  overriding the SNI hostname sent in the handshake. (Pull 1397)\n\n* Drop support for EOL Python 2.6 (Pull 1429 and Pull 1430)\n\n* Fixed bug where responses with header Content-Type: message/* erroneously\n  raised HeaderParsingError, resulting in a warning being logged. (Pull 1439)\n\n* Move urllib3 to src/urllib3 (Pull 1409)\n   ```\n   \n  \n  \n   ### 1.23\n   ```\n   =================\n\n* Allow providing a list of headers to strip from requests when redirecting\n  to a different host. Defaults to the ``Authorization`` header. Different\n  headers can be set via ``Retry.remove_headers_on_redirect``. (Issue 1316)\n\n* Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue 1247).\n\n* Dropped Python 3.3 support. (Pull 1242)\n\n* Put the connection back in the pool when calling stream() or read_chunked() on\n  a chunked HEAD response. (Issue 1234)\n\n* Fixed pyOpenSSL-specific ssl client authentication issue when clients\n  attempted to auth via certificate + chain (Issue 1060)\n\n* Add the port to the connectionpool connect print (Pull 1251)\n\n* Don&#x27;t use the ``uuid`` module to create multipart data boundaries. (Pull 1380)\n\n* ``read_chunked()`` on a closed response returns no chunks. (Issue 1088)\n\n* Add Python 2.6 support to ``contrib.securetransport`` (Pull 1359)\n\n* Added support for auth info in url for SOCKS proxy (Pull 1363)\n   ```\n   \n  \n  \n   ### 1.22\n   ```\n   =================\n\n* Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n  IPv6 proxy. (Issue 1222)\n\n* Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n  is available on ``MaxRetryError.reason``. (Issue 1112)\n\n* Drain and release connection before recursing on retry/redirect.  Fixes\n  deadlocks with a blocking connectionpool. (Issue 1167)\n\n* Fixed compatibility for cookiejar. (Issue 1229)\n\n* pyopenssl: Use vendored version of ``six``. (Issue 1231)\n   ```\n   \n  \n  \n   ### 1.21.1\n   ```\n   ===================\n\n* Fixed SecureTransport issue that would cause long delays in response body\n  delivery. (Pull 1154)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``socket_options`` flag to the ``PoolManager``.  (Issue 1165)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n  (Pull 1157)\n   ```\n   \n  \n  \n   ### 1.21\n   ```\n   =================\n\n* Improved performance of certain selector system calls on Python 3.5 and\n  later. (Pull 1095)\n\n* Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n  exceptions appropriately when sending data. (Pull 1125)\n\n* Selectors now detects a monkey-patched select module after import for modules\n  that patch the select module like eventlet, greenlet. (Pull 1128)\n\n* Reduced memory consumption when streaming zlib-compressed responses\n  (as opposed to raw deflate streams). (Pull 1129)\n\n* Connection pools now use the entire request context when constructing the\n  pool key. (Pull 1016)\n\n* ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n  ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n  (Pull 1016)\n\n* Add retry counter for ``status_forcelist``. (Issue 1147)\n\n* Added ``contrib`` module for using SecureTransport on macOS:\n  ``urllib3.contrib.securetransport``.  (Pull 1122)\n\n* urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n  for schemes it does not recognise, it assumes they are case-sensitive and\n  leaves them unchanged.\n  (Issue 1080)\n   ```\n   \n  \n  \n   ### 1.20\n   ```\n   =================\n\n* Added support for waiting for I/O using selectors other than select,\n  improving urllib3&#x27;s behaviour with large numbers of concurrent connections.\n  (Pull 1001)\n\n* Updated the date for the system clock check. (Issue 1005)\n\n* ConnectionPools now correctly consider hostnames to be case-insensitive.\n  (Issue 1032)\n\n* Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Pull 1063)\n\n* Outdated versions of cryptography now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Issue 1044)\n\n* Automatically attempt to rewind a file-like body object when a request is\n  retried or redirected. (Pull 1039)\n\n* Fix some bugs that occur when modules incautiously patch the queue module.\n  (Pull 1061)\n\n* Prevent retries from occurring on read timeouts for which the request method\n  was not in the method whitelist. (Issue 1059)\n\n* Changed the PyOpenSSL contrib module to lazily load idna to avoid\n  unnecessarily bloating the memory of programs that don&#x27;t need it. (Pull\n  1076)\n\n* Add support for IPv6 literals with zone identifiers. (Pull 1013)\n\n* Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n  proxies, and controlled remote DNS appropriately. (Issue 1035)\n   ```\n   \n  \n  \n   ### 1.19.1\n   ```\n   ===================\n\n* Fixed AppEngine import that didn&#x27;t function on Python 3.5. (Pull 1025)\n   ```\n   \n  \n  \n   ### 1.19\n   ```\n   =================\n\n* urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n  using the default retry logic. (Pull 955)\n\n* Remove markers from setup.py to assist ancient setuptools versions. (Issue\n  986)\n\n* Disallow superscripts and other integerish things in URL ports. (Issue 989)\n\n* Allow urllib3&#x27;s HTTPResponse.stream() method to continue to work with\n  non-httplib underlying FPs. (Pull 990)\n\n* Empty filenames in multipart headers are now emitted as such, rather than\n  being suppressed. (Issue 1015)\n\n* Prefer user-supplied Host headers on chunked uploads. (Issue 1009)\n   ```\n   \n  \n  \n   ### 1.18.1\n   ```\n   ===================\n\n* CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n  PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n  release fixes a vulnerability whereby urllib3 in the above configuration\n  would silently fail to validate TLS certificates due to erroneously setting\n  invalid flags in OpenSSL&#x27;s ``SSL_CTX_set_verify`` function. These erroneous\n  flags do not cause a problem in OpenSSL versions before 1.1.0, which\n  interprets the presence of any flag as requesting certificate validation.\n\n  There is no PR for this patch, as it was prepared for simultaneous disclosure\n  and release. The master branch received the same fix in Pull 1010.\n   ```\n   \n  \n  \n   ### 1.18\n   ```\n   =================\n\n* Fixed incorrect message for IncompleteRead exception. (Pull 973)\n\n* Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n  (Issue 258)\n\n* Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n  (Issue 977)\n\n* Fixed handling of wildcard certificates when using PyOpenSSL. (Issue 979)\n   ```\n   \n  \n  \n   ### 1.17\n   ```\n   =================\n\n* Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue 835)\n\n* ConnectionPool debug log now includes scheme, host, and port. (Issue 897)\n\n* Substantially refactored documentation. (Issue 887)\n\n* Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n  (Issue 858)\n\n* Normalize the scheme and host in the URL parser (Issue 833)\n\n* ``HTTPResponse`` contains the last ``Retry`` object, which now also\n  contains retries history. (Issue 848)\n\n* Timeout can no longer be set as boolean, and must be greater than zero.\n  (Pull 924)\n\n* Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n  now use cryptography and idna, both of which are already dependencies of\n  PyOpenSSL. (Pull 930)\n\n* Fixed infinite loop in ``stream`` when amt=None. (Issue 928)\n\n* Try to use the operating system&#x27;s certificates when we are using an\n  ``SSLContext``. (Pull 941)\n\n* Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n  ChaCha20, but ChaCha20 is then preferred to everything else. (Pull 947)\n\n* Updated cipher suite list to remove 3DES-based cipher suites. (Pull 958)\n\n* Removed the cipher suite fallback to allow HIGH ciphers. (Pull 958)\n\n* Implemented ``length_remaining`` to determine remaining content\n  to be read. (Pull 949)\n\n* Implemented ``enforce_content_length`` to enable exceptions when\n  incomplete data chunks are received. (Pull 949)\n\n* Dropped connection start, dropped connection reset, redirect, forced retry,\n  and new HTTPS connection log levels to DEBUG, from INFO. (Pull 967)\n   ```\n   \n  \n  \n   ### 1.16\n   ```\n   =================\n\n* Disable IPv6 DNS when IPv6 connections are not possible. (Issue 840)\n\n* Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n  overridden. (Issue 830)\n\n* Normalize scheme and host to lowercase for pool keys, and include\n  ``source_address``. (Issue 830)\n\n* Cleaner exception chain in Python 3 for ``_make_request``.\n  (Issue 861)\n\n* Fixed installing ``urllib3[socks]`` extra. (Issue 864)\n\n* Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n  called by subclasses. (Issue 873)\n\n* Retain ``release_conn`` state across retries. (Issues 651, 866)\n\n* Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n  ``HTTPResponse`` but can be replaced with a subclass. (Issue 879)\n   ```\n   \n  \n  \n   ### 1.15.1\n   ```\n   ===================\n\n* Fix packaging to include backports module. (Issue 841)\n   ```\n   \n  \n  \n   ### 1.15\n   ```\n   =================\n\n* Added Retry(raise_on_status=False). (Issue 720)\n\n* Always use setuptools, no more distutils fallback. (Issue 785)\n\n* Dropped support for Python 3.2. (Issue 786)\n\n* Chunked transfer encoding when requesting with ``chunked=True``.\n  (Issue 790)\n\n* Fixed regression with IPv6 port parsing. (Issue 801)\n\n* Append SNIMissingWarning messages to allow users to specify it in\n  the PYTHONWARNINGS environment variable. (Issue 816)\n\n* Handle unicode headers in Py2. (Issue 818)\n\n* Log certificate when there is a hostname mismatch. (Issue 820)\n\n* Preserve order of request/response headers. (Issue 821)\n   ```\n   \n  \n  \n   ### 1.14\n   ```\n   =================\n\n* contrib: SOCKS proxy support! (Issue 762)\n\n* Fixed AppEngine handling of transfer-encoding header and bug\n  in Timeout defaults checking. (Issue 763)\n   ```\n   \n  \n  \n   ### 1.13.1\n   ```\n   ===================\n\n* Fixed regression in IPv6 + SSL for match_hostname. (Issue 761)\n   ```\n   \n  \n  \n   ### 1.13\n   ```\n   =================\n\n* Fixed ``pip install urllib3[secure]`` on modern pip. (Issue 706)\n\n* pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue 717)\n\n* pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue 696)\n\n* Close connections more defensively on exception. (Issue 734)\n\n* Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n  repeatedly flushing the decoder, to function better on Jython. (Issue 743)\n\n* Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue 758)\n   ```\n   \n  \n  \n   ### 1.12\n   ```\n   =================\n\n* Rely on ``six`` for importing ``httplib`` to work around\n  conflicts with other Python 3 shims. (Issue 688)\n\n* Add support for directories of certificate authorities, as supported by\n  OpenSSL. (Issue 701)\n\n* New exception: ``NewConnectionError``, raised when we fail to establish\n  a new connection, usually ``ECONNREFUSED`` socket error.\n   ```\n   \n  \n  \n   ### 1.11\n   ```\n   =================\n\n* When ``ca_certs`` is given, ``cert_reqs`` defaults to\n  ``&#x27;CERT_REQUIRED&#x27;``. (Issue 650)\n\n* ``pip install urllib3[secure]`` will install Certifi and\n  PyOpenSSL as dependencies. (Issue 678)\n\n* Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n  (Issues 632, 679)\n\n* Added `urllib3.contrib.appengine &lt;https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine&gt;`_\n  which has an ``AppEngineManager`` for using ``URLFetch`` in a\n  Google AppEngine environment. (Issue 664)\n\n* Dev: Added test suite for AppEngine. (Issue 631)\n\n* Fix performance regression when using PyOpenSSL. (Issue 626)\n\n* Passing incorrect scheme (e.g. ``foo://``) will raise\n  ``ValueError`` instead of ``AssertionError`` (backwards\n  compatible for now, but please migrate). (Issue 640)\n\n* Fix pools not getting replenished when an error occurs during a\n  request using ``release_conn=False``. (Issue 644)\n\n* Fix pool-default headers not applying for url-encoded requests\n  like GET. (Issue 657)\n\n* log.warning in Python 3 when headers are skipped due to parsing\n  errors. (Issue 642)\n\n* Close and discard connections if an error occurs during read.\n  (Issue 660)\n\n* Fix host parsing for IPv6 proxies. (Issue 668)\n\n* Separate warning type SubjectAltNameWarning, now issued once\n  per host. (Issue 671)\n\n* Fix ``httplib.IncompleteRead`` not getting converted to\n  ``ProtocolError`` when using ``HTTPResponse.stream()``\n  (Issue 674)\n   ```\n   \n  \n  \n   ### 1.10.4\n   ```\n   ===================\n\n* Migrate tests to Tornado 4. (Issue 594)\n\n* Append default warning configuration rather than overwrite.\n  (Issue 603)\n\n* Fix streaming decoding regression. (Issue 595)\n\n* Fix chunked requests losing state across keep-alive connections.\n  (Issue 599)\n\n* Fix hanging when chunked HEAD response has no body. (Issue 605)\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ===================\n\n* Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n  (Issue 558)\n\n* Fix regression of duplicate header keys being discarded.\n  (Issue 563)\n\n* ``Response.stream()`` returns a generator for chunked responses.\n  (Issue 560)\n\n* Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n  (Issue 585)\n\n* Work on platforms without `ssl` module for plain HTTP requests.\n  (Issue 587)\n\n* Stop relying on the stdlib&#x27;s default cipher list. (Issue 588)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ===================\n\n* Fix file descriptor leakage on retries. (Issue 548)\n\n* Removed RC4 from default cipher list. (Issue 551)\n\n* Header performance improvements. (Issue 544)\n\n* Fix PoolManager not obeying redirect retry settings. (Issue 553)\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ===================\n\n* Pools can be used as context managers. (Issue 545)\n\n* Don&#x27;t re-use connections which experienced an SSLError. (Issue 529)\n\n* Don&#x27;t fail when gzip decoding an empty stream. (Issue 535)\n\n* Add sha256 support for fingerprint verification. (Issue 540)\n\n* Fixed handling of header values containing commas. (Issue 533)\n   ```\n   \n  \n  \n   ### 1.10\n   ```\n   =================\n\n* Disabled SSLv3. (Issue 473)\n\n* Add ``Url.url`` property to return the composed url string. (Issue 394)\n\n* Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue 412)\n\n* ``MaxRetryError.reason`` will always be an exception, not string.\n  (Issue 481)\n\n* Fixed SSL-related timeouts not being detected as timeouts. (Issue 492)\n\n* Py3: Use ``ssl.create_default_context()`` when available. (Issue 473)\n\n* Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n  (Issue 496)\n\n* Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n  (Issue 499)\n\n* Close and discard sockets which experienced SSL-related errors.\n  (Issue 501)\n\n* Handle ``body`` param in ``.request(...)``. (Issue 513)\n\n* Respect timeout with HTTPS proxy. (Issue 505)\n\n* PyOpenSSL: Handle ZeroReturnError exception. (Issue 520)\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ==================\n\n* Apply socket arguments before binding. (Issue 427)\n\n* More careful checks if fp-like object is closed. (Issue 435)\n\n* Fixed packaging issues of some development-related files not\n  getting included. (Issue 440)\n\n* Allow performing *only* fingerprint verification. (Issue 444)\n\n* Emit ``SecurityWarning`` if system clock is waaay off. (Issue 445)\n\n* Fixed PyOpenSSL compatibility with PyPy. (Issue 450)\n\n* Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n  (Issue 443)\n   ```\n   \n  \n  \n   ### 1.9\n   ```\n   ================\n\n* Shuffled around development-related files. If you&#x27;re maintaining a distro\n  package of urllib3, you may need to tweak things. (Issue 415)\n\n* Unverified HTTPS requests will trigger a warning on the first request. See\n  our new `security documentation\n  &lt;https://urllib3.readthedocs.io/en/latest/security.html&gt;`_ for details.\n  (Issue 426)\n\n* New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n  (Issue 326)\n\n* All raised exceptions should now wrapped in a\n  ``urllib3.exceptions.HTTPException``-extending exception. (Issue 326)\n\n* All errors during a retry-enabled request should be wrapped in\n  ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n  which were previously exempt. Underlying error is accessible from the\n  ``.reason`` property. (Issue 326)\n\n* ``urllib3.exceptions.ConnectionError`` renamed to\n  ``urllib3.exceptions.ProtocolError``. (Issue 326)\n\n* Errors during response read (such as IncompleteRead) are now wrapped in\n  ``urllib3.exceptions.ProtocolError``. (Issue 418)\n\n* Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n  (Issue 417)\n\n* Catch read timeouts over SSL connections as\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 419)\n\n* Apply socket arguments before connecting. (Issue 427)\n   ```\n   \n  \n  \n   ### 1.8.3\n   ```\n   ==================\n\n* Fix TLS verification when using a proxy in Python 3.4.1. (Issue 385)\n\n* Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue 393)\n\n* Wrap ``socket.timeout`` exception with\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 399)\n\n* Fixed proxy-related bug where connections were being reused incorrectly.\n  (Issues 366, 369)\n\n* Added ``socket_options`` keyword parameter which allows to define\n  ``setsockopt`` configuration of new sockets. (Issue 397)\n\n* Removed ``HTTPConnection.tcp_nodelay`` in favor of\n  ``HTTPConnection.default_socket_options``. (Issue 397)\n\n* Fixed ``TypeError`` bug in Python 2.6.4. (Issue 411)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ==================\n\n* Fix ``urllib3.util`` not being included in the package.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ==================\n\n* Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue 356)\n\n* Don&#x27;t install ``dummyserver`` into ``site-packages`` as it&#x27;s only needed\n  for the test suite. (Issue 362)\n\n* Added support for specifying ``source_address``. (Issue 352)\n   ```\n   \n  \n  \n   ### 1.8\n   ```\n   ================\n\n* Improved url parsing in ``urllib3.util.parse_url`` (properly parse &#x27;&#x27; in\n  username, and blank ports like &#x27;hostname:&#x27;).\n\n* New ``urllib3.connection`` module which contains all the HTTPConnection\n  objects.\n\n* Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n  signature to a more sensible order. [Backwards incompatible]\n  (Issues 252, 262, 263)\n\n* Use ``backports.ssl_match_hostname`` if it&#x27;s installed. (Issue 274)\n\n* Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n  returns the number of bytes read so far. (Issue 277)\n\n* Support for platforms without threading. (Issue 289)\n\n* Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n  to allow a pool with no specified port to be considered equal to to an\n  HTTP/HTTPS url with port 80/443 explicitly provided. (Issue 305)\n\n* Improved default SSL/TLS settings to avoid vulnerabilities.\n  (Issue 309)\n\n* Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n  (Issue 310)\n\n* Disable Nagle&#x27;s Algorithm on the socket for non-proxies. A subset of requests\n  will send the entire HTTP request ~200 milliseconds faster; however, some of\n  the resulting TCP packets will be smaller. (Issue 254)\n\n* Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n  from the default 64 to 1024 in a single certificate. (Issue 318)\n\n* Headers are now passed and stored as a custom\n  ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n  (Issue 329, 333)\n\n* Headers no longer lose their case on Python 3. (Issue 236)\n\n* ``urllib3.contrib.pyopenssl`` now uses the operating system&#x27;s default CA\n  certificates on inject. (Issue 332)\n\n* Requests with ``retries=False`` will immediately raise any exceptions without\n  wrapping them in ``MaxRetryError``. (Issue 348)\n\n* Fixed open socket leak with SSL-related failures. (Issue 344, 348)\n   ```\n   \n  \n  \n   ### 1.7.1\n   ```\n   ==================\n\n* Added granular timeout support with new ``urllib3.util.Timeout`` class.\n  (Issue 231)\n\n* Fixed Python 3.4 support. (Issue 238)\n   ```\n   \n  \n  \n   ### 1.7\n   ```\n   ================\n\n* More exceptions are now pickle-able, with tests. (Issue 174)\n\n* Fixed redirecting with relative URLs in Location header. (Issue 178)\n\n* Support for relative urls in ``Location: ...`` header. (Issue 179)\n\n* ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n  file-like functionality. (Issue 187)\n\n* Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n  skip hostname verification for SSL connections. (Issue 194)\n\n* New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n  generator wrapped around ``.read(...)``. (Issue 198)\n\n* IPv6 url parsing enforces brackets around the hostname. (Issue 199)\n\n* Fixed thread race condition in\n  ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue 204)\n\n* ``ProxyManager`` requests now include non-default port in ``Host: ...``\n  header. (Issue 217)\n\n* Added HTTPS proxy support in ``ProxyManager``. (Issue 170 139)\n\n* New ``RequestField`` object can be passed to the ``fields=...`` param which\n  can specify headers. (Issue 220)\n\n* Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n  (Issue 221)\n\n* Use international headers when posting file names. (Issue 119)\n\n* Improved IPv6 support. (Issue 203)\n   ```\n   \n  \n  \n   ### 1.6\n   ```\n   ================\n\n* Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue 156)\n\n* ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n\n* Improved SSL-related code. ``cert_req`` now optionally takes a string like\n  &quot;REQUIRED&quot; or &quot;NONE&quot;. Same with ``ssl_version`` takes strings like &quot;SSLv23&quot;\n  The string values reflect the suffix of the respective constant variable.\n  (Issue 130)\n\n* Vendored ``socksipy`` now based on Anorov&#x27;s fork which handles unexpectedly\n  closed proxy connections and larger read buffers. (Issue 135)\n\n* Ensure the connection is closed if no data is received, fixes connection leak\n  on some platforms. (Issue 133)\n\n* Added SNI support for SSL/TLS connections on Py32+. (Issue 89)\n\n* Tests fixed to be compatible with Py26 again. (Issue 125)\n\n* Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n  to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue 109)\n\n* Allow an explicit content type to be specified when encoding file fields.\n  (Issue 126)\n\n* Exceptions are now pickleable, with tests. (Issue 101)\n\n* Fixed default headers not getting passed in some cases. (Issue 99)\n\n* Treat &quot;content-encoding&quot; header value as case-insensitive, per RFC 2616\n  Section 3.5. (Issue 110)\n\n* &quot;Connection Refused&quot; SocketErrors will get retried rather than raised.\n  (Issue 92)\n\n* Updated vendored ``six``, no longer overrides the global ``six`` module\n  namespace. (Issue 113)\n\n* ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n  the exception that prompted the final retry. If ``reason is None`` then it\n  was due to a redirect. (Issue 92, 114)\n\n* Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n  (Issue 149)\n\n* Don&#x27;t assume ``Content-Type: text/plain`` for multi-part encoding parameters\n  that are not files. (Issue 111)\n\n* Pass `strict` param down to ``httplib.HTTPConnection``. (Issue 122)\n\n* Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n  against an arbitrary hostname (when connecting by IP or for misconfigured\n  servers). (Issue 140)\n\n* Streaming decompression support. (Issue 159)\n   ```\n   \n  \n  \n   ### 1.5\n   ```\n   ================\n\n* Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n  logging in urllib3.\n\n* Native full URL parsing (including auth, path, query, fragment) available in\n  ``urllib3.util.parse_url(url)``.\n\n* Built-in redirect will switch method to &#x27;GET&#x27; if status code is 303.\n  (Issue 11)\n\n* ``urllib3.PoolManager`` strips the scheme and host before sending the request\n  uri. (Issue 8)\n\n* New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n  based on the Content-Type header, fails.\n\n* Fixed bug with pool depletion and leaking connections (Issue 76). Added\n  explicit connection closing on pool eviction. Added\n  ``urllib3.PoolManager.clear()``.\n\n* 99% -&gt; 100% unit test coverage.\n   ```\n   \n  \n  \n   ### 1.4\n   ```\n   ================\n\n* Minor AppEngine-related fixes.\n\n* Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n\n* Improved url parsing. (Issue 73)\n\n* IPv6 url support. (Issue 72)\n   ```\n   \n  \n  \n   ### 1.3\n   ```\n   ================\n\n* Removed pre-1.0 deprecated API.\n\n* Refactored helpers into a ``urllib3.util`` submodule.\n\n* Fixed multipart encoding to support list-of-tuples for keys with multiple\n  values. (Issue 48)\n\n* Fixed multiple Set-Cookie headers in response not getting merged properly in\n  Python 3. (Issue 53)\n\n* AppEngine support with Py27. (Issue 61)\n\n* Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n  bytes.\n   ```\n   \n  \n  \n   ### 1.2.2\n   ```\n   ==================\n\n* Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue 47)\n   ```\n   \n  \n  \n   ### 1.2.1\n   ```\n   ==================\n\n* Fixed another bug related to when ``ssl`` module is not available. (Issue 41)\n\n* Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n  which inherits from ``ValueError``.\n   ```\n   \n  \n  \n   ### 1.2\n   ```\n   ================\n\n* Added Python 3 support (tested on 3.2.2)\n\n* Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n\n* Use ``select.poll`` instead of ``select.select`` for platforms that support\n  it.\n\n* Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n  connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n\n* Fixed ``ImportError`` during install when ``ssl`` module is not available.\n  (Issue 41)\n\n* Fixed ``PoolManager`` redirects between schemes (such as HTTP -&gt; HTTPS) not\n  completing properly. (Issue 28, uncovered by Issue 10 in v1.1)\n\n* Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n  ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n  Added socket-level tests.\n\n* More tests. Achievement Unlocked: 99% Coverage.\n   ```\n   \n  \n  \n   ### 1.1\n   ```\n   ================\n\n* Refactored ``dummyserver`` to its own root namespace module (used for\n  testing).\n\n* Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n  Py32&#x27;s ``ssl_match_hostname``. (Issue 25)\n\n* Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue 10)\n\n* Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n  27)\n\n* Fixed timeout-related bugs. (Issues 17, 23)\n   ```\n   \n  \n  \n   ### 1.0.2\n   ```\n   ==================\n\n* Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n  you&#x27;re using the object manually. (Thanks pyos)\n\n* Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n  wrapping the access log in a mutex. (Thanks christer)\n\n* Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n  ``__getitem__`` behaviour), with tests. Shouldn&#x27;t affect core urllib3 code.\n   ```\n   \n  \n  \n   ### 1.0.1\n   ```\n   ==================\n\n* Fixed a bug where the same connection would get returned into the pool twice,\n  causing extraneous &quot;HttpConnectionPool is full&quot; log warnings.\n   ```\n   \n  \n  \n   ### 1.0\n   ```\n   ================\n\n* Added ``PoolManager`` with LRU expiration of connections (tested and\n  documented).\n* Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n  with HTTPS proxies).\n* Added optional partial-read support for responses when\n  ``preload_content=False``. You can now make requests and just read the headers\n  without loading the content.\n* Made response decoding optional (default on, same as before).\n* Added optional explicit boundary string for ``encode_multipart_formdata``.\n* Convenience request methods are now inherited from ``RequestMethods``. Old\n  helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n  the new ``request(method, url, ...)``.\n* Refactored code to be even more decoupled, reusable, and extendable.\n* License header added to ``.py`` files.\n* Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n  and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n* Embettered all the things!\n* Started writing this file.\n   ```\n   \n  \n  \n   ### 0.4.1\n   ```\n   ==================\n\n* Minor bug fixes, code cleanup.\n   ```\n   \n  \n  \n   ### 0.4\n   ```\n   ================\n\n* Better unicode support.\n* Added ``VerifiedHTTPSConnection``.\n* Added ``NTLMConnectionPool`` in contrib.\n* Minor improvements.\n   ```\n   \n  \n  \n   ### 0.3.1\n   ```\n   ==================\n\n* Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n   ```\n   \n  \n  \n   ### 0.3\n   ```\n   ================\n\n* Added HTTPS support.\n* Minor bug fixes.\n* Refactored, broken backwards compatibility with 0.2.\n* API to be treated as stable from this version forward.\n   ```\n   \n  \n  \n   ### 0.2\n   ```\n   ================\n\n* Added unit tests.\n* Bug fixes.\n   ```\n   \n  \n  \n   ### 0.1\n   ```\n   ================\n\n* First release.\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/urllib3\n  - Changelog: https://data.safetycli.com/changelogs/urllib3/\n</details>\n\n\n\n\n\n### Update [websockets](https://pypi.org/project/websockets) from **10.4** to **12.0**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 12.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.4\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/pro",
                "created_at": "2023-10-23T13:49:09Z",
                "updated_at": "2023-10-23T13:49:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/727/commits",
                "review_comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/727/comments",
                "review_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/727/comments",
                "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/e3c524c4c0d41f2fb833af44dc62ba6302284a48",
                "head": {
                    "label": "alpacahq:pyup-scheduled-update-2023-10-23",
                    "ref": "pyup-scheduled-update-2023-10-23",
                    "sha": "e3c524c4c0d41f2fb833af44dc62ba6302284a48",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-23T11:03:45Z",
                        "pushed_at": "2023-10-23T13:49:09Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1632,
                        "watchers_count": 1632,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 553,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 55,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 553,
                        "open_issues": 55,
                        "watchers": 1632,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "alpacahq:master",
                    "ref": "master",
                    "sha": "f54b5a529591dae708cd1a52e77bef45965e012d",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-23T11:03:45Z",
                        "pushed_at": "2023-10-23T13:49:09Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1632,
                        "watchers_count": 1632,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 553,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 55,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 553,
                        "open_issues": 55,
                        "watchers": 1632,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/727"
                    },
                    "html": {
                        "href": "https://github.com/alpacahq/alpaca-trade-api-python/pull/727"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/727"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/727/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/727/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/727/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/e3c524c4c0d41f2fb833af44dc62ba6302284a48"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 5,
                "additions": 5,
                "deletions": 5,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-23T13:49:10Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773205632",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15529309500,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-23",
            "head": "e3c524c4c0d41f2fb833af44dc62ba6302284a48",
            "before": "c09074a7d6469cb7b65c4d8b6b36ceb8bfee04bc",
            "commits": [
                {
                    "sha": "e3c524c4c0d41f2fb833af44dc62ba6302284a48",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Update pyyaml from 6.0 to 6.0.1",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/e3c524c4c0d41f2fb833af44dc62ba6302284a48"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-23T13:49:09Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773205534",
        "type": "CreateEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "ref": "pyup-scheduled-update-2023-10-23",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Python client for Alpaca's trade API",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-23T13:49:09Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773205293",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15529309351,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-23",
            "head": "c09074a7d6469cb7b65c4d8b6b36ceb8bfee04bc",
            "before": "a256cfb9791cc44eb0f1e3c27590702f40ef81ac",
            "commits": [
                {
                    "sha": "c09074a7d6469cb7b65c4d8b6b36ceb8bfee04bc",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Update aiohttp from 3.8.2 to 3.8.6",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/c09074a7d6469cb7b65c4d8b6b36ceb8bfee04bc"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-23T13:49:08Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773205119",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15529309285,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-23",
            "head": "a256cfb9791cc44eb0f1e3c27590702f40ef81ac",
            "before": "ae8a478177e0e4a78c8179317f22a42997bf64cb",
            "commits": [
                {
                    "sha": "a256cfb9791cc44eb0f1e3c27590702f40ef81ac",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Update msgpack from 1.0.3 to 1.0.7",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/a256cfb9791cc44eb0f1e3c27590702f40ef81ac"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-23T13:49:08Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773204789",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15529309120,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-23",
            "head": "ae8a478177e0e4a78c8179317f22a42997bf64cb",
            "before": "af2e18c0d992755a5cc45a42cc12350dab268373",
            "commits": [
                {
                    "sha": "ae8a478177e0e4a78c8179317f22a42997bf64cb",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Pin websockets to latest version 12.0",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/ae8a478177e0e4a78c8179317f22a42997bf64cb"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-23T13:49:07Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32773204489",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15529308999,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-23",
            "head": "af2e18c0d992755a5cc45a42cc12350dab268373",
            "before": "f54b5a529591dae708cd1a52e77bef45965e012d",
            "commits": [
                {
                    "sha": "af2e18c0d992755a5cc45a42cc12350dab268373",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Pin urllib3 to latest version 2.0.7",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/af2e18c0d992755a5cc45a42cc12350dab268373"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-23T13:49:07Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32744316287",
        "type": "WatchEvent",
        "actor": {
            "id": 99369657,
            "login": "Huseyin-Cicek",
            "display_login": "Huseyin-Cicek",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Huseyin-Cicek",
            "avatar_url": "https://avatars.githubusercontent.com/u/99369657?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-21T18:33:31Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32719906758",
        "type": "WatchEvent",
        "actor": {
            "id": 62591521,
            "login": "bengrau",
            "display_login": "bengrau",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bengrau",
            "avatar_url": "https://avatars.githubusercontent.com/u/62591521?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-20T11:14:57Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32627552095",
        "type": "WatchEvent",
        "actor": {
            "id": 127124459,
            "login": "oarina",
            "display_login": "oarina",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oarina",
            "avatar_url": "https://avatars.githubusercontent.com/u/127124459?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-17T14:36:55Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593128910",
        "type": "DeleteEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "ref": "pyup-scheduled-update-2023-10-09",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-16T13:49:12Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593128150",
        "type": "PullRequestEvent",
        "actor": {
            "id": 16239342,
            "login": "pyup-bot",
            "display_login": "pyup-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pyup-bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/16239342?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "closed",
            "number": 725,
            "pull_request": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725",
                "id": 1547908524,
                "node_id": "PR_kwDOB21qNs5cQzWs",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725",
                "diff_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725.diff",
                "patch_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725.patch",
                "issue_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725",
                "number": 725,
                "state": "closed",
                "locked": false,
                "title": "Scheduled weekly dependency update for week 41",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\n\n\n\n\n### Update [urllib3](https://pypi.org/project/urllib3) from **1.26.17** to **2.0.6**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 2.0.6\n   ```\n   ==================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ==================\n\n- Allowed pyOpenSSL third-party module without any deprecation warning. (`3126 &lt;https://github.com/urllib3/urllib3/issues/3126&gt;`__)\n- Fixed default ``blocksize`` of ``HTTPConnection`` classes to match high-level classes. Previously was 8KiB, now 16KiB. (`3066 &lt;https://github.com/urllib3/urllib3/issues/3066&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ==================\n\n- Added support for union operators to ``HTTPHeaderDict`` (`2254 &lt;https://github.com/urllib3/urllib3/issues/2254&gt;`__)\n- Added ``BaseHTTPResponse`` to ``urllib3.__all__`` (`3078 &lt;https://github.com/urllib3/urllib3/issues/3078&gt;`__)\n- Fixed ``urllib3.connection.HTTPConnection`` to raise the ``http.client.connect`` audit event to have the same behavior as the standard library HTTP client (`2757 &lt;https://github.com/urllib3/urllib3/issues/2757&gt;`__)\n- Relied on the standard library for checking hostnames in supported PyPy releases (`3087 &lt;https://github.com/urllib3/urllib3/issues/3087&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ==================\n\n- Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (`3020 &lt;https://github.com/urllib3/urllib3/issues/3020&gt;`__)\n- Deprecated URLs which don&#x27;t have an explicit scheme (`2950 &lt;https://github.com/urllib3/urllib3/pull/2950&gt;`_)\n- Fixed response decoding with Zstandard when compressed data is made of several frames. (`3008 &lt;https://github.com/urllib3/urllib3/issues/3008&gt;`__)\n- Fixed ``assert_hostname=False`` to correctly skip hostname check. (`3051 &lt;https://github.com/urllib3/urllib3/issues/3051&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ==================\n\n- Fixed ``HTTPResponse.stream()`` to continue yielding bytes if buffered decompressed data\n  was still available to be read even if the underlying socket is closed. This prevents\n  a compressed response from being truncated. (`3009 &lt;https://github.com/urllib3/urllib3/issues/3009&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ==================\n\n- Fixed a socket leak when fingerprint or hostname verifications fail. (`2991 &lt;https://github.com/urllib3/urllib3/issues/2991&gt;`__)\n- Fixed an error when ``HTTPResponse.read(0)`` was the first ``read`` call or when the internal response body buffer was otherwise empty. (`2998 &lt;https://github.com/urllib3/urllib3/issues/2998&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ==================\n\nRead the `v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;`__ for help upgrading to the latest version of urllib3.\n\nRemoved\n-------\n\n* Removed support for Python 2.7, 3.5, and 3.6 (`883 &lt;https://github.com/urllib3/urllib3/issues/883&gt;`__, `#2336 &lt;https://github.com/urllib3/urllib3/issues/2336&gt;`__).\n* Removed fallback on certificate ``commonName`` in ``match_hostname()`` function.\n  This behavior was deprecated in May 2000 in RFC 2818. Instead only ``subjectAltName``\n  is used to verify the hostname by default. To enable verifying the hostname against\n  ``commonName`` use ``SSLContext.hostname_checks_common_name = True`` (`2113 &lt;https://github.com/urllib3/urllib3/issues/2113&gt;`__).\n* Removed support for Python with an ``ssl`` module compiled with LibreSSL, CiscoSSL,\n  wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed support for OpenSSL versions earlier than 1.1.1 or that don&#x27;t have SNI support.\n  When an incompatible OpenSSL version is detected an ``ImportError`` is raised (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the list of default ciphers for OpenSSL 1.1.1+ and SecureTransport as their own defaults are already secure (`2082 &lt;https://github.com/urllib3/urllib3/issues/2082&gt;`__).\n* Removed ``urllib3.contrib.appengine.AppEngineManager`` and support for Google App Engine Standard Environment (`2044 &lt;https://github.com/urllib3/urllib3/issues/2044&gt;`__).\n* Removed deprecated ``Retry`` options ``method_whitelist``, ``DEFAULT_REDIRECT_HEADERS_BLACKLIST`` (`2086 &lt;https://github.com/urllib3/urllib3/issues/2086&gt;`__).\n* Removed ``urllib3.HTTPResponse.from_httplib`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Removed default value of ``None`` for the ``request_context`` parameter of ``urllib3.PoolManager.connection_from_pool_key``. This change should have no effect on users as the default value of ``None`` was an invalid option and was never used (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Removed the ``urllib3.request`` module. ``urllib3.request.RequestMethods`` has been made a private API.\n  This change was made to ensure that ``from urllib3 import request`` imported the top-level ``request()``\n  function instead of the ``urllib3.request`` module (`2269 &lt;https://github.com/urllib3/urllib3/issues/2269&gt;`__).\n* Removed support for SSLv3.0 from the ``urllib3.contrib.pyopenssl`` even when support is available from the compiled OpenSSL library (`2233 &lt;https://github.com/urllib3/urllib3/issues/2233&gt;`__).\n* Removed the deprecated ``urllib3.contrib.ntlmpool`` module (`2339 &lt;https://github.com/urllib3/urllib3/issues/2339&gt;`__).\n* Removed ``DEFAULT_CIPHERS``, ``HAS_SNI``, ``USE_DEFAULT_SSLCONTEXT_CIPHERS``, from the private module ``urllib3.util.ssl_`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed ``urllib3.exceptions.SNIMissingWarning`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the ``_prepare_conn`` method from ``HTTPConnectionPool``. Previously this was only used to call ``HTTPSConnection.set_cert()`` by ``HTTPSConnectionPool`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed ``tls_in_tls_required`` property from ``HTTPSConnection``. This is now determined from the ``scheme`` parameter in ``HTTPConnection.set_tunnel()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed the ``strict`` parameter/attribute from ``HTTPConnection``, ``HTTPSConnection``, ``HTTPConnectionPool``, ``HTTPSConnectionPool``, and ``HTTPResponse`` (`2064 &lt;https://github.com/urllib3/urllib3/issues/2064&gt;`__).\n\nDeprecated\n----------\n\n* Deprecated ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` which will be removed in urllib3 v2.1.0. Instead use ``HTTPResponse.headers`` and ``HTTPResponse.headers.get(name, default)``. (`1543 &lt;https://github.com/urllib3/urllib3/issues/1543&gt;`__, `#2814 &lt;https://github.com/urllib3/urllib3/issues/2814&gt;`__).\n* Deprecated ``urllib3.contrib.pyopenssl`` module which will be removed in urllib3 v2.1.0 (`2691 &lt;https://github.com/urllib3/urllib3/issues/2691&gt;`__).\n* Deprecated ``urllib3.contrib.securetransport`` module which will be removed in urllib3 v2.1.0 (`2692 &lt;https://github.com/urllib3/urllib3/issues/2692&gt;`__).\n* Deprecated ``ssl_version`` option in favor of ``ssl_minimum_version``. ``ssl_version`` will be removed in urllib3 v2.1.0 (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Deprecated the ``strict`` parameter of ``PoolManager.connection_from_context()`` as it&#x27;s not longer needed in Python 3.x. It will be removed in urllib3 v2.1.0 (`2267 &lt;https://github.com/urllib3/urllib3/issues/2267&gt;`__)\n* Deprecated the ``NewConnectionError.pool`` attribute which will be removed in urllib3 v2.1.0 (`2271 &lt;https://github.com/urllib3/urllib3/issues/2271&gt;`__).\n* Deprecated ``format_header_param_html5`` and ``format_header_param`` in favor of ``format_multipart_header_param`` (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``RequestField.header_formatter`` parameter which will be removed in urllib3 v2.1.0 (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``HTTPSConnection.set_cert()`` method. Instead pass parameters to the ``HTTPSConnection`` constructor (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Deprecated ``HTTPConnection.request_chunked()`` method which will be removed in urllib3 v2.1.0. Instead pass ``chunked=True`` to ``HTTPConnection.request()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n\nAdded\n-----\n\n* Added top-level ``urllib3.request`` function which uses a preconfigured module-global ``PoolManager`` instance (`2150 &lt;https://github.com/urllib3/urllib3/issues/2150&gt;`__).\n* Added the ``json`` parameter to ``urllib3.request()``, ``PoolManager.request()``, and ``ConnectionPool.request()`` methods to send JSON bodies in requests. Using this parameter will set the header ``Content-Type: application/json`` if ``Content-Type`` isn&#x27;t already defined.\n  Added support for parsing JSON response bodies with ``HTTPResponse.json()`` method (`2243 &lt;https://github.com/urllib3/urllib3/issues/2243&gt;`__).\n* Added type hints to the ``urllib3`` module (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Added ``ssl_minimum_version`` and ``ssl_maximum_version`` options which set\n  ``SSLContext.minimum_version`` and ``SSLContext.maximum_version`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Added support for Zstandard (RFC 8878) when ``zstandard`` 1.18.0 or later is installed.\n  Added the ``zstd`` extra which installs the ``zstandard`` package (`1992 &lt;https://github.com/urllib3/urllib3/issues/1992&gt;`__).\n* Added ``urllib3.response.BaseHTTPResponse`` class. All future response classes will be subclasses of ``BaseHTTPResponse`` (`2083 &lt;https://github.com/urllib3/urllib3/issues/2083&gt;`__).\n* Added ``FullPoolError`` which is raised when ``PoolManager(block=True)`` and a connection is returned to a full pool (`2197 &lt;https://github.com/urllib3/urllib3/issues/2197&gt;`__).\n* Added ``HTTPHeaderDict`` to the top-level ``urllib3`` namespace (`2216 &lt;https://github.com/urllib3/urllib3/issues/2216&gt;`__).\n* Added support for configuring header merging behavior with HTTPHeaderDict\n  When using a ``HTTPHeaderDict`` to provide headers for a request, by default duplicate\n  header values will be repeated. But if ``combine=True`` is passed into a call to\n  ``HTTPHeaderDict.add``, then the added header value will be merged in with an existing\n  value into a comma-separated list (``X-My-Header: foo, bar``) (`2242 &lt;https://github.com/urllib3/urllib3/issues/2242&gt;`__).\n* Added ``NameResolutionError`` exception when a DNS error occurs (`2305 &lt;https://github.com/urllib3/urllib3/issues/2305&gt;`__).\n* Added ``proxy_assert_hostname`` and ``proxy_assert_fingerprint`` kwargs to ``ProxyManager`` (`2409 &lt;https://github.com/urllib3/urllib3/issues/2409&gt;`__).\n* Added a configurable ``backoff_max`` parameter to the ``Retry`` class.\n  If a custom ``backoff_max`` is provided to the ``Retry`` class, it\n  will replace the ``Retry.DEFAULT_BACKOFF_MAX`` (`2494 &lt;https://github.com/urllib3/urllib3/issues/2494&gt;`__).\n* Added the ``authority`` property to the Url class as per RFC 3986 3.2. This property should be used in place of ``netloc`` for users who want to include the userinfo (auth) component of the URI (`2520 &lt;https://github.com/urllib3/urllib3/issues/2520&gt;`__).\n* Added the ``scheme`` parameter to ``HTTPConnection.set_tunnel`` to configure the scheme of the origin being tunnelled to (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added the ``is_closed``, ``is_connected`` and ``has_connected_to_proxy`` properties to ``HTTPConnection`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added optional ``backoff_jitter`` parameter to ``Retry``. (`2952 &lt;https://github.com/urllib3/urllib3/issues/2952&gt;`__)\n\nChanged\n-------\n\n* Changed ``urllib3.response.HTTPResponse.read`` to respect the semantics of ``io.BufferedIOBase`` regardless of compression. Specifically, this method:\n\n  * Only returns an empty bytes object to indicate EOF (that is, the response has been fully consumed).\n  * Never returns more bytes than requested.\n  * Can issue any number of system calls: zero, one or multiple.\n\n  If you want each ``urllib3.response.HTTPResponse.read`` call to issue a single system call, you need to disable decompression by setting ``decode_content=False`` (`2128 &lt;https://github.com/urllib3/urllib3/issues/2128&gt;`__).\n* Changed ``urllib3.HTTPConnection.getresponse`` to return an instance of ``urllib3.HTTPResponse`` instead of ``http.client.HTTPResponse`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Changed ``ssl_version`` to instead set the corresponding ``SSLContext.minimum_version``\n  and ``SSLContext.maximum_version`` values.  Regardless of ``ssl_version`` passed\n  ``SSLContext`` objects are now constructed using ``ssl.PROTOCOL_TLS_CLIENT`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Changed default ``SSLContext.minimum_version`` to be ``TLSVersion.TLSv1_2`` in line with Python 3.10 (`2373 &lt;https://github.com/urllib3/urllib3/issues/2373&gt;`__).\n* Changed ``ProxyError`` to wrap any connection error (timeout, TLS, DNS) that occurs when connecting to the proxy (`2482 &lt;https://github.com/urllib3/urllib3/pull/2482&gt;`__).\n* Changed ``urllib3.util.create_urllib3_context`` to not override the system cipher suites with\n  a default value. The new default will be cipher suites configured by the operating system (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Changed ``multipart/form-data`` header parameter formatting matches the WHATWG HTML Standard as of 2021-06-10. Control characters in filenames are no longer percent encoded (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Changed the error raised when connecting via HTTPS when the ``ssl`` module isn&#x27;t available from ``SSLError`` to ``ImportError`` (`2589 &lt;https://github.com/urllib3/urllib3/issues/2589&gt;`__).\n* Changed ``HTTPConnection.request()`` to always use lowercase chunk boundaries when sending requests with ``Transfer-Encoding: chunked`` (`2515 &lt;https://github.com/urllib3/urllib3/issues/2515&gt;`__).\n* Changed ``enforce_content_length`` default to True, preventing silent data loss when reading streamed responses (`2514 &lt;https://github.com/urllib3/urllib3/issues/2514&gt;`__).\n* Changed internal implementation of ``HTTPHeaderDict`` to use ``dict`` instead of ``collections.OrderedDict`` for better performance (`2080 &lt;https://github.com/urllib3/urllib3/issues/2080&gt;`__).\n* Changed the ``urllib3.contrib.pyopenssl`` module to wrap ``OpenSSL.SSL.Error`` with ``ssl.SSLError`` in ``PyOpenSSLContext.load_cert_chain`` (`2628 &lt;https://github.com/urllib3/urllib3/issues/2628&gt;`__).\n* Changed usage of the deprecated ``socket.error`` to ``OSError`` (`2120 &lt;https://github.com/urllib3/urllib3/issues/2120&gt;`__).\n* Changed all parameters in the ``HTTPConnection`` and ``HTTPSConnection`` constructors to be keyword-only except ``host`` and ``port`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed ``HTTPConnection.getresponse()`` to set the socket timeout from ``HTTPConnection.timeout`` value before reading\n  data from the socket. This previously was done manually by the ``HTTPConnectionPool`` calling ``HTTPConnection.sock.settimeout(...)`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed the ``_proxy_host`` property to ``_tunnel_host`` in ``HTTPConnectionPool`` to more closely match how the property is used (value in ``HTTPConnection.set_tunnel()``) (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed name of ``Retry.BACK0FF_MAX`` to be ``Retry.DEFAULT_BACKOFF_MAX``.\n* Changed TLS handshakes to use ``SSLContext.check_hostname`` when possible (`2452 &lt;https://github.com/urllib3/urllib3/pull/2452&gt;`__).\n* Changed ``server_hostname`` to behave like other parameters only used by ``HTTPSConnectionPool`` (`2537 &lt;https://github.com/urllib3/urllib3/pull/2537&gt;`__).\n* Changed the default ``blocksize`` to 16KB to match OpenSSL&#x27;s default read amounts (`2348 &lt;https://github.com/urllib3/urllib3/pull/2348&gt;`__).\n* Changed ``HTTPResponse.read()`` to raise an error when calling with ``decode_content=False`` after using ``decode_content=True`` to prevent data loss (`2800 &lt;https://github.com/urllib3/urllib3/issues/2800&gt;`__).\n\nFixed\n-----\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins would cause connection pools to be closed while requests are in progress (`1252 &lt;https://github.com/urllib3/urllib3/issues/1252&gt;`__).\n* Fixed an issue where an ``HTTPConnection`` instance would erroneously reuse the socket read timeout value from reading the previous response instead of a newly configured connect timeout.\n  Instead now if ``HTTPConnection.timeout`` is updated before sending the next request the new timeout value will be used (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__).\n* Fixed ``socket.error.errno`` when raised from pyOpenSSL&#x27;s ``OpenSSL.SSL.SysCallError`` (`2118 &lt;https://github.com/urllib3/urllib3/issues/2118&gt;`__).\n* Fixed the default value of ``HTTPSConnection.socket_options`` to match ``HTTPConnection`` (`2213 &lt;https://github.com/urllib3/urllib3/issues/2213&gt;`__).\n* Fixed a bug where ``headers`` would be modified by the ``remove_headers_on_redirect`` feature (`2272 &lt;https://github.com/urllib3/urllib3/issues/2272&gt;`__).\n* Fixed a reference cycle bug in ``urllib3.util.connection.create_connection()`` (`2277 &lt;https://github.com/urllib3/urllib3/issues/2277&gt;`__).\n* Fixed a socket leak if ``HTTPConnection.connect()`` fails (`2571 &lt;https://github.com/urllib3/urllib3/pull/2571&gt;`__).\n* Fixed ``urllib3.contrib.pyopenssl.WrappedSocket`` and ``urllib3.contrib.securetransport.WrappedSocket`` close methods (`2970 &lt;https://github.com/urllib3/urllib3/issues/2970&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.16\n   ```\n   ====================\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins\n  would cause connection pools to be closed while requests are in progress (`2954 &lt;https://github.com/urllib3/urllib3/pull/2954&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.15\n   ```\n   ====================\n\n* Fix socket timeout value when ``HTTPConnection`` is reused (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__)\n* Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n  (`2899 &lt;https://github.com/urllib3/urllib3/issues/2899&gt;`__)\n* Fix IDNA handling of &#x27;\\x80&#x27; byte (`2901 &lt;https://github.com/urllib3/urllib3/issues/2901&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.14\n   ```\n   ====================\n\n* Fixed parsing of port 0 (zero) returning None, instead of 0. (`2850 &lt;https://github.com/urllib3/urllib3/issues/2850&gt;`__)\n* Removed deprecated getheaders() calls in contrib module. Fixed the type hint of ``PoolKey.key_retries`` by adding ``bool`` to the union. (`2865 &lt;https://github.com/urllib3/urllib3/issues/2865&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.13\n   ```\n   ====================\n\n* Deprecated the ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` methods.\n* Fixed an issue where parsing a URL with leading zeroes in the port would be rejected\n  even when the port number after removing the zeroes was valid.\n* Fixed a deprecation warning when using cryptography v39.0.0.\n* Removed the ``&lt;4`` in the ``Requires-Python`` packaging metadata field.\n   ```\n   \n  \n  \n   ### 1.26.12\n   ```\n   ====================\n\n* Deprecated the `urllib3[secure]` extra and the `urllib3.contrib.pyopenssl` module.\n  Both will be removed in v2.x. See this `GitHub issue &lt;https://github.com/urllib3/urllib3/issues/2680&gt;`_\n  for justification and info on how to migrate.\n   ```\n   \n  \n  \n   ### 1.26.11\n   ```\n   ====================\n\n* Fixed an issue where reading more than 2 GiB in a call to ``HTTPResponse.read`` would\n  raise an ``OverflowError`` on Python 3.9 and earlier.\n   ```\n   \n  \n  \n   ### 1.26.10\n   ```\n   ====================\n\n* Removed support for Python 3.5\n* Fixed an issue where a ``ProxyError`` recommending configuring the proxy as HTTP\n  instead of HTTPS could appear even when an HTTPS proxy wasn&#x27;t configured.\n   ```\n   \n  \n  \n   ### 1.26.9\n   ```\n   ===================\n\n* Changed ``urllib3[brotli]`` extra to favor installing Brotli libraries that are still\n  receiving updates like ``brotli`` and ``brotlicffi`` instead of ``brotlipy``.\n  This change does not impact behavior of urllib3, only which dependencies are installed.\n* Fixed a socket leaking when ``HTTPSConnection.connect()`` raises an exception.\n* Fixed ``server_hostname`` being forwarded from ``PoolManager`` to ``HTTPConnectionPool``\n  when requesting an HTTP URL. Should only be forwarded when requesting an HTTPS URL.\n   ```\n   \n  \n  \n   ### 1.26.8\n   ```\n   ===================\n\n* Added extra message to ``urllib3.exceptions.ProxyError`` when urllib3 detects that\n  a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.\n* Added a mention of the size of the connection pool when discarding a connection due to the pool being full.\n* Added explicit support for Python 3.11.\n* Deprecated the ``Retry.MAX_BACKOFF`` class property in favor of ``Retry.DEFAULT_MAX_BACKOFF``\n  to better match the rest of the default parameter names. ``Retry.MAX_BACKOFF`` is removed in v2.0.\n* Changed location of the vendored ``ssl.match_hostname`` function from ``urllib3.packages.ssl_match_hostname``\n  to ``urllib3.util.ssl_match_hostname`` to ensure Python 3.10+ compatibility after being repackaged\n  by downstream distributors.\n* Fixed absolute imports, all imports are now relative.\n   ```\n   \n  \n  \n   ### 1.26.7\n   ```\n   ===================\n\n* Fixed a bug with HTTPS hostname verification involving IP addresses and lack\n  of SNI. (Issue 2400)\n* Fixed a bug where IPv6 braces weren&#x27;t stripped during certificate hostname\n  matching. (Issue 2240)\n   ```\n   \n  \n  \n   ### 1.26.6\n   ```\n   ===================\n\n* Deprecated the ``urllib3.contrib.ntlmpool`` module. urllib3 is not able to support\n  it properly due to `reasons listed in this issue &lt;https://github.com/urllib3/urllib3/issues/2282&gt;`_.\n  If you are a user of this module please leave a comment.\n* Changed ``HTTPConnection.request_chunked()`` to not erroneously emit multiple\n  ``Transfer-Encoding`` headers in the case that one is already specified.\n* Fixed typo in deprecation message to recommend ``Retry.DEFAULT_ALLOWED_METHODS``.\n   ```\n   \n  \n  \n   ### 1.26.5\n   ```\n   ===================\n\n* Fixed deprecation warnings emitted in Python 3.10.\n* Updated vendored ``six`` library to 1.16.0.\n* Improved performance of URL parser when splitting\n  the authority component.\n   ```\n   \n  \n  \n   ### 1.26.4\n   ```\n   ===================\n\n* Changed behavior of the default ``SSLContext`` when connecting to HTTPS proxy\n  during HTTPS requests. The default ``SSLContext`` now sets ``check_hostname=True``.\n   ```\n   \n  \n  \n   ### 1.26.3\n   ```\n   ===================\n\n* Fixed bytes and string comparison issue with headers (Pull 2141)\n\n* Changed ``ProxySchemeUnknown`` error message to be\n  more actionable if the user supplies a proxy URL without\n  a scheme. (Pull 2107)\n   ```\n   \n  \n  \n   ### 1.26.2\n   ```\n   ===================\n\n* Fixed an issue where ``wrap_socket`` and ``CERT_REQUIRED`` wouldn&#x27;t\n  be imported properly on Python 2.7.8 and earlier (Pull 2052)\n   ```\n   \n  \n  \n   ### 1.26.1\n   ```\n   ===================\n\n* Fixed an issue where two ``User-Agent`` headers would be sent if a\n  ``User-Agent`` header key is passed as ``bytes`` (Pull 2047)\n   ```\n   \n  \n  \n   ### 1.26.0\n   ```\n   ===================\n\n* **NOTE: urllib3 v2.0 will drop support for Python 2**.\n  `Read more in the v2.0 Roadmap &lt;https://urllib3.readthedocs.io/en/latest/v2-roadmap.html&gt;`_.\n\n* Added support for HTTPS proxies contacting HTTPS servers (Pull 1923, Pull 1806)\n\n* Deprecated negotiating TLSv1 and TLSv1.1 by default. Users that\n  still wish to use TLS earlier than 1.2 without a deprecation warning\n  should opt-in explicitly by setting ``ssl_version=ssl.PROTOCOL_TLSv1_1`` (Pull 2002)\n  **Starting in urllib3 v2.0: Connections that receive a ``DeprecationWarning`` will fail**\n\n* Deprecated ``Retry`` options ``Retry.DEFAULT_METHOD_WHITELIST``, ``Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST``\n  and ``Retry(method_whitelist=...)`` in favor of ``Retry.DEFAULT_ALLOWED_METHODS``,\n  ``Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT``, and ``Retry(allowed_methods=...)``\n  (Pull 2000) **Starting in urllib3 v2.0: Deprecated options will be removed**\n\n* Added default ``User-Agent`` header to every request (Pull 1750)\n\n* Added ``urllib3.util.SKIP_HEADER`` for skipping ``User-Agent``, ``Accept-Encoding``,\n  and ``Host`` headers from being automatically emitted with requests (Pull 2018)\n\n* Collapse ``transfer-encoding: chunked`` request data and framing into\n  the same ``socket.send()`` call (Pull 1906)\n\n* Send ``http/1.1`` ALPN identifier with every TLS handshake by default (Pull 1894)\n\n* Properly terminate SecureTransport connections when CA verification fails (Pull 1977)\n\n* Don&#x27;t emit an ``SNIMissingWarning`` when passing ``server_hostname=None``\n  to SecureTransport (Pull 1903)\n\n* Disabled requesting TLSv1.2 session tickets as they weren&#x27;t being used by urllib3 (Pull 1970)\n\n* Suppress ``BrokenPipeError`` when writing request body after the server\n  has closed the socket (Pull 1524)\n\n* Wrap ``ssl.SSLError`` that can be raised from reading a socket (e.g. &quot;bad MAC&quot;)\n  into an ``urllib3.exceptions.SSLError`` (Pull 1939)\n   ```\n   \n  \n  \n   ### 1.25.11\n   ```\n   ====================\n\n* Fix retry backoff time parsed from ``Retry-After`` header when given\n  in the HTTP date format. The HTTP date was parsed as the local timezone\n  rather than accounting for the timezone in the HTTP date (typically\n  UTC) (Pull 1932, Pull 1935, Pull 1938, Pull 1949)\n\n* Fix issue where an error would be raised when the ``SSLKEYLOGFILE``\n  environment variable was set to the empty string. Now ``SSLContext.keylog_file``\n  is not set in this situation (Pull 2016)\n   ```\n   \n  \n  \n   ### 1.25.10\n   ```\n   ====================\n\n* Added support for ``SSLKEYLOGFILE`` environment variable for\n  logging TLS session keys with use with programs like\n  Wireshark for decrypting captured web traffic (Pull 1867)\n\n* Fixed loading of SecureTransport libraries on macOS Big Sur\n  due to the new dynamic linker cache (Pull 1905)\n\n* Collapse chunked request bodies data and framing into one\n  call to ``send()`` to reduce the number of TCP packets by 2-4x (Pull 1906)\n\n* Don&#x27;t insert ``None`` into ``ConnectionPool`` if the pool\n  was empty when requesting a connection (Pull 1866)\n\n* Avoid ``hasattr`` call in ``BrotliDecoder.decompress()`` (Pull 1858)\n   ```\n   \n  \n  \n   ### 1.25.9\n   ```\n   ===================\n\n* Added ``InvalidProxyConfigurationWarning`` which is raised when\n  erroneously specifying an HTTPS proxy URL. urllib3 doesn&#x27;t currently\n  support connecting to HTTPS proxies but will soon be able to\n  and we would like users to migrate properly without much breakage.\n\n  See `this GitHub issue &lt;https://github.com/urllib3/urllib3/issues/1850&gt;`_\n  for more information on how to fix your proxy config. (Pull 1851)\n\n* Drain connection after ``PoolManager`` redirect (Pull 1817)\n\n* Ensure ``load_verify_locations`` raises ``SSLError`` for all backends (Pull 1812)\n\n* Rename ``VerifiedHTTPSConnection`` to ``HTTPSConnection`` (Pull 1805)\n\n* Allow the CA certificate data to be passed as a string (Pull 1804)\n\n* Raise ``ValueError`` if method contains control characters (Pull 1800)\n\n* Add ``__repr__`` to ``Timeout`` (Pull 1795)\n   ```\n   \n  \n  \n   ### 1.25.8\n   ```\n   ===================\n\n* Drop support for EOL Python 3.4 (Pull 1774)\n\n* Optimize _encode_invalid_chars (Pull 1787)\n   ```\n   \n  \n  \n   ### 1.25.7\n   ```\n   ===================\n\n* Preserve ``chunked`` parameter on retries (Pull 1715, Pull 1734)\n\n* Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull 1704, Issue 1470)\n\n* Fix issue where URL fragment was sent within the request target. (Pull 1732)\n\n* Fix issue where an empty query section in a URL would fail to parse. (Pull 1732)\n\n* Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull 1703)\n   ```\n   \n  \n  \n   ### 1.25.6\n   ```\n   ===================\n\n* Fix issue where tilde (``~``) characters were incorrectly\n  percent-encoded in the path. (Pull 1692)\n   ```\n   \n  \n  \n   ### 1.25.5\n   ```\n   ===================\n\n* Add mitigation for BPO-37428 affecting Python &lt;3.7.4 and OpenSSL 1.1.1+ which\n  caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n  (Issue 1682)\n   ```\n   \n  \n  \n   ### 1.25.4\n   ```\n   ===================\n\n* Propagate Retry-After header settings to subsequent retries. (Pull 1607)\n\n* Fix edge case where Retry-After header was still respected even when\n  explicitly opted out of. (Pull 1607)\n\n* Remove dependency on ``rfc3986`` for URL parsing.\n\n* Fix issue where URLs containing invalid characters within ``Url.auth`` would\n  raise an exception instead of percent-encoding those characters.\n\n* Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n  work well with BufferedReaders and other ``io`` module features. (Pull 1652)\n\n* Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull 1673)\n   ```\n   \n  \n  \n   ### 1.25.3\n   ```\n   ===================\n\n* Change ``HTTPSConnection`` to load system CA certificates\n  when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n  unspecified. (Pull 1608, Issue 1603)\n\n* Upgrade bundled rfc3986 to v1.3.2. (Pull 1609, Issue 1605)\n   ```\n   \n  \n  \n   ### 1.25.2\n   ```\n   ===================\n\n* Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull 1583)\n\n* Change ``parse_url`` to percent-encode invalid characters within the\n  path, query, and target components. (Pull 1586)\n   ```\n   \n  \n  \n   ### 1.25.1\n   ```\n   ===================\n\n* Add support for Google&#x27;s ``Brotli`` package. (Pull 1572, Pull 1579)\n\n* Upgrade bundled rfc3986 to v1.3.1 (Pull 1578)\n   ```\n   \n  \n  \n   ### 1.25\n   ```\n   =================\n\n* Require and validate certificates by default when using HTTPS (Pull 1507)\n\n* Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull 1487)\n\n* Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n  encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull 1489)\n\n* Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n  implementations. (Pull 1496)\n\n* Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue 303, Pull 1492)\n\n* Fixed issue where OpenSSL would block if an encrypted client private key was\n  given and no password was given. Instead an ``SSLError`` is raised. (Pull 1489)\n\n* Added support for Brotli content encoding. It is enabled automatically if\n  ``brotlipy`` package is installed which can be requested with\n  ``urllib3[brotli]`` extra. (Pull 1532)\n\n* Drop ciphers using DSS key exchange from default TLS cipher suites.\n  Improve default ciphers when using SecureTransport. (Pull 1496)\n\n* Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue 1483)\n   ```\n   \n  \n  \n   ### 1.24.3\n   ```\n   ===================\n\n* Apply fix for CVE-2019-9740. (Pull 1591)\n   ```\n   \n  \n  \n   ### 1.24.2\n   ```\n   ===================\n\n* Don&#x27;t load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n  ``ssl_context`` parameters are specified.\n\n* Remove Authorization header regardless of case when redirecting to cross-site. (Issue 1510)\n\n* Add support for IPv6 addresses in subjectAltName section of certificates. (Issue 1269)\n   ```\n   \n  \n  \n   ### 1.24.1\n   ```\n   ===================\n\n* Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue 1467)\n\n* Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue 1462)\n   ```\n   \n  \n  \n   ### 1.24\n   ```\n   =================\n\n* Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull 1449)\n\n* Test against Python 3.7 on AppVeyor. (Pull 1453)\n\n* Early-out ipv6 checks when running on App Engine. (Pull 1450)\n\n* Change ambiguous description of backoff_factor (Pull 1436)\n\n* Add ability to handle multiple Content-Encodings (Issue 1441 and Pull 1442)\n\n* Skip DNS names that can&#x27;t be idna-decoded when using pyOpenSSL (Issue 1405).\n\n* Add a server_hostname parameter to HTTPSConnection which allows for\n  overriding the SNI hostname sent in the handshake. (Pull 1397)\n\n* Drop support for EOL Python 2.6 (Pull 1429 and Pull 1430)\n\n* Fixed bug where responses with header Content-Type: message/* erroneously\n  raised HeaderParsingError, resulting in a warning being logged. (Pull 1439)\n\n* Move urllib3 to src/urllib3 (Pull 1409)\n   ```\n   \n  \n  \n   ### 1.23\n   ```\n   =================\n\n* Allow providing a list of headers to strip from requests when redirecting\n  to a different host. Defaults to the ``Authorization`` header. Different\n  headers can be set via ``Retry.remove_headers_on_redirect``. (Issue 1316)\n\n* Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue 1247).\n\n* Dropped Python 3.3 support. (Pull 1242)\n\n* Put the connection back in the pool when calling stream() or read_chunked() on\n  a chunked HEAD response. (Issue 1234)\n\n* Fixed pyOpenSSL-specific ssl client authentication issue when clients\n  attempted to auth via certificate + chain (Issue 1060)\n\n* Add the port to the connectionpool connect print (Pull 1251)\n\n* Don&#x27;t use the ``uuid`` module to create multipart data boundaries. (Pull 1380)\n\n* ``read_chunked()`` on a closed response returns no chunks. (Issue 1088)\n\n* Add Python 2.6 support to ``contrib.securetransport`` (Pull 1359)\n\n* Added support for auth info in url for SOCKS proxy (Pull 1363)\n   ```\n   \n  \n  \n   ### 1.22\n   ```\n   =================\n\n* Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n  IPv6 proxy. (Issue 1222)\n\n* Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n  is available on ``MaxRetryError.reason``. (Issue 1112)\n\n* Drain and release connection before recursing on retry/redirect.  Fixes\n  deadlocks with a blocking connectionpool. (Issue 1167)\n\n* Fixed compatibility for cookiejar. (Issue 1229)\n\n* pyopenssl: Use vendored version of ``six``. (Issue 1231)\n   ```\n   \n  \n  \n   ### 1.21.1\n   ```\n   ===================\n\n* Fixed SecureTransport issue that would cause long delays in response body\n  delivery. (Pull 1154)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``socket_options`` flag to the ``PoolManager``.  (Issue 1165)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n  (Pull 1157)\n   ```\n   \n  \n  \n   ### 1.21\n   ```\n   =================\n\n* Improved performance of certain selector system calls on Python 3.5 and\n  later. (Pull 1095)\n\n* Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n  exceptions appropriately when sending data. (Pull 1125)\n\n* Selectors now detects a monkey-patched select module after import for modules\n  that patch the select module like eventlet, greenlet. (Pull 1128)\n\n* Reduced memory consumption when streaming zlib-compressed responses\n  (as opposed to raw deflate streams). (Pull 1129)\n\n* Connection pools now use the entire request context when constructing the\n  pool key. (Pull 1016)\n\n* ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n  ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n  (Pull 1016)\n\n* Add retry counter for ``status_forcelist``. (Issue 1147)\n\n* Added ``contrib`` module for using SecureTransport on macOS:\n  ``urllib3.contrib.securetransport``.  (Pull 1122)\n\n* urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n  for schemes it does not recognise, it assumes they are case-sensitive and\n  leaves them unchanged.\n  (Issue 1080)\n   ```\n   \n  \n  \n   ### 1.20\n   ```\n   =================\n\n* Added support for waiting for I/O using selectors other than select,\n  improving urllib3&#x27;s behaviour with large numbers of concurrent connections.\n  (Pull 1001)\n\n* Updated the date for the system clock check. (Issue 1005)\n\n* ConnectionPools now correctly consider hostnames to be case-insensitive.\n  (Issue 1032)\n\n* Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Pull 1063)\n\n* Outdated versions of cryptography now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Issue 1044)\n\n* Automatically attempt to rewind a file-like body object when a request is\n  retried or redirected. (Pull 1039)\n\n* Fix some bugs that occur when modules incautiously patch the queue module.\n  (Pull 1061)\n\n* Prevent retries from occurring on read timeouts for which the request method\n  was not in the method whitelist. (Issue 1059)\n\n* Changed the PyOpenSSL contrib module to lazily load idna to avoid\n  unnecessarily bloating the memory of programs that don&#x27;t need it. (Pull\n  1076)\n\n* Add support for IPv6 literals with zone identifiers. (Pull 1013)\n\n* Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n  proxies, and controlled remote DNS appropriately. (Issue 1035)\n   ```\n   \n  \n  \n   ### 1.19.1\n   ```\n   ===================\n\n* Fixed AppEngine import that didn&#x27;t function on Python 3.5. (Pull 1025)\n   ```\n   \n  \n  \n   ### 1.19\n   ```\n   =================\n\n* urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n  using the default retry logic. (Pull 955)\n\n* Remove markers from setup.py to assist ancient setuptools versions. (Issue\n  986)\n\n* Disallow superscripts and other integerish things in URL ports. (Issue 989)\n\n* Allow urllib3&#x27;s HTTPResponse.stream() method to continue to work with\n  non-httplib underlying FPs. (Pull 990)\n\n* Empty filenames in multipart headers are now emitted as such, rather than\n  being suppressed. (Issue 1015)\n\n* Prefer user-supplied Host headers on chunked uploads. (Issue 1009)\n   ```\n   \n  \n  \n   ### 1.18.1\n   ```\n   ===================\n\n* CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n  PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n  release fixes a vulnerability whereby urllib3 in the above configuration\n  would silently fail to validate TLS certificates due to erroneously setting\n  invalid flags in OpenSSL&#x27;s ``SSL_CTX_set_verify`` function. These erroneous\n  flags do not cause a problem in OpenSSL versions before 1.1.0, which\n  interprets the presence of any flag as requesting certificate validation.\n\n  There is no PR for this patch, as it was prepared for simultaneous disclosure\n  and release. The master branch received the same fix in Pull 1010.\n   ```\n   \n  \n  \n   ### 1.18\n   ```\n   =================\n\n* Fixed incorrect message for IncompleteRead exception. (Pull 973)\n\n* Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n  (Issue 258)\n\n* Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n  (Issue 977)\n\n* Fixed handling of wildcard certificates when using PyOpenSSL. (Issue 979)\n   ```\n   \n  \n  \n   ### 1.17\n   ```\n   =================\n\n* Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue 835)\n\n* ConnectionPool debug log now includes scheme, host, and port. (Issue 897)\n\n* Substantially refactored documentation. (Issue 887)\n\n* Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n  (Issue 858)\n\n* Normalize the scheme and host in the URL parser (Issue 833)\n\n* ``HTTPResponse`` contains the last ``Retry`` object, which now also\n  contains retries history. (Issue 848)\n\n* Timeout can no longer be set as boolean, and must be greater than zero.\n  (Pull 924)\n\n* Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n  now use cryptography and idna, both of which are already dependencies of\n  PyOpenSSL. (Pull 930)\n\n* Fixed infinite loop in ``stream`` when amt=None. (Issue 928)\n\n* Try to use the operating system&#x27;s certificates when we are using an\n  ``SSLContext``. (Pull 941)\n\n* Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n  ChaCha20, but ChaCha20 is then preferred to everything else. (Pull 947)\n\n* Updated cipher suite list to remove 3DES-based cipher suites. (Pull 958)\n\n* Removed the cipher suite fallback to allow HIGH ciphers. (Pull 958)\n\n* Implemented ``length_remaining`` to determine remaining content\n  to be read. (Pull 949)\n\n* Implemented ``enforce_content_length`` to enable exceptions when\n  incomplete data chunks are received. (Pull 949)\n\n* Dropped connection start, dropped connection reset, redirect, forced retry,\n  and new HTTPS connection log levels to DEBUG, from INFO. (Pull 967)\n   ```\n   \n  \n  \n   ### 1.16\n   ```\n   =================\n\n* Disable IPv6 DNS when IPv6 connections are not possible. (Issue 840)\n\n* Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n  overridden. (Issue 830)\n\n* Normalize scheme and host to lowercase for pool keys, and include\n  ``source_address``. (Issue 830)\n\n* Cleaner exception chain in Python 3 for ``_make_request``.\n  (Issue 861)\n\n* Fixed installing ``urllib3[socks]`` extra. (Issue 864)\n\n* Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n  called by subclasses. (Issue 873)\n\n* Retain ``release_conn`` state across retries. (Issues 651, 866)\n\n* Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n  ``HTTPResponse`` but can be replaced with a subclass. (Issue 879)\n   ```\n   \n  \n  \n   ### 1.15.1\n   ```\n   ===================\n\n* Fix packaging to include backports module. (Issue 841)\n   ```\n   \n  \n  \n   ### 1.15\n   ```\n   =================\n\n* Added Retry(raise_on_status=False). (Issue 720)\n\n* Always use setuptools, no more distutils fallback. (Issue 785)\n\n* Dropped support for Python 3.2. (Issue 786)\n\n* Chunked transfer encoding when requesting with ``chunked=True``.\n  (Issue 790)\n\n* Fixed regression with IPv6 port parsing. (Issue 801)\n\n* Append SNIMissingWarning messages to allow users to specify it in\n  the PYTHONWARNINGS environment variable. (Issue 816)\n\n* Handle unicode headers in Py2. (Issue 818)\n\n* Log certificate when there is a hostname mismatch. (Issue 820)\n\n* Preserve order of request/response headers. (Issue 821)\n   ```\n   \n  \n  \n   ### 1.14\n   ```\n   =================\n\n* contrib: SOCKS proxy support! (Issue 762)\n\n* Fixed AppEngine handling of transfer-encoding header and bug\n  in Timeout defaults checking. (Issue 763)\n   ```\n   \n  \n  \n   ### 1.13.1\n   ```\n   ===================\n\n* Fixed regression in IPv6 + SSL for match_hostname. (Issue 761)\n   ```\n   \n  \n  \n   ### 1.13\n   ```\n   =================\n\n* Fixed ``pip install urllib3[secure]`` on modern pip. (Issue 706)\n\n* pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue 717)\n\n* pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue 696)\n\n* Close connections more defensively on exception. (Issue 734)\n\n* Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n  repeatedly flushing the decoder, to function better on Jython. (Issue 743)\n\n* Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue 758)\n   ```\n   \n  \n  \n   ### 1.12\n   ```\n   =================\n\n* Rely on ``six`` for importing ``httplib`` to work around\n  conflicts with other Python 3 shims. (Issue 688)\n\n* Add support for directories of certificate authorities, as supported by\n  OpenSSL. (Issue 701)\n\n* New exception: ``NewConnectionError``, raised when we fail to establish\n  a new connection, usually ``ECONNREFUSED`` socket error.\n   ```\n   \n  \n  \n   ### 1.11\n   ```\n   =================\n\n* When ``ca_certs`` is given, ``cert_reqs`` defaults to\n  ``&#x27;CERT_REQUIRED&#x27;``. (Issue 650)\n\n* ``pip install urllib3[secure]`` will install Certifi and\n  PyOpenSSL as dependencies. (Issue 678)\n\n* Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n  (Issues 632, 679)\n\n* Added `urllib3.contrib.appengine &lt;https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine&gt;`_\n  which has an ``AppEngineManager`` for using ``URLFetch`` in a\n  Google AppEngine environment. (Issue 664)\n\n* Dev: Added test suite for AppEngine. (Issue 631)\n\n* Fix performance regression when using PyOpenSSL. (Issue 626)\n\n* Passing incorrect scheme (e.g. ``foo://``) will raise\n  ``ValueError`` instead of ``AssertionError`` (backwards\n  compatible for now, but please migrate). (Issue 640)\n\n* Fix pools not getting replenished when an error occurs during a\n  request using ``release_conn=False``. (Issue 644)\n\n* Fix pool-default headers not applying for url-encoded requests\n  like GET. (Issue 657)\n\n* log.warning in Python 3 when headers are skipped due to parsing\n  errors. (Issue 642)\n\n* Close and discard connections if an error occurs during read.\n  (Issue 660)\n\n* Fix host parsing for IPv6 proxies. (Issue 668)\n\n* Separate warning type SubjectAltNameWarning, now issued once\n  per host. (Issue 671)\n\n* Fix ``httplib.IncompleteRead`` not getting converted to\n  ``ProtocolError`` when using ``HTTPResponse.stream()``\n  (Issue 674)\n   ```\n   \n  \n  \n   ### 1.10.4\n   ```\n   ===================\n\n* Migrate tests to Tornado 4. (Issue 594)\n\n* Append default warning configuration rather than overwrite.\n  (Issue 603)\n\n* Fix streaming decoding regression. (Issue 595)\n\n* Fix chunked requests losing state across keep-alive connections.\n  (Issue 599)\n\n* Fix hanging when chunked HEAD response has no body. (Issue 605)\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ===================\n\n* Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n  (Issue 558)\n\n* Fix regression of duplicate header keys being discarded.\n  (Issue 563)\n\n* ``Response.stream()`` returns a generator for chunked responses.\n  (Issue 560)\n\n* Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n  (Issue 585)\n\n* Work on platforms without `ssl` module for plain HTTP requests.\n  (Issue 587)\n\n* Stop relying on the stdlib&#x27;s default cipher list. (Issue 588)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ===================\n\n* Fix file descriptor leakage on retries. (Issue 548)\n\n* Removed RC4 from default cipher list. (Issue 551)\n\n* Header performance improvements. (Issue 544)\n\n* Fix PoolManager not obeying redirect retry settings. (Issue 553)\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ===================\n\n* Pools can be used as context managers. (Issue 545)\n\n* Don&#x27;t re-use connections which experienced an SSLError. (Issue 529)\n\n* Don&#x27;t fail when gzip decoding an empty stream. (Issue 535)\n\n* Add sha256 support for fingerprint verification. (Issue 540)\n\n* Fixed handling of header values containing commas. (Issue 533)\n   ```\n   \n  \n  \n   ### 1.10\n   ```\n   =================\n\n* Disabled SSLv3. (Issue 473)\n\n* Add ``Url.url`` property to return the composed url string. (Issue 394)\n\n* Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue 412)\n\n* ``MaxRetryError.reason`` will always be an exception, not string.\n  (Issue 481)\n\n* Fixed SSL-related timeouts not being detected as timeouts. (Issue 492)\n\n* Py3: Use ``ssl.create_default_context()`` when available. (Issue 473)\n\n* Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n  (Issue 496)\n\n* Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n  (Issue 499)\n\n* Close and discard sockets which experienced SSL-related errors.\n  (Issue 501)\n\n* Handle ``body`` param in ``.request(...)``. (Issue 513)\n\n* Respect timeout with HTTPS proxy. (Issue 505)\n\n* PyOpenSSL: Handle ZeroReturnError exception. (Issue 520)\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ==================\n\n* Apply socket arguments before binding. (Issue 427)\n\n* More careful checks if fp-like object is closed. (Issue 435)\n\n* Fixed packaging issues of some development-related files not\n  getting included. (Issue 440)\n\n* Allow performing *only* fingerprint verification. (Issue 444)\n\n* Emit ``SecurityWarning`` if system clock is waaay off. (Issue 445)\n\n* Fixed PyOpenSSL compatibility with PyPy. (Issue 450)\n\n* Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n  (Issue 443)\n   ```\n   \n  \n  \n   ### 1.9\n   ```\n   ================\n\n* Shuffled around development-related files. If you&#x27;re maintaining a distro\n  package of urllib3, you may need to tweak things. (Issue 415)\n\n* Unverified HTTPS requests will trigger a warning on the first request. See\n  our new `security documentation\n  &lt;https://urllib3.readthedocs.io/en/latest/security.html&gt;`_ for details.\n  (Issue 426)\n\n* New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n  (Issue 326)\n\n* All raised exceptions should now wrapped in a\n  ``urllib3.exceptions.HTTPException``-extending exception. (Issue 326)\n\n* All errors during a retry-enabled request should be wrapped in\n  ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n  which were previously exempt. Underlying error is accessible from the\n  ``.reason`` property. (Issue 326)\n\n* ``urllib3.exceptions.ConnectionError`` renamed to\n  ``urllib3.exceptions.ProtocolError``. (Issue 326)\n\n* Errors during response read (such as IncompleteRead) are now wrapped in\n  ``urllib3.exceptions.ProtocolError``. (Issue 418)\n\n* Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n  (Issue 417)\n\n* Catch read timeouts over SSL connections as\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 419)\n\n* Apply socket arguments before connecting. (Issue 427)\n   ```\n   \n  \n  \n   ### 1.8.3\n   ```\n   ==================\n\n* Fix TLS verification when using a proxy in Python 3.4.1. (Issue 385)\n\n* Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue 393)\n\n* Wrap ``socket.timeout`` exception with\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 399)\n\n* Fixed proxy-related bug where connections were being reused incorrectly.\n  (Issues 366, 369)\n\n* Added ``socket_options`` keyword parameter which allows to define\n  ``setsockopt`` configuration of new sockets. (Issue 397)\n\n* Removed ``HTTPConnection.tcp_nodelay`` in favor of\n  ``HTTPConnection.default_socket_options``. (Issue 397)\n\n* Fixed ``TypeError`` bug in Python 2.6.4. (Issue 411)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ==================\n\n* Fix ``urllib3.util`` not being included in the package.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ==================\n\n* Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue 356)\n\n* Don&#x27;t install ``dummyserver`` into ``site-packages`` as it&#x27;s only needed\n  for the test suite. (Issue 362)\n\n* Added support for specifying ``source_address``. (Issue 352)\n   ```\n   \n  \n  \n   ### 1.8\n   ```\n   ================\n\n* Improved url parsing in ``urllib3.util.parse_url`` (properly parse &#x27;&#x27; in\n  username, and blank ports like &#x27;hostname:&#x27;).\n\n* New ``urllib3.connection`` module which contains all the HTTPConnection\n  objects.\n\n* Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n  signature to a more sensible order. [Backwards incompatible]\n  (Issues 252, 262, 263)\n\n* Use ``backports.ssl_match_hostname`` if it&#x27;s installed. (Issue 274)\n\n* Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n  returns the number of bytes read so far. (Issue 277)\n\n* Support for platforms without threading. (Issue 289)\n\n* Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n  to allow a pool with no specified port to be considered equal to to an\n  HTTP/HTTPS url with port 80/443 explicitly provided. (Issue 305)\n\n* Improved default SSL/TLS settings to avoid vulnerabilities.\n  (Issue 309)\n\n* Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n  (Issue 310)\n\n* Disable Nagle&#x27;s Algorithm on the socket for non-proxies. A subset of requests\n  will send the entire HTTP request ~200 milliseconds faster; however, some of\n  the resulting TCP packets will be smaller. (Issue 254)\n\n* Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n  from the default 64 to 1024 in a single certificate. (Issue 318)\n\n* Headers are now passed and stored as a custom\n  ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n  (Issue 329, 333)\n\n* Headers no longer lose their case on Python 3. (Issue 236)\n\n* ``urllib3.contrib.pyopenssl`` now uses the operating system&#x27;s default CA\n  certificates on inject. (Issue 332)\n\n* Requests with ``retries=False`` will immediately raise any exceptions without\n  wrapping them in ``MaxRetryError``. (Issue 348)\n\n* Fixed open socket leak with SSL-related failures. (Issue 344, 348)\n   ```\n   \n  \n  \n   ### 1.7.1\n   ```\n   ==================\n\n* Added granular timeout support with new ``urllib3.util.Timeout`` class.\n  (Issue 231)\n\n* Fixed Python 3.4 support. (Issue 238)\n   ```\n   \n  \n  \n   ### 1.7\n   ```\n   ================\n\n* More exceptions are now pickle-able, with tests. (Issue 174)\n\n* Fixed redirecting with relative URLs in Location header. (Issue 178)\n\n* Support for relative urls in ``Location: ...`` header. (Issue 179)\n\n* ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n  file-like functionality. (Issue 187)\n\n* Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n  skip hostname verification for SSL connections. (Issue 194)\n\n* New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n  generator wrapped around ``.read(...)``. (Issue 198)\n\n* IPv6 url parsing enforces brackets around the hostname. (Issue 199)\n\n* Fixed thread race condition in\n  ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue 204)\n\n* ``ProxyManager`` requests now include non-default port in ``Host: ...``\n  header. (Issue 217)\n\n* Added HTTPS proxy support in ``ProxyManager``. (Issue 170 139)\n\n* New ``RequestField`` object can be passed to the ``fields=...`` param which\n  can specify headers. (Issue 220)\n\n* Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n  (Issue 221)\n\n* Use international headers when posting file names. (Issue 119)\n\n* Improved IPv6 support. (Issue 203)\n   ```\n   \n  \n  \n   ### 1.6\n   ```\n   ================\n\n* Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue 156)\n\n* ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n\n* Improved SSL-related code. ``cert_req`` now optionally takes a string like\n  &quot;REQUIRED&quot; or &quot;NONE&quot;. Same with ``ssl_version`` takes strings like &quot;SSLv23&quot;\n  The string values reflect the suffix of the respective constant variable.\n  (Issue 130)\n\n* Vendored ``socksipy`` now based on Anorov&#x27;s fork which handles unexpectedly\n  closed proxy connections and larger read buffers. (Issue 135)\n\n* Ensure the connection is closed if no data is received, fixes connection leak\n  on some platforms. (Issue 133)\n\n* Added SNI support for SSL/TLS connections on Py32+. (Issue 89)\n\n* Tests fixed to be compatible with Py26 again. (Issue 125)\n\n* Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n  to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue 109)\n\n* Allow an explicit content type to be specified when encoding file fields.\n  (Issue 126)\n\n* Exceptions are now pickleable, with tests. (Issue 101)\n\n* Fixed default headers not getting passed in some cases. (Issue 99)\n\n* Treat &quot;content-encoding&quot; header value as case-insensitive, per RFC 2616\n  Section 3.5. (Issue 110)\n\n* &quot;Connection Refused&quot; SocketErrors will get retried rather than raised.\n  (Issue 92)\n\n* Updated vendored ``six``, no longer overrides the global ``six`` module\n  namespace. (Issue 113)\n\n* ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n  the exception that prompted the final retry. If ``reason is None`` then it\n  was due to a redirect. (Issue 92, 114)\n\n* Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n  (Issue 149)\n\n* Don&#x27;t assume ``Content-Type: text/plain`` for multi-part encoding parameters\n  that are not files. (Issue 111)\n\n* Pass `strict` param down to ``httplib.HTTPConnection``. (Issue 122)\n\n* Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n  against an arbitrary hostname (when connecting by IP or for misconfigured\n  servers). (Issue 140)\n\n* Streaming decompression support. (Issue 159)\n   ```\n   \n  \n  \n   ### 1.5\n   ```\n   ================\n\n* Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n  logging in urllib3.\n\n* Native full URL parsing (including auth, path, query, fragment) available in\n  ``urllib3.util.parse_url(url)``.\n\n* Built-in redirect will switch method to &#x27;GET&#x27; if status code is 303.\n  (Issue 11)\n\n* ``urllib3.PoolManager`` strips the scheme and host before sending the request\n  uri. (Issue 8)\n\n* New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n  based on the Content-Type header, fails.\n\n* Fixed bug with pool depletion and leaking connections (Issue 76). Added\n  explicit connection closing on pool eviction. Added\n  ``urllib3.PoolManager.clear()``.\n\n* 99% -&gt; 100% unit test coverage.\n   ```\n   \n  \n  \n   ### 1.4\n   ```\n   ================\n\n* Minor AppEngine-related fixes.\n\n* Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n\n* Improved url parsing. (Issue 73)\n\n* IPv6 url support. (Issue 72)\n   ```\n   \n  \n  \n   ### 1.3\n   ```\n   ================\n\n* Removed pre-1.0 deprecated API.\n\n* Refactored helpers into a ``urllib3.util`` submodule.\n\n* Fixed multipart encoding to support list-of-tuples for keys with multiple\n  values. (Issue 48)\n\n* Fixed multiple Set-Cookie headers in response not getting merged properly in\n  Python 3. (Issue 53)\n\n* AppEngine support with Py27. (Issue 61)\n\n* Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n  bytes.\n   ```\n   \n  \n  \n   ### 1.2.2\n   ```\n   ==================\n\n* Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue 47)\n   ```\n   \n  \n  \n   ### 1.2.1\n   ```\n   ==================\n\n* Fixed another bug related to when ``ssl`` module is not available. (Issue 41)\n\n* Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n  which inherits from ``ValueError``.\n   ```\n   \n  \n  \n   ### 1.2\n   ```\n   ================\n\n* Added Python 3 support (tested on 3.2.2)\n\n* Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n\n* Use ``select.poll`` instead of ``select.select`` for platforms that support\n  it.\n\n* Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n  connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n\n* Fixed ``ImportError`` during install when ``ssl`` module is not available.\n  (Issue 41)\n\n* Fixed ``PoolManager`` redirects between schemes (such as HTTP -&gt; HTTPS) not\n  completing properly. (Issue 28, uncovered by Issue 10 in v1.1)\n\n* Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n  ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n  Added socket-level tests.\n\n* More tests. Achievement Unlocked: 99% Coverage.\n   ```\n   \n  \n  \n   ### 1.1\n   ```\n   ================\n\n* Refactored ``dummyserver`` to its own root namespace module (used for\n  testing).\n\n* Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n  Py32&#x27;s ``ssl_match_hostname``. (Issue 25)\n\n* Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue 10)\n\n* Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n  27)\n\n* Fixed timeout-related bugs. (Issues 17, 23)\n   ```\n   \n  \n  \n   ### 1.0.2\n   ```\n   ==================\n\n* Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n  you&#x27;re using the object manually. (Thanks pyos)\n\n* Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n  wrapping the access log in a mutex. (Thanks christer)\n\n* Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n  ``__getitem__`` behaviour), with tests. Shouldn&#x27;t affect core urllib3 code.\n   ```\n   \n  \n  \n   ### 1.0.1\n   ```\n   ==================\n\n* Fixed a bug where the same connection would get returned into the pool twice,\n  causing extraneous &quot;HttpConnectionPool is full&quot; log warnings.\n   ```\n   \n  \n  \n   ### 1.0\n   ```\n   ================\n\n* Added ``PoolManager`` with LRU expiration of connections (tested and\n  documented).\n* Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n  with HTTPS proxies).\n* Added optional partial-read support for responses when\n  ``preload_content=False``. You can now make requests and just read the headers\n  without loading the content.\n* Made response decoding optional (default on, same as before).\n* Added optional explicit boundary string for ``encode_multipart_formdata``.\n* Convenience request methods are now inherited from ``RequestMethods``. Old\n  helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n  the new ``request(method, url, ...)``.\n* Refactored code to be even more decoupled, reusable, and extendable.\n* License header added to ``.py`` files.\n* Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n  and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n* Embettered all the things!\n* Started writing this file.\n   ```\n   \n  \n  \n   ### 0.4.1\n   ```\n   ==================\n\n* Minor bug fixes, code cleanup.\n   ```\n   \n  \n  \n   ### 0.4\n   ```\n   ================\n\n* Better unicode support.\n* Added ``VerifiedHTTPSConnection``.\n* Added ``NTLMConnectionPool`` in contrib.\n* Minor improvements.\n   ```\n   \n  \n  \n   ### 0.3.1\n   ```\n   ==================\n\n* Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n   ```\n   \n  \n  \n   ### 0.3\n   ```\n   ================\n\n* Added HTTPS support.\n* Minor bug fixes.\n* Refactored, broken backwards compatibility with 0.2.\n* API to be treated as stable from this version forward.\n   ```\n   \n  \n  \n   ### 0.2\n   ```\n   ================\n\n* Added unit tests.\n* Bug fixes.\n   ```\n   \n  \n  \n   ### 0.1\n   ```\n   ================\n\n* First release.\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/urllib3\n  - Changelog: https://data.safetycli.com/changelogs/urllib3/\n</details>\n\n\n\n\n\n### Update [websockets](https://pypi.org/project/websockets) from **10.4** to **11.0.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 11.0.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.4\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 7.0\n   ```\n   See https://websockets.",
                "created_at": "2023-10-09T13:49:06Z",
                "updated_at": "2023-10-16T13:49:10Z",
                "closed_at": "2023-10-16T13:49:09Z",
                "merged_at": null,
                "merge_commit_sha": "4b7085b94f453586c868e386a3ad970a0cf9aa80",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725/commits",
                "review_comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725/comments",
                "review_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/comments",
                "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/a2b0540706df8c417690421c9a028d917f80266f",
                "head": {
                    "label": "alpacahq:pyup-scheduled-update-2023-10-09",
                    "ref": "pyup-scheduled-update-2023-10-09",
                    "sha": "a2b0540706df8c417690421c9a028d917f80266f",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-15T20:55:24Z",
                        "pushed_at": "2023-10-16T13:49:07Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1630,
                        "watchers_count": 1630,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 552,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 54,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 552,
                        "open_issues": 54,
                        "watchers": 1630,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "alpacahq:master",
                    "ref": "master",
                    "sha": "f54b5a529591dae708cd1a52e77bef45965e012d",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-15T20:55:24Z",
                        "pushed_at": "2023-10-16T13:49:07Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1630,
                        "watchers_count": 1630,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 552,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 54,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 552,
                        "open_issues": 54,
                        "watchers": 1630,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725"
                    },
                    "html": {
                        "href": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/a2b0540706df8c417690421c9a028d917f80266f"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": false,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 1,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 5,
                "additions": 5,
                "deletions": 5,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-16T13:49:11Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593127509",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 16239342,
            "login": "pyup-bot",
            "display_login": "pyup-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pyup-bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/16239342?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725",
                "repository_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/labels{/name}",
                "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/comments",
                "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/events",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725",
                "id": 1933121481,
                "node_id": "PR_kwDOB21qNs5cQzWs",
                "number": 725,
                "title": "Scheduled weekly dependency update for week 41",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-09T13:49:06Z",
                "updated_at": "2023-10-16T13:49:09Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/725",
                    "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725",
                    "diff_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725.diff",
                    "patch_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725.patch",
                    "merged_at": null
                },
                "body": "\n\n\n\n\n### Update [urllib3](https://pypi.org/project/urllib3) from **1.26.17** to **2.0.6**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 2.0.6\n   ```\n   ==================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ==================\n\n- Allowed pyOpenSSL third-party module without any deprecation warning. (`3126 &lt;https://github.com/urllib3/urllib3/issues/3126&gt;`__)\n- Fixed default ``blocksize`` of ``HTTPConnection`` classes to match high-level classes. Previously was 8KiB, now 16KiB. (`3066 &lt;https://github.com/urllib3/urllib3/issues/3066&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ==================\n\n- Added support for union operators to ``HTTPHeaderDict`` (`2254 &lt;https://github.com/urllib3/urllib3/issues/2254&gt;`__)\n- Added ``BaseHTTPResponse`` to ``urllib3.__all__`` (`3078 &lt;https://github.com/urllib3/urllib3/issues/3078&gt;`__)\n- Fixed ``urllib3.connection.HTTPConnection`` to raise the ``http.client.connect`` audit event to have the same behavior as the standard library HTTP client (`2757 &lt;https://github.com/urllib3/urllib3/issues/2757&gt;`__)\n- Relied on the standard library for checking hostnames in supported PyPy releases (`3087 &lt;https://github.com/urllib3/urllib3/issues/3087&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ==================\n\n- Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (`3020 &lt;https://github.com/urllib3/urllib3/issues/3020&gt;`__)\n- Deprecated URLs which don&#x27;t have an explicit scheme (`2950 &lt;https://github.com/urllib3/urllib3/pull/2950&gt;`_)\n- Fixed response decoding with Zstandard when compressed data is made of several frames. (`3008 &lt;https://github.com/urllib3/urllib3/issues/3008&gt;`__)\n- Fixed ``assert_hostname=False`` to correctly skip hostname check. (`3051 &lt;https://github.com/urllib3/urllib3/issues/3051&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ==================\n\n- Fixed ``HTTPResponse.stream()`` to continue yielding bytes if buffered decompressed data\n  was still available to be read even if the underlying socket is closed. This prevents\n  a compressed response from being truncated. (`3009 &lt;https://github.com/urllib3/urllib3/issues/3009&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ==================\n\n- Fixed a socket leak when fingerprint or hostname verifications fail. (`2991 &lt;https://github.com/urllib3/urllib3/issues/2991&gt;`__)\n- Fixed an error when ``HTTPResponse.read(0)`` was the first ``read`` call or when the internal response body buffer was otherwise empty. (`2998 &lt;https://github.com/urllib3/urllib3/issues/2998&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ==================\n\nRead the `v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;`__ for help upgrading to the latest version of urllib3.\n\nRemoved\n-------\n\n* Removed support for Python 2.7, 3.5, and 3.6 (`883 &lt;https://github.com/urllib3/urllib3/issues/883&gt;`__, `#2336 &lt;https://github.com/urllib3/urllib3/issues/2336&gt;`__).\n* Removed fallback on certificate ``commonName`` in ``match_hostname()`` function.\n  This behavior was deprecated in May 2000 in RFC 2818. Instead only ``subjectAltName``\n  is used to verify the hostname by default. To enable verifying the hostname against\n  ``commonName`` use ``SSLContext.hostname_checks_common_name = True`` (`2113 &lt;https://github.com/urllib3/urllib3/issues/2113&gt;`__).\n* Removed support for Python with an ``ssl`` module compiled with LibreSSL, CiscoSSL,\n  wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed support for OpenSSL versions earlier than 1.1.1 or that don&#x27;t have SNI support.\n  When an incompatible OpenSSL version is detected an ``ImportError`` is raised (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the list of default ciphers for OpenSSL 1.1.1+ and SecureTransport as their own defaults are already secure (`2082 &lt;https://github.com/urllib3/urllib3/issues/2082&gt;`__).\n* Removed ``urllib3.contrib.appengine.AppEngineManager`` and support for Google App Engine Standard Environment (`2044 &lt;https://github.com/urllib3/urllib3/issues/2044&gt;`__).\n* Removed deprecated ``Retry`` options ``method_whitelist``, ``DEFAULT_REDIRECT_HEADERS_BLACKLIST`` (`2086 &lt;https://github.com/urllib3/urllib3/issues/2086&gt;`__).\n* Removed ``urllib3.HTTPResponse.from_httplib`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Removed default value of ``None`` for the ``request_context`` parameter of ``urllib3.PoolManager.connection_from_pool_key``. This change should have no effect on users as the default value of ``None`` was an invalid option and was never used (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Removed the ``urllib3.request`` module. ``urllib3.request.RequestMethods`` has been made a private API.\n  This change was made to ensure that ``from urllib3 import request`` imported the top-level ``request()``\n  function instead of the ``urllib3.request`` module (`2269 &lt;https://github.com/urllib3/urllib3/issues/2269&gt;`__).\n* Removed support for SSLv3.0 from the ``urllib3.contrib.pyopenssl`` even when support is available from the compiled OpenSSL library (`2233 &lt;https://github.com/urllib3/urllib3/issues/2233&gt;`__).\n* Removed the deprecated ``urllib3.contrib.ntlmpool`` module (`2339 &lt;https://github.com/urllib3/urllib3/issues/2339&gt;`__).\n* Removed ``DEFAULT_CIPHERS``, ``HAS_SNI``, ``USE_DEFAULT_SSLCONTEXT_CIPHERS``, from the private module ``urllib3.util.ssl_`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed ``urllib3.exceptions.SNIMissingWarning`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the ``_prepare_conn`` method from ``HTTPConnectionPool``. Previously this was only used to call ``HTTPSConnection.set_cert()`` by ``HTTPSConnectionPool`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed ``tls_in_tls_required`` property from ``HTTPSConnection``. This is now determined from the ``scheme`` parameter in ``HTTPConnection.set_tunnel()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed the ``strict`` parameter/attribute from ``HTTPConnection``, ``HTTPSConnection``, ``HTTPConnectionPool``, ``HTTPSConnectionPool``, and ``HTTPResponse`` (`2064 &lt;https://github.com/urllib3/urllib3/issues/2064&gt;`__).\n\nDeprecated\n----------\n\n* Deprecated ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` which will be removed in urllib3 v2.1.0. Instead use ``HTTPResponse.headers`` and ``HTTPResponse.headers.get(name, default)``. (`1543 &lt;https://github.com/urllib3/urllib3/issues/1543&gt;`__, `#2814 &lt;https://github.com/urllib3/urllib3/issues/2814&gt;`__).\n* Deprecated ``urllib3.contrib.pyopenssl`` module which will be removed in urllib3 v2.1.0 (`2691 &lt;https://github.com/urllib3/urllib3/issues/2691&gt;`__).\n* Deprecated ``urllib3.contrib.securetransport`` module which will be removed in urllib3 v2.1.0 (`2692 &lt;https://github.com/urllib3/urllib3/issues/2692&gt;`__).\n* Deprecated ``ssl_version`` option in favor of ``ssl_minimum_version``. ``ssl_version`` will be removed in urllib3 v2.1.0 (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Deprecated the ``strict`` parameter of ``PoolManager.connection_from_context()`` as it&#x27;s not longer needed in Python 3.x. It will be removed in urllib3 v2.1.0 (`2267 &lt;https://github.com/urllib3/urllib3/issues/2267&gt;`__)\n* Deprecated the ``NewConnectionError.pool`` attribute which will be removed in urllib3 v2.1.0 (`2271 &lt;https://github.com/urllib3/urllib3/issues/2271&gt;`__).\n* Deprecated ``format_header_param_html5`` and ``format_header_param`` in favor of ``format_multipart_header_param`` (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``RequestField.header_formatter`` parameter which will be removed in urllib3 v2.1.0 (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``HTTPSConnection.set_cert()`` method. Instead pass parameters to the ``HTTPSConnection`` constructor (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Deprecated ``HTTPConnection.request_chunked()`` method which will be removed in urllib3 v2.1.0. Instead pass ``chunked=True`` to ``HTTPConnection.request()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n\nAdded\n-----\n\n* Added top-level ``urllib3.request`` function which uses a preconfigured module-global ``PoolManager`` instance (`2150 &lt;https://github.com/urllib3/urllib3/issues/2150&gt;`__).\n* Added the ``json`` parameter to ``urllib3.request()``, ``PoolManager.request()``, and ``ConnectionPool.request()`` methods to send JSON bodies in requests. Using this parameter will set the header ``Content-Type: application/json`` if ``Content-Type`` isn&#x27;t already defined.\n  Added support for parsing JSON response bodies with ``HTTPResponse.json()`` method (`2243 &lt;https://github.com/urllib3/urllib3/issues/2243&gt;`__).\n* Added type hints to the ``urllib3`` module (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Added ``ssl_minimum_version`` and ``ssl_maximum_version`` options which set\n  ``SSLContext.minimum_version`` and ``SSLContext.maximum_version`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Added support for Zstandard (RFC 8878) when ``zstandard`` 1.18.0 or later is installed.\n  Added the ``zstd`` extra which installs the ``zstandard`` package (`1992 &lt;https://github.com/urllib3/urllib3/issues/1992&gt;`__).\n* Added ``urllib3.response.BaseHTTPResponse`` class. All future response classes will be subclasses of ``BaseHTTPResponse`` (`2083 &lt;https://github.com/urllib3/urllib3/issues/2083&gt;`__).\n* Added ``FullPoolError`` which is raised when ``PoolManager(block=True)`` and a connection is returned to a full pool (`2197 &lt;https://github.com/urllib3/urllib3/issues/2197&gt;`__).\n* Added ``HTTPHeaderDict`` to the top-level ``urllib3`` namespace (`2216 &lt;https://github.com/urllib3/urllib3/issues/2216&gt;`__).\n* Added support for configuring header merging behavior with HTTPHeaderDict\n  When using a ``HTTPHeaderDict`` to provide headers for a request, by default duplicate\n  header values will be repeated. But if ``combine=True`` is passed into a call to\n  ``HTTPHeaderDict.add``, then the added header value will be merged in with an existing\n  value into a comma-separated list (``X-My-Header: foo, bar``) (`2242 &lt;https://github.com/urllib3/urllib3/issues/2242&gt;`__).\n* Added ``NameResolutionError`` exception when a DNS error occurs (`2305 &lt;https://github.com/urllib3/urllib3/issues/2305&gt;`__).\n* Added ``proxy_assert_hostname`` and ``proxy_assert_fingerprint`` kwargs to ``ProxyManager`` (`2409 &lt;https://github.com/urllib3/urllib3/issues/2409&gt;`__).\n* Added a configurable ``backoff_max`` parameter to the ``Retry`` class.\n  If a custom ``backoff_max`` is provided to the ``Retry`` class, it\n  will replace the ``Retry.DEFAULT_BACKOFF_MAX`` (`2494 &lt;https://github.com/urllib3/urllib3/issues/2494&gt;`__).\n* Added the ``authority`` property to the Url class as per RFC 3986 3.2. This property should be used in place of ``netloc`` for users who want to include the userinfo (auth) component of the URI (`2520 &lt;https://github.com/urllib3/urllib3/issues/2520&gt;`__).\n* Added the ``scheme`` parameter to ``HTTPConnection.set_tunnel`` to configure the scheme of the origin being tunnelled to (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added the ``is_closed``, ``is_connected`` and ``has_connected_to_proxy`` properties to ``HTTPConnection`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added optional ``backoff_jitter`` parameter to ``Retry``. (`2952 &lt;https://github.com/urllib3/urllib3/issues/2952&gt;`__)\n\nChanged\n-------\n\n* Changed ``urllib3.response.HTTPResponse.read`` to respect the semantics of ``io.BufferedIOBase`` regardless of compression. Specifically, this method:\n\n  * Only returns an empty bytes object to indicate EOF (that is, the response has been fully consumed).\n  * Never returns more bytes than requested.\n  * Can issue any number of system calls: zero, one or multiple.\n\n  If you want each ``urllib3.response.HTTPResponse.read`` call to issue a single system call, you need to disable decompression by setting ``decode_content=False`` (`2128 &lt;https://github.com/urllib3/urllib3/issues/2128&gt;`__).\n* Changed ``urllib3.HTTPConnection.getresponse`` to return an instance of ``urllib3.HTTPResponse`` instead of ``http.client.HTTPResponse`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Changed ``ssl_version`` to instead set the corresponding ``SSLContext.minimum_version``\n  and ``SSLContext.maximum_version`` values.  Regardless of ``ssl_version`` passed\n  ``SSLContext`` objects are now constructed using ``ssl.PROTOCOL_TLS_CLIENT`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Changed default ``SSLContext.minimum_version`` to be ``TLSVersion.TLSv1_2`` in line with Python 3.10 (`2373 &lt;https://github.com/urllib3/urllib3/issues/2373&gt;`__).\n* Changed ``ProxyError`` to wrap any connection error (timeout, TLS, DNS) that occurs when connecting to the proxy (`2482 &lt;https://github.com/urllib3/urllib3/pull/2482&gt;`__).\n* Changed ``urllib3.util.create_urllib3_context`` to not override the system cipher suites with\n  a default value. The new default will be cipher suites configured by the operating system (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Changed ``multipart/form-data`` header parameter formatting matches the WHATWG HTML Standard as of 2021-06-10. Control characters in filenames are no longer percent encoded (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Changed the error raised when connecting via HTTPS when the ``ssl`` module isn&#x27;t available from ``SSLError`` to ``ImportError`` (`2589 &lt;https://github.com/urllib3/urllib3/issues/2589&gt;`__).\n* Changed ``HTTPConnection.request()`` to always use lowercase chunk boundaries when sending requests with ``Transfer-Encoding: chunked`` (`2515 &lt;https://github.com/urllib3/urllib3/issues/2515&gt;`__).\n* Changed ``enforce_content_length`` default to True, preventing silent data loss when reading streamed responses (`2514 &lt;https://github.com/urllib3/urllib3/issues/2514&gt;`__).\n* Changed internal implementation of ``HTTPHeaderDict`` to use ``dict`` instead of ``collections.OrderedDict`` for better performance (`2080 &lt;https://github.com/urllib3/urllib3/issues/2080&gt;`__).\n* Changed the ``urllib3.contrib.pyopenssl`` module to wrap ``OpenSSL.SSL.Error`` with ``ssl.SSLError`` in ``PyOpenSSLContext.load_cert_chain`` (`2628 &lt;https://github.com/urllib3/urllib3/issues/2628&gt;`__).\n* Changed usage of the deprecated ``socket.error`` to ``OSError`` (`2120 &lt;https://github.com/urllib3/urllib3/issues/2120&gt;`__).\n* Changed all parameters in the ``HTTPConnection`` and ``HTTPSConnection`` constructors to be keyword-only except ``host`` and ``port`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed ``HTTPConnection.getresponse()`` to set the socket timeout from ``HTTPConnection.timeout`` value before reading\n  data from the socket. This previously was done manually by the ``HTTPConnectionPool`` calling ``HTTPConnection.sock.settimeout(...)`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed the ``_proxy_host`` property to ``_tunnel_host`` in ``HTTPConnectionPool`` to more closely match how the property is used (value in ``HTTPConnection.set_tunnel()``) (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed name of ``Retry.BACK0FF_MAX`` to be ``Retry.DEFAULT_BACKOFF_MAX``.\n* Changed TLS handshakes to use ``SSLContext.check_hostname`` when possible (`2452 &lt;https://github.com/urllib3/urllib3/pull/2452&gt;`__).\n* Changed ``server_hostname`` to behave like other parameters only used by ``HTTPSConnectionPool`` (`2537 &lt;https://github.com/urllib3/urllib3/pull/2537&gt;`__).\n* Changed the default ``blocksize`` to 16KB to match OpenSSL&#x27;s default read amounts (`2348 &lt;https://github.com/urllib3/urllib3/pull/2348&gt;`__).\n* Changed ``HTTPResponse.read()`` to raise an error when calling with ``decode_content=False`` after using ``decode_content=True`` to prevent data loss (`2800 &lt;https://github.com/urllib3/urllib3/issues/2800&gt;`__).\n\nFixed\n-----\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins would cause connection pools to be closed while requests are in progress (`1252 &lt;https://github.com/urllib3/urllib3/issues/1252&gt;`__).\n* Fixed an issue where an ``HTTPConnection`` instance would erroneously reuse the socket read timeout value from reading the previous response instead of a newly configured connect timeout.\n  Instead now if ``HTTPConnection.timeout`` is updated before sending the next request the new timeout value will be used (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__).\n* Fixed ``socket.error.errno`` when raised from pyOpenSSL&#x27;s ``OpenSSL.SSL.SysCallError`` (`2118 &lt;https://github.com/urllib3/urllib3/issues/2118&gt;`__).\n* Fixed the default value of ``HTTPSConnection.socket_options`` to match ``HTTPConnection`` (`2213 &lt;https://github.com/urllib3/urllib3/issues/2213&gt;`__).\n* Fixed a bug where ``headers`` would be modified by the ``remove_headers_on_redirect`` feature (`2272 &lt;https://github.com/urllib3/urllib3/issues/2272&gt;`__).\n* Fixed a reference cycle bug in ``urllib3.util.connection.create_connection()`` (`2277 &lt;https://github.com/urllib3/urllib3/issues/2277&gt;`__).\n* Fixed a socket leak if ``HTTPConnection.connect()`` fails (`2571 &lt;https://github.com/urllib3/urllib3/pull/2571&gt;`__).\n* Fixed ``urllib3.contrib.pyopenssl.WrappedSocket`` and ``urllib3.contrib.securetransport.WrappedSocket`` close methods (`2970 &lt;https://github.com/urllib3/urllib3/issues/2970&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.16\n   ```\n   ====================\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins\n  would cause connection pools to be closed while requests are in progress (`2954 &lt;https://github.com/urllib3/urllib3/pull/2954&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.15\n   ```\n   ====================\n\n* Fix socket timeout value when ``HTTPConnection`` is reused (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__)\n* Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n  (`2899 &lt;https://github.com/urllib3/urllib3/issues/2899&gt;`__)\n* Fix IDNA handling of &#x27;\\x80&#x27; byte (`2901 &lt;https://github.com/urllib3/urllib3/issues/2901&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.14\n   ```\n   ====================\n\n* Fixed parsing of port 0 (zero) returning None, instead of 0. (`2850 &lt;https://github.com/urllib3/urllib3/issues/2850&gt;`__)\n* Removed deprecated getheaders() calls in contrib module. Fixed the type hint of ``PoolKey.key_retries`` by adding ``bool`` to the union. (`2865 &lt;https://github.com/urllib3/urllib3/issues/2865&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.13\n   ```\n   ====================\n\n* Deprecated the ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` methods.\n* Fixed an issue where parsing a URL with leading zeroes in the port would be rejected\n  even when the port number after removing the zeroes was valid.\n* Fixed a deprecation warning when using cryptography v39.0.0.\n* Removed the ``&lt;4`` in the ``Requires-Python`` packaging metadata field.\n   ```\n   \n  \n  \n   ### 1.26.12\n   ```\n   ====================\n\n* Deprecated the `urllib3[secure]` extra and the `urllib3.contrib.pyopenssl` module.\n  Both will be removed in v2.x. See this `GitHub issue &lt;https://github.com/urllib3/urllib3/issues/2680&gt;`_\n  for justification and info on how to migrate.\n   ```\n   \n  \n  \n   ### 1.26.11\n   ```\n   ====================\n\n* Fixed an issue where reading more than 2 GiB in a call to ``HTTPResponse.read`` would\n  raise an ``OverflowError`` on Python 3.9 and earlier.\n   ```\n   \n  \n  \n   ### 1.26.10\n   ```\n   ====================\n\n* Removed support for Python 3.5\n* Fixed an issue where a ``ProxyError`` recommending configuring the proxy as HTTP\n  instead of HTTPS could appear even when an HTTPS proxy wasn&#x27;t configured.\n   ```\n   \n  \n  \n   ### 1.26.9\n   ```\n   ===================\n\n* Changed ``urllib3[brotli]`` extra to favor installing Brotli libraries that are still\n  receiving updates like ``brotli`` and ``brotlicffi`` instead of ``brotlipy``.\n  This change does not impact behavior of urllib3, only which dependencies are installed.\n* Fixed a socket leaking when ``HTTPSConnection.connect()`` raises an exception.\n* Fixed ``server_hostname`` being forwarded from ``PoolManager`` to ``HTTPConnectionPool``\n  when requesting an HTTP URL. Should only be forwarded when requesting an HTTPS URL.\n   ```\n   \n  \n  \n   ### 1.26.8\n   ```\n   ===================\n\n* Added extra message to ``urllib3.exceptions.ProxyError`` when urllib3 detects that\n  a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.\n* Added a mention of the size of the connection pool when discarding a connection due to the pool being full.\n* Added explicit support for Python 3.11.\n* Deprecated the ``Retry.MAX_BACKOFF`` class property in favor of ``Retry.DEFAULT_MAX_BACKOFF``\n  to better match the rest of the default parameter names. ``Retry.MAX_BACKOFF`` is removed in v2.0.\n* Changed location of the vendored ``ssl.match_hostname`` function from ``urllib3.packages.ssl_match_hostname``\n  to ``urllib3.util.ssl_match_hostname`` to ensure Python 3.10+ compatibility after being repackaged\n  by downstream distributors.\n* Fixed absolute imports, all imports are now relative.\n   ```\n   \n  \n  \n   ### 1.26.7\n   ```\n   ===================\n\n* Fixed a bug with HTTPS hostname verification involving IP addresses and lack\n  of SNI. (Issue 2400)\n* Fixed a bug where IPv6 braces weren&#x27;t stripped during certificate hostname\n  matching. (Issue 2240)\n   ```\n   \n  \n  \n   ### 1.26.6\n   ```\n   ===================\n\n* Deprecated the ``urllib3.contrib.ntlmpool`` module. urllib3 is not able to support\n  it properly due to `reasons listed in this issue &lt;https://github.com/urllib3/urllib3/issues/2282&gt;`_.\n  If you are a user of this module please leave a comment.\n* Changed ``HTTPConnection.request_chunked()`` to not erroneously emit multiple\n  ``Transfer-Encoding`` headers in the case that one is already specified.\n* Fixed typo in deprecation message to recommend ``Retry.DEFAULT_ALLOWED_METHODS``.\n   ```\n   \n  \n  \n   ### 1.26.5\n   ```\n   ===================\n\n* Fixed deprecation warnings emitted in Python 3.10.\n* Updated vendored ``six`` library to 1.16.0.\n* Improved performance of URL parser when splitting\n  the authority component.\n   ```\n   \n  \n  \n   ### 1.26.4\n   ```\n   ===================\n\n* Changed behavior of the default ``SSLContext`` when connecting to HTTPS proxy\n  during HTTPS requests. The default ``SSLContext`` now sets ``check_hostname=True``.\n   ```\n   \n  \n  \n   ### 1.26.3\n   ```\n   ===================\n\n* Fixed bytes and string comparison issue with headers (Pull 2141)\n\n* Changed ``ProxySchemeUnknown`` error message to be\n  more actionable if the user supplies a proxy URL without\n  a scheme. (Pull 2107)\n   ```\n   \n  \n  \n   ### 1.26.2\n   ```\n   ===================\n\n* Fixed an issue where ``wrap_socket`` and ``CERT_REQUIRED`` wouldn&#x27;t\n  be imported properly on Python 2.7.8 and earlier (Pull 2052)\n   ```\n   \n  \n  \n   ### 1.26.1\n   ```\n   ===================\n\n* Fixed an issue where two ``User-Agent`` headers would be sent if a\n  ``User-Agent`` header key is passed as ``bytes`` (Pull 2047)\n   ```\n   \n  \n  \n   ### 1.26.0\n   ```\n   ===================\n\n* **NOTE: urllib3 v2.0 will drop support for Python 2**.\n  `Read more in the v2.0 Roadmap &lt;https://urllib3.readthedocs.io/en/latest/v2-roadmap.html&gt;`_.\n\n* Added support for HTTPS proxies contacting HTTPS servers (Pull 1923, Pull 1806)\n\n* Deprecated negotiating TLSv1 and TLSv1.1 by default. Users that\n  still wish to use TLS earlier than 1.2 without a deprecation warning\n  should opt-in explicitly by setting ``ssl_version=ssl.PROTOCOL_TLSv1_1`` (Pull 2002)\n  **Starting in urllib3 v2.0: Connections that receive a ``DeprecationWarning`` will fail**\n\n* Deprecated ``Retry`` options ``Retry.DEFAULT_METHOD_WHITELIST``, ``Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST``\n  and ``Retry(method_whitelist=...)`` in favor of ``Retry.DEFAULT_ALLOWED_METHODS``,\n  ``Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT``, and ``Retry(allowed_methods=...)``\n  (Pull 2000) **Starting in urllib3 v2.0: Deprecated options will be removed**\n\n* Added default ``User-Agent`` header to every request (Pull 1750)\n\n* Added ``urllib3.util.SKIP_HEADER`` for skipping ``User-Agent``, ``Accept-Encoding``,\n  and ``Host`` headers from being automatically emitted with requests (Pull 2018)\n\n* Collapse ``transfer-encoding: chunked`` request data and framing into\n  the same ``socket.send()`` call (Pull 1906)\n\n* Send ``http/1.1`` ALPN identifier with every TLS handshake by default (Pull 1894)\n\n* Properly terminate SecureTransport connections when CA verification fails (Pull 1977)\n\n* Don&#x27;t emit an ``SNIMissingWarning`` when passing ``server_hostname=None``\n  to SecureTransport (Pull 1903)\n\n* Disabled requesting TLSv1.2 session tickets as they weren&#x27;t being used by urllib3 (Pull 1970)\n\n* Suppress ``BrokenPipeError`` when writing request body after the server\n  has closed the socket (Pull 1524)\n\n* Wrap ``ssl.SSLError`` that can be raised from reading a socket (e.g. &quot;bad MAC&quot;)\n  into an ``urllib3.exceptions.SSLError`` (Pull 1939)\n   ```\n   \n  \n  \n   ### 1.25.11\n   ```\n   ====================\n\n* Fix retry backoff time parsed from ``Retry-After`` header when given\n  in the HTTP date format. The HTTP date was parsed as the local timezone\n  rather than accounting for the timezone in the HTTP date (typically\n  UTC) (Pull 1932, Pull 1935, Pull 1938, Pull 1949)\n\n* Fix issue where an error would be raised when the ``SSLKEYLOGFILE``\n  environment variable was set to the empty string. Now ``SSLContext.keylog_file``\n  is not set in this situation (Pull 2016)\n   ```\n   \n  \n  \n   ### 1.25.10\n   ```\n   ====================\n\n* Added support for ``SSLKEYLOGFILE`` environment variable for\n  logging TLS session keys with use with programs like\n  Wireshark for decrypting captured web traffic (Pull 1867)\n\n* Fixed loading of SecureTransport libraries on macOS Big Sur\n  due to the new dynamic linker cache (Pull 1905)\n\n* Collapse chunked request bodies data and framing into one\n  call to ``send()`` to reduce the number of TCP packets by 2-4x (Pull 1906)\n\n* Don&#x27;t insert ``None`` into ``ConnectionPool`` if the pool\n  was empty when requesting a connection (Pull 1866)\n\n* Avoid ``hasattr`` call in ``BrotliDecoder.decompress()`` (Pull 1858)\n   ```\n   \n  \n  \n   ### 1.25.9\n   ```\n   ===================\n\n* Added ``InvalidProxyConfigurationWarning`` which is raised when\n  erroneously specifying an HTTPS proxy URL. urllib3 doesn&#x27;t currently\n  support connecting to HTTPS proxies but will soon be able to\n  and we would like users to migrate properly without much breakage.\n\n  See `this GitHub issue &lt;https://github.com/urllib3/urllib3/issues/1850&gt;`_\n  for more information on how to fix your proxy config. (Pull 1851)\n\n* Drain connection after ``PoolManager`` redirect (Pull 1817)\n\n* Ensure ``load_verify_locations`` raises ``SSLError`` for all backends (Pull 1812)\n\n* Rename ``VerifiedHTTPSConnection`` to ``HTTPSConnection`` (Pull 1805)\n\n* Allow the CA certificate data to be passed as a string (Pull 1804)\n\n* Raise ``ValueError`` if method contains control characters (Pull 1800)\n\n* Add ``__repr__`` to ``Timeout`` (Pull 1795)\n   ```\n   \n  \n  \n   ### 1.25.8\n   ```\n   ===================\n\n* Drop support for EOL Python 3.4 (Pull 1774)\n\n* Optimize _encode_invalid_chars (Pull 1787)\n   ```\n   \n  \n  \n   ### 1.25.7\n   ```\n   ===================\n\n* Preserve ``chunked`` parameter on retries (Pull 1715, Pull 1734)\n\n* Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull 1704, Issue 1470)\n\n* Fix issue where URL fragment was sent within the request target. (Pull 1732)\n\n* Fix issue where an empty query section in a URL would fail to parse. (Pull 1732)\n\n* Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull 1703)\n   ```\n   \n  \n  \n   ### 1.25.6\n   ```\n   ===================\n\n* Fix issue where tilde (``~``) characters were incorrectly\n  percent-encoded in the path. (Pull 1692)\n   ```\n   \n  \n  \n   ### 1.25.5\n   ```\n   ===================\n\n* Add mitigation for BPO-37428 affecting Python &lt;3.7.4 and OpenSSL 1.1.1+ which\n  caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n  (Issue 1682)\n   ```\n   \n  \n  \n   ### 1.25.4\n   ```\n   ===================\n\n* Propagate Retry-After header settings to subsequent retries. (Pull 1607)\n\n* Fix edge case where Retry-After header was still respected even when\n  explicitly opted out of. (Pull 1607)\n\n* Remove dependency on ``rfc3986`` for URL parsing.\n\n* Fix issue where URLs containing invalid characters within ``Url.auth`` would\n  raise an exception instead of percent-encoding those characters.\n\n* Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n  work well with BufferedReaders and other ``io`` module features. (Pull 1652)\n\n* Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull 1673)\n   ```\n   \n  \n  \n   ### 1.25.3\n   ```\n   ===================\n\n* Change ``HTTPSConnection`` to load system CA certificates\n  when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n  unspecified. (Pull 1608, Issue 1603)\n\n* Upgrade bundled rfc3986 to v1.3.2. (Pull 1609, Issue 1605)\n   ```\n   \n  \n  \n   ### 1.25.2\n   ```\n   ===================\n\n* Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull 1583)\n\n* Change ``parse_url`` to percent-encode invalid characters within the\n  path, query, and target components. (Pull 1586)\n   ```\n   \n  \n  \n   ### 1.25.1\n   ```\n   ===================\n\n* Add support for Google&#x27;s ``Brotli`` package. (Pull 1572, Pull 1579)\n\n* Upgrade bundled rfc3986 to v1.3.1 (Pull 1578)\n   ```\n   \n  \n  \n   ### 1.25\n   ```\n   =================\n\n* Require and validate certificates by default when using HTTPS (Pull 1507)\n\n* Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull 1487)\n\n* Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n  encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull 1489)\n\n* Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n  implementations. (Pull 1496)\n\n* Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue 303, Pull 1492)\n\n* Fixed issue where OpenSSL would block if an encrypted client private key was\n  given and no password was given. Instead an ``SSLError`` is raised. (Pull 1489)\n\n* Added support for Brotli content encoding. It is enabled automatically if\n  ``brotlipy`` package is installed which can be requested with\n  ``urllib3[brotli]`` extra. (Pull 1532)\n\n* Drop ciphers using DSS key exchange from default TLS cipher suites.\n  Improve default ciphers when using SecureTransport. (Pull 1496)\n\n* Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue 1483)\n   ```\n   \n  \n  \n   ### 1.24.3\n   ```\n   ===================\n\n* Apply fix for CVE-2019-9740. (Pull 1591)\n   ```\n   \n  \n  \n   ### 1.24.2\n   ```\n   ===================\n\n* Don&#x27;t load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n  ``ssl_context`` parameters are specified.\n\n* Remove Authorization header regardless of case when redirecting to cross-site. (Issue 1510)\n\n* Add support for IPv6 addresses in subjectAltName section of certificates. (Issue 1269)\n   ```\n   \n  \n  \n   ### 1.24.1\n   ```\n   ===================\n\n* Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue 1467)\n\n* Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue 1462)\n   ```\n   \n  \n  \n   ### 1.24\n   ```\n   =================\n\n* Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull 1449)\n\n* Test against Python 3.7 on AppVeyor. (Pull 1453)\n\n* Early-out ipv6 checks when running on App Engine. (Pull 1450)\n\n* Change ambiguous description of backoff_factor (Pull 1436)\n\n* Add ability to handle multiple Content-Encodings (Issue 1441 and Pull 1442)\n\n* Skip DNS names that can&#x27;t be idna-decoded when using pyOpenSSL (Issue 1405).\n\n* Add a server_hostname parameter to HTTPSConnection which allows for\n  overriding the SNI hostname sent in the handshake. (Pull 1397)\n\n* Drop support for EOL Python 2.6 (Pull 1429 and Pull 1430)\n\n* Fixed bug where responses with header Content-Type: message/* erroneously\n  raised HeaderParsingError, resulting in a warning being logged. (Pull 1439)\n\n* Move urllib3 to src/urllib3 (Pull 1409)\n   ```\n   \n  \n  \n   ### 1.23\n   ```\n   =================\n\n* Allow providing a list of headers to strip from requests when redirecting\n  to a different host. Defaults to the ``Authorization`` header. Different\n  headers can be set via ``Retry.remove_headers_on_redirect``. (Issue 1316)\n\n* Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue 1247).\n\n* Dropped Python 3.3 support. (Pull 1242)\n\n* Put the connection back in the pool when calling stream() or read_chunked() on\n  a chunked HEAD response. (Issue 1234)\n\n* Fixed pyOpenSSL-specific ssl client authentication issue when clients\n  attempted to auth via certificate + chain (Issue 1060)\n\n* Add the port to the connectionpool connect print (Pull 1251)\n\n* Don&#x27;t use the ``uuid`` module to create multipart data boundaries. (Pull 1380)\n\n* ``read_chunked()`` on a closed response returns no chunks. (Issue 1088)\n\n* Add Python 2.6 support to ``contrib.securetransport`` (Pull 1359)\n\n* Added support for auth info in url for SOCKS proxy (Pull 1363)\n   ```\n   \n  \n  \n   ### 1.22\n   ```\n   =================\n\n* Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n  IPv6 proxy. (Issue 1222)\n\n* Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n  is available on ``MaxRetryError.reason``. (Issue 1112)\n\n* Drain and release connection before recursing on retry/redirect.  Fixes\n  deadlocks with a blocking connectionpool. (Issue 1167)\n\n* Fixed compatibility for cookiejar. (Issue 1229)\n\n* pyopenssl: Use vendored version of ``six``. (Issue 1231)\n   ```\n   \n  \n  \n   ### 1.21.1\n   ```\n   ===================\n\n* Fixed SecureTransport issue that would cause long delays in response body\n  delivery. (Pull 1154)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``socket_options`` flag to the ``PoolManager``.  (Issue 1165)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n  (Pull 1157)\n   ```\n   \n  \n  \n   ### 1.21\n   ```\n   =================\n\n* Improved performance of certain selector system calls on Python 3.5 and\n  later. (Pull 1095)\n\n* Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n  exceptions appropriately when sending data. (Pull 1125)\n\n* Selectors now detects a monkey-patched select module after import for modules\n  that patch the select module like eventlet, greenlet. (Pull 1128)\n\n* Reduced memory consumption when streaming zlib-compressed responses\n  (as opposed to raw deflate streams). (Pull 1129)\n\n* Connection pools now use the entire request context when constructing the\n  pool key. (Pull 1016)\n\n* ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n  ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n  (Pull 1016)\n\n* Add retry counter for ``status_forcelist``. (Issue 1147)\n\n* Added ``contrib`` module for using SecureTransport on macOS:\n  ``urllib3.contrib.securetransport``.  (Pull 1122)\n\n* urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n  for schemes it does not recognise, it assumes they are case-sensitive and\n  leaves them unchanged.\n  (Issue 1080)\n   ```\n   \n  \n  \n   ### 1.20\n   ```\n   =================\n\n* Added support for waiting for I/O using selectors other than select,\n  improving urllib3&#x27;s behaviour with large numbers of concurrent connections.\n  (Pull 1001)\n\n* Updated the date for the system clock check. (Issue 1005)\n\n* ConnectionPools now correctly consider hostnames to be case-insensitive.\n  (Issue 1032)\n\n* Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Pull 1063)\n\n* Outdated versions of cryptography now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Issue 1044)\n\n* Automatically attempt to rewind a file-like body object when a request is\n  retried or redirected. (Pull 1039)\n\n* Fix some bugs that occur when modules incautiously patch the queue module.\n  (Pull 1061)\n\n* Prevent retries from occurring on read timeouts for which the request method\n  was not in the method whitelist. (Issue 1059)\n\n* Changed the PyOpenSSL contrib module to lazily load idna to avoid\n  unnecessarily bloating the memory of programs that don&#x27;t need it. (Pull\n  1076)\n\n* Add support for IPv6 literals with zone identifiers. (Pull 1013)\n\n* Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n  proxies, and controlled remote DNS appropriately. (Issue 1035)\n   ```\n   \n  \n  \n   ### 1.19.1\n   ```\n   ===================\n\n* Fixed AppEngine import that didn&#x27;t function on Python 3.5. (Pull 1025)\n   ```\n   \n  \n  \n   ### 1.19\n   ```\n   =================\n\n* urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n  using the default retry logic. (Pull 955)\n\n* Remove markers from setup.py to assist ancient setuptools versions. (Issue\n  986)\n\n* Disallow superscripts and other integerish things in URL ports. (Issue 989)\n\n* Allow urllib3&#x27;s HTTPResponse.stream() method to continue to work with\n  non-httplib underlying FPs. (Pull 990)\n\n* Empty filenames in multipart headers are now emitted as such, rather than\n  being suppressed. (Issue 1015)\n\n* Prefer user-supplied Host headers on chunked uploads. (Issue 1009)\n   ```\n   \n  \n  \n   ### 1.18.1\n   ```\n   ===================\n\n* CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n  PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n  release fixes a vulnerability whereby urllib3 in the above configuration\n  would silently fail to validate TLS certificates due to erroneously setting\n  invalid flags in OpenSSL&#x27;s ``SSL_CTX_set_verify`` function. These erroneous\n  flags do not cause a problem in OpenSSL versions before 1.1.0, which\n  interprets the presence of any flag as requesting certificate validation.\n\n  There is no PR for this patch, as it was prepared for simultaneous disclosure\n  and release. The master branch received the same fix in Pull 1010.\n   ```\n   \n  \n  \n   ### 1.18\n   ```\n   =================\n\n* Fixed incorrect message for IncompleteRead exception. (Pull 973)\n\n* Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n  (Issue 258)\n\n* Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n  (Issue 977)\n\n* Fixed handling of wildcard certificates when using PyOpenSSL. (Issue 979)\n   ```\n   \n  \n  \n   ### 1.17\n   ```\n   =================\n\n* Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue 835)\n\n* ConnectionPool debug log now includes scheme, host, and port. (Issue 897)\n\n* Substantially refactored documentation. (Issue 887)\n\n* Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n  (Issue 858)\n\n* Normalize the scheme and host in the URL parser (Issue 833)\n\n* ``HTTPResponse`` contains the last ``Retry`` object, which now also\n  contains retries history. (Issue 848)\n\n* Timeout can no longer be set as boolean, and must be greater than zero.\n  (Pull 924)\n\n* Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n  now use cryptography and idna, both of which are already dependencies of\n  PyOpenSSL. (Pull 930)\n\n* Fixed infinite loop in ``stream`` when amt=None. (Issue 928)\n\n* Try to use the operating system&#x27;s certificates when we are using an\n  ``SSLContext``. (Pull 941)\n\n* Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n  ChaCha20, but ChaCha20 is then preferred to everything else. (Pull 947)\n\n* Updated cipher suite list to remove 3DES-based cipher suites. (Pull 958)\n\n* Removed the cipher suite fallback to allow HIGH ciphers. (Pull 958)\n\n* Implemented ``length_remaining`` to determine remaining content\n  to be read. (Pull 949)\n\n* Implemented ``enforce_content_length`` to enable exceptions when\n  incomplete data chunks are received. (Pull 949)\n\n* Dropped connection start, dropped connection reset, redirect, forced retry,\n  and new HTTPS connection log levels to DEBUG, from INFO. (Pull 967)\n   ```\n   \n  \n  \n   ### 1.16\n   ```\n   =================\n\n* Disable IPv6 DNS when IPv6 connections are not possible. (Issue 840)\n\n* Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n  overridden. (Issue 830)\n\n* Normalize scheme and host to lowercase for pool keys, and include\n  ``source_address``. (Issue 830)\n\n* Cleaner exception chain in Python 3 for ``_make_request``.\n  (Issue 861)\n\n* Fixed installing ``urllib3[socks]`` extra. (Issue 864)\n\n* Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n  called by subclasses. (Issue 873)\n\n* Retain ``release_conn`` state across retries. (Issues 651, 866)\n\n* Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n  ``HTTPResponse`` but can be replaced with a subclass. (Issue 879)\n   ```\n   \n  \n  \n   ### 1.15.1\n   ```\n   ===================\n\n* Fix packaging to include backports module. (Issue 841)\n   ```\n   \n  \n  \n   ### 1.15\n   ```\n   =================\n\n* Added Retry(raise_on_status=False). (Issue 720)\n\n* Always use setuptools, no more distutils fallback. (Issue 785)\n\n* Dropped support for Python 3.2. (Issue 786)\n\n* Chunked transfer encoding when requesting with ``chunked=True``.\n  (Issue 790)\n\n* Fixed regression with IPv6 port parsing. (Issue 801)\n\n* Append SNIMissingWarning messages to allow users to specify it in\n  the PYTHONWARNINGS environment variable. (Issue 816)\n\n* Handle unicode headers in Py2. (Issue 818)\n\n* Log certificate when there is a hostname mismatch. (Issue 820)\n\n* Preserve order of request/response headers. (Issue 821)\n   ```\n   \n  \n  \n   ### 1.14\n   ```\n   =================\n\n* contrib: SOCKS proxy support! (Issue 762)\n\n* Fixed AppEngine handling of transfer-encoding header and bug\n  in Timeout defaults checking. (Issue 763)\n   ```\n   \n  \n  \n   ### 1.13.1\n   ```\n   ===================\n\n* Fixed regression in IPv6 + SSL for match_hostname. (Issue 761)\n   ```\n   \n  \n  \n   ### 1.13\n   ```\n   =================\n\n* Fixed ``pip install urllib3[secure]`` on modern pip. (Issue 706)\n\n* pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue 717)\n\n* pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue 696)\n\n* Close connections more defensively on exception. (Issue 734)\n\n* Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n  repeatedly flushing the decoder, to function better on Jython. (Issue 743)\n\n* Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue 758)\n   ```\n   \n  \n  \n   ### 1.12\n   ```\n   =================\n\n* Rely on ``six`` for importing ``httplib`` to work around\n  conflicts with other Python 3 shims. (Issue 688)\n\n* Add support for directories of certificate authorities, as supported by\n  OpenSSL. (Issue 701)\n\n* New exception: ``NewConnectionError``, raised when we fail to establish\n  a new connection, usually ``ECONNREFUSED`` socket error.\n   ```\n   \n  \n  \n   ### 1.11\n   ```\n   =================\n\n* When ``ca_certs`` is given, ``cert_reqs`` defaults to\n  ``&#x27;CERT_REQUIRED&#x27;``. (Issue 650)\n\n* ``pip install urllib3[secure]`` will install Certifi and\n  PyOpenSSL as dependencies. (Issue 678)\n\n* Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n  (Issues 632, 679)\n\n* Added `urllib3.contrib.appengine &lt;https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine&gt;`_\n  which has an ``AppEngineManager`` for using ``URLFetch`` in a\n  Google AppEngine environment. (Issue 664)\n\n* Dev: Added test suite for AppEngine. (Issue 631)\n\n* Fix performance regression when using PyOpenSSL. (Issue 626)\n\n* Passing incorrect scheme (e.g. ``foo://``) will raise\n  ``ValueError`` instead of ``AssertionError`` (backwards\n  compatible for now, but please migrate). (Issue 640)\n\n* Fix pools not getting replenished when an error occurs during a\n  request using ``release_conn=False``. (Issue 644)\n\n* Fix pool-default headers not applying for url-encoded requests\n  like GET. (Issue 657)\n\n* log.warning in Python 3 when headers are skipped due to parsing\n  errors. (Issue 642)\n\n* Close and discard connections if an error occurs during read.\n  (Issue 660)\n\n* Fix host parsing for IPv6 proxies. (Issue 668)\n\n* Separate warning type SubjectAltNameWarning, now issued once\n  per host. (Issue 671)\n\n* Fix ``httplib.IncompleteRead`` not getting converted to\n  ``ProtocolError`` when using ``HTTPResponse.stream()``\n  (Issue 674)\n   ```\n   \n  \n  \n   ### 1.10.4\n   ```\n   ===================\n\n* Migrate tests to Tornado 4. (Issue 594)\n\n* Append default warning configuration rather than overwrite.\n  (Issue 603)\n\n* Fix streaming decoding regression. (Issue 595)\n\n* Fix chunked requests losing state across keep-alive connections.\n  (Issue 599)\n\n* Fix hanging when chunked HEAD response has no body. (Issue 605)\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ===================\n\n* Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n  (Issue 558)\n\n* Fix regression of duplicate header keys being discarded.\n  (Issue 563)\n\n* ``Response.stream()`` returns a generator for chunked responses.\n  (Issue 560)\n\n* Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n  (Issue 585)\n\n* Work on platforms without `ssl` module for plain HTTP requests.\n  (Issue 587)\n\n* Stop relying on the stdlib&#x27;s default cipher list. (Issue 588)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ===================\n\n* Fix file descriptor leakage on retries. (Issue 548)\n\n* Removed RC4 from default cipher list. (Issue 551)\n\n* Header performance improvements. (Issue 544)\n\n* Fix PoolManager not obeying redirect retry settings. (Issue 553)\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ===================\n\n* Pools can be used as context managers. (Issue 545)\n\n* Don&#x27;t re-use connections which experienced an SSLError. (Issue 529)\n\n* Don&#x27;t fail when gzip decoding an empty stream. (Issue 535)\n\n* Add sha256 support for fingerprint verification. (Issue 540)\n\n* Fixed handling of header values containing commas. (Issue 533)\n   ```\n   \n  \n  \n   ### 1.10\n   ```\n   =================\n\n* Disabled SSLv3. (Issue 473)\n\n* Add ``Url.url`` property to return the composed url string. (Issue 394)\n\n* Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue 412)\n\n* ``MaxRetryError.reason`` will always be an exception, not string.\n  (Issue 481)\n\n* Fixed SSL-related timeouts not being detected as timeouts. (Issue 492)\n\n* Py3: Use ``ssl.create_default_context()`` when available. (Issue 473)\n\n* Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n  (Issue 496)\n\n* Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n  (Issue 499)\n\n* Close and discard sockets which experienced SSL-related errors.\n  (Issue 501)\n\n* Handle ``body`` param in ``.request(...)``. (Issue 513)\n\n* Respect timeout with HTTPS proxy. (Issue 505)\n\n* PyOpenSSL: Handle ZeroReturnError exception. (Issue 520)\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ==================\n\n* Apply socket arguments before binding. (Issue 427)\n\n* More careful checks if fp-like object is closed. (Issue 435)\n\n* Fixed packaging issues of some development-related files not\n  getting included. (Issue 440)\n\n* Allow performing *only* fingerprint verification. (Issue 444)\n\n* Emit ``SecurityWarning`` if system clock is waaay off. (Issue 445)\n\n* Fixed PyOpenSSL compatibility with PyPy. (Issue 450)\n\n* Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n  (Issue 443)\n   ```\n   \n  \n  \n   ### 1.9\n   ```\n   ================\n\n* Shuffled around development-related files. If you&#x27;re maintaining a distro\n  package of urllib3, you may need to tweak things. (Issue 415)\n\n* Unverified HTTPS requests will trigger a warning on the first request. See\n  our new `security documentation\n  &lt;https://urllib3.readthedocs.io/en/latest/security.html&gt;`_ for details.\n  (Issue 426)\n\n* New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n  (Issue 326)\n\n* All raised exceptions should now wrapped in a\n  ``urllib3.exceptions.HTTPException``-extending exception. (Issue 326)\n\n* All errors during a retry-enabled request should be wrapped in\n  ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n  which were previously exempt. Underlying error is accessible from the\n  ``.reason`` property. (Issue 326)\n\n* ``urllib3.exceptions.ConnectionError`` renamed to\n  ``urllib3.exceptions.ProtocolError``. (Issue 326)\n\n* Errors during response read (such as IncompleteRead) are now wrapped in\n  ``urllib3.exceptions.ProtocolError``. (Issue 418)\n\n* Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n  (Issue 417)\n\n* Catch read timeouts over SSL connections as\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 419)\n\n* Apply socket arguments before connecting. (Issue 427)\n   ```\n   \n  \n  \n   ### 1.8.3\n   ```\n   ==================\n\n* Fix TLS verification when using a proxy in Python 3.4.1. (Issue 385)\n\n* Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue 393)\n\n* Wrap ``socket.timeout`` exception with\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 399)\n\n* Fixed proxy-related bug where connections were being reused incorrectly.\n  (Issues 366, 369)\n\n* Added ``socket_options`` keyword parameter which allows to define\n  ``setsockopt`` configuration of new sockets. (Issue 397)\n\n* Removed ``HTTPConnection.tcp_nodelay`` in favor of\n  ``HTTPConnection.default_socket_options``. (Issue 397)\n\n* Fixed ``TypeError`` bug in Python 2.6.4. (Issue 411)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ==================\n\n* Fix ``urllib3.util`` not being included in the package.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ==================\n\n* Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue 356)\n\n* Don&#x27;t install ``dummyserver`` into ``site-packages`` as it&#x27;s only needed\n  for the test suite. (Issue 362)\n\n* Added support for specifying ``source_address``. (Issue 352)\n   ```\n   \n  \n  \n   ### 1.8\n   ```\n   ================\n\n* Improved url parsing in ``urllib3.util.parse_url`` (properly parse &#x27;&#x27; in\n  username, and blank ports like &#x27;hostname:&#x27;).\n\n* New ``urllib3.connection`` module which contains all the HTTPConnection\n  objects.\n\n* Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n  signature to a more sensible order. [Backwards incompatible]\n  (Issues 252, 262, 263)\n\n* Use ``backports.ssl_match_hostname`` if it&#x27;s installed. (Issue 274)\n\n* Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n  returns the number of bytes read so far. (Issue 277)\n\n* Support for platforms without threading. (Issue 289)\n\n* Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n  to allow a pool with no specified port to be considered equal to to an\n  HTTP/HTTPS url with port 80/443 explicitly provided. (Issue 305)\n\n* Improved default SSL/TLS settings to avoid vulnerabilities.\n  (Issue 309)\n\n* Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n  (Issue 310)\n\n* Disable Nagle&#x27;s Algorithm on the socket for non-proxies. A subset of requests\n  will send the entire HTTP request ~200 milliseconds faster; however, some of\n  the resulting TCP packets will be smaller. (Issue 254)\n\n* Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n  from the default 64 to 1024 in a single certificate. (Issue 318)\n\n* Headers are now passed and stored as a custom\n  ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n  (Issue 329, 333)\n\n* Headers no longer lose their case on Python 3. (Issue 236)\n\n* ``urllib3.contrib.pyopenssl`` now uses the operating system&#x27;s default CA\n  certificates on inject. (Issue 332)\n\n* Requests with ``retries=False`` will immediately raise any exceptions without\n  wrapping them in ``MaxRetryError``. (Issue 348)\n\n* Fixed open socket leak with SSL-related failures. (Issue 344, 348)\n   ```\n   \n  \n  \n   ### 1.7.1\n   ```\n   ==================\n\n* Added granular timeout support with new ``urllib3.util.Timeout`` class.\n  (Issue 231)\n\n* Fixed Python 3.4 support. (Issue 238)\n   ```\n   \n  \n  \n   ### 1.7\n   ```\n   ================\n\n* More exceptions are now pickle-able, with tests. (Issue 174)\n\n* Fixed redirecting with relative URLs in Location header. (Issue 178)\n\n* Support for relative urls in ``Location: ...`` header. (Issue 179)\n\n* ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n  file-like functionality. (Issue 187)\n\n* Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n  skip hostname verification for SSL connections. (Issue 194)\n\n* New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n  generator wrapped around ``.read(...)``. (Issue 198)\n\n* IPv6 url parsing enforces brackets around the hostname. (Issue 199)\n\n* Fixed thread race condition in\n  ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue 204)\n\n* ``ProxyManager`` requests now include non-default port in ``Host: ...``\n  header. (Issue 217)\n\n* Added HTTPS proxy support in ``ProxyManager``. (Issue 170 139)\n\n* New ``RequestField`` object can be passed to the ``fields=...`` param which\n  can specify headers. (Issue 220)\n\n* Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n  (Issue 221)\n\n* Use international headers when posting file names. (Issue 119)\n\n* Improved IPv6 support. (Issue 203)\n   ```\n   \n  \n  \n   ### 1.6\n   ```\n   ================\n\n* Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue 156)\n\n* ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n\n* Improved SSL-related code. ``cert_req`` now optionally takes a string like\n  &quot;REQUIRED&quot; or &quot;NONE&quot;. Same with ``ssl_version`` takes strings like &quot;SSLv23&quot;\n  The string values reflect the suffix of the respective constant variable.\n  (Issue 130)\n\n* Vendored ``socksipy`` now based on Anorov&#x27;s fork which handles unexpectedly\n  closed proxy connections and larger read buffers. (Issue 135)\n\n* Ensure the connection is closed if no data is received, fixes connection leak\n  on some platforms. (Issue 133)\n\n* Added SNI support for SSL/TLS connections on Py32+. (Issue 89)\n\n* Tests fixed to be compatible with Py26 again. (Issue 125)\n\n* Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n  to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue 109)\n\n* Allow an explicit content type to be specified when encoding file fields.\n  (Issue 126)\n\n* Exceptions are now pickleable, with tests. (Issue 101)\n\n* Fixed default headers not getting passed in some cases. (Issue 99)\n\n* Treat &quot;content-encoding&quot; header value as case-insensitive, per RFC 2616\n  Section 3.5. (Issue 110)\n\n* &quot;Connection Refused&quot; SocketErrors will get retried rather than raised.\n  (Issue 92)\n\n* Updated vendored ``six``, no longer overrides the global ``six`` module\n  namespace. (Issue 113)\n\n* ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n  the exception that prompted the final retry. If ``reason is None`` then it\n  was due to a redirect. (Issue 92, 114)\n\n* Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n  (Issue 149)\n\n* Don&#x27;t assume ``Content-Type: text/plain`` for multi-part encoding parameters\n  that are not files. (Issue 111)\n\n* Pass `strict` param down to ``httplib.HTTPConnection``. (Issue 122)\n\n* Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n  against an arbitrary hostname (when connecting by IP or for misconfigured\n  servers). (Issue 140)\n\n* Streaming decompression support. (Issue 159)\n   ```\n   \n  \n  \n   ### 1.5\n   ```\n   ================\n\n* Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n  logging in urllib3.\n\n* Native full URL parsing (including auth, path, query, fragment) available in\n  ``urllib3.util.parse_url(url)``.\n\n* Built-in redirect will switch method to &#x27;GET&#x27; if status code is 303.\n  (Issue 11)\n\n* ``urllib3.PoolManager`` strips the scheme and host before sending the request\n  uri. (Issue 8)\n\n* New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n  based on the Content-Type header, fails.\n\n* Fixed bug with pool depletion and leaking connections (Issue 76). Added\n  explicit connection closing on pool eviction. Added\n  ``urllib3.PoolManager.clear()``.\n\n* 99% -&gt; 100% unit test coverage.\n   ```\n   \n  \n  \n   ### 1.4\n   ```\n   ================\n\n* Minor AppEngine-related fixes.\n\n* Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n\n* Improved url parsing. (Issue 73)\n\n* IPv6 url support. (Issue 72)\n   ```\n   \n  \n  \n   ### 1.3\n   ```\n   ================\n\n* Removed pre-1.0 deprecated API.\n\n* Refactored helpers into a ``urllib3.util`` submodule.\n\n* Fixed multipart encoding to support list-of-tuples for keys with multiple\n  values. (Issue 48)\n\n* Fixed multiple Set-Cookie headers in response not getting merged properly in\n  Python 3. (Issue 53)\n\n* AppEngine support with Py27. (Issue 61)\n\n* Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n  bytes.\n   ```\n   \n  \n  \n   ### 1.2.2\n   ```\n   ==================\n\n* Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue 47)\n   ```\n   \n  \n  \n   ### 1.2.1\n   ```\n   ==================\n\n* Fixed another bug related to when ``ssl`` module is not available. (Issue 41)\n\n* Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n  which inherits from ``ValueError``.\n   ```\n   \n  \n  \n   ### 1.2\n   ```\n   ================\n\n* Added Python 3 support (tested on 3.2.2)\n\n* Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n\n* Use ``select.poll`` instead of ``select.select`` for platforms that support\n  it.\n\n* Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n  connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n\n* Fixed ``ImportError`` during install when ``ssl`` module is not available.\n  (Issue 41)\n\n* Fixed ``PoolManager`` redirects between schemes (such as HTTP -&gt; HTTPS) not\n  completing properly. (Issue 28, uncovered by Issue 10 in v1.1)\n\n* Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n  ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n  Added socket-level tests.\n\n* More tests. Achievement Unlocked: 99% Coverage.\n   ```\n   \n  \n  \n   ### 1.1\n   ```\n   ================\n\n* Refactored ``dummyserver`` to its own root namespace module (used for\n  testing).\n\n* Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n  Py32&#x27;s ``ssl_match_hostname``. (Issue 25)\n\n* Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue 10)\n\n* Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n  27)\n\n* Fixed timeout-related bugs. (Issues 17, 23)\n   ```\n   \n  \n  \n   ### 1.0.2\n   ```\n   ==================\n\n* Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n  you&#x27;re using the object manually. (Thanks pyos)\n\n* Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n  wrapping the access log in a mutex. (Thanks christer)\n\n* Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n  ``__getitem__`` behaviour), with tests. Shouldn&#x27;t affect core urllib3 code.\n   ```\n   \n  \n  \n   ### 1.0.1\n   ```\n   ==================\n\n* Fixed a bug where the same connection would get returned into the pool twice,\n  causing extraneous &quot;HttpConnectionPool is full&quot; log warnings.\n   ```\n   \n  \n  \n   ### 1.0\n   ```\n   ================\n\n* Added ``PoolManager`` with LRU expiration of connections (tested and\n  documented).\n* Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n  with HTTPS proxies).\n* Added optional partial-read support for responses when\n  ``preload_content=False``. You can now make requests and just read the headers\n  without loading the content.\n* Made response decoding optional (default on, same as before).\n* Added optional explicit boundary string for ``encode_multipart_formdata``.\n* Convenience request methods are now inherited from ``RequestMethods``. Old\n  helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n  the new ``request(method, url, ...)``.\n* Refactored code to be even more decoupled, reusable, and extendable.\n* License header added to ``.py`` files.\n* Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n  and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n* Embettered all the things!\n* Started writing this file.\n   ```\n   \n  \n  \n   ### 0.4.1\n   ```\n   ==================\n\n* Minor bug fixes, code cleanup.\n   ```\n   \n  \n  \n   ### 0.4\n   ```\n   ================\n\n* Better unicode support.\n* Added ``VerifiedHTTPSConnection``.\n* Added ``NTLMConnectionPool`` in contrib.\n* Minor improvements.\n   ```\n   \n  \n  \n   ### 0.3.1\n   ```\n   ==================\n\n* Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n   ```\n   \n  \n  \n   ### 0.3\n   ```\n   ================\n\n* Added HTTPS support.\n* Minor bug fixes.\n* Refactored, broken backwards compatibility with 0.2.\n* API to be treated as stable from this version forward.\n   ```\n   \n  \n  \n   ### 0.2\n   ```\n   ================\n\n* Added unit tests.\n* Bug fixes.\n   ```\n   \n  \n  \n   ### 0.1\n   ```\n   ================\n\n* First release.\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/urllib3\n  - Changelog: https://data.safetycli.com/changelogs/urllib3/\n</details>\n\n\n\n\n\n### Update [websockets](https://pypi.org/project/websockets) from **10.4** to **11.0.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 11.0.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.4\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 7.0\n   ```\n   See https://websockets.",
                "reactions": {
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments/1764525873",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/725#issuecomment-1764525873",
                "issue_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/725",
                "id": 1764525873,
                "node_id": "IC_kwDOB21qNs5pLIcx",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-16T13:49:08Z",
                "updated_at": "2023-10-16T13:49:08Z",
                "author_association": "COLLABORATOR",
                "body": "Closing this in favor of #726",
                "reactions": {
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments/1764525873/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-16T13:49:09Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593126611",
        "type": "PullRequestEvent",
        "actor": {
            "id": 16239342,
            "login": "pyup-bot",
            "display_login": "pyup-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pyup-bot",
            "avatar_url": "https://avatars.githubusercontent.com/u/16239342?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "opened",
            "number": 726,
            "pull_request": {
                "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726",
                "id": 1558646245,
                "node_id": "PR_kwDOB21qNs5c5w3l",
                "html_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726",
                "diff_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726.diff",
                "patch_url": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726.patch",
                "issue_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726",
                "number": 726,
                "state": "open",
                "locked": false,
                "title": "Scheduled weekly dependency update for week 42",
                "user": {
                    "login": "pyup-bot",
                    "id": 16239342,
                    "node_id": "MDQ6VXNlcjE2MjM5MzQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16239342?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pyup-bot",
                    "html_url": "https://github.com/pyup-bot",
                    "followers_url": "https://api.github.com/users/pyup-bot/followers",
                    "following_url": "https://api.github.com/users/pyup-bot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pyup-bot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pyup-bot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pyup-bot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pyup-bot/orgs",
                    "repos_url": "https://api.github.com/users/pyup-bot/repos",
                    "events_url": "https://api.github.com/users/pyup-bot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pyup-bot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\n\n\n\n\n### Update [urllib3](https://pypi.org/project/urllib3) from **1.26.17** to **2.0.6**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 2.0.6\n   ```\n   ==================\n\n* Added the ``Cookie`` header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via ``Retry.remove_headers_on_redirect``.\n   ```\n   \n  \n  \n   ### 2.0.5\n   ```\n   ==================\n\n- Allowed pyOpenSSL third-party module without any deprecation warning. (`3126 &lt;https://github.com/urllib3/urllib3/issues/3126&gt;`__)\n- Fixed default ``blocksize`` of ``HTTPConnection`` classes to match high-level classes. Previously was 8KiB, now 16KiB. (`3066 &lt;https://github.com/urllib3/urllib3/issues/3066&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.4\n   ```\n   ==================\n\n- Added support for union operators to ``HTTPHeaderDict`` (`2254 &lt;https://github.com/urllib3/urllib3/issues/2254&gt;`__)\n- Added ``BaseHTTPResponse`` to ``urllib3.__all__`` (`3078 &lt;https://github.com/urllib3/urllib3/issues/3078&gt;`__)\n- Fixed ``urllib3.connection.HTTPConnection`` to raise the ``http.client.connect`` audit event to have the same behavior as the standard library HTTP client (`2757 &lt;https://github.com/urllib3/urllib3/issues/2757&gt;`__)\n- Relied on the standard library for checking hostnames in supported PyPy releases (`3087 &lt;https://github.com/urllib3/urllib3/issues/3087&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.3\n   ```\n   ==================\n\n- Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (`3020 &lt;https://github.com/urllib3/urllib3/issues/3020&gt;`__)\n- Deprecated URLs which don&#x27;t have an explicit scheme (`2950 &lt;https://github.com/urllib3/urllib3/pull/2950&gt;`_)\n- Fixed response decoding with Zstandard when compressed data is made of several frames. (`3008 &lt;https://github.com/urllib3/urllib3/issues/3008&gt;`__)\n- Fixed ``assert_hostname=False`` to correctly skip hostname check. (`3051 &lt;https://github.com/urllib3/urllib3/issues/3051&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.2\n   ```\n   ==================\n\n- Fixed ``HTTPResponse.stream()`` to continue yielding bytes if buffered decompressed data\n  was still available to be read even if the underlying socket is closed. This prevents\n  a compressed response from being truncated. (`3009 &lt;https://github.com/urllib3/urllib3/issues/3009&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.1\n   ```\n   ==================\n\n- Fixed a socket leak when fingerprint or hostname verifications fail. (`2991 &lt;https://github.com/urllib3/urllib3/issues/2991&gt;`__)\n- Fixed an error when ``HTTPResponse.read(0)`` was the first ``read`` call or when the internal response body buffer was otherwise empty. (`2998 &lt;https://github.com/urllib3/urllib3/issues/2998&gt;`__)\n   ```\n   \n  \n  \n   ### 2.0.0\n   ```\n   ==================\n\nRead the `v2.0 migration guide &lt;https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html&gt;`__ for help upgrading to the latest version of urllib3.\n\nRemoved\n-------\n\n* Removed support for Python 2.7, 3.5, and 3.6 (`883 &lt;https://github.com/urllib3/urllib3/issues/883&gt;`__, `#2336 &lt;https://github.com/urllib3/urllib3/issues/2336&gt;`__).\n* Removed fallback on certificate ``commonName`` in ``match_hostname()`` function.\n  This behavior was deprecated in May 2000 in RFC 2818. Instead only ``subjectAltName``\n  is used to verify the hostname by default. To enable verifying the hostname against\n  ``commonName`` use ``SSLContext.hostname_checks_common_name = True`` (`2113 &lt;https://github.com/urllib3/urllib3/issues/2113&gt;`__).\n* Removed support for Python with an ``ssl`` module compiled with LibreSSL, CiscoSSL,\n  wolfSSL, and all other OpenSSL alternatives. Python is moving to require OpenSSL with PEP 644 (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed support for OpenSSL versions earlier than 1.1.1 or that don&#x27;t have SNI support.\n  When an incompatible OpenSSL version is detected an ``ImportError`` is raised (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the list of default ciphers for OpenSSL 1.1.1+ and SecureTransport as their own defaults are already secure (`2082 &lt;https://github.com/urllib3/urllib3/issues/2082&gt;`__).\n* Removed ``urllib3.contrib.appengine.AppEngineManager`` and support for Google App Engine Standard Environment (`2044 &lt;https://github.com/urllib3/urllib3/issues/2044&gt;`__).\n* Removed deprecated ``Retry`` options ``method_whitelist``, ``DEFAULT_REDIRECT_HEADERS_BLACKLIST`` (`2086 &lt;https://github.com/urllib3/urllib3/issues/2086&gt;`__).\n* Removed ``urllib3.HTTPResponse.from_httplib`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Removed default value of ``None`` for the ``request_context`` parameter of ``urllib3.PoolManager.connection_from_pool_key``. This change should have no effect on users as the default value of ``None`` was an invalid option and was never used (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Removed the ``urllib3.request`` module. ``urllib3.request.RequestMethods`` has been made a private API.\n  This change was made to ensure that ``from urllib3 import request`` imported the top-level ``request()``\n  function instead of the ``urllib3.request`` module (`2269 &lt;https://github.com/urllib3/urllib3/issues/2269&gt;`__).\n* Removed support for SSLv3.0 from the ``urllib3.contrib.pyopenssl`` even when support is available from the compiled OpenSSL library (`2233 &lt;https://github.com/urllib3/urllib3/issues/2233&gt;`__).\n* Removed the deprecated ``urllib3.contrib.ntlmpool`` module (`2339 &lt;https://github.com/urllib3/urllib3/issues/2339&gt;`__).\n* Removed ``DEFAULT_CIPHERS``, ``HAS_SNI``, ``USE_DEFAULT_SSLCONTEXT_CIPHERS``, from the private module ``urllib3.util.ssl_`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed ``urllib3.exceptions.SNIMissingWarning`` (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Removed the ``_prepare_conn`` method from ``HTTPConnectionPool``. Previously this was only used to call ``HTTPSConnection.set_cert()`` by ``HTTPSConnectionPool`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed ``tls_in_tls_required`` property from ``HTTPSConnection``. This is now determined from the ``scheme`` parameter in ``HTTPConnection.set_tunnel()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Removed the ``strict`` parameter/attribute from ``HTTPConnection``, ``HTTPSConnection``, ``HTTPConnectionPool``, ``HTTPSConnectionPool``, and ``HTTPResponse`` (`2064 &lt;https://github.com/urllib3/urllib3/issues/2064&gt;`__).\n\nDeprecated\n----------\n\n* Deprecated ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` which will be removed in urllib3 v2.1.0. Instead use ``HTTPResponse.headers`` and ``HTTPResponse.headers.get(name, default)``. (`1543 &lt;https://github.com/urllib3/urllib3/issues/1543&gt;`__, `#2814 &lt;https://github.com/urllib3/urllib3/issues/2814&gt;`__).\n* Deprecated ``urllib3.contrib.pyopenssl`` module which will be removed in urllib3 v2.1.0 (`2691 &lt;https://github.com/urllib3/urllib3/issues/2691&gt;`__).\n* Deprecated ``urllib3.contrib.securetransport`` module which will be removed in urllib3 v2.1.0 (`2692 &lt;https://github.com/urllib3/urllib3/issues/2692&gt;`__).\n* Deprecated ``ssl_version`` option in favor of ``ssl_minimum_version``. ``ssl_version`` will be removed in urllib3 v2.1.0 (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Deprecated the ``strict`` parameter of ``PoolManager.connection_from_context()`` as it&#x27;s not longer needed in Python 3.x. It will be removed in urllib3 v2.1.0 (`2267 &lt;https://github.com/urllib3/urllib3/issues/2267&gt;`__)\n* Deprecated the ``NewConnectionError.pool`` attribute which will be removed in urllib3 v2.1.0 (`2271 &lt;https://github.com/urllib3/urllib3/issues/2271&gt;`__).\n* Deprecated ``format_header_param_html5`` and ``format_header_param`` in favor of ``format_multipart_header_param`` (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``RequestField.header_formatter`` parameter which will be removed in urllib3 v2.1.0 (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Deprecated ``HTTPSConnection.set_cert()`` method. Instead pass parameters to the ``HTTPSConnection`` constructor (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Deprecated ``HTTPConnection.request_chunked()`` method which will be removed in urllib3 v2.1.0. Instead pass ``chunked=True`` to ``HTTPConnection.request()`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n\nAdded\n-----\n\n* Added top-level ``urllib3.request`` function which uses a preconfigured module-global ``PoolManager`` instance (`2150 &lt;https://github.com/urllib3/urllib3/issues/2150&gt;`__).\n* Added the ``json`` parameter to ``urllib3.request()``, ``PoolManager.request()``, and ``ConnectionPool.request()`` methods to send JSON bodies in requests. Using this parameter will set the header ``Content-Type: application/json`` if ``Content-Type`` isn&#x27;t already defined.\n  Added support for parsing JSON response bodies with ``HTTPResponse.json()`` method (`2243 &lt;https://github.com/urllib3/urllib3/issues/2243&gt;`__).\n* Added type hints to the ``urllib3`` module (`1897 &lt;https://github.com/urllib3/urllib3/issues/1897&gt;`__).\n* Added ``ssl_minimum_version`` and ``ssl_maximum_version`` options which set\n  ``SSLContext.minimum_version`` and ``SSLContext.maximum_version`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Added support for Zstandard (RFC 8878) when ``zstandard`` 1.18.0 or later is installed.\n  Added the ``zstd`` extra which installs the ``zstandard`` package (`1992 &lt;https://github.com/urllib3/urllib3/issues/1992&gt;`__).\n* Added ``urllib3.response.BaseHTTPResponse`` class. All future response classes will be subclasses of ``BaseHTTPResponse`` (`2083 &lt;https://github.com/urllib3/urllib3/issues/2083&gt;`__).\n* Added ``FullPoolError`` which is raised when ``PoolManager(block=True)`` and a connection is returned to a full pool (`2197 &lt;https://github.com/urllib3/urllib3/issues/2197&gt;`__).\n* Added ``HTTPHeaderDict`` to the top-level ``urllib3`` namespace (`2216 &lt;https://github.com/urllib3/urllib3/issues/2216&gt;`__).\n* Added support for configuring header merging behavior with HTTPHeaderDict\n  When using a ``HTTPHeaderDict`` to provide headers for a request, by default duplicate\n  header values will be repeated. But if ``combine=True`` is passed into a call to\n  ``HTTPHeaderDict.add``, then the added header value will be merged in with an existing\n  value into a comma-separated list (``X-My-Header: foo, bar``) (`2242 &lt;https://github.com/urllib3/urllib3/issues/2242&gt;`__).\n* Added ``NameResolutionError`` exception when a DNS error occurs (`2305 &lt;https://github.com/urllib3/urllib3/issues/2305&gt;`__).\n* Added ``proxy_assert_hostname`` and ``proxy_assert_fingerprint`` kwargs to ``ProxyManager`` (`2409 &lt;https://github.com/urllib3/urllib3/issues/2409&gt;`__).\n* Added a configurable ``backoff_max`` parameter to the ``Retry`` class.\n  If a custom ``backoff_max`` is provided to the ``Retry`` class, it\n  will replace the ``Retry.DEFAULT_BACKOFF_MAX`` (`2494 &lt;https://github.com/urllib3/urllib3/issues/2494&gt;`__).\n* Added the ``authority`` property to the Url class as per RFC 3986 3.2. This property should be used in place of ``netloc`` for users who want to include the userinfo (auth) component of the URI (`2520 &lt;https://github.com/urllib3/urllib3/issues/2520&gt;`__).\n* Added the ``scheme`` parameter to ``HTTPConnection.set_tunnel`` to configure the scheme of the origin being tunnelled to (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added the ``is_closed``, ``is_connected`` and ``has_connected_to_proxy`` properties to ``HTTPConnection`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Added optional ``backoff_jitter`` parameter to ``Retry``. (`2952 &lt;https://github.com/urllib3/urllib3/issues/2952&gt;`__)\n\nChanged\n-------\n\n* Changed ``urllib3.response.HTTPResponse.read`` to respect the semantics of ``io.BufferedIOBase`` regardless of compression. Specifically, this method:\n\n  * Only returns an empty bytes object to indicate EOF (that is, the response has been fully consumed).\n  * Never returns more bytes than requested.\n  * Can issue any number of system calls: zero, one or multiple.\n\n  If you want each ``urllib3.response.HTTPResponse.read`` call to issue a single system call, you need to disable decompression by setting ``decode_content=False`` (`2128 &lt;https://github.com/urllib3/urllib3/issues/2128&gt;`__).\n* Changed ``urllib3.HTTPConnection.getresponse`` to return an instance of ``urllib3.HTTPResponse`` instead of ``http.client.HTTPResponse`` (`2648 &lt;https://github.com/urllib3/urllib3/issues/2648&gt;`__).\n* Changed ``ssl_version`` to instead set the corresponding ``SSLContext.minimum_version``\n  and ``SSLContext.maximum_version`` values.  Regardless of ``ssl_version`` passed\n  ``SSLContext`` objects are now constructed using ``ssl.PROTOCOL_TLS_CLIENT`` (`2110 &lt;https://github.com/urllib3/urllib3/issues/2110&gt;`__).\n* Changed default ``SSLContext.minimum_version`` to be ``TLSVersion.TLSv1_2`` in line with Python 3.10 (`2373 &lt;https://github.com/urllib3/urllib3/issues/2373&gt;`__).\n* Changed ``ProxyError`` to wrap any connection error (timeout, TLS, DNS) that occurs when connecting to the proxy (`2482 &lt;https://github.com/urllib3/urllib3/pull/2482&gt;`__).\n* Changed ``urllib3.util.create_urllib3_context`` to not override the system cipher suites with\n  a default value. The new default will be cipher suites configured by the operating system (`2168 &lt;https://github.com/urllib3/urllib3/issues/2168&gt;`__).\n* Changed ``multipart/form-data`` header parameter formatting matches the WHATWG HTML Standard as of 2021-06-10. Control characters in filenames are no longer percent encoded (`2257 &lt;https://github.com/urllib3/urllib3/issues/2257&gt;`__).\n* Changed the error raised when connecting via HTTPS when the ``ssl`` module isn&#x27;t available from ``SSLError`` to ``ImportError`` (`2589 &lt;https://github.com/urllib3/urllib3/issues/2589&gt;`__).\n* Changed ``HTTPConnection.request()`` to always use lowercase chunk boundaries when sending requests with ``Transfer-Encoding: chunked`` (`2515 &lt;https://github.com/urllib3/urllib3/issues/2515&gt;`__).\n* Changed ``enforce_content_length`` default to True, preventing silent data loss when reading streamed responses (`2514 &lt;https://github.com/urllib3/urllib3/issues/2514&gt;`__).\n* Changed internal implementation of ``HTTPHeaderDict`` to use ``dict`` instead of ``collections.OrderedDict`` for better performance (`2080 &lt;https://github.com/urllib3/urllib3/issues/2080&gt;`__).\n* Changed the ``urllib3.contrib.pyopenssl`` module to wrap ``OpenSSL.SSL.Error`` with ``ssl.SSLError`` in ``PyOpenSSLContext.load_cert_chain`` (`2628 &lt;https://github.com/urllib3/urllib3/issues/2628&gt;`__).\n* Changed usage of the deprecated ``socket.error`` to ``OSError`` (`2120 &lt;https://github.com/urllib3/urllib3/issues/2120&gt;`__).\n* Changed all parameters in the ``HTTPConnection`` and ``HTTPSConnection`` constructors to be keyword-only except ``host`` and ``port`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed ``HTTPConnection.getresponse()`` to set the socket timeout from ``HTTPConnection.timeout`` value before reading\n  data from the socket. This previously was done manually by the ``HTTPConnectionPool`` calling ``HTTPConnection.sock.settimeout(...)`` (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed the ``_proxy_host`` property to ``_tunnel_host`` in ``HTTPConnectionPool`` to more closely match how the property is used (value in ``HTTPConnection.set_tunnel()``) (`1985 &lt;https://github.com/urllib3/urllib3/issues/1985&gt;`__).\n* Changed name of ``Retry.BACK0FF_MAX`` to be ``Retry.DEFAULT_BACKOFF_MAX``.\n* Changed TLS handshakes to use ``SSLContext.check_hostname`` when possible (`2452 &lt;https://github.com/urllib3/urllib3/pull/2452&gt;`__).\n* Changed ``server_hostname`` to behave like other parameters only used by ``HTTPSConnectionPool`` (`2537 &lt;https://github.com/urllib3/urllib3/pull/2537&gt;`__).\n* Changed the default ``blocksize`` to 16KB to match OpenSSL&#x27;s default read amounts (`2348 &lt;https://github.com/urllib3/urllib3/pull/2348&gt;`__).\n* Changed ``HTTPResponse.read()`` to raise an error when calling with ``decode_content=False`` after using ``decode_content=True`` to prevent data loss (`2800 &lt;https://github.com/urllib3/urllib3/issues/2800&gt;`__).\n\nFixed\n-----\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins would cause connection pools to be closed while requests are in progress (`1252 &lt;https://github.com/urllib3/urllib3/issues/1252&gt;`__).\n* Fixed an issue where an ``HTTPConnection`` instance would erroneously reuse the socket read timeout value from reading the previous response instead of a newly configured connect timeout.\n  Instead now if ``HTTPConnection.timeout`` is updated before sending the next request the new timeout value will be used (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__).\n* Fixed ``socket.error.errno`` when raised from pyOpenSSL&#x27;s ``OpenSSL.SSL.SysCallError`` (`2118 &lt;https://github.com/urllib3/urllib3/issues/2118&gt;`__).\n* Fixed the default value of ``HTTPSConnection.socket_options`` to match ``HTTPConnection`` (`2213 &lt;https://github.com/urllib3/urllib3/issues/2213&gt;`__).\n* Fixed a bug where ``headers`` would be modified by the ``remove_headers_on_redirect`` feature (`2272 &lt;https://github.com/urllib3/urllib3/issues/2272&gt;`__).\n* Fixed a reference cycle bug in ``urllib3.util.connection.create_connection()`` (`2277 &lt;https://github.com/urllib3/urllib3/issues/2277&gt;`__).\n* Fixed a socket leak if ``HTTPConnection.connect()`` fails (`2571 &lt;https://github.com/urllib3/urllib3/pull/2571&gt;`__).\n* Fixed ``urllib3.contrib.pyopenssl.WrappedSocket`` and ``urllib3.contrib.securetransport.WrappedSocket`` close methods (`2970 &lt;https://github.com/urllib3/urllib3/issues/2970&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.16\n   ```\n   ====================\n\n* Fixed thread-safety issue where accessing a ``PoolManager`` with many distinct origins\n  would cause connection pools to be closed while requests are in progress (`2954 &lt;https://github.com/urllib3/urllib3/pull/2954&gt;`_)\n   ```\n   \n  \n  \n   ### 1.26.15\n   ```\n   ====================\n\n* Fix socket timeout value when ``HTTPConnection`` is reused (`2645 &lt;https://github.com/urllib3/urllib3/issues/2645&gt;`__)\n* Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing\n  (`2899 &lt;https://github.com/urllib3/urllib3/issues/2899&gt;`__)\n* Fix IDNA handling of &#x27;\\x80&#x27; byte (`2901 &lt;https://github.com/urllib3/urllib3/issues/2901&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.14\n   ```\n   ====================\n\n* Fixed parsing of port 0 (zero) returning None, instead of 0. (`2850 &lt;https://github.com/urllib3/urllib3/issues/2850&gt;`__)\n* Removed deprecated getheaders() calls in contrib module. Fixed the type hint of ``PoolKey.key_retries`` by adding ``bool`` to the union. (`2865 &lt;https://github.com/urllib3/urllib3/issues/2865&gt;`__)\n   ```\n   \n  \n  \n   ### 1.26.13\n   ```\n   ====================\n\n* Deprecated the ``HTTPResponse.getheaders()`` and ``HTTPResponse.getheader()`` methods.\n* Fixed an issue where parsing a URL with leading zeroes in the port would be rejected\n  even when the port number after removing the zeroes was valid.\n* Fixed a deprecation warning when using cryptography v39.0.0.\n* Removed the ``&lt;4`` in the ``Requires-Python`` packaging metadata field.\n   ```\n   \n  \n  \n   ### 1.26.12\n   ```\n   ====================\n\n* Deprecated the `urllib3[secure]` extra and the `urllib3.contrib.pyopenssl` module.\n  Both will be removed in v2.x. See this `GitHub issue &lt;https://github.com/urllib3/urllib3/issues/2680&gt;`_\n  for justification and info on how to migrate.\n   ```\n   \n  \n  \n   ### 1.26.11\n   ```\n   ====================\n\n* Fixed an issue where reading more than 2 GiB in a call to ``HTTPResponse.read`` would\n  raise an ``OverflowError`` on Python 3.9 and earlier.\n   ```\n   \n  \n  \n   ### 1.26.10\n   ```\n   ====================\n\n* Removed support for Python 3.5\n* Fixed an issue where a ``ProxyError`` recommending configuring the proxy as HTTP\n  instead of HTTPS could appear even when an HTTPS proxy wasn&#x27;t configured.\n   ```\n   \n  \n  \n   ### 1.26.9\n   ```\n   ===================\n\n* Changed ``urllib3[brotli]`` extra to favor installing Brotli libraries that are still\n  receiving updates like ``brotli`` and ``brotlicffi`` instead of ``brotlipy``.\n  This change does not impact behavior of urllib3, only which dependencies are installed.\n* Fixed a socket leaking when ``HTTPSConnection.connect()`` raises an exception.\n* Fixed ``server_hostname`` being forwarded from ``PoolManager`` to ``HTTPConnectionPool``\n  when requesting an HTTP URL. Should only be forwarded when requesting an HTTPS URL.\n   ```\n   \n  \n  \n   ### 1.26.8\n   ```\n   ===================\n\n* Added extra message to ``urllib3.exceptions.ProxyError`` when urllib3 detects that\n  a proxy is configured to use HTTPS but the proxy itself appears to only use HTTP.\n* Added a mention of the size of the connection pool when discarding a connection due to the pool being full.\n* Added explicit support for Python 3.11.\n* Deprecated the ``Retry.MAX_BACKOFF`` class property in favor of ``Retry.DEFAULT_MAX_BACKOFF``\n  to better match the rest of the default parameter names. ``Retry.MAX_BACKOFF`` is removed in v2.0.\n* Changed location of the vendored ``ssl.match_hostname`` function from ``urllib3.packages.ssl_match_hostname``\n  to ``urllib3.util.ssl_match_hostname`` to ensure Python 3.10+ compatibility after being repackaged\n  by downstream distributors.\n* Fixed absolute imports, all imports are now relative.\n   ```\n   \n  \n  \n   ### 1.26.7\n   ```\n   ===================\n\n* Fixed a bug with HTTPS hostname verification involving IP addresses and lack\n  of SNI. (Issue 2400)\n* Fixed a bug where IPv6 braces weren&#x27;t stripped during certificate hostname\n  matching. (Issue 2240)\n   ```\n   \n  \n  \n   ### 1.26.6\n   ```\n   ===================\n\n* Deprecated the ``urllib3.contrib.ntlmpool`` module. urllib3 is not able to support\n  it properly due to `reasons listed in this issue &lt;https://github.com/urllib3/urllib3/issues/2282&gt;`_.\n  If you are a user of this module please leave a comment.\n* Changed ``HTTPConnection.request_chunked()`` to not erroneously emit multiple\n  ``Transfer-Encoding`` headers in the case that one is already specified.\n* Fixed typo in deprecation message to recommend ``Retry.DEFAULT_ALLOWED_METHODS``.\n   ```\n   \n  \n  \n   ### 1.26.5\n   ```\n   ===================\n\n* Fixed deprecation warnings emitted in Python 3.10.\n* Updated vendored ``six`` library to 1.16.0.\n* Improved performance of URL parser when splitting\n  the authority component.\n   ```\n   \n  \n  \n   ### 1.26.4\n   ```\n   ===================\n\n* Changed behavior of the default ``SSLContext`` when connecting to HTTPS proxy\n  during HTTPS requests. The default ``SSLContext`` now sets ``check_hostname=True``.\n   ```\n   \n  \n  \n   ### 1.26.3\n   ```\n   ===================\n\n* Fixed bytes and string comparison issue with headers (Pull 2141)\n\n* Changed ``ProxySchemeUnknown`` error message to be\n  more actionable if the user supplies a proxy URL without\n  a scheme. (Pull 2107)\n   ```\n   \n  \n  \n   ### 1.26.2\n   ```\n   ===================\n\n* Fixed an issue where ``wrap_socket`` and ``CERT_REQUIRED`` wouldn&#x27;t\n  be imported properly on Python 2.7.8 and earlier (Pull 2052)\n   ```\n   \n  \n  \n   ### 1.26.1\n   ```\n   ===================\n\n* Fixed an issue where two ``User-Agent`` headers would be sent if a\n  ``User-Agent`` header key is passed as ``bytes`` (Pull 2047)\n   ```\n   \n  \n  \n   ### 1.26.0\n   ```\n   ===================\n\n* **NOTE: urllib3 v2.0 will drop support for Python 2**.\n  `Read more in the v2.0 Roadmap &lt;https://urllib3.readthedocs.io/en/latest/v2-roadmap.html&gt;`_.\n\n* Added support for HTTPS proxies contacting HTTPS servers (Pull 1923, Pull 1806)\n\n* Deprecated negotiating TLSv1 and TLSv1.1 by default. Users that\n  still wish to use TLS earlier than 1.2 without a deprecation warning\n  should opt-in explicitly by setting ``ssl_version=ssl.PROTOCOL_TLSv1_1`` (Pull 2002)\n  **Starting in urllib3 v2.0: Connections that receive a ``DeprecationWarning`` will fail**\n\n* Deprecated ``Retry`` options ``Retry.DEFAULT_METHOD_WHITELIST``, ``Retry.DEFAULT_REDIRECT_HEADERS_BLACKLIST``\n  and ``Retry(method_whitelist=...)`` in favor of ``Retry.DEFAULT_ALLOWED_METHODS``,\n  ``Retry.DEFAULT_REMOVE_HEADERS_ON_REDIRECT``, and ``Retry(allowed_methods=...)``\n  (Pull 2000) **Starting in urllib3 v2.0: Deprecated options will be removed**\n\n* Added default ``User-Agent`` header to every request (Pull 1750)\n\n* Added ``urllib3.util.SKIP_HEADER`` for skipping ``User-Agent``, ``Accept-Encoding``,\n  and ``Host`` headers from being automatically emitted with requests (Pull 2018)\n\n* Collapse ``transfer-encoding: chunked`` request data and framing into\n  the same ``socket.send()`` call (Pull 1906)\n\n* Send ``http/1.1`` ALPN identifier with every TLS handshake by default (Pull 1894)\n\n* Properly terminate SecureTransport connections when CA verification fails (Pull 1977)\n\n* Don&#x27;t emit an ``SNIMissingWarning`` when passing ``server_hostname=None``\n  to SecureTransport (Pull 1903)\n\n* Disabled requesting TLSv1.2 session tickets as they weren&#x27;t being used by urllib3 (Pull 1970)\n\n* Suppress ``BrokenPipeError`` when writing request body after the server\n  has closed the socket (Pull 1524)\n\n* Wrap ``ssl.SSLError`` that can be raised from reading a socket (e.g. &quot;bad MAC&quot;)\n  into an ``urllib3.exceptions.SSLError`` (Pull 1939)\n   ```\n   \n  \n  \n   ### 1.25.11\n   ```\n   ====================\n\n* Fix retry backoff time parsed from ``Retry-After`` header when given\n  in the HTTP date format. The HTTP date was parsed as the local timezone\n  rather than accounting for the timezone in the HTTP date (typically\n  UTC) (Pull 1932, Pull 1935, Pull 1938, Pull 1949)\n\n* Fix issue where an error would be raised when the ``SSLKEYLOGFILE``\n  environment variable was set to the empty string. Now ``SSLContext.keylog_file``\n  is not set in this situation (Pull 2016)\n   ```\n   \n  \n  \n   ### 1.25.10\n   ```\n   ====================\n\n* Added support for ``SSLKEYLOGFILE`` environment variable for\n  logging TLS session keys with use with programs like\n  Wireshark for decrypting captured web traffic (Pull 1867)\n\n* Fixed loading of SecureTransport libraries on macOS Big Sur\n  due to the new dynamic linker cache (Pull 1905)\n\n* Collapse chunked request bodies data and framing into one\n  call to ``send()`` to reduce the number of TCP packets by 2-4x (Pull 1906)\n\n* Don&#x27;t insert ``None`` into ``ConnectionPool`` if the pool\n  was empty when requesting a connection (Pull 1866)\n\n* Avoid ``hasattr`` call in ``BrotliDecoder.decompress()`` (Pull 1858)\n   ```\n   \n  \n  \n   ### 1.25.9\n   ```\n   ===================\n\n* Added ``InvalidProxyConfigurationWarning`` which is raised when\n  erroneously specifying an HTTPS proxy URL. urllib3 doesn&#x27;t currently\n  support connecting to HTTPS proxies but will soon be able to\n  and we would like users to migrate properly without much breakage.\n\n  See `this GitHub issue &lt;https://github.com/urllib3/urllib3/issues/1850&gt;`_\n  for more information on how to fix your proxy config. (Pull 1851)\n\n* Drain connection after ``PoolManager`` redirect (Pull 1817)\n\n* Ensure ``load_verify_locations`` raises ``SSLError`` for all backends (Pull 1812)\n\n* Rename ``VerifiedHTTPSConnection`` to ``HTTPSConnection`` (Pull 1805)\n\n* Allow the CA certificate data to be passed as a string (Pull 1804)\n\n* Raise ``ValueError`` if method contains control characters (Pull 1800)\n\n* Add ``__repr__`` to ``Timeout`` (Pull 1795)\n   ```\n   \n  \n  \n   ### 1.25.8\n   ```\n   ===================\n\n* Drop support for EOL Python 3.4 (Pull 1774)\n\n* Optimize _encode_invalid_chars (Pull 1787)\n   ```\n   \n  \n  \n   ### 1.25.7\n   ```\n   ===================\n\n* Preserve ``chunked`` parameter on retries (Pull 1715, Pull 1734)\n\n* Allow unset ``SERVER_SOFTWARE`` in App Engine (Pull 1704, Issue 1470)\n\n* Fix issue where URL fragment was sent within the request target. (Pull 1732)\n\n* Fix issue where an empty query section in a URL would fail to parse. (Pull 1732)\n\n* Remove TLS 1.3 support in SecureTransport due to Apple removing support (Pull 1703)\n   ```\n   \n  \n  \n   ### 1.25.6\n   ```\n   ===================\n\n* Fix issue where tilde (``~``) characters were incorrectly\n  percent-encoded in the path. (Pull 1692)\n   ```\n   \n  \n  \n   ### 1.25.5\n   ```\n   ===================\n\n* Add mitigation for BPO-37428 affecting Python &lt;3.7.4 and OpenSSL 1.1.1+ which\n  caused certificate verification to be enabled when using ``cert_reqs=CERT_NONE``.\n  (Issue 1682)\n   ```\n   \n  \n  \n   ### 1.25.4\n   ```\n   ===================\n\n* Propagate Retry-After header settings to subsequent retries. (Pull 1607)\n\n* Fix edge case where Retry-After header was still respected even when\n  explicitly opted out of. (Pull 1607)\n\n* Remove dependency on ``rfc3986`` for URL parsing.\n\n* Fix issue where URLs containing invalid characters within ``Url.auth`` would\n  raise an exception instead of percent-encoding those characters.\n\n* Add support for ``HTTPResponse.auto_close = False`` which makes HTTP responses\n  work well with BufferedReaders and other ``io`` module features. (Pull 1652)\n\n* Percent-encode invalid characters in URL for ``HTTPConnectionPool.request()`` (Pull 1673)\n   ```\n   \n  \n  \n   ### 1.25.3\n   ```\n   ===================\n\n* Change ``HTTPSConnection`` to load system CA certificates\n  when ``ca_certs``, ``ca_cert_dir``, and ``ssl_context`` are\n  unspecified. (Pull 1608, Issue 1603)\n\n* Upgrade bundled rfc3986 to v1.3.2. (Pull 1609, Issue 1605)\n   ```\n   \n  \n  \n   ### 1.25.2\n   ```\n   ===================\n\n* Change ``is_ipaddress`` to not detect IPvFuture addresses. (Pull 1583)\n\n* Change ``parse_url`` to percent-encode invalid characters within the\n  path, query, and target components. (Pull 1586)\n   ```\n   \n  \n  \n   ### 1.25.1\n   ```\n   ===================\n\n* Add support for Google&#x27;s ``Brotli`` package. (Pull 1572, Pull 1579)\n\n* Upgrade bundled rfc3986 to v1.3.1 (Pull 1578)\n   ```\n   \n  \n  \n   ### 1.25\n   ```\n   =================\n\n* Require and validate certificates by default when using HTTPS (Pull 1507)\n\n* Upgraded ``urllib3.utils.parse_url()`` to be RFC 3986 compliant. (Pull 1487)\n\n* Added support for ``key_password`` for ``HTTPSConnectionPool`` to use\n  encrypted ``key_file`` without creating your own ``SSLContext`` object. (Pull 1489)\n\n* Add TLSv1.3 support to CPython, pyOpenSSL, and SecureTransport ``SSLContext``\n  implementations. (Pull 1496)\n\n* Switched the default multipart header encoder from RFC 2231 to HTML 5 working draft. (Issue 303, Pull 1492)\n\n* Fixed issue where OpenSSL would block if an encrypted client private key was\n  given and no password was given. Instead an ``SSLError`` is raised. (Pull 1489)\n\n* Added support for Brotli content encoding. It is enabled automatically if\n  ``brotlipy`` package is installed which can be requested with\n  ``urllib3[brotli]`` extra. (Pull 1532)\n\n* Drop ciphers using DSS key exchange from default TLS cipher suites.\n  Improve default ciphers when using SecureTransport. (Pull 1496)\n\n* Implemented a more efficient ``HTTPResponse.__iter__()`` method. (Issue 1483)\n   ```\n   \n  \n  \n   ### 1.24.3\n   ```\n   ===================\n\n* Apply fix for CVE-2019-9740. (Pull 1591)\n   ```\n   \n  \n  \n   ### 1.24.2\n   ```\n   ===================\n\n* Don&#x27;t load system certificates by default when any other ``ca_certs``, ``ca_certs_dir`` or\n  ``ssl_context`` parameters are specified.\n\n* Remove Authorization header regardless of case when redirecting to cross-site. (Issue 1510)\n\n* Add support for IPv6 addresses in subjectAltName section of certificates. (Issue 1269)\n   ```\n   \n  \n  \n   ### 1.24.1\n   ```\n   ===================\n\n* Remove quadratic behavior within ``GzipDecoder.decompress()`` (Issue 1467)\n\n* Restored functionality of ``ciphers`` parameter for ``create_urllib3_context()``. (Issue 1462)\n   ```\n   \n  \n  \n   ### 1.24\n   ```\n   =================\n\n* Allow key_server_hostname to be specified when initializing a PoolManager to allow custom SNI to be overridden. (Pull 1449)\n\n* Test against Python 3.7 on AppVeyor. (Pull 1453)\n\n* Early-out ipv6 checks when running on App Engine. (Pull 1450)\n\n* Change ambiguous description of backoff_factor (Pull 1436)\n\n* Add ability to handle multiple Content-Encodings (Issue 1441 and Pull 1442)\n\n* Skip DNS names that can&#x27;t be idna-decoded when using pyOpenSSL (Issue 1405).\n\n* Add a server_hostname parameter to HTTPSConnection which allows for\n  overriding the SNI hostname sent in the handshake. (Pull 1397)\n\n* Drop support for EOL Python 2.6 (Pull 1429 and Pull 1430)\n\n* Fixed bug where responses with header Content-Type: message/* erroneously\n  raised HeaderParsingError, resulting in a warning being logged. (Pull 1439)\n\n* Move urllib3 to src/urllib3 (Pull 1409)\n   ```\n   \n  \n  \n   ### 1.23\n   ```\n   =================\n\n* Allow providing a list of headers to strip from requests when redirecting\n  to a different host. Defaults to the ``Authorization`` header. Different\n  headers can be set via ``Retry.remove_headers_on_redirect``. (Issue 1316)\n\n* Fix ``util.selectors._fileobj_to_fd`` to accept ``long`` (Issue 1247).\n\n* Dropped Python 3.3 support. (Pull 1242)\n\n* Put the connection back in the pool when calling stream() or read_chunked() on\n  a chunked HEAD response. (Issue 1234)\n\n* Fixed pyOpenSSL-specific ssl client authentication issue when clients\n  attempted to auth via certificate + chain (Issue 1060)\n\n* Add the port to the connectionpool connect print (Pull 1251)\n\n* Don&#x27;t use the ``uuid`` module to create multipart data boundaries. (Pull 1380)\n\n* ``read_chunked()`` on a closed response returns no chunks. (Issue 1088)\n\n* Add Python 2.6 support to ``contrib.securetransport`` (Pull 1359)\n\n* Added support for auth info in url for SOCKS proxy (Pull 1363)\n   ```\n   \n  \n  \n   ### 1.22\n   ```\n   =================\n\n* Fixed missing brackets in ``HTTP CONNECT`` when connecting to IPv6 address via\n  IPv6 proxy. (Issue 1222)\n\n* Made the connection pool retry on ``SSLError``.  The original ``SSLError``\n  is available on ``MaxRetryError.reason``. (Issue 1112)\n\n* Drain and release connection before recursing on retry/redirect.  Fixes\n  deadlocks with a blocking connectionpool. (Issue 1167)\n\n* Fixed compatibility for cookiejar. (Issue 1229)\n\n* pyopenssl: Use vendored version of ``six``. (Issue 1231)\n   ```\n   \n  \n  \n   ### 1.21.1\n   ```\n   ===================\n\n* Fixed SecureTransport issue that would cause long delays in response body\n  delivery. (Pull 1154)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``socket_options`` flag to the ``PoolManager``.  (Issue 1165)\n\n* Fixed regression in 1.21 that threw exceptions when users passed the\n  ``assert_hostname`` or ``assert_fingerprint`` flag to the ``PoolManager``.\n  (Pull 1157)\n   ```\n   \n  \n  \n   ### 1.21\n   ```\n   =================\n\n* Improved performance of certain selector system calls on Python 3.5 and\n  later. (Pull 1095)\n\n* Resolved issue where the PyOpenSSL backend would not wrap SysCallError\n  exceptions appropriately when sending data. (Pull 1125)\n\n* Selectors now detects a monkey-patched select module after import for modules\n  that patch the select module like eventlet, greenlet. (Pull 1128)\n\n* Reduced memory consumption when streaming zlib-compressed responses\n  (as opposed to raw deflate streams). (Pull 1129)\n\n* Connection pools now use the entire request context when constructing the\n  pool key. (Pull 1016)\n\n* ``PoolManager.connection_from_*`` methods now accept a new keyword argument,\n  ``pool_kwargs``, which are merged with the existing ``connection_pool_kw``.\n  (Pull 1016)\n\n* Add retry counter for ``status_forcelist``. (Issue 1147)\n\n* Added ``contrib`` module for using SecureTransport on macOS:\n  ``urllib3.contrib.securetransport``.  (Pull 1122)\n\n* urllib3 now only normalizes the case of ``http://`` and ``https://`` schemes:\n  for schemes it does not recognise, it assumes they are case-sensitive and\n  leaves them unchanged.\n  (Issue 1080)\n   ```\n   \n  \n  \n   ### 1.20\n   ```\n   =================\n\n* Added support for waiting for I/O using selectors other than select,\n  improving urllib3&#x27;s behaviour with large numbers of concurrent connections.\n  (Pull 1001)\n\n* Updated the date for the system clock check. (Issue 1005)\n\n* ConnectionPools now correctly consider hostnames to be case-insensitive.\n  (Issue 1032)\n\n* Outdated versions of PyOpenSSL now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Pull 1063)\n\n* Outdated versions of cryptography now cause the PyOpenSSL contrib module\n  to fail when it is injected, rather than at first use. (Issue 1044)\n\n* Automatically attempt to rewind a file-like body object when a request is\n  retried or redirected. (Pull 1039)\n\n* Fix some bugs that occur when modules incautiously patch the queue module.\n  (Pull 1061)\n\n* Prevent retries from occurring on read timeouts for which the request method\n  was not in the method whitelist. (Issue 1059)\n\n* Changed the PyOpenSSL contrib module to lazily load idna to avoid\n  unnecessarily bloating the memory of programs that don&#x27;t need it. (Pull\n  1076)\n\n* Add support for IPv6 literals with zone identifiers. (Pull 1013)\n\n* Added support for socks5h:// and socks4a:// schemes when working with SOCKS\n  proxies, and controlled remote DNS appropriately. (Issue 1035)\n   ```\n   \n  \n  \n   ### 1.19.1\n   ```\n   ===================\n\n* Fixed AppEngine import that didn&#x27;t function on Python 3.5. (Pull 1025)\n   ```\n   \n  \n  \n   ### 1.19\n   ```\n   =================\n\n* urllib3 now respects Retry-After headers on 413, 429, and 503 responses when\n  using the default retry logic. (Pull 955)\n\n* Remove markers from setup.py to assist ancient setuptools versions. (Issue\n  986)\n\n* Disallow superscripts and other integerish things in URL ports. (Issue 989)\n\n* Allow urllib3&#x27;s HTTPResponse.stream() method to continue to work with\n  non-httplib underlying FPs. (Pull 990)\n\n* Empty filenames in multipart headers are now emitted as such, rather than\n  being suppressed. (Issue 1015)\n\n* Prefer user-supplied Host headers on chunked uploads. (Issue 1009)\n   ```\n   \n  \n  \n   ### 1.18.1\n   ```\n   ===================\n\n* CVE-2016-9015. Users who are using urllib3 version 1.17 or 1.18 along with\n  PyOpenSSL injection and OpenSSL 1.1.0 *must* upgrade to this version. This\n  release fixes a vulnerability whereby urllib3 in the above configuration\n  would silently fail to validate TLS certificates due to erroneously setting\n  invalid flags in OpenSSL&#x27;s ``SSL_CTX_set_verify`` function. These erroneous\n  flags do not cause a problem in OpenSSL versions before 1.1.0, which\n  interprets the presence of any flag as requesting certificate validation.\n\n  There is no PR for this patch, as it was prepared for simultaneous disclosure\n  and release. The master branch received the same fix in Pull 1010.\n   ```\n   \n  \n  \n   ### 1.18\n   ```\n   =================\n\n* Fixed incorrect message for IncompleteRead exception. (Pull 973)\n\n* Accept ``iPAddress`` subject alternative name fields in TLS certificates.\n  (Issue 258)\n\n* Fixed consistency of ``HTTPResponse.closed`` between Python 2 and 3.\n  (Issue 977)\n\n* Fixed handling of wildcard certificates when using PyOpenSSL. (Issue 979)\n   ```\n   \n  \n  \n   ### 1.17\n   ```\n   =================\n\n* Accept ``SSLContext`` objects for use in SSL/TLS negotiation. (Issue 835)\n\n* ConnectionPool debug log now includes scheme, host, and port. (Issue 897)\n\n* Substantially refactored documentation. (Issue 887)\n\n* Used URLFetch default timeout on AppEngine, rather than hardcoding our own.\n  (Issue 858)\n\n* Normalize the scheme and host in the URL parser (Issue 833)\n\n* ``HTTPResponse`` contains the last ``Retry`` object, which now also\n  contains retries history. (Issue 848)\n\n* Timeout can no longer be set as boolean, and must be greater than zero.\n  (Pull 924)\n\n* Removed pyasn1 and ndg-httpsclient from dependencies used for PyOpenSSL. We\n  now use cryptography and idna, both of which are already dependencies of\n  PyOpenSSL. (Pull 930)\n\n* Fixed infinite loop in ``stream`` when amt=None. (Issue 928)\n\n* Try to use the operating system&#x27;s certificates when we are using an\n  ``SSLContext``. (Pull 941)\n\n* Updated cipher suite list to allow ChaCha20+Poly1305. AES-GCM is preferred to\n  ChaCha20, but ChaCha20 is then preferred to everything else. (Pull 947)\n\n* Updated cipher suite list to remove 3DES-based cipher suites. (Pull 958)\n\n* Removed the cipher suite fallback to allow HIGH ciphers. (Pull 958)\n\n* Implemented ``length_remaining`` to determine remaining content\n  to be read. (Pull 949)\n\n* Implemented ``enforce_content_length`` to enable exceptions when\n  incomplete data chunks are received. (Pull 949)\n\n* Dropped connection start, dropped connection reset, redirect, forced retry,\n  and new HTTPS connection log levels to DEBUG, from INFO. (Pull 967)\n   ```\n   \n  \n  \n   ### 1.16\n   ```\n   =================\n\n* Disable IPv6 DNS when IPv6 connections are not possible. (Issue 840)\n\n* Provide ``key_fn_by_scheme`` pool keying mechanism that can be\n  overridden. (Issue 830)\n\n* Normalize scheme and host to lowercase for pool keys, and include\n  ``source_address``. (Issue 830)\n\n* Cleaner exception chain in Python 3 for ``_make_request``.\n  (Issue 861)\n\n* Fixed installing ``urllib3[socks]`` extra. (Issue 864)\n\n* Fixed signature of ``ConnectionPool.close`` so it can actually safely be\n  called by subclasses. (Issue 873)\n\n* Retain ``release_conn`` state across retries. (Issues 651, 866)\n\n* Add customizable ``HTTPConnectionPool.ResponseCls``, which defaults to\n  ``HTTPResponse`` but can be replaced with a subclass. (Issue 879)\n   ```\n   \n  \n  \n   ### 1.15.1\n   ```\n   ===================\n\n* Fix packaging to include backports module. (Issue 841)\n   ```\n   \n  \n  \n   ### 1.15\n   ```\n   =================\n\n* Added Retry(raise_on_status=False). (Issue 720)\n\n* Always use setuptools, no more distutils fallback. (Issue 785)\n\n* Dropped support for Python 3.2. (Issue 786)\n\n* Chunked transfer encoding when requesting with ``chunked=True``.\n  (Issue 790)\n\n* Fixed regression with IPv6 port parsing. (Issue 801)\n\n* Append SNIMissingWarning messages to allow users to specify it in\n  the PYTHONWARNINGS environment variable. (Issue 816)\n\n* Handle unicode headers in Py2. (Issue 818)\n\n* Log certificate when there is a hostname mismatch. (Issue 820)\n\n* Preserve order of request/response headers. (Issue 821)\n   ```\n   \n  \n  \n   ### 1.14\n   ```\n   =================\n\n* contrib: SOCKS proxy support! (Issue 762)\n\n* Fixed AppEngine handling of transfer-encoding header and bug\n  in Timeout defaults checking. (Issue 763)\n   ```\n   \n  \n  \n   ### 1.13.1\n   ```\n   ===================\n\n* Fixed regression in IPv6 + SSL for match_hostname. (Issue 761)\n   ```\n   \n  \n  \n   ### 1.13\n   ```\n   =================\n\n* Fixed ``pip install urllib3[secure]`` on modern pip. (Issue 706)\n\n* pyopenssl: Fixed SSL3_WRITE_PENDING error. (Issue 717)\n\n* pyopenssl: Support for TLSv1.1 and TLSv1.2. (Issue 696)\n\n* Close connections more defensively on exception. (Issue 734)\n\n* Adjusted ``read_chunked`` to handle gzipped, chunk-encoded bodies without\n  repeatedly flushing the decoder, to function better on Jython. (Issue 743)\n\n* Accept ``ca_cert_dir`` for SSL-related PoolManager configuration. (Issue 758)\n   ```\n   \n  \n  \n   ### 1.12\n   ```\n   =================\n\n* Rely on ``six`` for importing ``httplib`` to work around\n  conflicts with other Python 3 shims. (Issue 688)\n\n* Add support for directories of certificate authorities, as supported by\n  OpenSSL. (Issue 701)\n\n* New exception: ``NewConnectionError``, raised when we fail to establish\n  a new connection, usually ``ECONNREFUSED`` socket error.\n   ```\n   \n  \n  \n   ### 1.11\n   ```\n   =================\n\n* When ``ca_certs`` is given, ``cert_reqs`` defaults to\n  ``&#x27;CERT_REQUIRED&#x27;``. (Issue 650)\n\n* ``pip install urllib3[secure]`` will install Certifi and\n  PyOpenSSL as dependencies. (Issue 678)\n\n* Made ``HTTPHeaderDict`` usable as a ``headers`` input value\n  (Issues 632, 679)\n\n* Added `urllib3.contrib.appengine &lt;https://urllib3.readthedocs.io/en/latest/contrib.html#google-app-engine&gt;`_\n  which has an ``AppEngineManager`` for using ``URLFetch`` in a\n  Google AppEngine environment. (Issue 664)\n\n* Dev: Added test suite for AppEngine. (Issue 631)\n\n* Fix performance regression when using PyOpenSSL. (Issue 626)\n\n* Passing incorrect scheme (e.g. ``foo://``) will raise\n  ``ValueError`` instead of ``AssertionError`` (backwards\n  compatible for now, but please migrate). (Issue 640)\n\n* Fix pools not getting replenished when an error occurs during a\n  request using ``release_conn=False``. (Issue 644)\n\n* Fix pool-default headers not applying for url-encoded requests\n  like GET. (Issue 657)\n\n* log.warning in Python 3 when headers are skipped due to parsing\n  errors. (Issue 642)\n\n* Close and discard connections if an error occurs during read.\n  (Issue 660)\n\n* Fix host parsing for IPv6 proxies. (Issue 668)\n\n* Separate warning type SubjectAltNameWarning, now issued once\n  per host. (Issue 671)\n\n* Fix ``httplib.IncompleteRead`` not getting converted to\n  ``ProtocolError`` when using ``HTTPResponse.stream()``\n  (Issue 674)\n   ```\n   \n  \n  \n   ### 1.10.4\n   ```\n   ===================\n\n* Migrate tests to Tornado 4. (Issue 594)\n\n* Append default warning configuration rather than overwrite.\n  (Issue 603)\n\n* Fix streaming decoding regression. (Issue 595)\n\n* Fix chunked requests losing state across keep-alive connections.\n  (Issue 599)\n\n* Fix hanging when chunked HEAD response has no body. (Issue 605)\n   ```\n   \n  \n  \n   ### 1.10.3\n   ```\n   ===================\n\n* Emit ``InsecurePlatformWarning`` when SSLContext object is missing.\n  (Issue 558)\n\n* Fix regression of duplicate header keys being discarded.\n  (Issue 563)\n\n* ``Response.stream()`` returns a generator for chunked responses.\n  (Issue 560)\n\n* Set upper-bound timeout when waiting for a socket in PyOpenSSL.\n  (Issue 585)\n\n* Work on platforms without `ssl` module for plain HTTP requests.\n  (Issue 587)\n\n* Stop relying on the stdlib&#x27;s default cipher list. (Issue 588)\n   ```\n   \n  \n  \n   ### 1.10.2\n   ```\n   ===================\n\n* Fix file descriptor leakage on retries. (Issue 548)\n\n* Removed RC4 from default cipher list. (Issue 551)\n\n* Header performance improvements. (Issue 544)\n\n* Fix PoolManager not obeying redirect retry settings. (Issue 553)\n   ```\n   \n  \n  \n   ### 1.10.1\n   ```\n   ===================\n\n* Pools can be used as context managers. (Issue 545)\n\n* Don&#x27;t re-use connections which experienced an SSLError. (Issue 529)\n\n* Don&#x27;t fail when gzip decoding an empty stream. (Issue 535)\n\n* Add sha256 support for fingerprint verification. (Issue 540)\n\n* Fixed handling of header values containing commas. (Issue 533)\n   ```\n   \n  \n  \n   ### 1.10\n   ```\n   =================\n\n* Disabled SSLv3. (Issue 473)\n\n* Add ``Url.url`` property to return the composed url string. (Issue 394)\n\n* Fixed PyOpenSSL + gevent ``WantWriteError``. (Issue 412)\n\n* ``MaxRetryError.reason`` will always be an exception, not string.\n  (Issue 481)\n\n* Fixed SSL-related timeouts not being detected as timeouts. (Issue 492)\n\n* Py3: Use ``ssl.create_default_context()`` when available. (Issue 473)\n\n* Emit ``InsecureRequestWarning`` for *every* insecure HTTPS request.\n  (Issue 496)\n\n* Emit ``SecurityWarning`` when certificate has no ``subjectAltName``.\n  (Issue 499)\n\n* Close and discard sockets which experienced SSL-related errors.\n  (Issue 501)\n\n* Handle ``body`` param in ``.request(...)``. (Issue 513)\n\n* Respect timeout with HTTPS proxy. (Issue 505)\n\n* PyOpenSSL: Handle ZeroReturnError exception. (Issue 520)\n   ```\n   \n  \n  \n   ### 1.9.1\n   ```\n   ==================\n\n* Apply socket arguments before binding. (Issue 427)\n\n* More careful checks if fp-like object is closed. (Issue 435)\n\n* Fixed packaging issues of some development-related files not\n  getting included. (Issue 440)\n\n* Allow performing *only* fingerprint verification. (Issue 444)\n\n* Emit ``SecurityWarning`` if system clock is waaay off. (Issue 445)\n\n* Fixed PyOpenSSL compatibility with PyPy. (Issue 450)\n\n* Fixed ``BrokenPipeError`` and ``ConnectionError`` handling in Py3.\n  (Issue 443)\n   ```\n   \n  \n  \n   ### 1.9\n   ```\n   ================\n\n* Shuffled around development-related files. If you&#x27;re maintaining a distro\n  package of urllib3, you may need to tweak things. (Issue 415)\n\n* Unverified HTTPS requests will trigger a warning on the first request. See\n  our new `security documentation\n  &lt;https://urllib3.readthedocs.io/en/latest/security.html&gt;`_ for details.\n  (Issue 426)\n\n* New retry logic and ``urllib3.util.retry.Retry`` configuration object.\n  (Issue 326)\n\n* All raised exceptions should now wrapped in a\n  ``urllib3.exceptions.HTTPException``-extending exception. (Issue 326)\n\n* All errors during a retry-enabled request should be wrapped in\n  ``urllib3.exceptions.MaxRetryError``, including timeout-related exceptions\n  which were previously exempt. Underlying error is accessible from the\n  ``.reason`` property. (Issue 326)\n\n* ``urllib3.exceptions.ConnectionError`` renamed to\n  ``urllib3.exceptions.ProtocolError``. (Issue 326)\n\n* Errors during response read (such as IncompleteRead) are now wrapped in\n  ``urllib3.exceptions.ProtocolError``. (Issue 418)\n\n* Requesting an empty host will raise ``urllib3.exceptions.LocationValueError``.\n  (Issue 417)\n\n* Catch read timeouts over SSL connections as\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 419)\n\n* Apply socket arguments before connecting. (Issue 427)\n   ```\n   \n  \n  \n   ### 1.8.3\n   ```\n   ==================\n\n* Fix TLS verification when using a proxy in Python 3.4.1. (Issue 385)\n\n* Add ``disable_cache`` option to ``urllib3.util.make_headers``. (Issue 393)\n\n* Wrap ``socket.timeout`` exception with\n  ``urllib3.exceptions.ReadTimeoutError``. (Issue 399)\n\n* Fixed proxy-related bug where connections were being reused incorrectly.\n  (Issues 366, 369)\n\n* Added ``socket_options`` keyword parameter which allows to define\n  ``setsockopt`` configuration of new sockets. (Issue 397)\n\n* Removed ``HTTPConnection.tcp_nodelay`` in favor of\n  ``HTTPConnection.default_socket_options``. (Issue 397)\n\n* Fixed ``TypeError`` bug in Python 2.6.4. (Issue 411)\n   ```\n   \n  \n  \n   ### 1.8.2\n   ```\n   ==================\n\n* Fix ``urllib3.util`` not being included in the package.\n   ```\n   \n  \n  \n   ### 1.8.1\n   ```\n   ==================\n\n* Fix AppEngine bug of HTTPS requests going out as HTTP. (Issue 356)\n\n* Don&#x27;t install ``dummyserver`` into ``site-packages`` as it&#x27;s only needed\n  for the test suite. (Issue 362)\n\n* Added support for specifying ``source_address``. (Issue 352)\n   ```\n   \n  \n  \n   ### 1.8\n   ```\n   ================\n\n* Improved url parsing in ``urllib3.util.parse_url`` (properly parse &#x27;&#x27; in\n  username, and blank ports like &#x27;hostname:&#x27;).\n\n* New ``urllib3.connection`` module which contains all the HTTPConnection\n  objects.\n\n* Several ``urllib3.util.Timeout``-related fixes. Also changed constructor\n  signature to a more sensible order. [Backwards incompatible]\n  (Issues 252, 262, 263)\n\n* Use ``backports.ssl_match_hostname`` if it&#x27;s installed. (Issue 274)\n\n* Added ``.tell()`` method to ``urllib3.response.HTTPResponse`` which\n  returns the number of bytes read so far. (Issue 277)\n\n* Support for platforms without threading. (Issue 289)\n\n* Expand default-port comparison in ``HTTPConnectionPool.is_same_host``\n  to allow a pool with no specified port to be considered equal to to an\n  HTTP/HTTPS url with port 80/443 explicitly provided. (Issue 305)\n\n* Improved default SSL/TLS settings to avoid vulnerabilities.\n  (Issue 309)\n\n* Fixed ``urllib3.poolmanager.ProxyManager`` not retrying on connect errors.\n  (Issue 310)\n\n* Disable Nagle&#x27;s Algorithm on the socket for non-proxies. A subset of requests\n  will send the entire HTTP request ~200 milliseconds faster; however, some of\n  the resulting TCP packets will be smaller. (Issue 254)\n\n* Increased maximum number of SubjectAltNames in ``urllib3.contrib.pyopenssl``\n  from the default 64 to 1024 in a single certificate. (Issue 318)\n\n* Headers are now passed and stored as a custom\n  ``urllib3.collections_.HTTPHeaderDict`` object rather than a plain ``dict``.\n  (Issue 329, 333)\n\n* Headers no longer lose their case on Python 3. (Issue 236)\n\n* ``urllib3.contrib.pyopenssl`` now uses the operating system&#x27;s default CA\n  certificates on inject. (Issue 332)\n\n* Requests with ``retries=False`` will immediately raise any exceptions without\n  wrapping them in ``MaxRetryError``. (Issue 348)\n\n* Fixed open socket leak with SSL-related failures. (Issue 344, 348)\n   ```\n   \n  \n  \n   ### 1.7.1\n   ```\n   ==================\n\n* Added granular timeout support with new ``urllib3.util.Timeout`` class.\n  (Issue 231)\n\n* Fixed Python 3.4 support. (Issue 238)\n   ```\n   \n  \n  \n   ### 1.7\n   ```\n   ================\n\n* More exceptions are now pickle-able, with tests. (Issue 174)\n\n* Fixed redirecting with relative URLs in Location header. (Issue 178)\n\n* Support for relative urls in ``Location: ...`` header. (Issue 179)\n\n* ``urllib3.response.HTTPResponse`` now inherits from ``io.IOBase`` for bonus\n  file-like functionality. (Issue 187)\n\n* Passing ``assert_hostname=False`` when creating a HTTPSConnectionPool will\n  skip hostname verification for SSL connections. (Issue 194)\n\n* New method ``urllib3.response.HTTPResponse.stream(...)`` which acts as a\n  generator wrapped around ``.read(...)``. (Issue 198)\n\n* IPv6 url parsing enforces brackets around the hostname. (Issue 199)\n\n* Fixed thread race condition in\n  ``urllib3.poolmanager.PoolManager.connection_from_host(...)`` (Issue 204)\n\n* ``ProxyManager`` requests now include non-default port in ``Host: ...``\n  header. (Issue 217)\n\n* Added HTTPS proxy support in ``ProxyManager``. (Issue 170 139)\n\n* New ``RequestField`` object can be passed to the ``fields=...`` param which\n  can specify headers. (Issue 220)\n\n* Raise ``urllib3.exceptions.ProxyError`` when connecting to proxy fails.\n  (Issue 221)\n\n* Use international headers when posting file names. (Issue 119)\n\n* Improved IPv6 support. (Issue 203)\n   ```\n   \n  \n  \n   ### 1.6\n   ```\n   ================\n\n* Contrib: Optional SNI support for Py2 using PyOpenSSL. (Issue 156)\n\n* ``ProxyManager`` automatically adds ``Host: ...`` header if not given.\n\n* Improved SSL-related code. ``cert_req`` now optionally takes a string like\n  &quot;REQUIRED&quot; or &quot;NONE&quot;. Same with ``ssl_version`` takes strings like &quot;SSLv23&quot;\n  The string values reflect the suffix of the respective constant variable.\n  (Issue 130)\n\n* Vendored ``socksipy`` now based on Anorov&#x27;s fork which handles unexpectedly\n  closed proxy connections and larger read buffers. (Issue 135)\n\n* Ensure the connection is closed if no data is received, fixes connection leak\n  on some platforms. (Issue 133)\n\n* Added SNI support for SSL/TLS connections on Py32+. (Issue 89)\n\n* Tests fixed to be compatible with Py26 again. (Issue 125)\n\n* Added ability to choose SSL version by passing an ``ssl.PROTOCOL_*`` constant\n  to the ``ssl_version`` parameter of ``HTTPSConnectionPool``. (Issue 109)\n\n* Allow an explicit content type to be specified when encoding file fields.\n  (Issue 126)\n\n* Exceptions are now pickleable, with tests. (Issue 101)\n\n* Fixed default headers not getting passed in some cases. (Issue 99)\n\n* Treat &quot;content-encoding&quot; header value as case-insensitive, per RFC 2616\n  Section 3.5. (Issue 110)\n\n* &quot;Connection Refused&quot; SocketErrors will get retried rather than raised.\n  (Issue 92)\n\n* Updated vendored ``six``, no longer overrides the global ``six`` module\n  namespace. (Issue 113)\n\n* ``urllib3.exceptions.MaxRetryError`` contains a ``reason`` property holding\n  the exception that prompted the final retry. If ``reason is None`` then it\n  was due to a redirect. (Issue 92, 114)\n\n* Fixed ``PoolManager.urlopen()`` from not redirecting more than once.\n  (Issue 149)\n\n* Don&#x27;t assume ``Content-Type: text/plain`` for multi-part encoding parameters\n  that are not files. (Issue 111)\n\n* Pass `strict` param down to ``httplib.HTTPConnection``. (Issue 122)\n\n* Added mechanism to verify SSL certificates by fingerprint (md5, sha1) or\n  against an arbitrary hostname (when connecting by IP or for misconfigured\n  servers). (Issue 140)\n\n* Streaming decompression support. (Issue 159)\n   ```\n   \n  \n  \n   ### 1.5\n   ```\n   ================\n\n* Added ``urllib3.add_stderr_logger()`` for quickly enabling STDERR debug\n  logging in urllib3.\n\n* Native full URL parsing (including auth, path, query, fragment) available in\n  ``urllib3.util.parse_url(url)``.\n\n* Built-in redirect will switch method to &#x27;GET&#x27; if status code is 303.\n  (Issue 11)\n\n* ``urllib3.PoolManager`` strips the scheme and host before sending the request\n  uri. (Issue 8)\n\n* New ``urllib3.exceptions.DecodeError`` exception for when automatic decoding,\n  based on the Content-Type header, fails.\n\n* Fixed bug with pool depletion and leaking connections (Issue 76). Added\n  explicit connection closing on pool eviction. Added\n  ``urllib3.PoolManager.clear()``.\n\n* 99% -&gt; 100% unit test coverage.\n   ```\n   \n  \n  \n   ### 1.4\n   ```\n   ================\n\n* Minor AppEngine-related fixes.\n\n* Switched from ``mimetools.choose_boundary`` to ``uuid.uuid4()``.\n\n* Improved url parsing. (Issue 73)\n\n* IPv6 url support. (Issue 72)\n   ```\n   \n  \n  \n   ### 1.3\n   ```\n   ================\n\n* Removed pre-1.0 deprecated API.\n\n* Refactored helpers into a ``urllib3.util`` submodule.\n\n* Fixed multipart encoding to support list-of-tuples for keys with multiple\n  values. (Issue 48)\n\n* Fixed multiple Set-Cookie headers in response not getting merged properly in\n  Python 3. (Issue 53)\n\n* AppEngine support with Py27. (Issue 61)\n\n* Minor ``encode_multipart_formdata`` fixes related to Python 3 strings vs\n  bytes.\n   ```\n   \n  \n  \n   ### 1.2.2\n   ```\n   ==================\n\n* Fixed packaging bug of not shipping ``test-requirements.txt``. (Issue 47)\n   ```\n   \n  \n  \n   ### 1.2.1\n   ```\n   ==================\n\n* Fixed another bug related to when ``ssl`` module is not available. (Issue 41)\n\n* Location parsing errors now raise ``urllib3.exceptions.LocationParseError``\n  which inherits from ``ValueError``.\n   ```\n   \n  \n  \n   ### 1.2\n   ```\n   ================\n\n* Added Python 3 support (tested on 3.2.2)\n\n* Dropped Python 2.5 support (tested on 2.6.7, 2.7.2)\n\n* Use ``select.poll`` instead of ``select.select`` for platforms that support\n  it.\n\n* Use ``Queue.LifoQueue`` instead of ``Queue.Queue`` for more aggressive\n  connection reusing. Configurable by overriding ``ConnectionPool.QueueCls``.\n\n* Fixed ``ImportError`` during install when ``ssl`` module is not available.\n  (Issue 41)\n\n* Fixed ``PoolManager`` redirects between schemes (such as HTTP -&gt; HTTPS) not\n  completing properly. (Issue 28, uncovered by Issue 10 in v1.1)\n\n* Ported ``dummyserver`` to use ``tornado`` instead of ``webob`` +\n  ``eventlet``. Removed extraneous unsupported dummyserver testing backends.\n  Added socket-level tests.\n\n* More tests. Achievement Unlocked: 99% Coverage.\n   ```\n   \n  \n  \n   ### 1.1\n   ```\n   ================\n\n* Refactored ``dummyserver`` to its own root namespace module (used for\n  testing).\n\n* Added hostname verification for ``VerifiedHTTPSConnection`` by vendoring in\n  Py32&#x27;s ``ssl_match_hostname``. (Issue 25)\n\n* Fixed cross-host HTTP redirects when using ``PoolManager``. (Issue 10)\n\n* Fixed ``decode_content`` being ignored when set through ``urlopen``. (Issue\n  27)\n\n* Fixed timeout-related bugs. (Issues 17, 23)\n   ```\n   \n  \n  \n   ### 1.0.2\n   ```\n   ==================\n\n* Fixed typo in ``VerifiedHTTPSConnection`` which would only present as a bug if\n  you&#x27;re using the object manually. (Thanks pyos)\n\n* Made RecentlyUsedContainer (and consequently PoolManager) more thread-safe by\n  wrapping the access log in a mutex. (Thanks christer)\n\n* Made RecentlyUsedContainer more dict-like (corrected ``__delitem__`` and\n  ``__getitem__`` behaviour), with tests. Shouldn&#x27;t affect core urllib3 code.\n   ```\n   \n  \n  \n   ### 1.0.1\n   ```\n   ==================\n\n* Fixed a bug where the same connection would get returned into the pool twice,\n  causing extraneous &quot;HttpConnectionPool is full&quot; log warnings.\n   ```\n   \n  \n  \n   ### 1.0\n   ```\n   ================\n\n* Added ``PoolManager`` with LRU expiration of connections (tested and\n  documented).\n* Added ``ProxyManager`` (needs tests, docs, and confirmation that it works\n  with HTTPS proxies).\n* Added optional partial-read support for responses when\n  ``preload_content=False``. You can now make requests and just read the headers\n  without loading the content.\n* Made response decoding optional (default on, same as before).\n* Added optional explicit boundary string for ``encode_multipart_formdata``.\n* Convenience request methods are now inherited from ``RequestMethods``. Old\n  helpers like ``get_url`` and ``post_url`` should be abandoned in favour of\n  the new ``request(method, url, ...)``.\n* Refactored code to be even more decoupled, reusable, and extendable.\n* License header added to ``.py`` files.\n* Embiggened the documentation: Lots of Sphinx-friendly docstrings in the code\n  and docs in ``docs/`` and on https://urllib3.readthedocs.io/.\n* Embettered all the things!\n* Started writing this file.\n   ```\n   \n  \n  \n   ### 0.4.1\n   ```\n   ==================\n\n* Minor bug fixes, code cleanup.\n   ```\n   \n  \n  \n   ### 0.4\n   ```\n   ================\n\n* Better unicode support.\n* Added ``VerifiedHTTPSConnection``.\n* Added ``NTLMConnectionPool`` in contrib.\n* Minor improvements.\n   ```\n   \n  \n  \n   ### 0.3.1\n   ```\n   ==================\n\n* Added ``assert_host_name`` optional parameter. Now compatible with proxies.\n   ```\n   \n  \n  \n   ### 0.3\n   ```\n   ================\n\n* Added HTTPS support.\n* Minor bug fixes.\n* Refactored, broken backwards compatibility with 0.2.\n* API to be treated as stable from this version forward.\n   ```\n   \n  \n  \n   ### 0.2\n   ```\n   ================\n\n* Added unit tests.\n* Bug fixes.\n   ```\n   \n  \n  \n   ### 0.1\n   ```\n   ================\n\n* First release.\n   ```\n   \n  \n</details>\n\n\n \n\n<details>\n  <summary>Links</summary>\n  \n  - PyPI: https://pypi.org/project/urllib3\n  - Changelog: https://data.safetycli.com/changelogs/urllib3/\n</details>\n\n\n\n\n\n### Update [websockets](https://pypi.org/project/websockets) from **10.4** to **11.0.3**.\n\n\n<details>\n  <summary>Changelog</summary>\n  \n  \n   ### 11.0.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 11.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.4\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.3\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 10.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 9.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.2\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0.1\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 8.0\n   ```\n   See https://websockets.readthedocs.io/en/stable/project/changelog.html for details.\n   ```\n   \n  \n  \n   ### 7.0\n   ```\n   See https://websockets.",
                "created_at": "2023-10-16T13:49:06Z",
                "updated_at": "2023-10-16T13:49:06Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "c6414d488236798ec6d484f2c590c994e77606ea",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/commits",
                "review_comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/comments",
                "review_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/comments",
                "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/2f83f4f36babb98da89fb21b3eb142acd5daa9f6",
                "head": {
                    "label": "alpacahq:pyup-scheduled-update-2023-10-16",
                    "ref": "pyup-scheduled-update-2023-10-16",
                    "sha": "2f83f4f36babb98da89fb21b3eb142acd5daa9f6",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-15T20:55:24Z",
                        "pushed_at": "2023-10-16T13:49:07Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1630,
                        "watchers_count": 1630,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 552,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 55,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 552,
                        "open_issues": 55,
                        "watchers": 1630,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "alpacahq:master",
                    "ref": "master",
                    "sha": "f54b5a529591dae708cd1a52e77bef45965e012d",
                    "user": {
                        "login": "alpacahq",
                        "id": 30398729,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/alpacahq",
                        "html_url": "https://github.com/alpacahq",
                        "followers_url": "https://api.github.com/users/alpacahq/followers",
                        "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                        "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                        "repos_url": "https://api.github.com/users/alpacahq/repos",
                        "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 124611126,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjQ2MTExMjY=",
                        "name": "alpaca-trade-api-python",
                        "full_name": "alpacahq/alpaca-trade-api-python",
                        "private": false,
                        "owner": {
                            "login": "alpacahq",
                            "id": 30398729,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMwMzk4NzI5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/alpacahq",
                            "html_url": "https://github.com/alpacahq",
                            "followers_url": "https://api.github.com/users/alpacahq/followers",
                            "following_url": "https://api.github.com/users/alpacahq/following{/other_user}",
                            "gists_url": "https://api.github.com/users/alpacahq/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/alpacahq/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/alpacahq/subscriptions",
                            "organizations_url": "https://api.github.com/users/alpacahq/orgs",
                            "repos_url": "https://api.github.com/users/alpacahq/repos",
                            "events_url": "https://api.github.com/users/alpacahq/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/alpacahq/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "description": "Python client for Alpaca's trade API",
                        "fork": false,
                        "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python",
                        "forks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/forks",
                        "keys_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/teams",
                        "hooks_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/hooks",
                        "issue_events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/events",
                        "assignees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/tags",
                        "blobs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/languages",
                        "stargazers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/stargazers",
                        "contributors_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contributors",
                        "subscribers_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscribers",
                        "subscription_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/subscription",
                        "commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/merges",
                        "archive_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/downloads",
                        "issues_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/labels{/name}",
                        "releases_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/deployments",
                        "created_at": "2018-03-10T01:29:06Z",
                        "updated_at": "2023-10-15T20:55:24Z",
                        "pushed_at": "2023-10-16T13:49:07Z",
                        "git_url": "git://github.com/alpacahq/alpaca-trade-api-python.git",
                        "ssh_url": "git@github.com:alpacahq/alpaca-trade-api-python.git",
                        "clone_url": "https://github.com/alpacahq/alpaca-trade-api-python.git",
                        "svn_url": "https://github.com/alpacahq/alpaca-trade-api-python",
                        "homepage": "https://pypi.org/project/alpaca-trade-api/",
                        "size": 878,
                        "stargazers_count": 1630,
                        "watchers_count": 1630,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 552,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 55,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "algo-trading",
                            "alpaca",
                            "api",
                            "crypto",
                            "hacktoberfest",
                            "market-data",
                            "python",
                            "rest-api",
                            "stock-market",
                            "trade",
                            "trading",
                            "websocket"
                        ],
                        "visibility": "public",
                        "forks": 552,
                        "open_issues": 55,
                        "watchers": 1630,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726"
                    },
                    "html": {
                        "href": "https://github.com/alpacahq/alpaca-trade-api-python/pull/726"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/issues/726/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/pulls/726/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/statuses/2f83f4f36babb98da89fb21b3eb142acd5daa9f6"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": true,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 5,
                "additions": 5,
                "deletions": 5,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-16T13:49:08Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593125758",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15436434050,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-16",
            "head": "2f83f4f36babb98da89fb21b3eb142acd5daa9f6",
            "before": "0007205c61d71f8195f4595e8725c482c15a48db",
            "commits": [
                {
                    "sha": "2f83f4f36babb98da89fb21b3eb142acd5daa9f6",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Update pyyaml from 6.0 to 6.0.1",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/2f83f4f36babb98da89fb21b3eb142acd5daa9f6"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-16T13:49:06Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593125432",
        "type": "CreateEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "ref": "pyup-scheduled-update-2023-10-16",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "Python client for Alpaca's trade API",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-16T13:49:06Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593125409",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15436433893,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-16",
            "head": "0007205c61d71f8195f4595e8725c482c15a48db",
            "before": "8e3f15cf10acd17b47c57cad570697405ee3849a",
            "commits": [
                {
                    "sha": "0007205c61d71f8195f4595e8725c482c15a48db",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Update aiohttp from 3.8.2 to 3.8.6",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/0007205c61d71f8195f4595e8725c482c15a48db"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-16T13:49:06Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593125138",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15436433777,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-16",
            "head": "8e3f15cf10acd17b47c57cad570697405ee3849a",
            "before": "17313cf392da20b89a54142612f641437d96775d",
            "commits": [
                {
                    "sha": "8e3f15cf10acd17b47c57cad570697405ee3849a",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Update msgpack from 1.0.3 to 1.0.7",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/8e3f15cf10acd17b47c57cad570697405ee3849a"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-16T13:49:05Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593124883",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15436433666,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-16",
            "head": "17313cf392da20b89a54142612f641437d96775d",
            "before": "b2aad7dda428c406191dfd8e285ab00eb7fe3b82",
            "commits": [
                {
                    "sha": "17313cf392da20b89a54142612f641437d96775d",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Pin websockets to latest version 11.0.3",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/17313cf392da20b89a54142612f641437d96775d"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-16T13:49:05Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32593124632",
        "type": "PushEvent",
        "actor": {
            "id": 33334,
            "login": "umitanuki",
            "display_login": "umitanuki",
            "gravatar_id": "",
            "url": "https://api.github.com/users/umitanuki",
            "avatar_url": "https://avatars.githubusercontent.com/u/33334?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "repository_id": 124611126,
            "push_id": 15436433520,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pyup-scheduled-update-2023-10-16",
            "head": "b2aad7dda428c406191dfd8e285ab00eb7fe3b82",
            "before": "f54b5a529591dae708cd1a52e77bef45965e012d",
            "commits": [
                {
                    "sha": "b2aad7dda428c406191dfd8e285ab00eb7fe3b82",
                    "author": {
                        "email": "github-bot@pyup.io",
                        "name": "pyup-bot"
                    },
                    "message": "Pin urllib3 to latest version 2.0.6",
                    "distinct": true,
                    "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python/commits/b2aad7dda428c406191dfd8e285ab00eb7fe3b82"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-16T13:49:04Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32574545497",
        "type": "WatchEvent",
        "actor": {
            "id": 5564192,
            "login": "rascal-3",
            "display_login": "rascal-3",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rascal-3",
            "avatar_url": "https://avatars.githubusercontent.com/u/5564192?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-15T20:55:23Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32570029528",
        "type": "WatchEvent",
        "actor": {
            "id": 20412742,
            "login": "amir-shariati",
            "display_login": "amir-shariati",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amir-shariati",
            "avatar_url": "https://avatars.githubusercontent.com/u/20412742?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-15T11:34:45Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32542396877",
        "type": "WatchEvent",
        "actor": {
            "id": 89616705,
            "login": "godkingjay",
            "display_login": "godkingjay",
            "gravatar_id": "",
            "url": "https://api.github.com/users/godkingjay",
            "avatar_url": "https://avatars.githubusercontent.com/u/89616705?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-13T12:36:10Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    },
    {
        "id": "32510628470",
        "type": "WatchEvent",
        "actor": {
            "id": 47893091,
            "login": "phanquanghung",
            "display_login": "phanquanghung",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phanquanghung",
            "avatar_url": "https://avatars.githubusercontent.com/u/47893091?"
        },
        "repo": {
            "id": 124611126,
            "name": "alpacahq/alpaca-trade-api-python",
            "url": "https://api.github.com/repos/alpacahq/alpaca-trade-api-python"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-12T11:02:20Z",
        "org": {
            "id": 30398729,
            "login": "alpacahq",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/alpacahq",
            "avatar_url": "https://avatars.githubusercontent.com/u/30398729?"
        }
    }
]