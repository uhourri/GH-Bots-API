[
    {
        "id": "32890664828",
        "type": "WatchEvent",
        "actor": {
            "id": 8181990,
            "login": "TheLastZombie",
            "display_login": "TheLastZombie",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheLastZombie",
            "avatar_url": "https://avatars.githubusercontent.com/u/8181990?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T07:13:06Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32888925775",
        "type": "WatchEvent",
        "actor": {
            "id": 17939640,
            "login": "Liyuchuan",
            "display_login": "Liyuchuan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Liyuchuan",
            "avatar_url": "https://avatars.githubusercontent.com/u/17939640?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T05:38:36Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32888776376",
        "type": "WatchEvent",
        "actor": {
            "id": 68539144,
            "login": "chenyuru-github",
            "display_login": "chenyuru-github",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenyuru-github",
            "avatar_url": "https://avatars.githubusercontent.com/u/68539144?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T05:28:10Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32881980883",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 38216014,
            "login": "Daimona",
            "display_login": "Daimona",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daimona",
            "avatar_url": "https://avatars.githubusercontent.com/u/38216014?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3907",
                "id": 1962405110,
                "node_id": "I_kwDOACkyn8509-z2",
                "number": 3907,
                "title": "Support multiline foreach in Squiz.ControlStructures.ForEachLoopDeclaration",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757470,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0NzA=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20enhancement",
                        "name": "Type: enhancement",
                        "color": "84b6eb",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 144368661,
                        "node_id": "MDU6TGFiZWwxNDQzNjg2NjE=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20awaiting%20feedback",
                        "name": "Status: awaiting feedback",
                        "color": "fef2c0",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5510233950,
                        "node_id": "LA_kwDOACkyn88AAAABSG9_Xg",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20triage",
                        "name": "Status: triage",
                        "color": "1F7FFF",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T22:50:02Z",
                "updated_at": "2023-10-26T21:10:19Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "The `Squiz.ControlStructures.ForEachLoopDeclaration` sniff fails to account for multiline foreach loops when checking the space around the `as` keyword. If you simply enable the sniff and run it on this code (with `tabWidth` = 4):\r\n\r\n```php\r\nfunction myTest() {\r\n\tforeach ( $array\r\n\t\tas $el ) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\nit says:\r\n\r\n```\r\n 202 | ERROR   | [x] Expected 1 space before \"as\"; 8 found\r\n     |         |     (Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs)\r\n```\r\n\r\nAnd similarly, for this code:\r\n\r\n```php\r\nfunction myTest() {\r\n\tforeach ( $array as\r\n\t\t$el ) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\n```\r\n 202 | ERROR   | [x] Expected 1 space after \"as\"; 0 found\r\n     |         |     (Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs)\r\n```\r\n\r\n---\r\n\r\nRegardless of where the `as` keyword is placed, there is no way to have a multiline foreach assignment with this sniff enabled. This is especially problematic if any side of `as` is particularly long (e.g., a function call, or an array destructuring expression).\r\n\r\nThe `Squiz.ControlStructures.ForLoopDeclaration` sniff provides the `ignoreNewlines` option to ignore multi-line `for` conditions. It would be nice to have something similar here.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1781898900",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3907#issuecomment-1781898900",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907",
                "id": 1781898900,
                "node_id": "IC_kwDOACkyn85qNZ6U",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T21:10:18Z",
                "updated_at": "2023-10-26T21:10:18Z",
                "author_association": "CONTRIBUTOR",
                "body": "> @Daimona If you want multi-line control structures, the `Squiz` sniff may not be your best option. I suggest checking out the `PSR12.ControlStructures.ControlStructureSpacing` sniff or the `PEAR.ControlStructures.MultiLineCondition` sniffs instead.\r\n\r\nThank you for the suggestion. Unfortunately, the only thing that I wanted to use the ForEachLoopDeclaration for is the spacing around the `as` keyword :-/ And the `Squiz.ControlStructures.ForEachLoopDeclaration` sniff is the only one I could find in the base standards which checks that.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1781898900/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:10:19Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32860846562",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 334786,
            "login": "fredden",
            "display_login": "fredden",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fredden",
            "avatar_url": "https://avatars.githubusercontent.com/u/334786?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                "id": 1961907148,
                "node_id": "PR_kwDOACkyn85dx8d_",
                "number": 3906,
                "title": "Fix bug in CSS tokenizer",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 144368661,
                        "node_id": "MDU6TGFiZWwxNDQzNjg2NjE=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20awaiting%20feedback",
                        "name": "Status: awaiting feedback",
                        "color": "fef2c0",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465777385,
                        "node_id": "LA_kwDOACkyn88AAAABRckk6Q",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Core%20Component:%20Tokenizer",
                        "name": "Core Component: Tokenizer",
                        "color": "89c6e5",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-25T17:32:30Z",
                "updated_at": "2023-10-26T08:28:29Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                    "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.diff",
                    "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.patch",
                    "merged_at": null
                },
                "body": "Yes, I know that the non-PHP tokenizers are going away in version 4.0. Meanwhile, the 3.x release line has a bug which can be fixed.\r\n\r\n## Description\r\nWhile working with `phpcbf`, I noticed that some LESS files (which are [parsed as CSS due to the specific ruleset being used](https://github.com/magento/magento-coding-standard/blob/v32/Magento2/ruleset.xml#L6)) had unexpected content injected into them.\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n\r\n\r\n```\r\n\r\n(Note the extra trailing newline at the end of the file.)\r\n\r\n`phpcs --basepath=. -s --standard=Squiz --sniffs=Squiz.WhiteSpace.SuperfluousWhitespace --extensions=less/CSS test.less`\r\n\r\n```\r\nFILE: test.less\r\n-------------------------------------------------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n-------------------------------------------------------------------------------------------------------------\r\n 7 | ERROR | [x] Additional whitespace found at end of file\r\n   |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndFile)\r\n-------------------------------------------------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\nTime: 45ms; Memory: 10MB\r\n```\r\n\r\nAfter running `phpcbf` (with the same flags as above), I get a file with this content:\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n?>^PHPCS_CSS_T_CLOSE_TAG^^PHPCS_CSS_T_CLOSE_TAG^//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n```\r\n\r\n(Note the extra newline at the end of the file has been fixed.)\r\n\r\n### Suggested changelog entry\r\nFixed bug in CSS tokenizer\r\n\r\n## Types of changes\r\n- Bug fix _(non-breaking change which fixes an issue)_\r\n\r\n## PR checklist\r\n- [x] I have checked there is no other PR open for the same change.\r\n- [x] I have read the [Contribution Guidelines](.github/CONTRIBUTING.md).\r\n- [x] I grant the project the right to include and distribute the code under the BSD-3-Clause license (and I have the right to grant these rights).\r\n- [x] I have added tests to cover my changes.\r\n- [x] I have verified that the code complies with the projects coding standards.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780650311",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906#issuecomment-1780650311",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "id": 1780650311,
                "node_id": "IC_kwDOACkyn85qIpFH",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T08:28:28Z",
                "updated_at": "2023-10-26T08:28:28Z",
                "author_association": "CONTRIBUTOR",
                "body": "> As CSS doesn't support the `//` comment syntax, I'm now inclined to close this PR as accepting it would expand the scope of the CSS Tokenizer to a syntax which is not even valid in CSS.\r\n\r\nI don't think it's valid for the CSS tokenizer to inject a rogue `?>` token where it doesn't exist in the source file. The PHP tokenizer does not do this.\r\n\r\n<details><summary>Example of PHP tokenizer handling a parse error without adding an extra <code>?&gt;</code> token</summary>\r\n\r\n`cat test.php`\r\n```php\r\n<?php\r\n\r\n$var = 'white-space at end of this line';     \r\n\r\n/** This is a parse error: unterminated comment.\r\n```\r\n\r\n`phpcs --standard=PHPCSDebug test.php`\r\n```\r\nPtr | Ln | Col  | Cond | ( #) | Token Type                 | [len]: Content\r\n-------------------------------------------------------------------------\r\n  0 | L1 | C  1 | CC 0 | ( 0) | T_OPEN_TAG                 | [  5]: <?php\r\n\r\n  1 | L2 | C  1 | CC 0 | ( 0) | T_WHITESPACE               | [  0]\r\n\r\n  2 | L3 | C  1 | CC 0 | ( 0) | T_VARIABLE                 | [  4]: $var\r\n  3 | L3 | C  5 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n  4 | L3 | C  6 | CC 0 | ( 0) | T_EQUAL                    | [  1]: =\r\n  5 | L3 | C  7 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n  6 | L3 | C  8 | CC 0 | ( 0) | T_CONSTANT_ENCAPSED_STRING | [ 33]: 'white-space at end of this line'\r\n  7 | L3 | C 41 | CC 0 | ( 0) | T_SEMICOLON                | [  1]: ;\r\n  8 | L3 | C 42 | CC 0 | ( 0) | T_WHITESPACE               | [  5]: \u2e31\u2e31\u2e31\u2e31\u2e31\r\n\r\n  9 | L4 | C  1 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 10 | L5 | C  1 | CC 0 | ( 0) | T_DOC_COMMENT_OPEN_TAG     | [  3]: /**\r\n 11 | L5 | C  4 | CC 0 | ( 0) | T_DOC_COMMENT_WHITESPACE   | [  1]: \u2e31\r\n 12 | L5 | C  5 | CC 0 | ( 0) | T_DOC_COMMENT_STRING       | [ 44]: This is a parse error: unterminated comment.\r\n 13 | L5 | C 49 | CC 0 | ( 0) | T_DOC_COMMENT_WHITESPACE   | [  0]:\r\n\r\n 14 | L6 | C  1 | CC 0 | ( 0) | T_DOC_COMMENT_CLOSE_TAG    | [  0]:\r\n```\r\n\r\nNote there are no rogue `?>` tokens in this output.\r\n\r\n<hr></details>\r\n\r\nI haven't seen any cases of `phpcs` causing issues with this (invalid CSS) syntax, but I have not gone looking for any cases either. The browsers that I have installed here all cope gracefully with a \"selector\" which has `//` in it, and parse the rest of the CSS in the file/element as expected. I don't know to what extent people are using PHP_CodeSniffer on CSS files.\r\n\r\nIn my experience, this bug is mostly masked. It shows up when PHP_CodeSniffer tries to re-write the file as it will output all the tokens into the file after `phpcbf` has done its magic. With this extra / rogue token\\*, the resulting file is different in more ways than just what the selected sniffs have intentionally modified.\r\n\r\n\\* I have not looked into why `^PHPCS_CSS_T_CLOSE_TAG^` gets added twice during auto-fixing, as eliminating the rogue `?>` makes that symptom go away.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780650311/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T08:28:29Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32854346555",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                "id": 1961907148,
                "node_id": "PR_kwDOACkyn85dx8d_",
                "number": 3906,
                "title": "Fix bug in CSS tokenizer",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 144368661,
                        "node_id": "MDU6TGFiZWwxNDQzNjg2NjE=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20awaiting%20feedback",
                        "name": "Status: awaiting feedback",
                        "color": "fef2c0",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465777385,
                        "node_id": "LA_kwDOACkyn88AAAABRckk6Q",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Core%20Component:%20Tokenizer",
                        "name": "Core Component: Tokenizer",
                        "color": "89c6e5",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-25T17:32:30Z",
                "updated_at": "2023-10-26T02:29:04Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                    "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.diff",
                    "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.patch",
                    "merged_at": null
                },
                "body": "Yes, I know that the non-PHP tokenizers are going away in version 4.0. Meanwhile, the 3.x release line has a bug which can be fixed.\r\n\r\n## Description\r\nWhile working with `phpcbf`, I noticed that some LESS files (which are [parsed as CSS due to the specific ruleset being used](https://github.com/magento/magento-coding-standard/blob/v32/Magento2/ruleset.xml#L6)) had unexpected content injected into them.\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n\r\n\r\n```\r\n\r\n(Note the extra trailing newline at the end of the file.)\r\n\r\n`phpcs --basepath=. -s --standard=Squiz --sniffs=Squiz.WhiteSpace.SuperfluousWhitespace --extensions=less/CSS test.less`\r\n\r\n```\r\nFILE: test.less\r\n-------------------------------------------------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n-------------------------------------------------------------------------------------------------------------\r\n 7 | ERROR | [x] Additional whitespace found at end of file\r\n   |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndFile)\r\n-------------------------------------------------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\nTime: 45ms; Memory: 10MB\r\n```\r\n\r\nAfter running `phpcbf` (with the same flags as above), I get a file with this content:\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n?>^PHPCS_CSS_T_CLOSE_TAG^^PHPCS_CSS_T_CLOSE_TAG^//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n```\r\n\r\n(Note the extra newline at the end of the file has been fixed.)\r\n\r\n### Suggested changelog entry\r\nFixed bug in CSS tokenizer\r\n\r\n## Types of changes\r\n- Bug fix _(non-breaking change which fixes an issue)_\r\n\r\n## PR checklist\r\n- [x] I have checked there is no other PR open for the same change.\r\n- [x] I have read the [Contribution Guidelines](.github/CONTRIBUTING.md).\r\n- [x] I grant the project the right to include and distribute the code under the BSD-3-Clause license (and I have the right to grant these rights).\r\n- [x] I have added tests to cover my changes.\r\n- [x] I have verified that the code complies with the projects coding standards.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780318526",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906#issuecomment-1780318526",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "id": 1780318526,
                "node_id": "IC_kwDOACkyn85qHYE-",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T02:29:04Z",
                "updated_at": "2023-10-26T02:29:04Z",
                "author_association": "CONTRIBUTOR",
                "body": "> > if `//` is even a valid comment format in CSS\r\n> \r\n> No, I don't think it is; I'll check... Some basic local testing with the three browsers I have installed currently all show that `//` is not treated as a comment. https://lesscss.org/#comments says that LESS supports that comment syntax; the file I was working with when the problem came to light was a LESS file. https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Organizing#comment_your_css shows only `/* ... */` style comments.\r\n\r\n@fredden Thanks for checking that.\r\n\r\nIIRC the CSS tokenizer never had any support for LESS. If it worked, that should be considered coincidental, not by design.\r\n\r\nAs CSS doesn't support the `//` comment syntax, I'm now inclined to close this PR as accepting it would expand the scope of the CSS Tokenizer to a syntax which is not even valid in CSS.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780318526/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T02:29:04Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32854238699",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3907",
                "id": 1962405110,
                "node_id": "I_kwDOACkyn8509-z2",
                "number": 3907,
                "title": "Support multiline foreach in Squiz.ControlStructures.ForEachLoopDeclaration",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T22:50:02Z",
                "updated_at": "2023-10-26T02:21:03Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "The `Squiz.ControlStructures.ForEachLoopDeclaration` sniff fails to account for multiline foreach loops when checking the space around the `as` keyword. If you simply enable the sniff and run it on this code (with `tabWidth` = 4):\r\n\r\n```php\r\nfunction myTest() {\r\n\tforeach ( $array\r\n\t\tas $el ) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\nit says:\r\n\r\n```\r\n 202 | ERROR   | [x] Expected 1 space before \"as\"; 8 found\r\n     |         |     (Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs)\r\n```\r\n\r\nAnd similarly, for this code:\r\n\r\n```php\r\nfunction myTest() {\r\n\tforeach ( $array as\r\n\t\t$el ) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\n```\r\n 202 | ERROR   | [x] Expected 1 space after \"as\"; 0 found\r\n     |         |     (Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs)\r\n```\r\n\r\n---\r\n\r\nRegardless of where the `as` keyword is placed, there is no way to have a multiline foreach assignment with this sniff enabled. This is especially problematic if any side of `as` is particularly long (e.g., a function call, or an array destructuring expression).\r\n\r\nThe `Squiz.ControlStructures.ForLoopDeclaration` sniff provides the `ignoreNewlines` option to ignore multi-line `for` conditions. It would be nice to have something similar here.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780312771",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3907#issuecomment-1780312771",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907",
                "id": 1780312771,
                "node_id": "IC_kwDOACkyn85qHWrD",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T02:21:02Z",
                "updated_at": "2023-10-26T02:21:02Z",
                "author_association": "CONTRIBUTOR",
                "body": "@Daimona If you want multi-line control structures, the `Squiz` sniff may not be your best option. I suggest checking out the `PSR12.ControlStructures.ControlStructureSpacing` sniff or the `PEAR.ControlStructures.MultiLineCondition` instead.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780312771/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T02:21:03Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32851372478",
        "type": "IssuesEvent",
        "actor": {
            "id": 38216014,
            "login": "Daimona",
            "display_login": "Daimona",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daimona",
            "avatar_url": "https://avatars.githubusercontent.com/u/38216014?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3907",
                "id": 1962405110,
                "node_id": "I_kwDOACkyn8509-z2",
                "number": 3907,
                "title": "Support multiline foreach in Squiz.ControlStructures.ForEachLoopDeclaration",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T22:50:02Z",
                "updated_at": "2023-10-25T22:50:02Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "The `Squiz.ControlStructures.ForEachLoopDeclaration` sniff fails to account for multiline foreach loops when checking the space around the `as` keyword. If you simply enable the sniff and run it on this code (with `tabWidth` = 4):\r\n\r\n```php\r\nfunction myTest() {\r\n\tforeach ( $array\r\n\t\tas $el ) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\nit says:\r\n\r\n```\r\n 202 | ERROR   | [x] Expected 1 space before \"as\"; 8 found\r\n     |         |     (Squiz.ControlStructures.ForEachLoopDeclaration.SpacingBeforeAs)\r\n```\r\n\r\nAnd similarly, for this code:\r\n\r\n```php\r\nfunction myTest() {\r\n\tforeach ( $array as\r\n\t\t$el ) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\n```\r\n 202 | ERROR   | [x] Expected 1 space after \"as\"; 0 found\r\n     |         |     (Squiz.ControlStructures.ForEachLoopDeclaration.SpacingAfterAs)\r\n```\r\n\r\n---\r\n\r\nRegardless of where the `as` keyword is placed, there is no way to have a multiline foreach assignment with this sniff enabled. This is especially problematic if any side of `as` is particularly long (e.g., a function call, or an array destructuring expression).\r\n\r\nThe `Squiz.ControlStructures.ForLoopDeclaration` sniff provides the `ignoreNewlines` option to ignore multi-line `for` conditions. It would be nice to have something similar here.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3907/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T22:50:04Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32850453086",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 334786,
            "login": "fredden",
            "display_login": "fredden",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fredden",
            "avatar_url": "https://avatars.githubusercontent.com/u/334786?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                "id": 1961907148,
                "node_id": "PR_kwDOACkyn85dx8d_",
                "number": 3906,
                "title": "Fix bug in CSS tokenizer",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 144368661,
                        "node_id": "MDU6TGFiZWwxNDQzNjg2NjE=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20awaiting%20feedback",
                        "name": "Status: awaiting feedback",
                        "color": "fef2c0",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465777385,
                        "node_id": "LA_kwDOACkyn88AAAABRckk6Q",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Core%20Component:%20Tokenizer",
                        "name": "Core Component: Tokenizer",
                        "color": "89c6e5",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-25T17:32:30Z",
                "updated_at": "2023-10-25T21:59:37Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                    "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.diff",
                    "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.patch",
                    "merged_at": null
                },
                "body": "Yes, I know that the non-PHP tokenizers are going away in version 4.0. Meanwhile, the 3.x release line has a bug which can be fixed.\r\n\r\n## Description\r\nWhile working with `phpcbf`, I noticed that some LESS files (which are [parsed as CSS due to the specific ruleset being used](https://github.com/magento/magento-coding-standard/blob/v32/Magento2/ruleset.xml#L6)) had unexpected content injected into them.\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n\r\n\r\n```\r\n\r\n(Note the extra trailing newline at the end of the file.)\r\n\r\n`phpcs --basepath=. -s --standard=Squiz --sniffs=Squiz.WhiteSpace.SuperfluousWhitespace --extensions=less/CSS test.less`\r\n\r\n```\r\nFILE: test.less\r\n-------------------------------------------------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n-------------------------------------------------------------------------------------------------------------\r\n 7 | ERROR | [x] Additional whitespace found at end of file\r\n   |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndFile)\r\n-------------------------------------------------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\nTime: 45ms; Memory: 10MB\r\n```\r\n\r\nAfter running `phpcbf` (with the same flags as above), I get a file with this content:\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n?>^PHPCS_CSS_T_CLOSE_TAG^^PHPCS_CSS_T_CLOSE_TAG^//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n```\r\n\r\n(Note the extra newline at the end of the file has been fixed.)\r\n\r\n### Suggested changelog entry\r\nFixed bug in CSS tokenizer\r\n\r\n## Types of changes\r\n- Bug fix _(non-breaking change which fixes an issue)_\r\n\r\n## PR checklist\r\n- [x] I have checked there is no other PR open for the same change.\r\n- [x] I have read the [Contribution Guidelines](.github/CONTRIBUTING.md).\r\n- [x] I grant the project the right to include and distribute the code under the BSD-3-Clause license (and I have the right to grant these rights).\r\n- [x] I have added tests to cover my changes.\r\n- [x] I have verified that the code complies with the projects coding standards.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780115316",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906#issuecomment-1780115316",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "id": 1780115316,
                "node_id": "IC_kwDOACkyn85qGmd0",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T21:59:37Z",
                "updated_at": "2023-10-25T21:59:37Z",
                "author_association": "CONTRIBUTOR",
                "body": "> the comment line tokenization is completely borked\r\n\r\nYes, I did notice this. I don't yet understand why there's any special-case handling for comments in the CSS tokenizer. I decided to not spend additional brain-power working this out though, as the plan is to delete non-PHP tokenizers for version 4.0. This pull request doesn't make it any worse; I intentionally took a minimal-change approach.\r\n\r\n> if `//` is even a valid comment format in CSS\r\n\r\nNo, I don't think it is; I'll check... Some basic local testing with the three browsers I have installed currently all show that `//` is not treated as a comment. https://lesscss.org/#comments says that LESS supports that comment syntax; the file I was working with when the problem came to light was a LESS file. https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Organizing#comment_your_css shows only `/* ... */` style comments.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1780115316/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T21:59:37Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32848563967",
        "type": "WatchEvent",
        "actor": {
            "id": 61601117,
            "login": "ilnur17021992",
            "display_login": "ilnur17021992",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilnur17021992",
            "avatar_url": "https://avatars.githubusercontent.com/u/61601117?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-25T20:27:29Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32845553850",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                "id": 1961907148,
                "node_id": "PR_kwDOACkyn85dx8d_",
                "number": 3906,
                "title": "Fix bug in CSS tokenizer",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 144368661,
                        "node_id": "MDU6TGFiZWwxNDQzNjg2NjE=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20awaiting%20feedback",
                        "name": "Status: awaiting feedback",
                        "color": "fef2c0",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465777385,
                        "node_id": "LA_kwDOACkyn88AAAABRckk6Q",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Core%20Component:%20Tokenizer",
                        "name": "Core Component: Tokenizer",
                        "color": "89c6e5",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T17:32:30Z",
                "updated_at": "2023-10-25T18:22:18Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                    "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.diff",
                    "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.patch",
                    "merged_at": null
                },
                "body": "Yes, I know that the non-PHP tokenizers are going away in version 4.0. Meanwhile, the 3.x release line has a bug which can be fixed.\r\n\r\n## Description\r\nWhile working with `phpcbf`, I noticed that some LESS files (which are [parsed as CSS due to the specific ruleset being used](https://github.com/magento/magento-coding-standard/blob/v32/Magento2/ruleset.xml#L6)) had unexpected content injected into them.\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n\r\n\r\n```\r\n\r\n(Note the extra trailing newline at the end of the file.)\r\n\r\n`phpcs --basepath=. -s --standard=Squiz --sniffs=Squiz.WhiteSpace.SuperfluousWhitespace --extensions=less/CSS test.less`\r\n\r\n```\r\nFILE: test.less\r\n-------------------------------------------------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n-------------------------------------------------------------------------------------------------------------\r\n 7 | ERROR | [x] Additional whitespace found at end of file\r\n   |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndFile)\r\n-------------------------------------------------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\nTime: 45ms; Memory: 10MB\r\n```\r\n\r\nAfter running `phpcbf` (with the same flags as above), I get a file with this content:\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n?>^PHPCS_CSS_T_CLOSE_TAG^^PHPCS_CSS_T_CLOSE_TAG^//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n```\r\n\r\n(Note the extra newline at the end of the file has been fixed.)\r\n\r\n### Suggested changelog entry\r\nFixed bug in CSS tokenizer\r\n\r\n## Types of changes\r\n- Bug fix _(non-breaking change which fixes an issue)_\r\n\r\n## PR checklist\r\n- [x] I have checked there is no other PR open for the same change.\r\n- [x] I have read the [Contribution Guidelines](.github/CONTRIBUTING.md).\r\n- [x] I grant the project the right to include and distribute the code under the BSD-3-Clause license (and I have the right to grant these rights).\r\n- [x] I have added tests to cover my changes.\r\n- [x] I have verified that the code complies with the projects coding standards.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779818489",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906#issuecomment-1779818489",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "id": 1779818489,
                "node_id": "IC_kwDOACkyn85qFd_5",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T18:22:17Z",
                "updated_at": "2023-10-25T18:22:17Z",
                "author_association": "CONTRIBUTOR",
                "body": "@fredden I'm also trying to remember if `//` is even a valid comment format in CSS and IIRC it is not, so the fact that a file which would cause a \"parse error\" in CSS would lead to tokenization problems is not really surprising.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779818489/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T18:22:18Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32845271961",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                "id": 1961907148,
                "node_id": "PR_kwDOACkyn85dx8d_",
                "number": 3906,
                "title": "Fix bug in CSS tokenizer",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T17:32:30Z",
                "updated_at": "2023-10-25T18:11:12Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                    "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.diff",
                    "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.patch",
                    "merged_at": null
                },
                "body": "Yes, I know that the non-PHP tokenizers are going away in version 4.0. Meanwhile, the 3.x release line has a bug which can be fixed.\r\n\r\n## Description\r\nWhile working with `phpcbf`, I noticed that some LESS files (which are [parsed as CSS due to the specific ruleset being used](https://github.com/magento/magento-coding-standard/blob/v32/Magento2/ruleset.xml#L6)) had unexpected content injected into them.\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n\r\n\r\n```\r\n\r\n(Note the extra trailing newline at the end of the file.)\r\n\r\n`phpcs --basepath=. -s --standard=Squiz --sniffs=Squiz.WhiteSpace.SuperfluousWhitespace --extensions=less/CSS test.less`\r\n\r\n```\r\nFILE: test.less\r\n-------------------------------------------------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n-------------------------------------------------------------------------------------------------------------\r\n 7 | ERROR | [x] Additional whitespace found at end of file\r\n   |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndFile)\r\n-------------------------------------------------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\nTime: 45ms; Memory: 10MB\r\n```\r\n\r\nAfter running `phpcbf` (with the same flags as above), I get a file with this content:\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n?>^PHPCS_CSS_T_CLOSE_TAG^^PHPCS_CSS_T_CLOSE_TAG^//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n```\r\n\r\n(Note the extra newline at the end of the file has been fixed.)\r\n\r\n### Suggested changelog entry\r\nFixed bug in CSS tokenizer\r\n\r\n## Types of changes\r\n- Bug fix _(non-breaking change which fixes an issue)_\r\n\r\n## PR checklist\r\n- [x] I have checked there is no other PR open for the same change.\r\n- [x] I have read the [Contribution Guidelines](.github/CONTRIBUTING.md).\r\n- [x] I grant the project the right to include and distribute the code under the BSD-3-Clause license (and I have the right to grant these rights).\r\n- [x] I have added tests to cover my changes.\r\n- [x] I have verified that the code complies with the projects coding standards.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779801353",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906#issuecomment-1779801353",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "id": 1779801353,
                "node_id": "IC_kwDOACkyn85qFZ0J",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T18:11:11Z",
                "updated_at": "2023-10-25T18:11:11Z",
                "author_association": "CONTRIBUTOR",
                "body": "@fredden Thanks for this PR. While I'm not keen on putting any more effort into the CSS tokenizers, the outcome of this bug is pretty undesirable, so I'm willing to accept this fix.\r\n\r\n\u2714\ufe0f I have confirmed and been able to reproduce the issue.\r\n\u2714\ufe0f I have confirmed that the added test demonstrates the issue and can safeguard the fix without needing to add a dedicated test file for this issue for the CSS tokenizer.\r\n\u2714\ufe0f I have confirmed that the issue is gone with the proposed fix.\r\n\r\nHowever, looking at the token output, the problem is actually bigger and not _really_ fixed.\r\n\r\nOriginally, the code sample in the description above was tokenized like so:\r\n```\r\nPtr | Ln | Col  | Cond | ( #) | Token Type                 | [len]: Content\r\n-------------------------------------------------------------------------\r\n  0 | L1 | C  1 | CC 0 | ( 0) | T_OPEN_TAG                 | [  0]:\r\n  1 | L1 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n  2 | L1 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n  3 | L1 | C  4 | CC 0 | ( 0) | T_DOC_COMMENT_OPEN_TAG     | [  3]: /**\r\n  4 | L1 | C  7 | CC 0 | ( 0) | T_DOC_COMMENT_WHITESPACE   | [  0]:\r\n\r\n  5 | L2 | C  1 | CC 0 | ( 0) | T_DOC_COMMENT_STRING       | [  2]: ?>\r\n  6 | L2 | C  3 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n  7 | L2 | C  5 | CC 0 | ( 0) | T_WHITESPACE               | [  2]: \u2e31\u2e31\r\n  8 | L2 | C  7 | CC 0 | ( 0) | T_MULTIPLY                 | [  1]: *\r\n  9 | L2 | C  8 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 10 | L2 | C  9 | CC 0 | ( 0) | T_STRING                   | [  4]: this\r\n 11 | L2 | C 13 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 12 | L2 | C 14 | CC 0 | ( 0) | T_STRING                   | [  2]: is\r\n 13 | L2 | C 16 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 14 | L2 | C 17 | CC 0 | ( 0) | T_STRING                   | [  1]: a\r\n 15 | L2 | C 18 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 16 | L2 | C 19 | CC 0 | ( 0) | T_STRING                   | [  7]: comment\r\n 17 | L2 | C 26 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 18 | L3 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n 19 | L3 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  2]: \u2e31\u2e31\r\n 20 | L3 | C  5 | CC 0 | ( 0) | T_MULTIPLY                 | [  1]: *\r\n 21 | L3 | C  6 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 22 | L3 | C  7 | CC 0 | ( 0) | T_STRING                   | [  4]: this\r\n 23 | L3 | C 11 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 24 | L3 | C 12 | CC 0 | ( 0) | T_STRING                   | [  2]: is\r\n 25 | L3 | C 14 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 26 | L3 | C 15 | CC 0 | ( 0) | T_STRING                   | [  4]: also\r\n 27 | L3 | C 19 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 28 | L3 | C 20 | CC 0 | ( 0) | T_STRING                   | [  1]: a\r\n 29 | L3 | C 21 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 30 | L3 | C 22 | CC 0 | ( 0) | T_STRING                   | [  7]: comment\r\n 31 | L3 | C 29 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 32 | L4 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n 33 | L4 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  2]: \u2e31\u2e31\r\n 34 | L4 | C  5 | CC 0 | ( 0) | T_MULTIPLY                 | [  1]: *\r\n 35 | L4 | C  6 | CC 0 | ( 0) | T_DIVIDE                   | [  1]: /\r\n 36 | L4 | C  7 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 37 | L5 | C  1 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 38 | L6 | C  1 | CC 0 | ( 0) | T_CLOSE_TAG                | [  0]:\r\n```\r\nTake note of token 5, the inserted `?>`, which looks to be the cause of the problem for the Squiz sniff.\r\n\r\nWith this fix applied, the code sample is tokenized as\r\n```\r\nPtr | Ln | Col  | Cond | ( #) | Token Type                 | [len]: Content\r\n-------------------------------------------------------------------------\r\n  0 | L1 | C  1 | CC 0 | ( 0) | T_OPEN_TAG                 | [  0]:\r\n  1 | L1 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n  2 | L1 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n  3 | L1 | C  4 | CC 0 | ( 0) | T_DOC_COMMENT_OPEN_TAG     | [  3]: /**\r\n  4 | L1 | C  7 | CC 0 | ( 0) | T_DOC_COMMENT_WHITESPACE   | [  0]:\r\n\r\n  5 | L2 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n  6 | L2 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  2]: \u2e31\u2e31\r\n  7 | L2 | C  5 | CC 0 | ( 0) | T_MULTIPLY                 | [  1]: *\r\n  8 | L2 | C  6 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n  9 | L2 | C  7 | CC 0 | ( 0) | T_STRING                   | [  4]: this\r\n 10 | L2 | C 11 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 11 | L2 | C 12 | CC 0 | ( 0) | T_STRING                   | [  2]: is\r\n 12 | L2 | C 14 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 13 | L2 | C 15 | CC 0 | ( 0) | T_STRING                   | [  1]: a\r\n 14 | L2 | C 16 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 15 | L2 | C 17 | CC 0 | ( 0) | T_STRING                   | [  7]: comment\r\n 16 | L2 | C 24 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 17 | L3 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n 18 | L3 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  2]: \u2e31\u2e31\r\n 19 | L3 | C  5 | CC 0 | ( 0) | T_MULTIPLY                 | [  1]: *\r\n 20 | L3 | C  6 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 21 | L3 | C  7 | CC 0 | ( 0) | T_STRING                   | [  4]: this\r\n 22 | L3 | C 11 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 23 | L3 | C 12 | CC 0 | ( 0) | T_STRING                   | [  2]: is\r\n 24 | L3 | C 14 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 25 | L3 | C 15 | CC 0 | ( 0) | T_STRING                   | [  4]: also\r\n 26 | L3 | C 19 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 27 | L3 | C 20 | CC 0 | ( 0) | T_STRING                   | [  1]: a\r\n 28 | L3 | C 21 | CC 0 | ( 0) | T_WHITESPACE               | [  1]: \u2e31\r\n 29 | L3 | C 22 | CC 0 | ( 0) | T_STRING                   | [  7]: comment\r\n 30 | L3 | C 29 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 31 | L4 | C  1 | CC 0 | ( 0) | T_STRING                   | [  2]: //\r\n 32 | L4 | C  3 | CC 0 | ( 0) | T_WHITESPACE               | [  2]: \u2e31\u2e31\r\n 33 | L4 | C  5 | CC 0 | ( 0) | T_MULTIPLY                 | [  1]: *\r\n 34 | L4 | C  6 | CC 0 | ( 0) | T_DIVIDE                   | [  1]: /\r\n 35 | L4 | C  7 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 36 | L5 | C  1 | CC 0 | ( 0) | T_WHITESPACE               | [  0]:\r\n\r\n 37 | L6 | C  1 | CC 0 | ( 0) | T_CLOSE_TAG                | [  0]:\r\n```\r\n\r\n\r\nWhat I mean to point out by posting these tokenizations is that the comment line tokenization is completely borked for this code sample, what with all lines after the first line getting confused.\r\n\r\n@fredden Did you notice this ? What is your opinion on this ?\r\n\r\nAs I said above, I'm okay with just accepting this fix as-is and not spending more time on this as CSS tokenizer support will be dropped, but I did want to document this finding.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779801353/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T18:11:12Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32844320930",
        "type": "PullRequestEvent",
        "actor": {
            "id": 334786,
            "login": "fredden",
            "display_login": "fredden",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fredden",
            "avatar_url": "https://avatars.githubusercontent.com/u/334786?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "opened",
            "number": 3906,
            "pull_request": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906",
                "id": 1573373823,
                "node_id": "PR_kwDOACkyn85dx8d_",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906",
                "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.diff",
                "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906.patch",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906",
                "number": 3906,
                "state": "open",
                "locked": false,
                "title": "Fix bug in CSS tokenizer",
                "user": {
                    "login": "fredden",
                    "id": 334786,
                    "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/fredden",
                    "html_url": "https://github.com/fredden",
                    "followers_url": "https://api.github.com/users/fredden/followers",
                    "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                    "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                    "organizations_url": "https://api.github.com/users/fredden/orgs",
                    "repos_url": "https://api.github.com/users/fredden/repos",
                    "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/fredden/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Yes, I know that the non-PHP tokenizers are going away in version 4.0. Meanwhile, the 3.x release line has a bug which can be fixed.\r\n\r\n## Description\r\nWhile working with `phpcbf`, I noticed that some LESS files (which are [parsed as CSS due to the specific ruleset being used](https://github.com/magento/magento-coding-standard/blob/v32/Magento2/ruleset.xml#L6)) had unexpected content injected into them.\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n\r\n\r\n```\r\n\r\n(Note the extra trailing newline at the end of the file.)\r\n\r\n`phpcs --basepath=. -s --standard=Squiz --sniffs=Squiz.WhiteSpace.SuperfluousWhitespace --extensions=less/CSS test.less`\r\n\r\n```\r\nFILE: test.less\r\n-------------------------------------------------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n-------------------------------------------------------------------------------------------------------------\r\n 7 | ERROR | [x] Additional whitespace found at end of file\r\n   |       |     (Squiz.WhiteSpace.SuperfluousWhitespace.EndFile)\r\n-------------------------------------------------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\nTime: 45ms; Memory: 10MB\r\n```\r\n\r\nAfter running `phpcbf` (with the same flags as above), I get a file with this content:\r\n\r\n```css\r\n/* file: test.less */\r\n// /**\r\n?>^PHPCS_CSS_T_CLOSE_TAG^^PHPCS_CSS_T_CLOSE_TAG^//  * this is a comment\r\n//  * this is also a comment\r\n//  */\r\n```\r\n\r\n(Note the extra newline at the end of the file has been fixed.)\r\n\r\n### Suggested changelog entry\r\nFixed bug in CSS tokenizer\r\n\r\n## Types of changes\r\n- Bug fix _(non-breaking change which fixes an issue)_\r\n\r\n## PR checklist\r\n- [x] I have checked there is no other PR open for the same change.\r\n- [x] I have read the [Contribution Guidelines](.github/CONTRIBUTING.md).\r\n- [x] I grant the project the right to include and distribute the code under the BSD-3-Clause license (and I have the right to grant these rights).\r\n- [x] I have added tests to cover my changes.\r\n- [x] I have verified that the code complies with the projects coding standards.\r\n",
                "created_at": "2023-10-25T17:32:30Z",
                "updated_at": "2023-10-25T17:32:30Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906/commits",
                "review_comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906/comments",
                "review_comment_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments",
                "statuses_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/3a1695c66752f2118e255781f9d486a409a02fe7",
                "head": {
                    "label": "fredden:css/close-tag-noise",
                    "ref": "css/close-tag-noise",
                    "sha": "3a1695c66752f2118e255781f9d486a409a02fe7",
                    "user": {
                        "login": "fredden",
                        "id": 334786,
                        "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/fredden",
                        "html_url": "https://github.com/fredden",
                        "followers_url": "https://api.github.com/users/fredden/followers",
                        "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                        "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                        "organizations_url": "https://api.github.com/users/fredden/orgs",
                        "repos_url": "https://api.github.com/users/fredden/repos",
                        "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/fredden/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 513569925,
                        "node_id": "R_kgDOHpx0hQ",
                        "name": "PHP_CodeSniffer",
                        "full_name": "fredden/PHP_CodeSniffer",
                        "private": false,
                        "owner": {
                            "login": "fredden",
                            "id": 334786,
                            "node_id": "MDQ6VXNlcjMzNDc4Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/334786?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/fredden",
                            "html_url": "https://github.com/fredden",
                            "followers_url": "https://api.github.com/users/fredden/followers",
                            "following_url": "https://api.github.com/users/fredden/following{/other_user}",
                            "gists_url": "https://api.github.com/users/fredden/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/fredden/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/fredden/subscriptions",
                            "organizations_url": "https://api.github.com/users/fredden/orgs",
                            "repos_url": "https://api.github.com/users/fredden/repos",
                            "events_url": "https://api.github.com/users/fredden/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/fredden/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/fredden/PHP_CodeSniffer",
                        "description": "PHP_CodeSniffer tokenizes PHP files and detects violations of a defined set of coding standards.",
                        "fork": true,
                        "url": "https://api.github.com/repos/fredden/PHP_CodeSniffer",
                        "forks_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/forks",
                        "keys_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/teams",
                        "hooks_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/hooks",
                        "issue_events_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/events",
                        "assignees_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/tags",
                        "blobs_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/languages",
                        "stargazers_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/stargazers",
                        "contributors_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/contributors",
                        "subscribers_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/subscribers",
                        "subscription_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/subscription",
                        "commits_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/merges",
                        "archive_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/downloads",
                        "issues_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/fredden/PHP_CodeSniffer/deployments",
                        "created_at": "2022-07-13T15:13:43Z",
                        "updated_at": "2023-02-03T10:40:17Z",
                        "pushed_at": "2023-10-25T16:48:48Z",
                        "git_url": "git://github.com/fredden/PHP_CodeSniffer.git",
                        "ssh_url": "git@github.com:fredden/PHP_CodeSniffer.git",
                        "clone_url": "https://github.com/fredden/PHP_CodeSniffer.git",
                        "svn_url": "https://github.com/fredden/PHP_CodeSniffer",
                        "homepage": "",
                        "size": 23723,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "PHP",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "squizlabs:master",
                    "ref": "master",
                    "sha": "8dfb63220e1fd5cfcce07f20bc24f75a5269597c",
                    "user": {
                        "login": "squizlabs",
                        "id": 997547,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5NzU0Nw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/997547?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/squizlabs",
                        "html_url": "https://github.com/squizlabs",
                        "followers_url": "https://api.github.com/users/squizlabs/followers",
                        "following_url": "https://api.github.com/users/squizlabs/following{/other_user}",
                        "gists_url": "https://api.github.com/users/squizlabs/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/squizlabs/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/squizlabs/subscriptions",
                        "organizations_url": "https://api.github.com/users/squizlabs/orgs",
                        "repos_url": "https://api.github.com/users/squizlabs/repos",
                        "events_url": "https://api.github.com/users/squizlabs/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/squizlabs/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 2699935,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyNjk5OTM1",
                        "name": "PHP_CodeSniffer",
                        "full_name": "squizlabs/PHP_CodeSniffer",
                        "private": false,
                        "owner": {
                            "login": "squizlabs",
                            "id": 997547,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5NzU0Nw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/997547?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/squizlabs",
                            "html_url": "https://github.com/squizlabs",
                            "followers_url": "https://api.github.com/users/squizlabs/followers",
                            "following_url": "https://api.github.com/users/squizlabs/following{/other_user}",
                            "gists_url": "https://api.github.com/users/squizlabs/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/squizlabs/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/squizlabs/subscriptions",
                            "organizations_url": "https://api.github.com/users/squizlabs/orgs",
                            "repos_url": "https://api.github.com/users/squizlabs/repos",
                            "events_url": "https://api.github.com/users/squizlabs/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/squizlabs/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/squizlabs/PHP_CodeSniffer",
                        "description": "PHP_CodeSniffer tokenizes PHP files and detects violations of a defined set of coding standards.",
                        "fork": false,
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                        "forks_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/forks",
                        "keys_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/teams",
                        "hooks_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/hooks",
                        "issue_events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/events",
                        "assignees_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tags",
                        "blobs_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/languages",
                        "stargazers_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/stargazers",
                        "contributors_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/contributors",
                        "subscribers_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/subscribers",
                        "subscription_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/subscription",
                        "commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/merges",
                        "archive_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/downloads",
                        "issues_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/deployments",
                        "created_at": "2011-11-03T04:06:24Z",
                        "updated_at": "2023-10-25T14:37:37Z",
                        "pushed_at": "2023-10-25T17:32:30Z",
                        "git_url": "git://github.com/squizlabs/PHP_CodeSniffer.git",
                        "ssh_url": "git@github.com:squizlabs/PHP_CodeSniffer.git",
                        "clone_url": "https://github.com/squizlabs/PHP_CodeSniffer.git",
                        "svn_url": "https://github.com/squizlabs/PHP_CodeSniffer",
                        "homepage": "",
                        "size": 203086,
                        "stargazers_count": 10450,
                        "watchers_count": 10450,
                        "language": "PHP",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 1559,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 386,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "automation",
                            "cli",
                            "coding-standards",
                            "php",
                            "qa",
                            "static-analysis"
                        ],
                        "visibility": "public",
                        "forks": 1559,
                        "open_issues": 386,
                        "watchers": 10450,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906"
                    },
                    "html": {
                        "href": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3906"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3906/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3906/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/3a1695c66752f2118e255781f9d486a409a02fe7"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 2,
                "additions": 20,
                "deletions": 2,
                "changed_files": 4
            }
        },
        "public": true,
        "created_at": "2023-10-25T17:32:32Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32841490412",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 38216014,
            "login": "Daimona",
            "display_login": "Daimona",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daimona",
            "avatar_url": "https://avatars.githubusercontent.com/u/38216014?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/milestone/31",
                    "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31/labels",
                    "id": 8301972,
                    "node_id": "MI_kwDOACkyn84Afq2U",
                    "number": 31,
                    "title": "3.8.0",
                    "description": "",
                    "creator": {
                        "login": "gsherwood",
                        "id": 185976,
                        "node_id": "MDQ6VXNlcjE4NTk3Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/185976?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gsherwood",
                        "html_url": "https://github.com/gsherwood",
                        "followers_url": "https://api.github.com/users/gsherwood/followers",
                        "following_url": "https://api.github.com/users/gsherwood/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gsherwood/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gsherwood/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gsherwood/subscriptions",
                        "organizations_url": "https://api.github.com/users/gsherwood/orgs",
                        "repos_url": "https://api.github.com/users/gsherwood/repos",
                        "events_url": "https://api.github.com/users/gsherwood/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gsherwood/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 24,
                    "closed_issues": 43,
                    "state": "open",
                    "created_at": "2022-08-13T07:21:46Z",
                    "updated_at": "2023-10-25T04:51:46Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 7,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T15:48:54Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779575536",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1779575536",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1779575536,
                "node_id": "IC_kwDOACkyn85qEirw",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T15:48:53Z",
                "updated_at": "2023-10-25T15:48:53Z",
                "author_association": "CONTRIBUTOR",
                "body": "> Since I started contributing to this project, I've learned to write incredible convoluted code for test cases, but even though my fantasy goes far, I often still miss some edge cases I just didn't think off. Writing good sniffs is _hard_.\r\n\r\nAs someone who wrote a few sniffs and has worked on static analyzers, I wholeheartedly agree! In fact, I discovered this bug as part of an exploration I did to try and come up with an absolutely horrendous piece of code :-)\r\n\r\n> You might be interested in doing some testing with the Performance report (open PR #3810), that should help in identifying which sniffs are particularly slow.\r\n\r\nThanks, I'll definitely look into that!\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779575536/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T15:48:54Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32839557642",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/milestone/31",
                    "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31/labels",
                    "id": 8301972,
                    "node_id": "MI_kwDOACkyn84Afq2U",
                    "number": 31,
                    "title": "3.8.0",
                    "description": "",
                    "creator": {
                        "login": "gsherwood",
                        "id": 185976,
                        "node_id": "MDQ6VXNlcjE4NTk3Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/185976?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gsherwood",
                        "html_url": "https://github.com/gsherwood",
                        "followers_url": "https://api.github.com/users/gsherwood/followers",
                        "following_url": "https://api.github.com/users/gsherwood/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gsherwood/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gsherwood/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gsherwood/subscriptions",
                        "organizations_url": "https://api.github.com/users/gsherwood/orgs",
                        "repos_url": "https://api.github.com/users/gsherwood/repos",
                        "events_url": "https://api.github.com/users/gsherwood/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gsherwood/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 24,
                    "closed_issues": 43,
                    "state": "open",
                    "created_at": "2022-08-13T07:21:46Z",
                    "updated_at": "2023-10-25T04:51:46Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 6,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T14:49:43Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779453047",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1779453047",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1779453047,
                "node_id": "IC_kwDOACkyn85qEEx3",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T14:49:42Z",
                "updated_at": "2023-10-25T14:49:42Z",
                "author_association": "CONTRIBUTOR",
                "body": "> > But I don't understand this remark, I mean: this is _exactly_ what PHPCS _is_ doing: reporting the issue as unfixable (by checking 50 loops and bowing out if there is still a fixer conflict).\r\n> \r\n> Ah, sorry, I should have stated this more clearly. What I meant is: if this is a hard-to-fix edge case, then an autofix should not be offered at all, instead of offering it but then having it fail.\r\n\r\nI see what you mean and yes, I agree. The problem is finding those edge-cases. Code can be written in so many different ways.\r\n\r\nSince I started contributing to this project, I've learned to write incredible convoluted code for test cases, but even though my fantasy goes far, I often still miss some edge cases I just didn't think off. Writing good sniffs is _hard_.\r\n\r\nPlease do keep reporting these kind of things as it really helps making sniffs better.\r\n\r\n> The main reason why I mentioned this is that I observed a severe performance degradation, and while I haven't fully investigated it, I suspect it might have been caused by this autofixer.\r\n> \r\n> For the small code snippet I used as an example here it doesn't really make any difference, but when testing a whole standard on [this file](https://github.com/wikimedia/mediawiki-tools-codesniffer/blob/c2f2b1282de0f2e9b453e882d5312cd856b24c97/MediaWiki/Tests/files/code_sample.php), phpcbf takes ~200 ms without the Squiz.WhiteSpace.FunctionSpacing enabled, and ~1.5 s with that sniff enabled. As I said, I haven't looked into why the failed autofix has such a severe impact, but it does seem to be the cause.\r\n\r\nYou might be interested in doing some testing with the Performance report (open PR #3810), that should help in identifying which sniffs are particularly slow.\r\n\r\nI already identified a couple of bottlenecks, in part via that report. There is now also a [\"Performance\"](https://github.com/squizlabs/PHP_CodeSniffer/labels/Focus%3A%20Performance) tag with which those type of issues are labeled.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779453047/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T14:49:43Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32839147830",
        "type": "WatchEvent",
        "actor": {
            "id": 67325669,
            "login": "rozsazoltan",
            "display_login": "rozsazoltan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rozsazoltan",
            "avatar_url": "https://avatars.githubusercontent.com/u/67325669?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-25T14:37:37Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32837921205",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 38216014,
            "login": "Daimona",
            "display_login": "Daimona",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daimona",
            "avatar_url": "https://avatars.githubusercontent.com/u/38216014?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/milestone/31",
                    "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31/labels",
                    "id": 8301972,
                    "node_id": "MI_kwDOACkyn84Afq2U",
                    "number": 31,
                    "title": "3.8.0",
                    "description": "",
                    "creator": {
                        "login": "gsherwood",
                        "id": 185976,
                        "node_id": "MDQ6VXNlcjE4NTk3Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/185976?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gsherwood",
                        "html_url": "https://github.com/gsherwood",
                        "followers_url": "https://api.github.com/users/gsherwood/followers",
                        "following_url": "https://api.github.com/users/gsherwood/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gsherwood/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gsherwood/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gsherwood/subscriptions",
                        "organizations_url": "https://api.github.com/users/gsherwood/orgs",
                        "repos_url": "https://api.github.com/users/gsherwood/repos",
                        "events_url": "https://api.github.com/users/gsherwood/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gsherwood/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 24,
                    "closed_issues": 43,
                    "state": "open",
                    "created_at": "2022-08-13T07:21:46Z",
                    "updated_at": "2023-10-25T04:51:46Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 5,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T14:03:23Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779353233",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1779353233",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1779353233,
                "node_id": "IC_kwDOACkyn85qDsaR",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T14:03:22Z",
                "updated_at": "2023-10-25T14:03:22Z",
                "author_association": "CONTRIBUTOR",
                "body": "> But I don't understand this remark, I mean: this is _exactly_ what PHPCS _is_ doing: reporting the issue as unfixable (by checking 50 loops and bowing out if there is still a fixer conflict).\r\n\r\nAh, sorry, I should have stated this more clearly. What I meant is: if this is a hard-to-fix edge case, then an autofix should not be offered at all, instead of offering it but then having it fail. The main reason why I mentioned this is that I observed a severe performance degradation, and while I haven't fully investigated it, I suspect it might have been caused by this autofixer.\r\n\r\nFor the small code snippet I used as an example here it doesn't really make any difference, but when testing a whole standard on [this file](https://github.com/wikimedia/mediawiki-tools-codesniffer/blob/c2f2b1282de0f2e9b453e882d5312cd856b24c97/MediaWiki/Tests/files/code_sample.php), phpcbf takes ~200 ms without the Squiz.WhiteSpace.FunctionSpacing enabled, and ~1.5 s with that sniff enabled. As I said, I haven't looked into why the failed autofix has such a severe impact, but it does seem to be the cause.\r\n\r\n> @Daimona PR #3905 should fix this issue. Testing appreciated.\r\n\r\nI can confirm that the PR fixes this bug (as the violation is no longer reported), thank you!",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1779353233/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T14:03:23Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32822744784",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T04:21:15Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778483395",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1778483395",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1778483395,
                "node_id": "IC_kwDOACkyn85qAYDD",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T04:21:14Z",
                "updated_at": "2023-10-25T04:21:14Z",
                "author_association": "CONTRIBUTOR",
                "body": "@Daimona PR #3905 should fix this issue. Testing appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778483395/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T04:21:15Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32822723083",
        "type": "PullRequestEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "opened",
            "number": 3905,
            "pull_request": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3905",
                "id": 1572122312,
                "node_id": "PR_kwDOACkyn85dtK7I",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3905",
                "diff_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3905.diff",
                "patch_url": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3905.patch",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3905",
                "number": 3905,
                "state": "open",
                "locked": false,
                "title": "Squiz/FunctionSpacing: bug fix - prevent fixer conflict with itself",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Description\r\n\r\nThe `Squiz.WhiteSpace.FunctionSpacing` sniff demands # lines above and below a function declaration, but when determining the number of lines above or below, it does not care for additional code on the same line as the function declaration. I.e.: it does not demand that a function declaration starts on its own line or that the close brace is on its own line (there are other sniffs for that).\r\n\r\nThe sniff also tries to prevent \"double\" errors for the same issue, i.e. when two functions are each on their own line without blank lines between them, the sniff will only throw one error for \"spacing after\" the first function and will not throw an error for \"spacing before\" for the second function.\r\n\r\nTo determine whether the \"spacing before\" error needs to be hidden, the sniff tries to check whether the tokens on the previous line indicate the line contains a function declaration.\r\n\r\nAs things were, however, this check could _bow out_ too early as it stopped at a scope opener for a wrapping construct (class), however, that wrapping construct _could_ be declared on the same line as the function, which means that in that case, the sniff would not determine the `$foundLines` correctly, as it stops on the current line at the scope opener instead of on a non-blank line above the function line.\r\n\r\nThis commit fixes this bug by changing the `$stopAt` value to contain the wrapping scope opener applicable to the code _before_ the function line. This allows the `$foundLines` to be determined correctly and prevents the fixer conflict.\r\n\r\nIncludes additional tests.\r\n\r\n\r\n\r\n### Suggested changelog entry\r\n\r\nFixed bug #3904 : Squiz/FunctionSpacing: prevent potential fixer conflict\r\n\r\n\r\n### Related issues/external references\r\n\r\nFixes #3904\r\n\r\n\r\n## Types of changes\r\n- [x] Bug fix _(non-breaking change which fixes an issue)_\r\n- [ ] New feature _(non-breaking change which adds functionality)_\r\n- [ ] Breaking change _(fix or feature that would cause existing functionality to change)_\r\n    - [ ] This change is only breaking for integrators, not for external standards or end-users.\r\n- [ ] Documentation improvement\r\n",
                "created_at": "2023-10-25T04:19:37Z",
                "updated_at": "2023-10-25T04:19:38Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31",
                    "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/milestone/31",
                    "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones/31/labels",
                    "id": 8301972,
                    "node_id": "MI_kwDOACkyn84Afq2U",
                    "number": 31,
                    "title": "3.8.0",
                    "description": "",
                    "creator": {
                        "login": "gsherwood",
                        "id": 185976,
                        "node_id": "MDQ6VXNlcjE4NTk3Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/185976?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gsherwood",
                        "html_url": "https://github.com/gsherwood",
                        "followers_url": "https://api.github.com/users/gsherwood/followers",
                        "following_url": "https://api.github.com/users/gsherwood/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gsherwood/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gsherwood/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gsherwood/subscriptions",
                        "organizations_url": "https://api.github.com/users/gsherwood/orgs",
                        "repos_url": "https://api.github.com/users/gsherwood/repos",
                        "events_url": "https://api.github.com/users/gsherwood/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gsherwood/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 22,
                    "closed_issues": 43,
                    "state": "open",
                    "created_at": "2022-08-13T07:21:46Z",
                    "updated_at": "2023-10-25T04:19:38Z",
                    "due_on": null,
                    "closed_at": null
                },
                "draft": false,
                "commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3905/commits",
                "review_comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3905/comments",
                "review_comment_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3905/comments",
                "statuses_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/d85eaddbb4cd735be3727c7971025fea2384af79",
                "head": {
                    "label": "squizlabs:feature/3904-squiz-functionspacing-fixer-conflict-with-itself",
                    "ref": "feature/3904-squiz-functionspacing-fixer-conflict-with-itself",
                    "sha": "d85eaddbb4cd735be3727c7971025fea2384af79",
                    "user": {
                        "login": "squizlabs",
                        "id": 997547,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5NzU0Nw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/997547?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/squizlabs",
                        "html_url": "https://github.com/squizlabs",
                        "followers_url": "https://api.github.com/users/squizlabs/followers",
                        "following_url": "https://api.github.com/users/squizlabs/following{/other_user}",
                        "gists_url": "https://api.github.com/users/squizlabs/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/squizlabs/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/squizlabs/subscriptions",
                        "organizations_url": "https://api.github.com/users/squizlabs/orgs",
                        "repos_url": "https://api.github.com/users/squizlabs/repos",
                        "events_url": "https://api.github.com/users/squizlabs/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/squizlabs/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 2699935,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyNjk5OTM1",
                        "name": "PHP_CodeSniffer",
                        "full_name": "squizlabs/PHP_CodeSniffer",
                        "private": false,
                        "owner": {
                            "login": "squizlabs",
                            "id": 997547,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5NzU0Nw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/997547?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/squizlabs",
                            "html_url": "https://github.com/squizlabs",
                            "followers_url": "https://api.github.com/users/squizlabs/followers",
                            "following_url": "https://api.github.com/users/squizlabs/following{/other_user}",
                            "gists_url": "https://api.github.com/users/squizlabs/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/squizlabs/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/squizlabs/subscriptions",
                            "organizations_url": "https://api.github.com/users/squizlabs/orgs",
                            "repos_url": "https://api.github.com/users/squizlabs/repos",
                            "events_url": "https://api.github.com/users/squizlabs/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/squizlabs/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/squizlabs/PHP_CodeSniffer",
                        "description": "PHP_CodeSniffer tokenizes PHP files and detects violations of a defined set of coding standards.",
                        "fork": false,
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                        "forks_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/forks",
                        "keys_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/teams",
                        "hooks_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/hooks",
                        "issue_events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/events",
                        "assignees_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tags",
                        "blobs_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/languages",
                        "stargazers_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/stargazers",
                        "contributors_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/contributors",
                        "subscribers_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/subscribers",
                        "subscription_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/subscription",
                        "commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/merges",
                        "archive_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/downloads",
                        "issues_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/deployments",
                        "created_at": "2011-11-03T04:06:24Z",
                        "updated_at": "2023-10-24T21:00:27Z",
                        "pushed_at": "2023-10-25T04:19:38Z",
                        "git_url": "git://github.com/squizlabs/PHP_CodeSniffer.git",
                        "ssh_url": "git@github.com:squizlabs/PHP_CodeSniffer.git",
                        "clone_url": "https://github.com/squizlabs/PHP_CodeSniffer.git",
                        "svn_url": "https://github.com/squizlabs/PHP_CodeSniffer",
                        "homepage": "",
                        "size": 202969,
                        "stargazers_count": 10449,
                        "watchers_count": 10449,
                        "language": "PHP",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 1559,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 385,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "automation",
                            "cli",
                            "coding-standards",
                            "php",
                            "qa",
                            "static-analysis"
                        ],
                        "visibility": "public",
                        "forks": 1559,
                        "open_issues": 385,
                        "watchers": 10449,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "squizlabs:master",
                    "ref": "master",
                    "sha": "8dfb63220e1fd5cfcce07f20bc24f75a5269597c",
                    "user": {
                        "login": "squizlabs",
                        "id": 997547,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5NzU0Nw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/997547?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/squizlabs",
                        "html_url": "https://github.com/squizlabs",
                        "followers_url": "https://api.github.com/users/squizlabs/followers",
                        "following_url": "https://api.github.com/users/squizlabs/following{/other_user}",
                        "gists_url": "https://api.github.com/users/squizlabs/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/squizlabs/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/squizlabs/subscriptions",
                        "organizations_url": "https://api.github.com/users/squizlabs/orgs",
                        "repos_url": "https://api.github.com/users/squizlabs/repos",
                        "events_url": "https://api.github.com/users/squizlabs/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/squizlabs/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 2699935,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyNjk5OTM1",
                        "name": "PHP_CodeSniffer",
                        "full_name": "squizlabs/PHP_CodeSniffer",
                        "private": false,
                        "owner": {
                            "login": "squizlabs",
                            "id": 997547,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5NzU0Nw==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/997547?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/squizlabs",
                            "html_url": "https://github.com/squizlabs",
                            "followers_url": "https://api.github.com/users/squizlabs/followers",
                            "following_url": "https://api.github.com/users/squizlabs/following{/other_user}",
                            "gists_url": "https://api.github.com/users/squizlabs/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/squizlabs/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/squizlabs/subscriptions",
                            "organizations_url": "https://api.github.com/users/squizlabs/orgs",
                            "repos_url": "https://api.github.com/users/squizlabs/repos",
                            "events_url": "https://api.github.com/users/squizlabs/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/squizlabs/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/squizlabs/PHP_CodeSniffer",
                        "description": "PHP_CodeSniffer tokenizes PHP files and detects violations of a defined set of coding standards.",
                        "fork": false,
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                        "forks_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/forks",
                        "keys_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/teams",
                        "hooks_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/hooks",
                        "issue_events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/events",
                        "assignees_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/tags",
                        "blobs_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/languages",
                        "stargazers_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/stargazers",
                        "contributors_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/contributors",
                        "subscribers_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/subscribers",
                        "subscription_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/subscription",
                        "commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/merges",
                        "archive_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/downloads",
                        "issues_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels{/name}",
                        "releases_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/deployments",
                        "created_at": "2011-11-03T04:06:24Z",
                        "updated_at": "2023-10-24T21:00:27Z",
                        "pushed_at": "2023-10-25T04:19:38Z",
                        "git_url": "git://github.com/squizlabs/PHP_CodeSniffer.git",
                        "ssh_url": "git@github.com:squizlabs/PHP_CodeSniffer.git",
                        "clone_url": "https://github.com/squizlabs/PHP_CodeSniffer.git",
                        "svn_url": "https://github.com/squizlabs/PHP_CodeSniffer",
                        "homepage": "",
                        "size": 202969,
                        "stargazers_count": 10449,
                        "watchers_count": 10449,
                        "language": "PHP",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 1559,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 385,
                        "license": {
                            "key": "bsd-3-clause",
                            "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                            "spdx_id": "BSD-3-Clause",
                            "url": "https://api.github.com/licenses/bsd-3-clause",
                            "node_id": "MDc6TGljZW5zZTU="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "automation",
                            "cli",
                            "coding-standards",
                            "php",
                            "qa",
                            "static-analysis"
                        ],
                        "visibility": "public",
                        "forks": 1559,
                        "open_issues": 385,
                        "watchers": 10449,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3905"
                    },
                    "html": {
                        "href": "https://github.com/squizlabs/PHP_CodeSniffer/pull/3905"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3905"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3905/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3905/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/pulls/3905/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/statuses/d85eaddbb4cd735be3727c7971025fea2384af79"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 32,
                "deletions": 8,
                "changed_files": 4
            }
        },
        "public": true,
        "created_at": "2023-10-25T04:19:40Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32822697395",
        "type": "PushEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "repository_id": 2699935,
            "push_id": 15553908519,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/feature/3904-squiz-functionspacing-fixer-conflict-with-itself",
            "head": "d85eaddbb4cd735be3727c7971025fea2384af79",
            "before": "81a5fad2d5ccbb430e697f04e255424ad9f0d37f",
            "commits": [
                {
                    "sha": "d85eaddbb4cd735be3727c7971025fea2384af79",
                    "author": {
                        "email": "jrfnl@users.noreply.github.com",
                        "name": "jrfnl"
                    },
                    "message": "Squiz/FunctionSpacing: bug fix - prevent fixer conflict with itself\n\nThe `Squiz.WhiteSpace.FunctionSpacing` sniff demands # lines above and below a function declaration, but when determining the number of lines above or below, it does not care for additional code on the same line as the function declaration.\nI.e.: it does not demand that a function declaration starts on its own line or that the close brace is on its own line (there are other sniffs for that).\n\nThe sniff also tries to prevent \"double\" errors for the same issue, i.e. when two functions are each on their own line without blank lines between them, the sniff will only throw one error for \"spacing after\" the first function and will not throw an error for \"spacing before\" for the second function.\n\nTo determine whether the \"spacing before\" error needs to be hidden, the sniff tries to check whether the tokens on the previous line indicate the line contains a function declaration.\n\nAs things were, however, this check could _bow out_ too early as it stopped at a scope opener for a wrapping construct (class), however, that wrapping construct _could_ be declared on the same line as the function, which means that in that case, the sniff would not determine the `$foundLines` correctly, as it stops on the current line at the scope opener instead of on a non-blank line above the function line.\n\nThis commit fixes this bug by changing the `$stopAt` value to contain the wrapping scope opener applicable to the code _before_ the function line. This allows the `$foundLines` to be determined correctly and prevents the fixer conflict.\n\nIncludes additional tests.\n\nFixes 3904",
                    "distinct": true,
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/commits/d85eaddbb4cd735be3727c7971025fea2384af79"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-25T04:17:41Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32822635241",
        "type": "CreateEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "ref": "feature/3904-squiz-functionspacing-fixer-conflict-with-itself",
            "ref_type": "branch",
            "master_branch": "master",
            "description": "PHP_CodeSniffer tokenizes PHP files and detects violations of a defined set of coding standards.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-25T04:12:54Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32821961890",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T03:19:27Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778441194",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1778441194",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1778441194,
                "node_id": "IC_kwDOACkyn85qANvq",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T03:19:27Z",
                "updated_at": "2023-10-25T03:19:27Z",
                "author_association": "CONTRIBUTOR",
                "body": "> Oh and I'm also wondering why the sniff does not report the `AfterLast` error code for this code snippet as with the closer being on the same line as the class close brace, I would also expect that error to be reported.\r\n\r\nActually, looks like the sniff doesn't care about code before or after the function. Just about the blank lines above/below the code, which explains why the `AfterLast` error doesn't show as lines at the end of the file are ignored as they generally have to comply with their own rules.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778441194/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T03:19:28Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32821737455",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T03:02:23Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778428717",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1778428717",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1778428717,
                "node_id": "IC_kwDOACkyn85qAKst",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T03:02:22Z",
                "updated_at": "2023-10-25T03:02:22Z",
                "author_association": "CONTRIBUTOR",
                "body": "Oh and I'm also wondering why the sniff does not report the `AfterLast` error code for this code snippet as with the closer being on the same line as the class close brace, I would also expect that error to be reported.",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778428717/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T03:02:23Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32821697439",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 663378,
            "login": "jrfnl",
            "display_login": "jrfnl",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrfnl",
            "avatar_url": "https://avatars.githubusercontent.com/u/663378?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5465796541,
                        "node_id": "LA_kwDOACkyn88AAAABRclvvQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Standard:%20Squiz",
                        "name": "Standard: Squiz",
                        "color": "9174d7",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5473889117,
                        "node_id": "LA_kwDOACkyn88AAAABRkTrXQ",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Focus:%20Fixer%20Conflicts",
                        "name": "Focus: Fixer Conflicts",
                        "color": "c2ddb6",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T02:59:25Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778426296",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904#issuecomment-1778426296",
                "issue_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1778426296,
                "node_id": "IC_kwDOACkyn85qAKG4",
                "user": {
                    "login": "jrfnl",
                    "id": 663378,
                    "node_id": "MDQ6VXNlcjY2MzM3OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/663378?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jrfnl",
                    "html_url": "https://github.com/jrfnl",
                    "followers_url": "https://api.github.com/users/jrfnl/followers",
                    "following_url": "https://api.github.com/users/jrfnl/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jrfnl/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jrfnl/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jrfnl/subscriptions",
                    "organizations_url": "https://api.github.com/users/jrfnl/orgs",
                    "repos_url": "https://api.github.com/users/jrfnl/repos",
                    "events_url": "https://api.github.com/users/jrfnl/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jrfnl/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T02:59:24Z",
                "updated_at": "2023-10-25T02:59:24Z",
                "author_association": "CONTRIBUTOR",
                "body": "@Daimona Thanks for reporting this issue. I have been able to reproduce this with the provided information and can confirm the bug.\r\n\r\n> Ideally, the issue should be fixed.\r\n\r\nI'm hoping the issue can be fixed in the sniff.\r\n\r\n> Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\nBut I don't understand this remark, I mean: this is _exactly_ what PHPCS _is_ doing: reporting the issue as unfixable (by checking 50 loops and bowing out if there is still a fixer conflict).\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/comments/1778426296/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T02:59:25Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32820030468",
        "type": "IssuesEvent",
        "actor": {
            "id": 38216014,
            "login": "Daimona",
            "display_login": "Daimona",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Daimona",
            "avatar_url": "https://avatars.githubusercontent.com/u/38216014?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904",
                "repository_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer",
                "labels_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/labels{/name}",
                "comments_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/comments",
                "events_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/events",
                "html_url": "https://github.com/squizlabs/PHP_CodeSniffer/issues/3904",
                "id": 1960316005,
                "node_id": "I_kwDOACkyn8502Axl",
                "number": 3904,
                "title": "Autofixer for Squiz.WhiteSpace.FunctionSpacing goes into \"infinite\" loop for method defined on the same line as a class",
                "user": {
                    "login": "Daimona",
                    "id": 38216014,
                    "node_id": "MDQ6VXNlcjM4MjE2MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/38216014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Daimona",
                    "html_url": "https://github.com/Daimona",
                    "followers_url": "https://api.github.com/users/Daimona/followers",
                    "following_url": "https://api.github.com/users/Daimona/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Daimona/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Daimona/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Daimona/subscriptions",
                    "organizations_url": "https://api.github.com/users/Daimona/orgs",
                    "repos_url": "https://api.github.com/users/Daimona/repos",
                    "events_url": "https://api.github.com/users/Daimona/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Daimona/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 130757492,
                        "node_id": "MDU6TGFiZWwxMzA3NTc0OTI=",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Type:%20bug",
                        "name": "Type: bug",
                        "color": "dd4548",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5510233950,
                        "node_id": "LA_kwDOACkyn88AAAABSG9_Xg",
                        "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/labels/Status:%20triage",
                        "name": "Status: triage",
                        "color": "1F7FFF",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T00:56:30Z",
                "updated_at": "2023-10-25T00:56:30Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "## Describe the bug\r\nIn the (intentionally bad) snippet of code below, I have a method defined on the same line as its class. When running PHPCS on it with the `Squiz.WhiteSpace.FunctionSpacing` sniff enabled (ruleset below), it reports that 1 blank line is expected before the method. However, if I then try to autofix that with phpcbf, it tries to add the line in the wrong place, thus going into an infinite loop because it detects that the issue still hasn't been fixed; it only aborts upon reaching the limit of 50 passes.\r\n\r\n### Code sample\r\n```php\r\n<?php\r\n\r\nclass Person { public function __construct($name){} }\r\n\r\n```\r\n\r\n### Custom ruleset\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset>\r\n\t<arg name=\"tab-width\" value=\"4\" />\r\n\r\n\t<rule ref=\"Squiz.WhiteSpace.FunctionSpacing\">\r\n\t\t<properties>\r\n\t\t\t<property name=\"spacing\" value=\"1\" />\r\n\t\t</properties>\r\n\t</rule>\r\n</ruleset>\r\n```\r\n\r\n### To reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a file called `test.php` with the code sample above\r\n2. Run `phpcs test.php`\r\n3. See error message displayed\r\n```\r\n----------------------------------------------------------------------\r\nFOUND 1 ERROR AFFECTING 1 LINE\r\n----------------------------------------------------------------------\r\n 3 | ERROR | [x] Expected 1 blank line before function; 0 found\r\n----------------------------------------------------------------------\r\nPHPCBF CAN FIX THE 1 MARKED SNIFF VIOLATIONS AUTOMATICALLY\r\n----------------------------------------------------------------------\r\n```\r\n4. Run `phpcbf -vvv test.php`\r\n5. See that it fails to fix the file. The full output shows that it's adding the line right after the PHP open tag:\r\n\r\n```\r\n(... all the previous passes...)\r\n---START FILE CONTENT---\r\n 1|<?php\r\n 2|\r\n 3|\r\n 4|\r\n 5|\r\n 6|\r\n 7|\r\n 8|\r\n 9|\r\n10|\r\n11|\r\n12|\r\n13|\r\n14|\r\n15|\r\n16|\r\n17|\r\n18|\r\n19|\r\n20|\r\n21|\r\n22|\r\n23|\r\n24|\r\n25|\r\n26|\r\n27|\r\n28|class Person { public function __construct($name){} }\r\n29|\r\n30|\r\n--- END FILE CONTENT ---\r\n\tSquiz.WhiteSpace.FunctionSpacing:342 replaced token 0 (T_OPEN_TAG on line 1) \"<?php\\n\" => \"<?php\\n\\n\"\r\n        => Fixing file: 1/1 violations remaining [made 50 passes]...            \r\n\t* fixed 1 violations, starting loop 51 *\r\n\t*** Reached maximum number of loops with 1 violations left unfixed ***\r\nERROR in 33ms\r\n\r\nPHPCBF RESULT SUMMARY\r\n----------------------------------------------------------------------\r\nFILE                                                  FIXED  REMAINING\r\n----------------------------------------------------------------------\r\n(...)/test.php            FAILED TO FIX\r\n----------------------------------------------------------------------\r\nA TOTAL OF 0 ERRORS WERE FIXED IN 1 FILE\r\n----------------------------------------------------------------------\r\nPHPCBF FAILED TO FIX 1 FILE\r\n----------------------------------------------------------------------\r\n\r\n```\r\n\r\n\r\n## Expected behavior\r\nIdeally, the issue should be fixed. Or if that's hard to do, at least PHPCS should not go into an endless loop, and instead report the issue as unfixable.\r\n\r\n## Versions (please complete the following information)\r\n\r\n| | |\r\n|-|-|\r\n| Operating System | Ubuntu 22.04\r\n| PHP version | 8.2.11\r\n| PHP_CodeSniffer version | master\r\n| Standard | See above\r\n| Install type | Composer local\r\n\r\n## Please confirm:\r\n\r\n- [x] I have searched the issue list and am not opening a duplicate issue.\r\n- [x] I confirm that this bug is a bug in PHP_CodeSniffer and not in one of the external standards.\r\n- [x] I have verified the issue still exists in the `master` branch of PHP_CodeSniffer.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer/issues/3904/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T00:56:32Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32816379314",
        "type": "WatchEvent",
        "actor": {
            "id": 1973445,
            "login": "Enchiridion",
            "display_login": "Enchiridion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Enchiridion",
            "avatar_url": "https://avatars.githubusercontent.com/u/1973445?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T21:00:27Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32810690951",
        "type": "WatchEvent",
        "actor": {
            "id": 73808043,
            "login": "c86-moe",
            "display_login": "c86-moe",
            "gravatar_id": "",
            "url": "https://api.github.com/users/c86-moe",
            "avatar_url": "https://avatars.githubusercontent.com/u/73808043?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T17:00:16Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32808336449",
        "type": "WatchEvent",
        "actor": {
            "id": 1490071,
            "login": "landure",
            "display_login": "landure",
            "gravatar_id": "",
            "url": "https://api.github.com/users/landure",
            "avatar_url": "https://avatars.githubusercontent.com/u/1490071?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T15:34:12Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32800641662",
        "type": "ForkEvent",
        "actor": {
            "id": 17122386,
            "login": "nelson1995",
            "display_login": "nelson1995",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nelson1995",
            "avatar_url": "https://avatars.githubusercontent.com/u/17122386?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "forkee": {
                "id": 709264998,
                "node_id": "R_kgDOKkaGZg",
                "name": "PHP_CodeSniffer",
                "full_name": "nelson1995/PHP_CodeSniffer",
                "private": false,
                "owner": {
                    "login": "nelson1995",
                    "id": 17122386,
                    "node_id": "MDQ6VXNlcjE3MTIyMzg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/17122386?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/nelson1995",
                    "html_url": "https://github.com/nelson1995",
                    "followers_url": "https://api.github.com/users/nelson1995/followers",
                    "following_url": "https://api.github.com/users/nelson1995/following{/other_user}",
                    "gists_url": "https://api.github.com/users/nelson1995/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/nelson1995/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/nelson1995/subscriptions",
                    "organizations_url": "https://api.github.com/users/nelson1995/orgs",
                    "repos_url": "https://api.github.com/users/nelson1995/repos",
                    "events_url": "https://api.github.com/users/nelson1995/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/nelson1995/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/nelson1995/PHP_CodeSniffer",
                "description": "PHP_CodeSniffer tokenizes PHP files and detects violations of a defined set of coding standards.",
                "fork": true,
                "url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer",
                "forks_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/forks",
                "keys_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/teams",
                "hooks_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/hooks",
                "issue_events_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/issues/events{/number}",
                "events_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/events",
                "assignees_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/assignees{/user}",
                "branches_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/branches{/branch}",
                "tags_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/tags",
                "blobs_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/languages",
                "stargazers_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/stargazers",
                "contributors_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/contributors",
                "subscribers_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/subscribers",
                "subscription_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/subscription",
                "commits_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/contents/{+path}",
                "compare_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/merges",
                "archive_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/downloads",
                "issues_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/issues{/number}",
                "pulls_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/labels{/name}",
                "releases_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/releases{/id}",
                "deployments_url": "https://api.github.com/repos/nelson1995/PHP_CodeSniffer/deployments",
                "created_at": "2023-10-24T11:18:39Z",
                "updated_at": "2023-10-24T11:18:39Z",
                "pushed_at": "2023-10-16T12:32:52Z",
                "git_url": "git://github.com/nelson1995/PHP_CodeSniffer.git",
                "ssh_url": "git@github.com:nelson1995/PHP_CodeSniffer.git",
                "clone_url": "https://github.com/nelson1995/PHP_CodeSniffer.git",
                "svn_url": "https://github.com/nelson1995/PHP_CodeSniffer",
                "homepage": "",
                "size": 202969,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "bsd-3-clause",
                    "name": "BSD 3-Clause \"New\" or \"Revised\" License",
                    "spdx_id": "BSD-3-Clause",
                    "url": "https://api.github.com/licenses/bsd-3-clause",
                    "node_id": "MDc6TGljZW5zZTU="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-24T11:18:41Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    },
    {
        "id": "32794365581",
        "type": "WatchEvent",
        "actor": {
            "id": 1331435,
            "login": "rgomezcasas",
            "display_login": "rgomezcasas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rgomezcasas",
            "avatar_url": "https://avatars.githubusercontent.com/u/1331435?"
        },
        "repo": {
            "id": 2699935,
            "name": "squizlabs/PHP_CodeSniffer",
            "url": "https://api.github.com/repos/squizlabs/PHP_CodeSniffer"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T07:17:40Z",
        "org": {
            "id": 997547,
            "login": "squizlabs",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/squizlabs",
            "avatar_url": "https://avatars.githubusercontent.com/u/997547?"
        }
    }
]