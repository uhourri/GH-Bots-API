[
    {
        "id": "32897677249",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 81091441,
            "login": "tringwald",
            "display_login": "tringwald",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tringwald",
            "avatar_url": "https://avatars.githubusercontent.com/u/81091441?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/112173",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/112173/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112173/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/112173/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/112173",
                "id": 1964004178,
                "node_id": "I_kwDOA-j9z851EFNS",
                "number": 112173,
                "title": "Weird memory leakage in /= division operator",
                "user": {
                    "login": "MilkClouds",
                    "id": 26109705,
                    "node_id": "MDQ6VXNlcjI2MTA5NzA1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26109705?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MilkClouds",
                    "html_url": "https://github.com/MilkClouds",
                    "followers_url": "https://api.github.com/users/MilkClouds/followers",
                    "following_url": "https://api.github.com/users/MilkClouds/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MilkClouds/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MilkClouds/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MilkClouds/subscriptions",
                    "organizations_url": "https://api.github.com/users/MilkClouds/orgs",
                    "repos_url": "https://api.github.com/users/MilkClouds/repos",
                    "events_url": "https://api.github.com/users/MilkClouds/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MilkClouds/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1076922545,
                        "node_id": "MDU6TGFiZWwxMDc2OTIyNTQ1",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20autograd",
                        "name": "module: autograd",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to torch.autograd, and the autograd engine in general"
                    },
                    {
                        "id": 1300909511,
                        "node_id": "MDU6TGFiZWwxMzAwOTA5NTEx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20memory%20usage",
                        "name": "module: memory usage",
                        "color": "f7e101",
                        "default": false,
                        "description": "PyTorch is using more memory than it should, or it is leaking memory"
                    },
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-26T17:11:43Z",
                "updated_at": "2023-10-27T11:52:18Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### \ud83d\udc1b Describe the bug\n\nIf I put `image_features /= image_features.norm(dim=-1, keepdim=True)`, I get a memory leak, and if I don't put it, and even if I put `image_features = image_features / image_features.norm(dim=-1, keepdim=True)` instead, I don't get a leak. I'm wondering if this is intended, if it's already been reported, and what the cause is.\r\n\r\nBelow is code that fully reproduces the memory leak.\r\n\r\n```python\r\nimport nvidia_smi\r\nimport torch\r\nfrom tqdm.auto import tqdm\r\n\r\n\r\ndef memory():\r\n    nvidia_smi.nvmlInit()\r\n    deviceCount = nvidia_smi.nvmlDeviceGetCount()\r\n    freem = []\r\n    for i in range(deviceCount):\r\n        handle = nvidia_smi.nvmlDeviceGetHandleByIndex(i)\r\n        info = nvidia_smi.nvmlDeviceGetMemoryInfo(handle)\r\n        freem.append(100 * info.free / info.total)\r\n    nvidia_smi.nvmlShutdown()\r\n    return freem\r\n\r\n\r\nclass MyToyPytorchModel(torch.nn.Module):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.linear = torch.nn.Linear(3, 1408)\r\n        self.to(\"cuda\")\r\n\r\n    def forward(self, image_features):\r\n        reward = self.linear(image_features)\r\n        return reward\r\n\r\n\r\ndef f():\r\n    if getattr(f, \"model\", None) is None:\r\n        f.model = MyToyPytorchModel()\r\n    model = f.model\r\n    inputs = torch.randn(2, 3).to(\"cuda\")\r\n    image_features = model(inputs)\r\n    image_features /= image_features.norm(dim=-1, keepdim=True)  # memory leak\r\n    # image_features = image_features / image_features.norm(dim=-1, keepdim=True) # no memory leak\r\n    reward = (image_features[0] * image_features[1:]).sum(-1)\r\n    return reward.detach().cpu().numpy()\r\n\r\n\r\nwith tqdm(range(10**6)) as pbar:\r\n    for _ in pbar:\r\n        pbar.set_postfix({\"reward\": f(), \"memory\": memory()})\r\n```\n\n### Versions\n\nPyTorch version: 2.0.1+cu117\r\nIs debug build: False\r\nCUDA used to build PyTorch: 11.7\r\nROCM used to build PyTorch: N/A\r\n\r\nOS: Ubuntu 20.04.1 LTS (x86_64)\r\nGCC version: (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\r\nClang version: 10.0.0-4ubuntu1 \r\nCMake version: version 3.27.2\r\nLibc version: glibc-2.31\r\n\r\nPython version: 3.11.4 (main, Jul  5 2023, 13:45:01) [GCC 11.2.0] (64-bit runtime)\r\nPython platform: Linux-5.4.0-52-generic-x86_64-with-glibc2.31\r\nIs CUDA available: True\r\nCUDA runtime version: 11.7.99\r\nCUDA_MODULE_LOADING set to: LAZY\r\nGPU models and configuration: GPU 0: NVIDIA A100-SXM4-40GB\r\nNvidia driver version: 515.86.01\r\ncuDNN version: Probably one of the following:\r\n/usr/lib/x86_64-linux-gnu/libcudnn.so.8.5.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_infer.so.8.5.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_adv_train.so.8.5.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_infer.so.8.5.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_cnn_train.so.8.5.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_infer.so.8.5.0\r\n/usr/lib/x86_64-linux-gnu/libcudnn_ops_train.so.8.5.0\r\nHIP runtime version: N/A\r\nMIOpen runtime version: N/A\r\nIs XNNPACK available: True\r\n\r\nCPU:\r\nArchitecture:                    x86_64\r\nCPU op-mode(s):                  32-bit, 64-bit\r\nByte Order:                      Little Endian\r\nAddress sizes:                   43 bits physical, 48 bits virtual\r\nCPU(s):                          256\r\nOn-line CPU(s) list:             0-255\r\nThread(s) per core:              2\r\nCore(s) per socket:              64\r\nSocket(s):                       2\r\nNUMA node(s):                    8\r\nVendor ID:                       AuthenticAMD\r\nCPU family:                      23\r\nModel:                           49\r\nModel name:                      AMD EPYC 7742 64-Core Processor\r\nStepping:                        0\r\nFrequency boost:                 enabled\r\nCPU MHz:                         3209.092\r\nCPU max MHz:                     2250.0000\r\nCPU min MHz:                     1500.0000\r\nBogoMIPS:                        4491.44\r\nVirtualization:                  AMD-V\r\nL1d cache:                       4 MiB\r\nL1i cache:                       4 MiB\r\nL2 cache:                        64 MiB\r\nL3 cache:                        512 MiB\r\nNUMA node0 CPU(s):               0-15,128-143\r\nNUMA node1 CPU(s):               16-31,144-159\r\nNUMA node2 CPU(s):               32-47,160-175\r\nNUMA node3 CPU(s):               48-63,176-191\r\nNUMA node4 CPU(s):               64-79,192-207\r\nNUMA node5 CPU(s):               80-95,208-223\r\nNUMA node6 CPU(s):               96-111,224-239\r\nNUMA node7 CPU(s):               112-127,240-255\r\nVulnerability Itlb multihit:     Not affected\r\nVulnerability L1tf:              Not affected\r\nVulnerability Mds:               Not affected\r\nVulnerability Meltdown:          Not affected\r\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\r\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\r\nVulnerability Spectre v2:        Mitigation; Full AMD retpoline, IBPB conditional, IBRS_FW, STIBP conditional, RSB filling\r\nVulnerability Srbds:             Not affected\r\nVulnerability Tsx async abort:   Not affected\r\nFlags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate sme ssbd mba sev ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca\r\n\r\nVersions of relevant libraries:\r\n[pip3] mypy-extensions==1.0.0\r\n[pip3] numpy==1.25.1\r\n[pip3] torch==2.0.1\r\n[pip3] torchaudio==2.0.2\r\n[pip3] torchvision==0.15.2\r\n[pip3] triton==2.0.0\r\n[conda] numpy                     1.25.1                   pypi_0    pypi\r\n[conda] torch                     2.0.1                    pypi_0    pypi\r\n[conda] torchaudio                2.0.2                    pypi_0    pypi\r\n[conda] torchvision               0.15.2                   pypi_0    pypi\r\n[conda] triton                    2.0.0                    pypi_0    pypi\n\ncc @ezyang @albanD @zou3519 @gqchen @pearu @nikitaved @soulitzer @Lezcano @Varal7",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/112173/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/112173/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782783941",
                "html_url": "https://github.com/pytorch/pytorch/issues/112173#issuecomment-1782783941",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112173",
                "id": 1782783941,
                "node_id": "IC_kwDOA-j9z85qQx_F",
                "user": {
                    "login": "tringwald",
                    "id": 81091441,
                    "node_id": "MDQ6VXNlcjgxMDkxNDQx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/81091441?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/tringwald",
                    "html_url": "https://github.com/tringwald",
                    "followers_url": "https://api.github.com/users/tringwald/followers",
                    "following_url": "https://api.github.com/users/tringwald/following{/other_user}",
                    "gists_url": "https://api.github.com/users/tringwald/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/tringwald/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/tringwald/subscriptions",
                    "organizations_url": "https://api.github.com/users/tringwald/orgs",
                    "repos_url": "https://api.github.com/users/tringwald/repos",
                    "events_url": "https://api.github.com/users/tringwald/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/tringwald/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:52:17Z",
                "updated_at": "2023-10-27T11:52:17Z",
                "author_association": "CONTRIBUTOR",
                "body": "Interesting find. I can reproduce this on a fresh main build with an even shorter script:\r\n\r\n```python3\r\nimport torch\r\n\r\nmodel = torch.nn.Linear(4, 1024).cuda()\r\n\r\nfor i in range(10 ** 6):\r\n    inputs = torch.randn(2, 4).to(\"cuda\")\r\n    image_features = model(inputs)\r\n    image_features /= image_features.norm(dim=-1, keepdim=True)\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782783941/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:52:18Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32897239237",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 41898282,
            "login": "github-actions[bot]",
            "display_login": "github-actions",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/41898282?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/108042",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/108042/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/108042/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/108042/events",
                "html_url": "https://github.com/pytorch/pytorch/pull/108042",
                "id": 1869177177,
                "node_id": "PR_kwDOA-j9z85Y515U",
                "number": 108042,
                "title": "[xla hash update] update the pinned xla hash",
                "user": {
                    "login": "pytorchupdatebot",
                    "id": 133916390,
                    "node_id": "U_kgDOB_tm5g",
                    "avatar_url": "https://avatars.githubusercontent.com/u/133916390?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorchupdatebot",
                    "html_url": "https://github.com/pytorchupdatebot",
                    "followers_url": "https://api.github.com/users/pytorchupdatebot/followers",
                    "following_url": "https://api.github.com/users/pytorchupdatebot/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorchupdatebot/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorchupdatebot/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorchupdatebot/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorchupdatebot/orgs",
                    "repos_url": "https://api.github.com/users/pytorchupdatebot/repos",
                    "events_url": "https://api.github.com/users/pytorchupdatebot/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorchupdatebot/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3663721061,
                        "node_id": "LA_kwDOA-j9z87aX_Jl",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/trunk",
                        "name": "ciflow/trunk",
                        "color": "574CBB",
                        "default": false,
                        "description": "Trigger trunk jobs on your pull request"
                    },
                    {
                        "id": 3773064655,
                        "node_id": "LA_kwDOA-j9z87g5GXP",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/topic:%20not%20user%20facing",
                        "name": "topic: not user facing",
                        "color": "B08798",
                        "default": false,
                        "description": "topic category"
                    },
                    {
                        "id": 4668973195,
                        "node_id": "LA_kwDOA-j9z88AAAABFkrgiw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/inductor",
                        "name": "ciflow/inductor",
                        "color": "8E9C02",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-08-28T07:40:30Z",
                "updated_at": "2023-10-27T11:33:49Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/pulls/108042",
                    "html_url": "https://github.com/pytorch/pytorch/pull/108042",
                    "diff_url": "https://github.com/pytorch/pytorch/pull/108042.diff",
                    "patch_url": "https://github.com/pytorch/pytorch/pull/108042.patch",
                    "merged_at": null
                },
                "body": "This PR is auto-generated nightly by [this action](https://github.com/pytorch/pytorch/blob/main/.github/workflows/_update-commit-hash.yml).\nUpdate the pinned xla hash.",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/108042/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/108042/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782759916",
                "html_url": "https://github.com/pytorch/pytorch/pull/108042#issuecomment-1782759916",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/108042",
                "id": 1782759916,
                "node_id": "IC_kwDOA-j9z85qQsHs",
                "user": {
                    "login": "github-actions[bot]",
                    "id": 41898282,
                    "node_id": "MDM6Qm90NDE4OTgyODI=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
                    "html_url": "https://github.com/apps/github-actions",
                    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:33:49Z",
                "updated_at": "2023-10-27T11:33:49Z",
                "author_association": "NONE",
                "body": "Looks like this PR hasn't been updated in a while so we're going to go ahead and mark this as `Stale`. <br>Feel free to remove the `Stale` label if you feel this was a mistake. <br>If you are unable to remove the `Stale` label please contact a maintainer in order to do so. <br>If you want the bot to never mark this PR stale again, add the `no-stale` label.<br>`Stale` pull requests will automatically be closed after 30 days of inactivity.<br>",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782759916/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:33:50Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32897174596",
        "type": "WatchEvent",
        "actor": {
            "id": 61357777,
            "login": "blaz-r",
            "display_login": "blaz-r",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blaz-r",
            "avatar_url": "https://avatars.githubusercontent.com/u/61357777?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T11:31:04Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896937370",
        "type": "PushEvent",
        "actor": {
            "id": 97764156,
            "login": "pytorchmergebot",
            "display_login": "pytorchmergebot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "repository_id": 65600975,
            "push_id": 15590879005,
            "size": 1,
            "distinct_size": 0,
            "ref": "refs/heads/viable/strict",
            "head": "46667c97fddc28d1e929a790985034ecb39a4bde",
            "before": "20fc2b41869fe4b5f382bfbe21f00b0ba0f7e6cf",
            "commits": [
                {
                    "sha": "46667c97fddc28d1e929a790985034ecb39a4bde",
                    "author": {
                        "email": "luwei@fb.com",
                        "name": "Wei Lu"
                    },
                    "message": "[Pytorch][Vulkan] var.dim (#111965)\n\nSummary:\nWe implement [`torch.var`](https://pytorch.org/docs/stable/generated/torch.var.html) for tensors of 2d to 4d.\n\nBy using the `mean`, `sub` and `pow` ops, we can compute the variance as below without adding a new shader.\n```\nat::Tensor self_mean = self.mean(opt_dim, true);\nat::Tensor output = (self.sub(self_mean).pow(2)).mean(opt_dim, keepdim);\n```\n\nTest Plan:\n```\n[luwei@devbig984.prn1 /data/users/luwei/fbsource (2da0640c6)]$ LD_LIBRARY_PATH=third-party/swiftshader/lib/linux-x64/ buck run fbcode/mode/dev-nosan //xplat/caffe2:pt_vulkan_api_test_bin -- --gtest_filter=\"*var*\"\nBuilding: finished in 0.1 sec (100%) 339/339 jobs, 0/339 updated\n  Total time: 0.1 sec\nBUILD SUCCEEDED\nRunning main() from third-party/googletest/1.11.0/googletest/googletest/src/gtest_main.cc\nNote: Google Test filter = *var*\n[==========] Running 6 tests from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 6 tests from VulkanAPITest\n[ RUN      ] VulkanAPITest.var_2d_unbiased\n[       OK ] VulkanAPITest.var_2d_unbiased (322 ms)\n[ RUN      ] VulkanAPITest.var_2d_biased\n[       OK ] VulkanAPITest.var_2d_biased (0 ms)\n[ RUN      ] VulkanAPITest.var_3d_unbiased\n[       OK ] VulkanAPITest.var_3d_unbiased (2 ms)\n[ RUN      ] VulkanAPITest.var_3d_biased\n[       OK ] VulkanAPITest.var_3d_biased (2 ms)\n[ RUN      ] VulkanAPITest.var_4d_unbiased\n[       OK ] VulkanAPITest.var_4d_unbiased (175 ms)\n[ RUN      ] VulkanAPITest.var_4d_biased\n[       OK ] VulkanAPITest.var_4d_biased (5 ms)\n[----------] 6 tests from VulkanAPITest (508 ms total)\n\n[----------] Global test environment tear-down\n[==========] 6 tests from 1 test suite ran. (508 ms total)\n[  PASSED  ] 6 tests.\n```\n\nReviewed By: yipjustin\n\nDifferential Revision: D50398925\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/111965\nApproved by: https://github.com/yipjustin",
                    "distinct": false,
                    "url": "https://api.github.com/repos/pytorch/pytorch/commits/46667c97fddc28d1e929a790985034ecb39a4bde"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T11:21:05Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896929467",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 70636071,
            "login": "ToniKoe",
            "display_login": "ToniKoe",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ToniKoe",
            "avatar_url": "https://avatars.githubusercontent.com/u/70636071?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/77764",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/77764/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/77764/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/77764/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/77764",
                "id": 1240333853,
                "node_id": "I_kwDOA-j9z85J7f4d",
                "number": 77764,
                "title": "General MPS op coverage tracking issue",
                "user": {
                    "login": "albanD",
                    "id": 6359743,
                    "node_id": "MDQ6VXNlcjYzNTk3NDM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6359743?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/albanD",
                    "html_url": "https://github.com/albanD",
                    "followers_url": "https://api.github.com/users/albanD/followers",
                    "following_url": "https://api.github.com/users/albanD/following{/other_user}",
                    "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/albanD/subscriptions",
                    "organizations_url": "https://api.github.com/users/albanD/orgs",
                    "repos_url": "https://api.github.com/users/albanD/repos",
                    "events_url": "https://api.github.com/users/albanD/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/albanD/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1076922351,
                        "node_id": "MDU6TGFiZWwxMDc2OTIyMzUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/feature",
                        "name": "feature",
                        "color": "ffceba",
                        "default": false,
                        "description": "A request for a proper, new feature."
                    },
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    },
                    {
                        "id": 4121057428,
                        "node_id": "LA_kwDOA-j9z871oliU",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20mps",
                        "name": "module: mps",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to Apple Metal Performance Shaders framework"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 876,
                "created_at": "2022-05-18T18:12:47Z",
                "updated_at": "2023-10-27T11:20:44Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "body": "### This issue is to have a centralized place to list and track work on adding support to new ops for the MPS backend.\r\n\r\n[**MPS operators coverage matrix**](https://qqaatw.github.io/pytorch-mps-ops-coverage/) - The matrix covers most of the supported operators but is not exhaustive. Before you comment below, please take a look at this matrix to make sure the operator you're requesting has not been implemented in nightly.  More details can be found on the [readme](https://github.com/qqaatw/pytorch-mps-ops-coverage).\r\n\r\nThere are a very large number of operators in pytorch and so they are not all implemented yet for the MPS backends as it is still in the prototype phase. We will be prioritizing adding new operators based on user feedback. If possible, please also provide link to the network or use-case where this op is getting used.\r\n\r\nIf you want to work on adding support for such op, feel free to comment below to get assigned one. Please avoid pickup up an op that is already being worked on or that already has a PR associated with it.\r\n\r\n[Link to the wiki for details](https://github.com/pytorch/pytorch/wiki/MPS-Backend) on how to add these ops and example PRs.\r\n\r\n**Good First Issue:**\r\nBelow is list of Ops which are good to get started to add operations to MPS backend. Please consider picking them up. \r\n- [ ] `nn.Conv3D`\r\n- [ ] `aten::_weight_norm_interface`\r\n- [ ] `aten::max_unpool2d`\r\n- [ ] `aten::cummin.out`, `aten::cummax.out`\r\n- [ ] `aten::upsample_linear1d.out`\r\n- [ ] `aten::lerp.Scalar_out`\r\n- [ ] `aten::renorm`\r\n\r\n\r\n**Not categorized:**\r\nThese are the ops which are not yet picked up and need MPS implementation.\r\n\r\n- [ ] `aten::slow_conv3d_forward` \r\n- [ ] `aten::_ctc_loss`\r\n- [ ] `aten::avg_pool3d.out`\r\n- [ ] `aten::linalg_qr.out`\r\n- [ ] `aten::multilabel_margin_loss_forward`\r\n- [ ] `aten::unique_dim`\r\n- [ ] `aten::_sample_dirichlet`\r\n- [ ] `aten::_fft_r2c`\r\n- [ ] `aten::upsample_bicubic2d.out`\r\n- [ ] `aten::linalg_inv_out_helper`\r\n- [ ] `aten::bucketize`\r\n- [ ] `aten::_embedding_bag`\r\n- [ ] `aten::_standard_gamma`\r\n- [ ] `aten::_upsample_bicubic2d_aa.out`\r\n- [ ] `aten::'aten::_symeig_helper`\r\n- [ ] `aten::linalg_matrix_exp`\r\n- [ ] `aten::_nested_tensor_from_mask`\r\n- [ ] `aten::randperm.generator_out`\r\n- [ ] `aten::_fused_sdp_choice`\r\n- [ ] `aten::linalg_cholesky_ex`\r\n- [ ] `aten::scatter_reduce.two_out`\r\n- [ ] `aten::kthvalue.values`\r\n- [ ] `aten::_linalg_solve_ex.result`\r\n- [ ] `aten::grid_sampler_2d_backward'`\r\n\r\n**WIP:**\r\n- [ ] `max_pool3d` https://github.com/pytorch/pytorch/pull/102148\r\n- [ ] `aten::kl_div_backward` (Is not needed )\r\n\r\n\r\n**Implemented Ops:**\r\nOps that have MPS backend implementations.\r\n\r\nSee [**MPS operators coverage matrix**](https://qqaatw.github.io/pytorch-mps-ops-coverage/) and the [readme](https://github.com/qqaatw/pytorch-mps-ops-coverage) for more details.\r\n\r\n<details>\r\n<summary>deprecated list</summary>\r\n\r\n- [x] `aten::histc` #96652\r\n- [x] `pow.Scalar_out` (@qqaatw )\r\n- [x] `aten::log_sigmoid_forward` (@qqaatw )\r\n- [x] `aten::fmax.out` (@qqaatw )\r\n- [x] `aten::roll`  https://github.com/pytorch/pytorch/pull/95168\r\n- [x] `aten::hardsigmoid` (@qqaatw )\r\n- [x] `aten::logit` (@qqaatw )\r\n- [x] `linalg_solve_triangular`\r\n- [x] `aten::sort.values_stable` https://github.com/pytorch/pytorch/issues/86750\r\n- [x] `aten::remainder.Tensor_out` https://github.com/pytorch/pytorch/issues/86806\r\n- [x] `aten::hardswish` https://github.com/pytorch/pytorch/issues/86807\r\n- [x] `aten::nansum` https://github.com/pytorch/pytorch/issues/86809\r\n- [x] `aten::fmod.Tensor_out` https://github.com/pytorch/pytorch/issues/86810\r\n- [x] `aten::range` https://github.com/pytorch/pytorch/issues/86990\r\n- [x] `aten::argsort` https://github.com/pytorch/pytorch/issues/86991\r\n- [x] `aten::repeat_interleave` https://github.com/pytorch/pytorch/issues/87219\r\n- [x] `aten::median` https://github.com/pytorch/pytorch/issues/87220\r\n- [x] `aten::trace` https://github.com/pytorch/pytorch/issues/87221\r\n- [x] `aten::im2col` (Falling back to CPU as its mostly used in preprocessing layers)\r\n- [x] `aten::_cdist_forward` https://github.com/pytorch/pytorch/pull/91643\r\n- [x] `aten::native_group_norm_backward` (Implemented by @malfet )\r\n- [x] `aten::grid_sampler_2d` (https://github.com/pytorch/pytorch/pull/94273)\r\n- [x] `aten::upsample_nearest1d_backward.grad_input`\r\n- [x] `aten::upsample_nearest1d.out`\r\n- [x] `aten::repeat_interleave.self_int`\r\n- [x] `aten::nan_to_num.out`\r\n- [x] `aten::unique_consecutive` https://github.com/pytorch/pytorch/pull/88532\r\n- [x] `torch.bincount` https://github.com/pytorch/pytorch/pull/91267\r\n- [x] `aten::_unique2`  https://github.com/pytorch/pytorch/pull/88532\r\n- [x] `aten::unfold` https://github.com/pytorch/pytorch/pull/91266\r\n- [x] `aten::triangular_solve.X` https://github.com/pytorch/pytorch/pull/94345\r\n- [x] `aten::nonzero` https://github.com/pytorch/pytorch/pull/91616\r\n- [x] `aten::_index_put_impl_` (https://github.com/pytorch/pytorch/pull/85672)\r\n- [x] `aten::amax.out` (#79682)\r\n- [X] `aten::_slow_conv2d_forward` (https://github.com/pytorch/pytorch/pull/86303)\r\n- [x] `aten::eye.m_out` (https://github.com/pytorch/pytorch/pull/78408)\r\n- [x] `aten::multinomial` (https://github.com/pytorch/pytorch/pull/80760 ) \r\n- [x] `aten::flip` (#80214)\r\n- [x] `aten::equal` https://github.com/pytorch/pytorch/pull/80195\r\n- [x] `aten::_local_scalar_dense`\r\n- [x] `aten::l1_loss_backward.grad_input` (#80010)\r\n- [x] `aten::glu.out` (#79866)\r\n- [x] ` aten::linspace.out` https://github.com/pytorch/pytorch/pull/78570\r\n- [x]  `aten::arange.out` https://github.com/pytorch/pytorch/pull/78789\r\n- [x] `aten::adaptive_max_pool2d` https://github.com/pytorch/pytorch/pull/78410\r\n- [x] `aten::count_nonzero.dim_IntList`\r\n- [x] `aten::softplus.out` (https://github.com/pytorch/pytorch/pull/78930)\r\n- [x] `aten::index_add.out` https://github.com/pytorch/pytorch/pull/79935\r\n- [x] `aten::normal` (#80297)\r\n- [x] `aten::native_layer_norm_backward` https://github.com/pytorch/pytorch/pull/79189\r\n- [x] `aten::logical_and.out` (#80216)\r\n- [x] `aten::frac.out` (https://github.com/pytorch/pytorch/pull/86625)\r\n- [x] `aten:: masked_select` https://github.com/pytorch/pytorch/pull/85818\r\n- [x] `aten::softplus_backward.grad_input` (#79873)\r\n- [x] `aten::slow_conv_transpose2d.out` (@malfet could be due to incompatibility with torchvision)\r\n- [x] `aten::signbit.out` (https://github.com/pytorch/pytorch/pull/87214)\r\n- [X] `aten::cumsum.out` (https://github.com/pytorch/pytorch/pull/88319)\r\n- [X] `aten::cumprod.out` \r\n- [X] `aten::expm1.out` (https://github.com/pytorch/pytorch/pull/87147)\r\n- [x] `aten::bitwise_xor.Tensor_out` (https://github.com/pytorch/pytorch/pull/82307)\r\n- [x] `aten::bitwise_and.Tensor_out` (https://github.com/pytorch/pytorch/pull/82307)\r\n- [x] `aten::bitwise_or.Tensor_out` (https://github.com/pytorch/pytorch/pull/82307)\r\n- [x] `aten::index.Tensor` (https://github.com/pytorch/pytorch/pull/82507)\r\n- [x] `aten::index.Tensor_out` (https://github.com/pytorch/pytorch/pull/82507)\r\n</details>\r\n\r\n\r\n**Ops not supported by MPS:**\r\nOps that will require either to use the CPU fallback system or a custom Metal kernel.\r\n\r\n- [ ] `aten::lgamma.out`\r\n- [ ] `aten::linalg_householder_product`\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/77764/reactions",
                    "total_count": 429,
                    "+1": 276,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 46,
                    "confused": 6,
                    "heart": 31,
                    "rocket": 53,
                    "eyes": 17
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/77764/timeline",
                "performed_via_github_app": null,
                "state_reason": "reopened"
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782742826",
                "html_url": "https://github.com/pytorch/pytorch/issues/77764#issuecomment-1782742826",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/77764",
                "id": 1782742826,
                "node_id": "IC_kwDOA-j9z85qQn8q",
                "user": {
                    "login": "ToniKoe",
                    "id": 70636071,
                    "node_id": "MDQ6VXNlcjcwNjM2MDcx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/70636071?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ToniKoe",
                    "html_url": "https://github.com/ToniKoe",
                    "followers_url": "https://api.github.com/users/ToniKoe/followers",
                    "following_url": "https://api.github.com/users/ToniKoe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ToniKoe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ToniKoe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ToniKoe/subscriptions",
                    "organizations_url": "https://api.github.com/users/ToniKoe/orgs",
                    "repos_url": "https://api.github.com/users/ToniKoe/repos",
                    "events_url": "https://api.github.com/users/ToniKoe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ToniKoe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:20:44Z",
                "updated_at": "2023-10-27T11:20:44Z",
                "author_association": "NONE",
                "body": "+1 for ```aten::logspace.out```",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782742826/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:20:45Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896898310",
        "type": "WatchEvent",
        "actor": {
            "id": 44167796,
            "login": "AmmarMian",
            "display_login": "AmmarMian",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AmmarMian",
            "avatar_url": "https://avatars.githubusercontent.com/u/44167796?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T11:19:27Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896379810",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 24835382,
            "login": "qqaatw",
            "display_login": "qqaatw",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qqaatw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24835382?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/94162",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/94162",
                "id": 1571707504,
                "node_id": "I_kwDOA-j9z85drlpw",
                "number": 94162,
                "title": "DISABLED test_index_select_scalar (__main__.TestNLLLoss)",
                "user": {
                    "login": "pytorch-bot[bot]",
                    "id": 54816060,
                    "node_id": "MDM6Qm90NTQ4MTYwNjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/pytorch-bot",
                    "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    },
                    {
                        "id": 1301397902,
                        "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                        "name": "module: flaky-tests",
                        "color": "f7e101",
                        "default": false,
                        "description": "Problem is a flaky test in CI"
                    },
                    {
                        "id": 1679533716,
                        "node_id": "MDU6TGFiZWwxNjc5NTMzNzE2",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/skipped",
                        "name": "skipped",
                        "color": "bfdadc",
                        "default": false,
                        "description": "Denotes a (flaky) test currently skipped in CI."
                    },
                    {
                        "id": 4121057428,
                        "node_id": "LA_kwDOA-j9z871oliU",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20mps",
                        "name": "module: mps",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to Apple Metal Performance Shaders framework"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-02-06T00:57:19Z",
                "updated_at": "2023-10-27T10:58:08Z",
                "closed_at": "2023-10-27T10:56:45Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Platforms: mac, macos\r\n\r\nThis test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_index_select_scalar) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/11122655837).\r\n\r\nOver the past 72 hours, it has flakily failed in 2 workflow(s).\r\n\r\n**Debugging instructions (after clicking on the recent samples link):**\r\nTo find relevant log snippets:\r\n1. Click on the workflow logs linked above\r\n2. Grep for `test_index_select_scalar`\r\n\r\n\r\nTest file path: `test_mps.py`\r\n\r\n\r\ncc @kulinseth @albanD @malfet @DenisVieriu97 @razarmehr @abhudev\r\n\r\n```\r\n2023-02-05T21:48:19.5597380Z FAIL [0.002s]: test_index_select_scalar (__main__.TestNLLLoss)\r\n2023-02-05T21:48:19.5597530Z ----------------------------------------------------------------------\r\n2023-02-05T21:48:19.5597590Z Traceback (most recent call last):\r\n2023-02-05T21:48:19.5597760Z   File \"/Users/ec2-user/runner/_work/pytorch/pytorch/test/test_mps.py\", line 5128, in test_index_select_scalar\r\n2023-02-05T21:48:19.5597800Z     helper(22, 0, [])\r\n2023-02-05T21:48:19.5597950Z   File \"/Users/ec2-user/runner/_work/pytorch/pytorch/test/test_mps.py\", line 5125, in helper\r\n2023-02-05T21:48:19.5598020Z     self.assertEqual(idx_result, idx_result_cpu)\r\n2023-02-05T21:48:19.5598240Z   File \"/Users/ec2-user/runner/_work/_temp/conda_environment_4098394330/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 2926, in assertEqual\r\n2023-02-05T21:48:19.5598290Z     assert_equal(\r\n2023-02-05T21:48:19.5598490Z   File \"/Users/ec2-user/runner/_work/_temp/conda_environment_4098394330/lib/python3.9/site-packages/torch/testing/_comparison.py\", line 1244, in assert_equal\r\n2023-02-05T21:48:19.5598550Z     raise error_metas[0].to_error(msg)\r\n2023-02-05T21:48:19.5598610Z AssertionError: Scalars are not close!\r\n2023-02-05T21:48:19.5598620Z \r\n2023-02-05T21:48:19.5598710Z Absolute difference: 0.5 (up to 1e-05 allowed)\r\n2023-02-05T21:48:19.5598810Z Relative difference: 1.0 (up to 1.3e-06 allowed)\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782714500",
                "html_url": "https://github.com/pytorch/pytorch/issues/94162#issuecomment-1782714500",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162",
                "id": 1782714500,
                "node_id": "IC_kwDOA-j9z85qQhCE",
                "user": {
                    "login": "qqaatw",
                    "id": 24835382,
                    "node_id": "MDQ6VXNlcjI0ODM1Mzgy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/24835382?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qqaatw",
                    "html_url": "https://github.com/qqaatw",
                    "followers_url": "https://api.github.com/users/qqaatw/followers",
                    "following_url": "https://api.github.com/users/qqaatw/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qqaatw/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qqaatw/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qqaatw/subscriptions",
                    "organizations_url": "https://api.github.com/users/qqaatw/orgs",
                    "repos_url": "https://api.github.com/users/qqaatw/repos",
                    "events_url": "https://api.github.com/users/qqaatw/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qqaatw/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:58:07Z",
                "updated_at": "2023-10-27T10:58:07Z",
                "author_association": "COLLABORATOR",
                "body": "Closing as this issue seems to be missed by the bot.",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782714500/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:58:08Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896346191",
        "type": "IssuesEvent",
        "actor": {
            "id": 24835382,
            "login": "qqaatw",
            "display_login": "qqaatw",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qqaatw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24835382?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/94162",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/94162",
                "id": 1571707504,
                "node_id": "I_kwDOA-j9z85drlpw",
                "number": 94162,
                "title": "DISABLED test_index_select_scalar (__main__.TestNLLLoss)",
                "user": {
                    "login": "pytorch-bot[bot]",
                    "id": 54816060,
                    "node_id": "MDM6Qm90NTQ4MTYwNjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/pytorch-bot",
                    "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    },
                    {
                        "id": 1301397902,
                        "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                        "name": "module: flaky-tests",
                        "color": "f7e101",
                        "default": false,
                        "description": "Problem is a flaky test in CI"
                    },
                    {
                        "id": 1679533716,
                        "node_id": "MDU6TGFiZWwxNjc5NTMzNzE2",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/skipped",
                        "name": "skipped",
                        "color": "bfdadc",
                        "default": false,
                        "description": "Denotes a (flaky) test currently skipped in CI."
                    },
                    {
                        "id": 4121057428,
                        "node_id": "LA_kwDOA-j9z871oliU",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20mps",
                        "name": "module: mps",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to Apple Metal Performance Shaders framework"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-02-06T00:57:19Z",
                "updated_at": "2023-10-27T10:56:45Z",
                "closed_at": "2023-10-27T10:56:45Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Platforms: mac, macos\r\n\r\nThis test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/failure/test_index_select_scalar) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/11122655837).\r\n\r\nOver the past 72 hours, it has flakily failed in 2 workflow(s).\r\n\r\n**Debugging instructions (after clicking on the recent samples link):**\r\nTo find relevant log snippets:\r\n1. Click on the workflow logs linked above\r\n2. Grep for `test_index_select_scalar`\r\n\r\n\r\nTest file path: `test_mps.py`\r\n\r\n\r\ncc @kulinseth @albanD @malfet @DenisVieriu97 @razarmehr @abhudev\r\n\r\n```\r\n2023-02-05T21:48:19.5597380Z FAIL [0.002s]: test_index_select_scalar (__main__.TestNLLLoss)\r\n2023-02-05T21:48:19.5597530Z ----------------------------------------------------------------------\r\n2023-02-05T21:48:19.5597590Z Traceback (most recent call last):\r\n2023-02-05T21:48:19.5597760Z   File \"/Users/ec2-user/runner/_work/pytorch/pytorch/test/test_mps.py\", line 5128, in test_index_select_scalar\r\n2023-02-05T21:48:19.5597800Z     helper(22, 0, [])\r\n2023-02-05T21:48:19.5597950Z   File \"/Users/ec2-user/runner/_work/pytorch/pytorch/test/test_mps.py\", line 5125, in helper\r\n2023-02-05T21:48:19.5598020Z     self.assertEqual(idx_result, idx_result_cpu)\r\n2023-02-05T21:48:19.5598240Z   File \"/Users/ec2-user/runner/_work/_temp/conda_environment_4098394330/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py\", line 2926, in assertEqual\r\n2023-02-05T21:48:19.5598290Z     assert_equal(\r\n2023-02-05T21:48:19.5598490Z   File \"/Users/ec2-user/runner/_work/_temp/conda_environment_4098394330/lib/python3.9/site-packages/torch/testing/_comparison.py\", line 1244, in assert_equal\r\n2023-02-05T21:48:19.5598550Z     raise error_metas[0].to_error(msg)\r\n2023-02-05T21:48:19.5598610Z AssertionError: Scalars are not close!\r\n2023-02-05T21:48:19.5598620Z \r\n2023-02-05T21:48:19.5598710Z Absolute difference: 0.5 (up to 1e-05 allowed)\r\n2023-02-05T21:48:19.5598810Z Relative difference: 1.0 (up to 1.3e-06 allowed)\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/94162/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:56:46Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896063157",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 129310466,
            "login": "p1kit",
            "display_login": "p1kit",
            "gravatar_id": "",
            "url": "https://api.github.com/users/p1kit",
            "avatar_url": "https://avatars.githubusercontent.com/u/129310466?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/109266",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/109266/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/109266/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/109266/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/109266",
                "id": 1895439627,
                "node_id": "I_kwDOA-j9z85w-h0L",
                "number": 109266,
                "title": "Add a unittest for ModuleWrapPolicy callable",
                "user": {
                    "login": "rohan-varma",
                    "id": 8039770,
                    "node_id": "MDQ6VXNlcjgwMzk3NzA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8039770?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rohan-varma",
                    "html_url": "https://github.com/rohan-varma",
                    "followers_url": "https://api.github.com/users/rohan-varma/followers",
                    "following_url": "https://api.github.com/users/rohan-varma/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rohan-varma/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rohan-varma/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rohan-varma/subscriptions",
                    "organizations_url": "https://api.github.com/users/rohan-varma/orgs",
                    "repos_url": "https://api.github.com/users/rohan-varma/repos",
                    "events_url": "https://api.github.com/users/rohan-varma/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rohan-varma/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 679953883,
                        "node_id": "MDU6TGFiZWw2Nzk5NTM4ODM=",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20distributed",
                        "name": "oncall: distributed",
                        "color": "f7e101",
                        "default": false,
                        "description": "Add this issue/PR to distributed oncall triage queue"
                    },
                    {
                        "id": 1150417147,
                        "node_id": "MDU6TGFiZWwxMTUwNDE3MTQ3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/good%20first%20issue",
                        "name": "good first issue",
                        "color": "34c182",
                        "default": true,
                        "description": ""
                    },
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    },
                    {
                        "id": 2234660636,
                        "node_id": "MDU6TGFiZWwyMjM0NjYwNjM2",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/pt_distributed_rampup",
                        "name": "pt_distributed_rampup",
                        "color": "e99695",
                        "default": false,
                        "description": "Ramp up tasks for new developers on PT distributed"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-09-14T00:35:19Z",
                "updated_at": "2023-10-27T10:44:52Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "### \ud83d\ude80 The feature, motivation and pitch\n\nWe made ModuleWrapPolicy a callable in https://github.com/pytorch/pytorch/pull/109117, and should add an appropriate unittest. \n\n### Alternatives\n\n_No response_\n\n### Additional context\n\n_No response_\n\ncc @mrshenli @pritamdamania87 @zhaojuanmao @satgera @gqchen @aazzolini @osalpekar @jiayisuse @H-Huang @kwen2501 @awgu @penguinwu",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/109266/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/109266/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782698258",
                "html_url": "https://github.com/pytorch/pytorch/issues/109266#issuecomment-1782698258",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/109266",
                "id": 1782698258,
                "node_id": "IC_kwDOA-j9z85qQdES",
                "user": {
                    "login": "p1kit",
                    "id": 129310466,
                    "node_id": "U_kgDOB7UfAg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/129310466?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/p1kit",
                    "html_url": "https://github.com/p1kit",
                    "followers_url": "https://api.github.com/users/p1kit/followers",
                    "following_url": "https://api.github.com/users/p1kit/following{/other_user}",
                    "gists_url": "https://api.github.com/users/p1kit/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/p1kit/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/p1kit/subscriptions",
                    "organizations_url": "https://api.github.com/users/p1kit/orgs",
                    "repos_url": "https://api.github.com/users/p1kit/repos",
                    "events_url": "https://api.github.com/users/p1kit/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/p1kit/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:44:51Z",
                "updated_at": "2023-10-27T10:44:51Z",
                "author_association": "NONE",
                "body": "Hi, I noticed there's an existing PR for this issue but it's been a while since the last update. \r\nIf there's a need for additional help or if the original contributor is busy, I'd be happy to jump in and help.",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782698258/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:44:52Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32896058823",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 95547131,
            "login": "ffdown",
            "display_login": "ffdown",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ffdown",
            "avatar_url": "https://avatars.githubusercontent.com/u/95547131?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/87595",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/87595/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/87595/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/87595/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/87595",
                "id": 1420810328,
                "node_id": "I_kwDOA-j9z85Ur9hY",
                "number": 87595,
                "title": "nvrtc: error: invalid value for --gpu-architecture (-arch)",
                "user": {
                    "login": "HeaoYe",
                    "id": 67638761,
                    "node_id": "MDQ6VXNlcjY3NjM4NzYx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67638761?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/HeaoYe",
                    "html_url": "https://github.com/HeaoYe",
                    "followers_url": "https://api.github.com/users/HeaoYe/followers",
                    "following_url": "https://api.github.com/users/HeaoYe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/HeaoYe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/HeaoYe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/HeaoYe/subscriptions",
                    "organizations_url": "https://api.github.com/users/HeaoYe/orgs",
                    "repos_url": "https://api.github.com/users/HeaoYe/repos",
                    "events_url": "https://api.github.com/users/HeaoYe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/HeaoYe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 443484135,
                        "node_id": "MDU6TGFiZWw0NDM0ODQxMzU=",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/high%20priority",
                        "name": "high priority",
                        "color": "F22613",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 466131885,
                        "node_id": "MDU6TGFiZWw0NjYxMzE4ODU=",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triage%20review",
                        "name": "triage review",
                        "color": "cc317c",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 1076930055,
                        "node_id": "MDU6TGFiZWwxMDc2OTMwMDU1",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20cuda",
                        "name": "module: cuda",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to torch.cuda, and CUDA support in general"
                    },
                    {
                        "id": 3777797557,
                        "node_id": "LA_kwDOA-j9z87hLJ21",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20jiterator",
                        "name": "module: jiterator",
                        "color": "504978",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "eqy",
                    "id": 2239616,
                    "node_id": "MDQ6VXNlcjIyMzk2MTY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2239616?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eqy",
                    "html_url": "https://github.com/eqy",
                    "followers_url": "https://api.github.com/users/eqy/followers",
                    "following_url": "https://api.github.com/users/eqy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eqy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eqy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eqy/subscriptions",
                    "organizations_url": "https://api.github.com/users/eqy/orgs",
                    "repos_url": "https://api.github.com/users/eqy/repos",
                    "events_url": "https://api.github.com/users/eqy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eqy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "eqy",
                        "id": 2239616,
                        "node_id": "MDQ6VXNlcjIyMzk2MTY=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/2239616?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/eqy",
                        "html_url": "https://github.com/eqy",
                        "followers_url": "https://api.github.com/users/eqy/followers",
                        "following_url": "https://api.github.com/users/eqy/following{/other_user}",
                        "gists_url": "https://api.github.com/users/eqy/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/eqy/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/eqy/subscriptions",
                        "organizations_url": "https://api.github.com/users/eqy/orgs",
                        "repos_url": "https://api.github.com/users/eqy/repos",
                        "events_url": "https://api.github.com/users/eqy/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/eqy/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/milestones/31",
                    "html_url": "https://github.com/pytorch/pytorch/milestone/31",
                    "labels_url": "https://api.github.com/repos/pytorch/pytorch/milestones/31/labels",
                    "id": 7993494,
                    "node_id": "MI_kwDOA-j9z84AefiW",
                    "number": 31,
                    "title": "1.13.0",
                    "description": "",
                    "creator": {
                        "login": "atalman",
                        "id": 7563158,
                        "node_id": "MDQ6VXNlcjc1NjMxNTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/7563158?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/atalman",
                        "html_url": "https://github.com/atalman",
                        "followers_url": "https://api.github.com/users/atalman/followers",
                        "following_url": "https://api.github.com/users/atalman/following{/other_user}",
                        "gists_url": "https://api.github.com/users/atalman/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/atalman/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/atalman/subscriptions",
                        "organizations_url": "https://api.github.com/users/atalman/orgs",
                        "repos_url": "https://api.github.com/users/atalman/repos",
                        "events_url": "https://api.github.com/users/atalman/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/atalman/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 45,
                    "state": "closed",
                    "created_at": "2022-05-18T15:52:29Z",
                    "updated_at": "2023-02-17T02:42:25Z",
                    "due_on": null,
                    "closed_at": "2022-11-02T17:59:02Z"
                },
                "comments": 19,
                "created_at": "2022-10-24T13:12:47Z",
                "updated_at": "2023-10-27T10:44:41Z",
                "closed_at": "2022-10-24T18:41:43Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### \ud83d\udc1b Describe the bug\n\nThis problem only occurs when I use RTX4090.\r\n\r\n```python\r\nimport torch\r\na = torch.tensor([2, 2, 3]).cuda(0)\r\nprint(a.prod())\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"xxxxxxx.py\", line 3, in <module>\r\n    print(a.prod())\r\nRuntimeError: \r\n  #define POS_INFINITY __int_as_float(0x7f800000)\r\n  #define INFINITY POS_INFINITY\r\n  #define NEG_INFINITY __int_as_float(0xff800000)\r\n  #define NAN __int_as_float(0x7fffffff)\r\n\r\n  typedef long long int int64_t;\r\n  typedef unsigned int uint32_t;\r\n  typedef signed char int8_t;\r\n  typedef unsigned char uint8_t;  // NOTE: this MUST be \"unsigned char\"! \"char\" is equivalent to \"signed char\"\r\n  typedef short int16_t;\r\n  static_assert(sizeof(int64_t) == 8, \"expected size does not match\");\r\n  static_assert(sizeof(uint32_t) == 4, \"expected size does not match\");\r\n  static_assert(sizeof(int8_t) == 1, \"expected size does not match\");\r\n  constexpr int num_threads = 128;\r\n  constexpr int thread_work_size = 4; // TODO: make template substitution once we decide where those vars live\r\n  constexpr int block_work_size = thread_work_size * num_threads;\r\n  //TODO use _assert_fail, because assert is disabled in non-debug builds\r\n  #define ERROR_UNSUPPORTED_CAST assert(false);\r\n\r\n  \r\n  \r\n\r\n\r\n  namespace std {\r\n  \r\n  using ::signbit;\r\n  using ::isfinite;\r\n  using ::isinf;\r\n  using ::isnan;\r\n  \r\n  using ::abs;\r\n  \r\n  using ::acos;\r\n  using ::acosf;\r\n  using ::asin;\r\n  using ::asinf;\r\n  using ::atan;\r\n  using ::atanf;\r\n  using ::atan2;\r\n  using ::atan2f;\r\n  using ::ceil;\r\n  using ::ceilf;\r\n  using ::cos;\r\n  using ::cosf;\r\n  using ::cosh;\r\n  using ::coshf;\r\n  \r\n  using ::exp;\r\n  using ::expf;\r\n  \r\n  using ::fabs;\r\n  using ::fabsf;\r\n  using ::floor;\r\n  using ::floorf;\r\n  \r\n  using ::fmod;\r\n  using ::fmodf;\r\n  \r\n  using ::frexp;\r\n  using ::frexpf;\r\n  using ::ldexp;\r\n  using ::ldexpf;\r\n  \r\n  using ::log;\r\n  using ::logf;\r\n  \r\n  using ::log10;\r\n  using ::log10f;\r\n  using ::modf;\r\n  using ::modff;\r\n  \r\n  using ::pow;\r\n  using ::powf;\r\n  \r\n  using ::sin;\r\n  using ::sinf;\r\n  using ::sinh;\r\n  using ::sinhf;\r\n  \r\n  using ::sqrt;\r\n  using ::sqrtf;\r\n  using ::tan;\r\n  using ::tanf;\r\n  \r\n  using ::tanh;\r\n  using ::tanhf;\r\n  \r\n  using ::acosh;\r\n  using ::acoshf;\r\n  using ::asinh;\r\n  using ::asinhf;\r\n  using ::atanh;\r\n  using ::atanhf;\r\n  using ::cbrt;\r\n  using ::cbrtf;\r\n  \r\n  using ::copysign;\r\n  using ::copysignf;\r\n  \r\n  using ::erf;\r\n  using ::erff;\r\n  using ::erfc;\r\n  using ::erfcf;\r\n  using ::exp2;\r\n  using ::exp2f;\r\n  using ::expm1;\r\n  using ::expm1f;\r\n  using ::fdim;\r\n  using ::fdimf;\r\n  using ::fmaf;\r\n  using ::fma;\r\n  using ::fmax;\r\n  using ::fmaxf;\r\n  using ::fmin;\r\n  using ::fminf;\r\n  using ::hypot;\r\n  using ::hypotf;\r\n  using ::ilogb;\r\n  using ::ilogbf;\r\n  using ::lgamma;\r\n  using ::lgammaf;\r\n  using ::llrint;\r\n  using ::llrintf;\r\n  using ::llround;\r\n  using ::llroundf;\r\n  using ::log1p;\r\n  using ::log1pf;\r\n  using ::log2;\r\n  using ::log2f;\r\n  using ::logb;\r\n  using ::logbf;\r\n  using ::lrint;\r\n  using ::lrintf;\r\n  using ::lround;\r\n  using ::lroundf;\r\n  \r\n  using ::nan;\r\n  using ::nanf;\r\n  \r\n  using ::nearbyint;\r\n  using ::nearbyintf;\r\n  using ::nextafter;\r\n  using ::nextafterf;\r\n  using ::remainder;\r\n  using ::remainderf;\r\n  using ::remquo;\r\n  using ::remquof;\r\n  using ::rint;\r\n  using ::rintf;\r\n  using ::round;\r\n  using ::roundf;\r\n  using ::scalbln;\r\n  using ::scalblnf;\r\n  using ::scalbn;\r\n  using ::scalbnf;\r\n  using ::tgamma;\r\n  using ::tgammaf;\r\n  using ::trunc;\r\n  using ::truncf;\r\n  \r\n  } // namespace std\r\n  \r\n  \r\n\r\n  // NB: Order matters for this macro; it is relied upon in\r\n  // _promoteTypesLookup and the serialization format.\r\n  // Note, some types have ctype as void because we don't support them in codegen\r\n  #define AT_FORALL_SCALAR_TYPES_WITH_COMPLEX(_) \\\r\n  _(uint8_t, Byte) /* 0 */                               \\\r\n  _(int8_t, Char) /* 1 */                                \\\r\n  _(int16_t, Short) /* 2 */                              \\\r\n  _(int, Int) /* 3 */                                    \\\r\n  _(int64_t, Long) /* 4 */                               \\\r\n  _(at::Half, Half) /* 5 */                                  \\\r\n  _(float, Float) /* 6 */                                \\\r\n  _(double, Double) /* 7 */                              \\\r\n  _(std::complex<at::Half>, ComplexHalf) /* 8 */        \\\r\n  _(std::complex<float>, ComplexFloat) /* 9 */                          \\\r\n  _(std::complex<double>, ComplexDouble) /* 10 */                         \\\r\n  _(bool, Bool) /* 11 */                                 \\\r\n  _(void, QInt8) /* 12 */                          \\\r\n  _(void, QUInt8) /* 13 */                        \\\r\n  _(void, QInt32) /* 14 */                        \\\r\n  _(at::BFloat16, BFloat16) /* 15 */                             \\\r\n\r\n  #define AT_FORALL_SCALAR_TYPES_WITH_COMPLEX_EXCEPT_QINT(_)       \\\r\n  _(uint8_t, Byte)                                                 \\\r\n  _(int8_t, Char)                                                  \\\r\n  _(int16_t, Short)                                                \\\r\n  _(int, Int)                                                      \\\r\n  _(int64_t, Long)                                                 \\\r\n  _(at::Half, Half)                                                \\\r\n  _(float, Float)                                                  \\\r\n  _(double, Double)                                                \\\r\n  _(std::complex<at::Half>, ComplexHalf)                           \\\r\n  _(std::complex<float>, ComplexFloat)                             \\\r\n  _(std::complex<double>, ComplexDouble)                           \\\r\n  _(bool, Bool)                                                    \\\r\n  _(at::BFloat16, BFloat16)\r\n\r\n\r\n  enum class ScalarType : int8_t {\r\n  #define DEFINE_ENUM(_1, n) n,\r\n  AT_FORALL_SCALAR_TYPES_WITH_COMPLEX(DEFINE_ENUM)\r\n  #undef DEFINE_ENUM\r\n      Undefined,\r\n  NumOptions\r\n  };\r\n\r\n  template <typename T, int size>\r\n  struct Array {\r\n  T data[size];\r\n\r\n  __device__ T operator[](int i) const {\r\n      return data[i];\r\n  }\r\n  __device__ T& operator[](int i) {\r\n      return data[i];\r\n  }\r\n  Array() = default;\r\n  Array(const Array&) = default;\r\n  Array& operator=(const Array&) = default;\r\n  __device__ Array(T x) {\r\n    for (int i = 0; i < size; i++) {\r\n      data[i] = x;\r\n    }\r\n  }\r\n  };\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n\r\n\r\n  template <typename T>\r\n  struct DivMod {\r\n  T div;\r\n  T mod;\r\n\r\n  __device__ DivMod(T _div, T _mod) {\r\n      div = _div;\r\n      mod = _mod;\r\n  }\r\n  };\r\n\r\n  //<unsigned int>\r\n  struct IntDivider {\r\n  IntDivider() = default;\r\n\r\n  __device__ inline unsigned int div(unsigned int n) const {\r\n  unsigned int t = __umulhi(n, m1);\r\n  return (t + n) >> shift;\r\n  }\r\n\r\n  __device__ inline unsigned int mod(unsigned int n) const {\r\n  return n - div(n) * divisor;\r\n  }\r\n\r\n  __device__ inline DivMod<unsigned int> divmod(unsigned int n) const {\r\n  unsigned int q = div(n);\r\n  return DivMod<unsigned int>(q, n - q * divisor);\r\n  }\r\n\r\n  unsigned int divisor;  // d above.\r\n  unsigned int m1;  // Magic number: m' above.\r\n  unsigned int shift;  // Shift amounts.\r\n  };\r\n\r\n  template <int NARGS>\r\n  struct TrivialOffsetCalculator {\r\n    // The offset for each argument. Wrapper around fixed-size array.\r\n    // The offsets are in # of elements, not in bytes.\r\n    Array<unsigned int, NARGS> get(unsigned int linear_idx) const {\r\n      Array<unsigned int, NARGS> offsets;\r\n      #pragma unroll\r\n      for (int arg = 0; arg < NARGS; arg++) {\r\n        offsets[arg] = linear_idx;\r\n      }\r\n      return offsets;\r\n    }\r\n  };\r\n\r\n  template<int NARGS>\r\n  struct OffsetCalculator {\r\n  OffsetCalculator() = default;\r\n  __device__ __forceinline__ Array<unsigned int, NARGS> get(unsigned int linear_idx) const {\r\n      Array<unsigned int, NARGS> offsets;\r\n      #pragma unroll\r\n      for (int arg = 0; arg < NARGS; ++arg) {\r\n      offsets[arg] = 0;\r\n      }\r\n\r\n      #pragma unroll\r\n      for (int dim = 0; dim < 25; ++dim) {\r\n      if (dim == dims) {\r\n          break;\r\n      }\r\n\r\n      auto divmod = sizes_[dim].divmod(linear_idx);\r\n      linear_idx = divmod.div;\r\n\r\n      #pragma unroll\r\n      for (int arg = 0; arg < NARGS; ++arg) {\r\n          offsets[arg] += divmod.mod * strides_[dim][arg];\r\n      }\r\n      //printf(\"offset calc thread dim size stride offset %d %d %d %d %d %d %d %d\\n\",\r\n      //threadIdx.x, dim, sizes_[dim].divisor, strides_[dim][0], offsets[0], linear_idx, divmod.div, divmod.mod);\r\n      }\r\n      return offsets;\r\n  }\r\n\r\n    int dims;\r\n    IntDivider sizes_[25];\r\n    // NOTE: this approach will not support nInputs == 0\r\n    unsigned int strides_[25][NARGS];\r\n  };\r\n\r\n\r\n\r\n  #define C10_HOST_DEVICE __host__ __device__\r\n  #define C10_DEVICE __device__\r\n\r\n  template <typename T>\r\n  __device__ __forceinline__ T WARP_SHFL_DOWN(T value, unsigned int delta, int width = warpSize, unsigned int mask = 0xffffffff)\r\n  {\r\n    return __shfl_down_sync(mask, value, delta, width);\r\n  }\r\n\r\n\r\n  #if 0\r\n  template <typename T>\r\n  __device__ __forceinline__ std::complex<T> WARP_SHFL_DOWN(std::complex<T> value, unsigned int delta, int width = warpSize, unsigned int mask = 0xffffffff)\r\n  {\r\n    return std::complex<T>(\r\n        __shfl_down_sync(mask, value.real(), delta, width),\r\n        __shfl_down_sync(mask, value.imag(), delta, width));\r\n  }\r\n  #endif\r\n\r\n  // aligned vector generates vectorized load/store on CUDA\r\n  template<typename scalar_t, int vec_size>\r\n  struct alignas(sizeof(scalar_t) * vec_size) aligned_vector {\r\n    scalar_t val[vec_size];\r\n  };\r\n\r\n\r\n  C10_HOST_DEVICE static void reduce_fraction(size_t &numerator, size_t &denominator) {\r\n    // get GCD of num and denom using Euclid's algorithm.\r\n    // Can replace this with std::gcd if we ever support c++17.\r\n    size_t a = denominator;\r\n    size_t b = numerator;\r\n    while (b != 0) {\r\n        a %= b;\r\n        // swap(a,b)\r\n        size_t tmp = a;\r\n        a = b;\r\n        b = tmp;\r\n    }\r\n\r\n    // a is now the GCD\r\n    numerator /= a;\r\n    denominator /= a;\r\n  }\r\n\r\n\r\n\r\n\r\n  struct ReduceConfig {\r\n  //has to match host-side ReduceConfig in the eager code\r\n  static constexpr int BLOCK_X = 0;\r\n  static constexpr int BLOCK_Y = 1;\r\n  static constexpr int CTA = 2;\r\n\r\n  static constexpr int input_vec_size = 4;\r\n  int element_size_bytes;\r\n  int num_inputs;\r\n  int num_outputs;\r\n  int step_input = 1;\r\n  int step_output = 1;\r\n  int ctas_per_output = 1;\r\n  int input_mult[3] = {0, 0, 0};\r\n  int output_mult[2] = {0, 0};\r\n\r\n  int block_width;\r\n  int block_height;\r\n  int num_threads;\r\n\r\n  bool vectorize_input = false;\r\n  int output_vec_size = 1;\r\n\r\n  C10_HOST_DEVICE bool should_block_x_reduce() const {\r\n    return input_mult[BLOCK_X] != 0;\r\n  }\r\n\r\n  C10_HOST_DEVICE bool should_block_y_reduce() const {\r\n    return input_mult[BLOCK_Y] != 0;\r\n  }\r\n\r\n  C10_HOST_DEVICE bool should_global_reduce() const {\r\n    return input_mult[CTA] != 0;\r\n  }\r\n\r\n  C10_DEVICE bool should_store(int output_idx) const {\r\n    return output_idx < num_outputs &&\r\n      (!should_block_x_reduce() || threadIdx.x == 0) &&\r\n      (!should_block_y_reduce() || threadIdx.y == 0);\r\n  }\r\n\r\n  C10_DEVICE bool should_reduce_tail() const {\r\n    return (!should_block_y_reduce() || threadIdx.y == 0) &&\r\n      (!should_global_reduce() || blockIdx.y == 0);\r\n  }\r\n\r\n  C10_HOST_DEVICE int input_idx() const {\r\n    int lane = threadIdx.x;\r\n    int warp = threadIdx.y;\r\n    int cta2 = blockIdx.y;\r\n    return (lane * input_mult[BLOCK_X] +\r\n            warp * input_mult[BLOCK_Y] +\r\n            cta2 * input_mult[CTA]);\r\n  }\r\n\r\n  template <int output_vec_size>\r\n  C10_HOST_DEVICE int output_idx() const {\r\n    int lane = threadIdx.x;\r\n    int warp = threadIdx.y;\r\n    int cta1 = blockIdx.x;\r\n    return (lane * output_mult[BLOCK_X] +\r\n            warp * output_mult[BLOCK_Y] +\r\n            cta1 * step_output) * output_vec_size;\r\n  }\r\n\r\n  C10_DEVICE int shared_memory_offset(int offset) const {\r\n    return threadIdx.x + (threadIdx.y + offset) * blockDim.x;\r\n  }\r\n\r\n  C10_DEVICE int staging_memory_offset(int cta2) const {\r\n    int offset = cta2 + blockIdx.x * gridDim.y;\r\n    if (!should_block_x_reduce()) {\r\n      offset = threadIdx.x + offset * blockDim.x;\r\n    }\r\n    return offset;\r\n  }\r\n\r\n\r\n  };\r\n\r\n\r\n//TODO this will need to be different for more generic reduction functions\r\nnamespace reducer {\r\n\r\n  using scalar_t = int64_t;\r\n  using arg_t = int64_t;\r\n  using out_scalar_t = int64_t;\r\n\r\n\r\n  inline __device__ arg_t combine(arg_t a, arg_t b) { return a * b; }\r\n\r\n  inline __device__ out_scalar_t project(arg_t arg) {\r\n    return (out_scalar_t) arg;\r\n  }\r\n\r\n  inline __device__ arg_t warp_shfl_down(arg_t arg, int offset) {\r\n    return WARP_SHFL_DOWN(arg, offset);\r\n  }\r\n\r\n  inline __device__ arg_t translate_idx(arg_t acc, int64_t /*idx*/) {\r\n    return acc;\r\n  }\r\n\r\n  // wrap a normal reduction that ignores the index\r\n  inline __device__ arg_t reduce(arg_t acc, arg_t val, int64_t idx) {\r\n     return combine(acc, val);\r\n  }\r\n}\r\n\r\n\r\nstruct ReduceJitOp {\r\n  using scalar_t = int64_t;\r\n  using arg_t = int64_t;\r\n  using out_scalar_t = int64_t;\r\n\r\n  using InputCalculator = OffsetCalculator<1>;\r\n  using OutputCalculator = OffsetCalculator<2>;\r\n\r\n//   static constexpr bool can_accumulate_in_output =\r\n//     std::is_convertible<arg_t, out_scalar_t>::value\r\n//     && std::is_convertible<out_scalar_t, arg_t>::value;\r\n\r\n  static constexpr int input_vec_size = ReduceConfig::input_vec_size;\r\n\r\n  arg_t ident;\r\n  ReduceConfig config;\r\n  InputCalculator input_calc;\r\n  OutputCalculator output_calc;\r\n  const void* src;\r\n  const char* dst[2]; //it accepts at most two destinations\r\n  // acc_buf used for accumulation among sub Tensor Iterator when accumulation on\r\n  // output is not permissible\r\n  void* acc_buf;\r\n  // cta_buf used for accumulation between blocks during global reduction\r\n  void* cta_buf;\r\n  int* semaphores;\r\n  int64_t base_idx;\r\n  bool accumulate;\r\n  bool final_output;\r\n  int noutputs;\r\n\r\n\r\n  C10_DEVICE void run() const {\r\n    extern __shared__ char shared_memory[];\r\n    uint32_t output_idx = config.output_idx<1>();\r\n    uint32_t input_idx = config.input_idx();\r\n    auto base_offsets1 = output_calc.get(output_idx)[1];\r\n\r\n    using arg_vec_t = Array<arg_t, 1>;\r\n    arg_vec_t value;\r\n\r\n    if (output_idx < config.num_outputs && input_idx < config.num_inputs) {\r\n      const scalar_t* input_slice = (const scalar_t*)((const char*)src + base_offsets1);\r\n\r\n      value = thread_reduce<1>(input_slice);\r\n    }\r\n\r\n    if (config.should_block_y_reduce()) {\r\n      value = block_y_reduce<1>(value, shared_memory);\r\n    }\r\n    if (config.should_block_x_reduce()) {\r\n      value = block_x_reduce<1>(value, shared_memory);\r\n    }\r\n\r\n    using out_ptr_vec_t = Array<out_scalar_t*, 1>;\r\n    using offset_vec_t = Array<uint32_t, 1>;\r\n    offset_vec_t base_offsets;\r\n    out_ptr_vec_t out;\r\n\r\n    #pragma unroll\r\n    for (int i = 0; i < 1; i++) {\r\n      base_offsets[i] = output_calc.get(output_idx + i)[0];\r\n      out[i] = (out_scalar_t*)((char*)dst[0] + base_offsets[i]);\r\n    }\r\n\r\n    arg_vec_t* acc = nullptr;\r\n    if (acc_buf != nullptr) {\r\n      size_t numerator = sizeof(arg_t);\r\n      size_t denominator = sizeof(out_scalar_t);\r\n      reduce_fraction(numerator, denominator);\r\n      acc = (arg_vec_t*)((char*)acc_buf + (base_offsets[0] * numerator / denominator));\r\n    }\r\n\r\n    if (config.should_global_reduce()) {\r\n      value = global_reduce<1>(value, acc, shared_memory);\r\n    } else if (config.should_store(output_idx)) {\r\n      if (accumulate) {\r\n        #pragma unroll\r\n        for (int i = 0; i < 1; i++) {\r\n          value[i] = reducer::translate_idx(value[i], base_idx);\r\n        }\r\n      }\r\n\r\n      if (acc == nullptr) {\r\n        if (accumulate) {\r\n          value = accumulate_in_output<1>(out, value);\r\n        }\r\n        if (final_output) {\r\n          set_results_to_output<1>(value, base_offsets);\r\n        } else {\r\n          #pragma unroll\r\n          for (int i = 0; i < 1; i++) {\r\n            *(out[i]) = get_accumulated_output(out[i], value[i]);\r\n          }\r\n        }\r\n      } else {\r\n        if (accumulate) {\r\n          #pragma unroll\r\n          for (int i = 0; i < 1; i++) {\r\n            value[i] = reducer::combine((*acc)[i], value[i]);\r\n          }\r\n        }\r\n        if (final_output) {\r\n          set_results_to_output<1>(value, base_offsets);\r\n        } else {\r\n          *acc = value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  template <int output_vec_size>\r\n  C10_DEVICE Array<arg_t, output_vec_size> thread_reduce(const scalar_t* data) const {\r\n    if (config.vectorize_input) {\r\n      assert(output_vec_size == 1);\r\n      // reduce at the header of input_slice where memory is not aligned,\r\n      // so that thread_reduce will have an aligned memory to work on.\r\n      return {input_vectorized_thread_reduce_impl(data)};\r\n    } else {\r\n      uint32_t element_stride = input_calc.strides_[0][0] / sizeof(scalar_t);\r\n      bool is_contiguous = (input_calc.dims == 1 && element_stride == 1);\r\n      if (is_contiguous) {\r\n        return thread_reduce_impl<output_vec_size>(data, [](uint32_t idx) { return idx; });\r\n      } else if (input_calc.dims == 1) {\r\n        return thread_reduce_impl<output_vec_size>(data, [&](uint32_t idx) { return idx * element_stride; });\r\n      } else {\r\n        return thread_reduce_impl<output_vec_size>(data, [&](uint32_t idx) { return input_calc.get(idx)[0] / sizeof(scalar_t); });\r\n      }\r\n    }\r\n  }\r\n\r\n  C10_DEVICE arg_t input_vectorized_thread_reduce_impl(const scalar_t* data) const {\r\n    uint32_t end = config.num_inputs;\r\n\r\n    // Handle the head of input slice where data is not aligned\r\n    arg_t value = ident;\r\n    constexpr int align_bytes = alignof(aligned_vector<scalar_t, input_vec_size>);\r\n    constexpr int align_elements = align_bytes / sizeof(scalar_t);\r\n    int shift = ((int64_t)data) % align_bytes / sizeof(scalar_t);\r\n    if (shift > 0) {\r\n      data -= shift;\r\n      end += shift;\r\n      if(threadIdx.x >= shift && threadIdx.x < align_elements && config.should_reduce_tail()){\r\n        value = reducer::reduce(value, data[threadIdx.x], threadIdx.x - shift);\r\n      }\r\n      end -= align_elements;\r\n      data += align_elements;\r\n      shift = align_elements - shift;\r\n    }\r\n\r\n    // Do the vectorized reduction\r\n    using load_t = aligned_vector<scalar_t, input_vec_size>;\r\n\r\n    uint32_t idx = config.input_idx();\r\n    const uint32_t stride = config.step_input;\r\n\r\n    // Multiple accumulators to remove dependency between unrolled loops.\r\n    arg_t value_list[input_vec_size];\r\n    value_list[0] = value;\r\n\r\n    #pragma unroll\r\n    for (int i = 1; i < input_vec_size; i++) {\r\n      value_list[i] = ident;\r\n    }\r\n\r\n    scalar_t values[input_vec_size];\r\n\r\n    load_t *values_vector = reinterpret_cast<load_t*>(&values[0]);\r\n\r\n    while (idx * input_vec_size + input_vec_size - 1 < end) {\r\n      *values_vector = reinterpret_cast<const load_t*>(data)[idx];\r\n      #pragma unroll\r\n      for (uint32_t i = 0; i < input_vec_size; i++) {\r\n        value_list[i] = reducer::reduce(value_list[i], values[i], shift + idx * input_vec_size + i);\r\n      }\r\n      idx += stride;\r\n    }\r\n\r\n    // tail\r\n    uint32_t tail_start = end - end % input_vec_size;\r\n    if (config.should_reduce_tail()) {\r\n      int idx = tail_start + threadIdx.x;\r\n      if (idx < end) {\r\n        value_list[0] = reducer::reduce(value_list[0], data[idx], idx + shift);\r\n      }\r\n    }\r\n\r\n    // combine accumulators\r\n    #pragma unroll\r\n    for (int i = 1; i < input_vec_size; i++) {\r\n      value_list[0] = reducer::combine(value_list[0], value_list[i]);\r\n    }\r\n    return value_list[0];\r\n  }\r\n\r\n  template <int output_vec_size, typename offset_calc_t>\r\n  C10_DEVICE Array<arg_t, output_vec_size> thread_reduce_impl(const scalar_t* data_, offset_calc_t calc) const {\r\n    uint32_t idx = config.input_idx();\r\n    const uint32_t end = config.num_inputs;\r\n    const uint32_t stride = config.step_input;\r\n    const int vt0=4;\r\n\r\n    using arg_vec_t = Array<arg_t, output_vec_size>;\r\n    using load_t = aligned_vector<scalar_t, output_vec_size>;\r\n    const load_t* data = reinterpret_cast<const load_t*>(data_);\r\n\r\n    // Multiple accumulators to remove dependency between unrolled loops.\r\n    arg_vec_t value_list[vt0];\r\n\r\n    #pragma unroll\r\n    for (int i = 0; i < vt0; i++) {\r\n      #pragma unroll\r\n      for (int j = 0; j < output_vec_size; j++) {\r\n        value_list[i][j] = ident;\r\n      }\r\n    }\r\n\r\n    load_t values[vt0];\r\n\r\n    while (idx + (vt0 - 1) * stride < end) {\r\n      #pragma unroll\r\n      for (uint32_t i = 0; i < vt0; i++) {\r\n        values[i] = data[calc(idx + i * stride) / output_vec_size];\r\n      }\r\n      #pragma unroll\r\n      for (uint32_t i = 0; i < vt0; i++) {\r\n        #pragma unroll\r\n        for (uint32_t j = 0; j < output_vec_size; j++) {\r\n          value_list[i][j] = reducer::reduce(value_list[i][j], values[i].val[j], idx + i * stride);\r\n        }\r\n      }\r\n      idx += stride * vt0;\r\n    }\r\n\r\n    // tail\r\n    int idx_ = idx;\r\n    #pragma unroll\r\n    for (uint32_t i = 0; i < vt0; i++) {\r\n      if (idx >= end) {\r\n        break;\r\n      }\r\n      values[i] = data[calc(idx) / output_vec_size];\r\n      idx += stride;\r\n    }\r\n    idx = idx_;\r\n    #pragma unroll\r\n    for (uint32_t i = 0; i < vt0; i++) {\r\n      if (idx >= end) {\r\n        break;\r\n      }\r\n      #pragma unroll\r\n      for (uint32_t j = 0; j < output_vec_size; j++) {\r\n        value_list[i][j] = reducer::reduce(value_list[i][j], values[i].val[j], idx);\r\n      }\r\n      idx += stride;\r\n    }\r\n\r\n    // combine accumulators\r\n    #pragma unroll\r\n    for (int i = 1; i < vt0; i++) {\r\n      #pragma unroll\r\n      for (uint32_t j = 0; j < output_vec_size; j++) {\r\n        value_list[0][j] = reducer::combine(value_list[0][j], value_list[i][j]);\r\n      }\r\n    }\r\n    return value_list[0];\r\n  }\r\n  template <int output_vec_size>\r\n  C10_DEVICE Array<arg_t, output_vec_size> block_x_reduce(Array<arg_t, output_vec_size> value, char* shared_memory) const {\r\n    using args_vec_t = Array<arg_t, output_vec_size>;\r\n    int dim_x = blockDim.x;\r\n    args_vec_t* shared = (args_vec_t*)shared_memory;\r\n    if (dim_x > warpSize) {\r\n      int address_base = threadIdx.x + threadIdx.y*blockDim.x;\r\n      shared[address_base] = value;\r\n      for (int offset = dim_x/2; offset >= warpSize; offset >>= 1) {\r\n        __syncthreads();\r\n        if (threadIdx.x < offset && threadIdx.x + offset < blockDim.x) {\r\n          args_vec_t other = shared[address_base + offset];\r\n          #pragma unroll\r\n          for (int i = 0; i < output_vec_size; i++) {\r\n            value[i] = reducer::combine(value[i], other[i]);\r\n          }\r\n          shared[address_base] = value;\r\n        }\r\n      }\r\n      dim_x = warpSize;\r\n    }\r\n\r\n    __syncthreads();\r\n\r\n    for (int offset = 1; offset < dim_x; offset <<= 1) {\r\n      #pragma unroll\r\n      for (int i = 0; i < output_vec_size; i++) {\r\n        arg_t other = reducer::warp_shfl_down(value[i], offset);\r\n        value[i] = reducer::combine(value[i], other);\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  template <int output_vec_size>\r\n  C10_DEVICE Array<arg_t, output_vec_size> block_y_reduce(Array<arg_t, output_vec_size> value, char* shared_memory) const {\r\n    using args_vec_t = Array<arg_t, output_vec_size>;\r\n    args_vec_t* shared = (args_vec_t*)shared_memory;\r\n    shared[config.shared_memory_offset(0)] = value;\r\n    for (int offset = blockDim.y / 2; offset > 0; offset >>= 1) {\r\n      __syncthreads();\r\n      if (threadIdx.y < offset && threadIdx.y + offset < blockDim.y) {\r\n        args_vec_t other = shared[config.shared_memory_offset(offset)];\r\n        #pragma unroll\r\n        for (int i = 0; i < output_vec_size; i++) {\r\n          value[i] = reducer::combine(value[i], other[i]);\r\n        }\r\n        shared[config.shared_memory_offset(0)] = value;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n  \r\n\r\n  C10_DEVICE bool mark_block_finished() const {\r\n    __shared__ bool is_last_block_done_shared;\r\n\r\n    __syncthreads();\r\n    if (threadIdx.x == 0 && threadIdx.y == 0) {\r\n      int prev_blocks_finished = atomicAdd(&semaphores[blockIdx.x], 1);\r\n      is_last_block_done_shared = (prev_blocks_finished == gridDim.y - 1);\r\n    }\r\n\r\n    __syncthreads();\r\n\r\n    return is_last_block_done_shared;\r\n  }\r\n\r\n  template <int output_vec_size>\r\n  C10_DEVICE Array<arg_t, output_vec_size> accumulate_in_output(\r\n    Array<out_scalar_t*, output_vec_size> out,\r\n    Array<arg_t, output_vec_size> value\r\n  ) const {\r\n    Array<arg_t, output_vec_size> ret;\r\n    #pragma unroll\r\n    for (int i = 0; i < output_vec_size; i++) {\r\n      ret[i] = reducer::combine(*(out[i]), value[i]);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n\r\n  C10_DEVICE out_scalar_t get_accumulated_output(\r\n    out_scalar_t* out, arg_t value\r\n  ) const {\r\n    assert(!final_output);\r\n    return (out_scalar_t)value;\r\n  }\r\n\r\n  template<class T>\r\n  C10_DEVICE void set_results(const T x, const uint32_t base_offset) const {\r\n    assert(noutputs == 1);\r\n    auto res = (out_scalar_t*)((char*)dst[0] + base_offset);\r\n    *res = x;\r\n  }\r\n\r\n//TODO - multi-output reduction - we won't be able to use thrust::pair\r\n//just explicitly specify typed output reads/writes\r\n//Currently implemented for max of two outputs\r\n//   template<class T1, class T2>\r\n//   C10_DEVICE void set_results(const thrust::pair<T1, T2> x, const index_t base_offset) const {\r\n//     if (noutputs >= 1) {\r\n//       auto res0 = (T1*)((char*)dst[0] + base_offset);\r\n//       *res0 = x.first;\r\n//     }\r\n//     if (noutputs >= 2) {\r\n//       // base offset is computed assuming element size being sizeof(T1), so we need to make a\r\n//       // correction to obtain the correct base offset\r\n//       auto res1 = (T2*) ((char *) dst[1] + base_offset / sizeof(T1) * sizeof(T2));\r\n//       *res1 = x.second;\r\n//     }\r\n//   }\r\n\r\n  template <int output_vec_size>\r\n  C10_DEVICE void set_results_to_output(Array<arg_t, output_vec_size> value, Array<uint32_t, output_vec_size> base_offset) const {\r\n    assert(final_output);\r\n    #pragma unroll\r\n    for (int i = 0; i < output_vec_size; i++) {\r\n      set_results(reducer::project(value[i]), base_offset[i]);\r\n    }\r\n  }\r\n\r\n  template <int output_vec_size>\r\n  C10_DEVICE Array<arg_t, output_vec_size> global_reduce(Array<arg_t, output_vec_size> value, Array<arg_t, output_vec_size> *acc, char* shared_memory) const {\r\n    using arg_vec_t = Array<arg_t, output_vec_size>;\r\n    using out_ptr_vec_t = Array<out_scalar_t*, output_vec_size>;\r\n    using offset_vec_t = Array<uint32_t, output_vec_size>;\r\n\r\n    arg_vec_t* reduce_buffer = (arg_vec_t*)cta_buf;\r\n    uint32_t output_idx = config.output_idx<output_vec_size>();\r\n    offset_vec_t base_offsets;\r\n    out_ptr_vec_t out;\r\n\r\n    #pragma unroll\r\n    for (int i = 0; i < output_vec_size; i++) {\r\n      base_offsets[i] = output_calc.get(output_idx + i)[0];\r\n      out[i] = (out_scalar_t*)((char*)dst[0] + base_offsets[i]);\r\n    }\r\n\r\n    bool should_store = config.should_store(output_idx);\r\n    if (should_store) {\r\n      uint32_t offset = config.staging_memory_offset(blockIdx.y);\r\n      reduce_buffer[offset] = value;\r\n    }\r\n\r\n    __threadfence(); // make sure writes are globally visible\r\n    __syncthreads(); // if multiple warps in this block wrote to staging, make sure they're all done\r\n    bool is_last_block_done = mark_block_finished();\r\n\r\n    if (is_last_block_done) {\r\n      value = ident;\r\n      if (config.should_block_x_reduce()) {\r\n        uint32_t input_offset = threadIdx.x + threadIdx.y * blockDim.x;\r\n        uint32_t step = blockDim.x * blockDim.y;\r\n        for (; input_offset < config.ctas_per_output; input_offset += step) {\r\n          uint32_t idx = config.staging_memory_offset(input_offset);\r\n          arg_vec_t next = reduce_buffer[idx];\r\n          #pragma unroll\r\n          for (int i = 0; i < output_vec_size; i++) {\r\n            value[i] = reducer::combine(value[i], next[i]);\r\n          }\r\n        }\r\n      } else {\r\n        uint32_t input_offset = threadIdx.y;\r\n        uint32_t step = blockDim.y;\r\n        for (; input_offset < config.ctas_per_output; input_offset += step) {\r\n          uint32_t idx = config.staging_memory_offset(input_offset);\r\n          arg_vec_t next = reduce_buffer[idx];\r\n          #pragma unroll\r\n          for (int i = 0; i < output_vec_size; i++) {\r\n            value[i] = reducer::combine(value[i], next[i]);\r\n          }\r\n        }\r\n      }\r\n      value = block_y_reduce(value, shared_memory);\r\n      if (config.should_block_x_reduce()) {\r\n        value = block_x_reduce<output_vec_size>(value, shared_memory);\r\n      }\r\n      if (should_store) {\r\n        if (accumulate) {\r\n          #pragma unroll\r\n          for (int i = 0; i < output_vec_size; i++) {\r\n            value[i] = reducer::translate_idx(value[i], base_idx);\r\n          }\r\n        }\r\n\r\n        if (acc == nullptr) {\r\n          if (accumulate) {\r\n            value = accumulate_in_output<output_vec_size>(out, value);\r\n          }\r\n          if (final_output) {\r\n            set_results_to_output<output_vec_size>(value, base_offsets);\r\n          } else {\r\n            #pragma unroll\r\n            for (int i = 0; i < output_vec_size; i++) {\r\n              *(out[i]) = get_accumulated_output(out[i], value[i]);\r\n            }\r\n          }\r\n        } else {\r\n          if (accumulate) {\r\n            #pragma unroll\r\n            for (int i = 0; i < output_vec_size; i++) {\r\n              value[i] = reducer::combine((*acc)[i], value[i]);\r\n            }\r\n          }\r\n          if (final_output) {\r\n            set_results_to_output<output_vec_size>(value, base_offsets);\r\n          } else {\r\n            *acc = value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\n\r\nextern \"C\"\r\n__launch_bounds__(512, 4)\r\n__global__ void reduction_prod_kernel(ReduceJitOp r){\r\n  r.run();\r\n}\r\nnvrtc: error: invalid value for --gpu-architecture (-arch)\r\n```\r\n\r\nwhen I use RTX3090, the problem doesn't occur.\r\n```python\r\nimport torch\r\na = torch.tensor([2, 2, 3]).cuda(1)\r\nprint(a.prod())\r\n```\r\n```\r\ntensor(12, device='cuda:1')\r\n```\n\n### Versions\n\nRTX 4090\r\npytorch 1.14+cu117  nightly\r\ncuda 11.8\r\ncudnn 8.6.0\r\nubuntu 20.04\n\ncc @ezyang @gchanan @zou3519 @ngimel @mruberry",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/87595/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/87595/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782698038",
                "html_url": "https://github.com/pytorch/pytorch/issues/87595#issuecomment-1782698038",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/87595",
                "id": 1782698038,
                "node_id": "IC_kwDOA-j9z85qQdA2",
                "user": {
                    "login": "ffdown",
                    "id": 95547131,
                    "node_id": "U_kgDOBbHu-w",
                    "avatar_url": "https://avatars.githubusercontent.com/u/95547131?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ffdown",
                    "html_url": "https://github.com/ffdown",
                    "followers_url": "https://api.github.com/users/ffdown/followers",
                    "following_url": "https://api.github.com/users/ffdown/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ffdown/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ffdown/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ffdown/subscriptions",
                    "organizations_url": "https://api.github.com/users/ffdown/orgs",
                    "repos_url": "https://api.github.com/users/ffdown/repos",
                    "events_url": "https://api.github.com/users/ffdown/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ffdown/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:44:40Z",
                "updated_at": "2023-10-27T10:44:40Z",
                "author_association": "NONE",
                "body": "> Hmm, can you please run `python -c \"import torch;print(torch.cuda.get_device_capability(0))\"` and share the output here? (I suspect that 4090 is based on Lovelace/Hopper GPU arc, isn't it?)\r\n\r\n(8,9)",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782698038/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:44:41Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32895336569",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 3291265,
            "login": "lezcano",
            "display_login": "lezcano",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lezcano",
            "avatar_url": "https://avatars.githubusercontent.com/u/3291265?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1701448739,
                "node_id": "PRR_kwDOA-j9z85lagwj",
                "user": {
                    "login": "lezcano",
                    "id": 3291265,
                    "node_id": "MDQ6VXNlcjMyOTEyNjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3291265?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lezcano",
                    "html_url": "https://github.com/lezcano",
                    "followers_url": "https://api.github.com/users/lezcano/followers",
                    "following_url": "https://api.github.com/users/lezcano/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lezcano/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lezcano/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lezcano/subscriptions",
                    "organizations_url": "https://api.github.com/users/lezcano/orgs",
                    "repos_url": "https://api.github.com/users/lezcano/repos",
                    "events_url": "https://api.github.com/users/lezcano/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lezcano/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "",
                "commit_id": "f8c84d7d3289f095a2d286e7c01c60344dff2ac6",
                "submitted_at": "2023-10-27T10:16:21Z",
                "state": "approved",
                "html_url": "https://github.com/pytorch/pytorch/pull/112234#pullrequestreview-1701448739",
                "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112234",
                "author_association": "COLLABORATOR",
                "_links": {
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112234#pullrequestreview-1701448739"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112234"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pytorch/pytorch/pulls/112234",
                "id": 1575972571,
                "node_id": "PR_kwDOA-j9z85d727b",
                "html_url": "https://github.com/pytorch/pytorch/pull/112234",
                "diff_url": "https://github.com/pytorch/pytorch/pull/112234.diff",
                "patch_url": "https://github.com/pytorch/pytorch/pull/112234.patch",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112234",
                "number": 112234,
                "state": "open",
                "locked": false,
                "title": "[inductor cpp] vectorize support for truediv",
                "user": {
                    "login": "jgong5",
                    "id": 8359223,
                    "node_id": "MDQ6VXNlcjgzNTkyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8359223?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jgong5",
                    "html_url": "https://github.com/jgong5",
                    "followers_url": "https://api.github.com/users/jgong5/followers",
                    "following_url": "https://api.github.com/users/jgong5/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jgong5/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jgong5/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jgong5/subscriptions",
                    "organizations_url": "https://api.github.com/users/jgong5/orgs",
                    "repos_url": "https://api.github.com/users/jgong5/repos",
                    "events_url": "https://api.github.com/users/jgong5/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jgong5/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #112243\n* __->__ #112234\n\r\nOps like group_norm has `ops.truediv` that doesn't have vectorization support yet. This PR adds the support.\r\n\r\n`test_group_norm_vec`\r\nBefore:\r\n```c++\r\nextern \"C\" void kernel(const float* in_ptr0,\r\n                       const float* in_ptr1,\r\n                       const float* in_ptr2,\r\n                       float* out_ptr0,\r\n                       float* out_ptr1,\r\n                       float* out_ptr2)\r\n{\r\n    #pragma omp parallel num_threads(64)\r\n    {\r\n        {\r\n            #pragma omp for \r\n            for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(1L))\r\n            {\r\n                {\r\n                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})\r\n                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})\r\n                    Welford<float> tmp_acc0 = Welford<float>();\r\n                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();\r\n                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(16L))\r\n                    {\r\n                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));\r\n                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);\r\n                    }\r\n                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));\r\n                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);\r\n                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);\r\n                }\r\n            }\r\n        }\r\n        {\r\n            #pragma omp for  collapse(2)\r\n            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2L); x0+=static_cast<long>(1L))\r\n            {\r\n                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(1L))\r\n                {\r\n                    #pragma GCC ivdep\r\n                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(1L))\r\n                    {\r\n                        auto tmp0 = in_ptr0[static_cast<long>(x2 + (1024L*x1) + (32768L*x0))];\r\n                        auto tmp1 = out_ptr0[static_cast<long>(x1 + (32L*x0))];\r\n                        auto tmp3 = out_ptr1[static_cast<long>(x1 + (32L*x0))];\r\n                        auto tmp10 = in_ptr1[static_cast<long>(x1)];\r\n                        auto tmp12 = in_ptr2[static_cast<long>(x1)];\r\n                        auto tmp2 = tmp0 - tmp1;\r\n                        auto tmp4 = c10::convert<float>(1024.0);\r\n                        auto tmp5 = tmp3 / tmp4;\r\n                        auto tmp6 = c10::convert<float>(1e-05);\r\n                        auto tmp7 = tmp5 + tmp6;\r\n                        auto tmp8 = 1 / std::sqrt(tmp7);\r\n                        auto tmp9 = decltype(tmp2)(tmp2 * tmp8);\r\n                        auto tmp11 = decltype(tmp9)(tmp9 * tmp10);\r\n                        auto tmp13 = tmp11 + tmp12;\r\n                        out_ptr2[static_cast<long>(x2 + (1024L*x1) + (32768L*x0))] = tmp13;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAfter:\r\n```c++\r\nextern \"C\" void kernel(const float* in_ptr0,\r\n                       const float* in_ptr1,\r\n                       const float* in_ptr2,\r\n                       float* out_ptr0,\r\n                       float* out_ptr1,\r\n                       float* out_ptr2)\r\n{\r\n    #pragma omp parallel num_threads(64)\r\n    {\r\n        {\r\n            #pragma omp for \r\n            for(long x0=static_cast<long>(0L); x0<static_cast<long>(64L); x0+=static_cast<long>(1L))\r\n            {\r\n                {\r\n                    #pragma omp declare reduction(welford:Welford<float>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<float>()})\r\n                    #pragma omp declare reduction(welford:Welford<at::vec::Vectorized<float>>:omp_out = welford_combine(omp_out, omp_in)) initializer(omp_priv={Welford<at::vec::Vectorized<float>>()})\r\n                    Welford<float> tmp_acc0 = Welford<float>();\r\n                    Welford<at::vec::Vectorized<float>> tmp_acc0_vec = Welford<at::vec::Vectorized<float>>();\r\n                    for(long x1=static_cast<long>(0L); x1<static_cast<long>(1024L); x1+=static_cast<long>(16L))\r\n                    {\r\n                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x1 + (1024L*x0)));\r\n                        tmp_acc0_vec = welford_combine(tmp_acc0_vec, tmp0);\r\n                    }\r\n                    tmp_acc0 = welford_combine(tmp_acc0, welford_vec_reduce_all(tmp_acc0_vec));\r\n                    out_ptr0[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.mean);\r\n                    out_ptr1[static_cast<long>(x0)] = static_cast<float>(tmp_acc0.m2);\r\n                }\r\n            }\r\n        }\r\n        {\r\n            #pragma omp for  collapse(2)\r\n            for(long x0=static_cast<long>(0L); x0<static_cast<long>(2L); x0+=static_cast<long>(1L))\r\n            {\r\n                for(long x1=static_cast<long>(0L); x1<static_cast<long>(32L); x1+=static_cast<long>(1L))\r\n                {\r\n                    for(long x2=static_cast<long>(0L); x2<static_cast<long>(1024L); x2+=static_cast<long>(16L))\r\n                    {\r\n                        auto tmp0 = at::vec::Vectorized<float>::loadu(in_ptr0 + static_cast<long>(x2 + (1024L*x1) + (32768L*x0)));\r\n                        auto tmp1 = at::vec::Vectorized<float>(static_cast<float>(out_ptr0[static_cast<long>(x1 + (32L*x0))]));\r\n                        auto tmp3 = at::vec::Vectorized<float>(static_cast<float>(out_ptr1[static_cast<long>(x1 + (32L*x0))]));\r\n                        auto tmp10 = at::vec::Vectorized<float>(static_cast<float>(in_ptr1[static_cast<long>(x1)]));\r\n                        auto tmp12 = at::vec::Vectorized<float>(static_cast<float>(in_ptr2[static_cast<long>(x1)]));\r\n                        auto tmp2 = tmp0 - tmp1;\r\n                        auto tmp4 = at::vec::Vectorized<float>(static_cast<float>(1024.0));\r\n                        auto tmp5 = tmp3 / tmp4;\r\n                        auto tmp6 = at::vec::Vectorized<float>(static_cast<float>(1e-05));\r\n                        auto tmp7 = tmp5 + tmp6;\r\n                        auto tmp8 = tmp7.rsqrt();\r\n                        auto tmp9 = tmp2 * tmp8;\r\n                        auto tmp11 = tmp9 * tmp10;\r\n                        auto tmp13 = tmp11 + tmp12;\r\n                        tmp13.store(out_ptr2 + static_cast<long>(x2 + (1024L*x1) + (32768L*x0)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc @voznesenskym @penguinwu @EikanWang @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",
                "created_at": "2023-10-27T05:50:44Z",
                "updated_at": "2023-10-27T10:16:22Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "92bd4d20454b2443c4865c714090ee398307eb4f",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "jansel",
                        "id": 533820,
                        "node_id": "MDQ6VXNlcjUzMzgyMA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/533820?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jansel",
                        "html_url": "https://github.com/jansel",
                        "followers_url": "https://api.github.com/users/jansel/followers",
                        "following_url": "https://api.github.com/users/jansel/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jansel/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jansel/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jansel/subscriptions",
                        "organizations_url": "https://api.github.com/users/jansel/orgs",
                        "repos_url": "https://api.github.com/users/jansel/repos",
                        "events_url": "https://api.github.com/users/jansel/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jansel/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "desertfire",
                        "id": 3659962,
                        "node_id": "MDQ6VXNlcjM2NTk5NjI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/3659962?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/desertfire",
                        "html_url": "https://github.com/desertfire",
                        "followers_url": "https://api.github.com/users/desertfire/followers",
                        "following_url": "https://api.github.com/users/desertfire/following{/other_user}",
                        "gists_url": "https://api.github.com/users/desertfire/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/desertfire/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/desertfire/subscriptions",
                        "organizations_url": "https://api.github.com/users/desertfire/orgs",
                        "repos_url": "https://api.github.com/users/desertfire/repos",
                        "events_url": "https://api.github.com/users/desertfire/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/desertfire/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 4631339377,
                        "node_id": "LA_kwDOA-j9z88AAAABFAyhcQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20inductor",
                        "name": "module: inductor",
                        "color": "f9d0c4",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4668973195,
                        "node_id": "LA_kwDOA-j9z88AAAABFkrgiw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/inductor",
                        "name": "ciflow/inductor",
                        "color": "8E9C02",
                        "default": false,
                        "description": ""
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112234/commits",
                "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112234/comments",
                "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112234/comments",
                "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/f8c84d7d3289f095a2d286e7c01c60344dff2ac6",
                "head": {
                    "label": "pytorch:gh/jgong5/25/head",
                    "ref": "gh/jgong5/25/head",
                    "sha": "f8c84d7d3289f095a2d286e7c01c60344dff2ac6",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T09:57:34Z",
                        "pushed_at": "2023-10-27T09:37:53Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209607,
                        "stargazers_count": 72005,
                        "watchers_count": 72005,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72005,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pytorch:gh/jgong5/25/base",
                    "ref": "gh/jgong5/25/base",
                    "sha": "22221c6d60613e498aa67b7f7f0f83ec97e35b8a",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T09:57:34Z",
                        "pushed_at": "2023-10-27T09:37:53Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209607,
                        "stargazers_count": 72005,
                        "watchers_count": 72005,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72005,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112234"
                    },
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112234"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112234"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112234/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112234/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112234/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/statuses/f8c84d7d3289f095a2d286e7c01c60344dff2ac6"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:16:22Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32895330134",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 3291265,
            "login": "lezcano",
            "display_login": "lezcano",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lezcano",
            "avatar_url": "https://avatars.githubusercontent.com/u/3291265?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1701448385,
                "node_id": "PRR_kwDOA-j9z85lagrB",
                "user": {
                    "login": "lezcano",
                    "id": 3291265,
                    "node_id": "MDQ6VXNlcjMyOTEyNjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3291265?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lezcano",
                    "html_url": "https://github.com/lezcano",
                    "followers_url": "https://api.github.com/users/lezcano/followers",
                    "following_url": "https://api.github.com/users/lezcano/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lezcano/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lezcano/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lezcano/subscriptions",
                    "organizations_url": "https://api.github.com/users/lezcano/orgs",
                    "repos_url": "https://api.github.com/users/lezcano/repos",
                    "events_url": "https://api.github.com/users/lezcano/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lezcano/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The idea behind `div` was to be like `operator/` in C++ and `truediv` to be like `/` in Python 3, that is, with respect to type promotion.\r\n\r\nHow does this affect that point? Shouldn't we remove `truediv` rather than `div` here?",
                "commit_id": "2b050e2d362d4b592ec6685d99c950ba3129cffd",
                "submitted_at": "2023-10-27T10:16:06Z",
                "state": "commented",
                "html_url": "https://github.com/pytorch/pytorch/pull/112243#pullrequestreview-1701448385",
                "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112243",
                "author_association": "COLLABORATOR",
                "_links": {
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112243#pullrequestreview-1701448385"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112243"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pytorch/pytorch/pulls/112243",
                "id": 1576171210,
                "node_id": "PR_kwDOA-j9z85d8nbK",
                "html_url": "https://github.com/pytorch/pytorch/pull/112243",
                "diff_url": "https://github.com/pytorch/pytorch/pull/112243.diff",
                "patch_url": "https://github.com/pytorch/pytorch/pull/112243.patch",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112243",
                "number": 112243,
                "state": "open",
                "locked": false,
                "title": "[inductor] replace ops.div with ops.truediv",
                "user": {
                    "login": "jgong5",
                    "id": 8359223,
                    "node_id": "MDQ6VXNlcjgzNTkyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8359223?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jgong5",
                    "html_url": "https://github.com/jgong5",
                    "followers_url": "https://api.github.com/users/jgong5/followers",
                    "following_url": "https://api.github.com/users/jgong5/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jgong5/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jgong5/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jgong5/subscriptions",
                    "organizations_url": "https://api.github.com/users/jgong5/orgs",
                    "repos_url": "https://api.github.com/users/jgong5/repos",
                    "events_url": "https://api.github.com/users/jgong5/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jgong5/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #112243\n* #112234\n\n\n\ncc @voznesenskym @penguinwu @EikanWang @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",
                "created_at": "2023-10-27T08:36:00Z",
                "updated_at": "2023-10-27T10:16:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "60caeba8d5b1bb0c30b40eeadb8e5644e36b1604",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 4631339377,
                        "node_id": "LA_kwDOA-j9z88AAAABFAyhcQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20inductor",
                        "name": "module: inductor",
                        "color": "f9d0c4",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4668973195,
                        "node_id": "LA_kwDOA-j9z88AAAABFkrgiw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/inductor",
                        "name": "ciflow/inductor",
                        "color": "8E9C02",
                        "default": false,
                        "description": ""
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112243/commits",
                "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112243/comments",
                "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112243/comments",
                "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/2b050e2d362d4b592ec6685d99c950ba3129cffd",
                "head": {
                    "label": "pytorch:gh/jgong5/26/head",
                    "ref": "gh/jgong5/26/head",
                    "sha": "2b050e2d362d4b592ec6685d99c950ba3129cffd",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T09:57:34Z",
                        "pushed_at": "2023-10-27T09:37:53Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209607,
                        "stargazers_count": 72005,
                        "watchers_count": 72005,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72005,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pytorch:gh/jgong5/26/base",
                    "ref": "gh/jgong5/26/base",
                    "sha": "f8c84d7d3289f095a2d286e7c01c60344dff2ac6",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T09:57:34Z",
                        "pushed_at": "2023-10-27T09:37:53Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209607,
                        "stargazers_count": 72005,
                        "watchers_count": 72005,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72005,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112243"
                    },
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112243"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112243"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112243/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112243/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112243/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/statuses/2b050e2d362d4b592ec6685d99c950ba3129cffd"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:16:07Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894846963",
        "type": "WatchEvent",
        "actor": {
            "id": 4537402,
            "login": "koseimori",
            "display_login": "koseimori",
            "gravatar_id": "",
            "url": "https://api.github.com/users/koseimori",
            "avatar_url": "https://avatars.githubusercontent.com/u/4537402?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:57:34Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894578381",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 3291265,
            "login": "lezcano",
            "display_login": "lezcano",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lezcano",
            "avatar_url": "https://avatars.githubusercontent.com/u/3291265?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1701401916,
                "node_id": "PRR_kwDOA-j9z85laVU8",
                "user": {
                    "login": "lezcano",
                    "id": 3291265,
                    "node_id": "MDQ6VXNlcjMyOTEyNjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3291265?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lezcano",
                    "html_url": "https://github.com/lezcano",
                    "followers_url": "https://api.github.com/users/lezcano/followers",
                    "following_url": "https://api.github.com/users/lezcano/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lezcano/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lezcano/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lezcano/subscriptions",
                    "organizations_url": "https://api.github.com/users/lezcano/orgs",
                    "repos_url": "https://api.github.com/users/lezcano/repos",
                    "events_url": "https://api.github.com/users/lezcano/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lezcano/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "So much more self-contained. Nice!",
                "commit_id": "e90300da9e9957b528d8cd5e4710fe2ea53b4bd5",
                "submitted_at": "2023-10-27T09:47:23Z",
                "state": "approved",
                "html_url": "https://github.com/pytorch/pytorch/pull/112106#pullrequestreview-1701401916",
                "pull_request_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112106",
                "author_association": "COLLABORATOR",
                "_links": {
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112106#pullrequestreview-1701401916"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112106"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pytorch/pytorch/pulls/112106",
                "id": 1573942092,
                "node_id": "PR_kwDOA-j9z85d0HNM",
                "html_url": "https://github.com/pytorch/pytorch/pull/112106",
                "diff_url": "https://github.com/pytorch/pytorch/pull/112106.diff",
                "patch_url": "https://github.com/pytorch/pytorch/pull/112106.patch",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112106",
                "number": 112106,
                "state": "open",
                "locked": false,
                "title": "Added inductor_prims.unsafe_index_put_",
                "user": {
                    "login": "Chillee",
                    "id": 6355099,
                    "node_id": "MDQ6VXNlcjYzNTUwOTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6355099?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Chillee",
                    "html_url": "https://github.com/Chillee",
                    "followers_url": "https://api.github.com/users/Chillee/followers",
                    "following_url": "https://api.github.com/users/Chillee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Chillee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Chillee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Chillee/subscriptions",
                    "organizations_url": "https://api.github.com/users/Chillee/orgs",
                    "repos_url": "https://api.github.com/users/Chillee/repos",
                    "events_url": "https://api.github.com/users/Chillee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Chillee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #112106\n* #112102\n* #112101\n* #112093\n* #111990\n\n\n\ncc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",
                "created_at": "2023-10-26T01:22:44Z",
                "updated_at": "2023-10-27T09:47:23Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "f902904c7de9193858da1c073d074d6d8d688f20",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "ezyang",
                        "id": 13564,
                        "node_id": "MDQ6VXNlcjEzNTY0",
                        "avatar_url": "https://avatars.githubusercontent.com/u/13564?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ezyang",
                        "html_url": "https://github.com/ezyang",
                        "followers_url": "https://api.github.com/users/ezyang/followers",
                        "following_url": "https://api.github.com/users/ezyang/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ezyang/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ezyang/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ezyang/subscriptions",
                        "organizations_url": "https://api.github.com/users/ezyang/orgs",
                        "repos_url": "https://api.github.com/users/ezyang/repos",
                        "events_url": "https://api.github.com/users/ezyang/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ezyang/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "peterbell10",
                        "id": 13238737,
                        "node_id": "MDQ6VXNlcjEzMjM4NzM3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/13238737?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/peterbell10",
                        "html_url": "https://github.com/peterbell10",
                        "followers_url": "https://api.github.com/users/peterbell10/followers",
                        "following_url": "https://api.github.com/users/peterbell10/following{/other_user}",
                        "gists_url": "https://api.github.com/users/peterbell10/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/peterbell10/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/peterbell10/subscriptions",
                        "organizations_url": "https://api.github.com/users/peterbell10/orgs",
                        "repos_url": "https://api.github.com/users/peterbell10/repos",
                        "events_url": "https://api.github.com/users/peterbell10/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/peterbell10/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 4631339377,
                        "node_id": "LA_kwDOA-j9z88AAAABFAyhcQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20inductor",
                        "name": "module: inductor",
                        "color": "f9d0c4",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4668973195,
                        "node_id": "LA_kwDOA-j9z88AAAABFkrgiw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/inductor",
                        "name": "ciflow/inductor",
                        "color": "8E9C02",
                        "default": false,
                        "description": ""
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112106/commits",
                "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112106/comments",
                "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112106/comments",
                "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/e90300da9e9957b528d8cd5e4710fe2ea53b4bd5",
                "head": {
                    "label": "pytorch:gh/chillee/237/head",
                    "ref": "gh/chillee/237/head",
                    "sha": "e90300da9e9957b528d8cd5e4710fe2ea53b4bd5",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T08:10:09Z",
                        "pushed_at": "2023-10-27T09:37:53Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209605,
                        "stargazers_count": 72004,
                        "watchers_count": 72004,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72004,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pytorch:gh/chillee/237/base",
                    "ref": "gh/chillee/237/base",
                    "sha": "9e42b40bc0bd91d3cacee6fde25c1f426ed292c0",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T08:10:09Z",
                        "pushed_at": "2023-10-27T09:37:53Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209605,
                        "stargazers_count": 72004,
                        "watchers_count": 72004,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72004,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112106"
                    },
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112106"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112106"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112106/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112106/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112106/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/statuses/e90300da9e9957b528d8cd5e4710fe2ea53b4bd5"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:24Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894526611",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3291265,
            "login": "lezcano",
            "display_login": "lezcano",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lezcano",
            "avatar_url": "https://avatars.githubusercontent.com/u/3291265?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/112147",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/112147/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112147/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/112147/events",
                "html_url": "https://github.com/pytorch/pytorch/pull/112147",
                "id": 1963211251,
                "node_id": "PR_kwDOA-j9z85d2X6P",
                "number": 112147,
                "title": "Make numpy/lib vendored tests dynamo traceable",
                "user": {
                    "login": "ev-br",
                    "id": 2133832,
                    "node_id": "MDQ6VXNlcjIxMzM4MzI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2133832?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ev-br",
                    "html_url": "https://github.com/ev-br",
                    "followers_url": "https://api.github.com/users/ev-br/followers",
                    "following_url": "https://api.github.com/users/ev-br/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ev-br/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ev-br/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ev-br/subscriptions",
                    "organizations_url": "https://api.github.com/users/ev-br/orgs",
                    "repos_url": "https://api.github.com/users/ev-br/repos",
                    "events_url": "https://api.github.com/users/ev-br/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ev-br/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1302998283,
                        "node_id": "MDU6TGFiZWwxMzAyOTk4Mjgz",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20numpy",
                        "name": "module: numpy",
                        "color": "f7e101",
                        "default": false,
                        "description": "Related to numpy support, and also numpy compatibility of our operators"
                    },
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 2404913419,
                        "node_id": "MDU6TGFiZWwyNDA0OTEzNDE5",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/Merged",
                        "name": "Merged",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 2510927053,
                        "node_id": "MDU6TGFiZWwyNTEwOTI3MDUz",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/Reverted",
                        "name": "Reverted",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3663721061,
                        "node_id": "LA_kwDOA-j9z87aX_Jl",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/trunk",
                        "name": "ciflow/trunk",
                        "color": "574CBB",
                        "default": false,
                        "description": "Trigger trunk jobs on your pull request"
                    },
                    {
                        "id": 3773064655,
                        "node_id": "LA_kwDOA-j9z87g5GXP",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/topic:%20not%20user%20facing",
                        "name": "topic: not user facing",
                        "color": "B08798",
                        "default": false,
                        "description": "topic category"
                    },
                    {
                        "id": 4631341851,
                        "node_id": "LA_kwDOA-j9z88AAAABFAyrGw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20dynamo",
                        "name": "module: dynamo",
                        "color": "e99695",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5339866057,
                        "node_id": "LA_kwDOA-j9z88AAAABPkfjyQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/slow",
                        "name": "ciflow/slow",
                        "color": "FD2AEE",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 15,
                "created_at": "2023-10-26T10:31:24Z",
                "updated_at": "2023-10-27T09:45:24Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/pulls/112147",
                    "html_url": "https://github.com/pytorch/pytorch/pull/112147",
                    "diff_url": "https://github.com/pytorch/pytorch/pull/112147.diff",
                    "patch_url": "https://github.com/pytorch/pytorch/pull/112147.patch",
                    "merged_at": null
                },
                "body": "Follow up https://github.com/pytorch/pytorch/pull/112146 and  #112141 : make numpy/lib vendored tests dynamo traceable\n\ncc @mruberry @rgommers @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @chenyang78 @aakhundov @kadeng",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/112147/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/112147/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782619705",
                "html_url": "https://github.com/pytorch/pytorch/pull/112147#issuecomment-1782619705",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112147",
                "id": 1782619705,
                "node_id": "IC_kwDOA-j9z85qQJ45",
                "user": {
                    "login": "lezcano",
                    "id": 3291265,
                    "node_id": "MDQ6VXNlcjMyOTEyNjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3291265?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lezcano",
                    "html_url": "https://github.com/lezcano",
                    "followers_url": "https://api.github.com/users/lezcano/followers",
                    "following_url": "https://api.github.com/users/lezcano/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lezcano/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lezcano/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lezcano/subscriptions",
                    "organizations_url": "https://api.github.com/users/lezcano/orgs",
                    "repos_url": "https://api.github.com/users/lezcano/repos",
                    "events_url": "https://api.github.com/users/lezcano/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lezcano/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:45:24Z",
                "updated_at": "2023-10-27T09:45:24Z",
                "author_association": "COLLABORATOR",
                "body": "@albanD do we have a minimum NumPy version we require? `requirements.txt` does not have one, which makes this a bit more difficult than needed.",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782619705/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:45:26Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894373552",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/112237",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/112237/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112237/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/112237/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/112237",
                "id": 1964867004,
                "node_id": "I_kwDOA-j9z851HX28",
                "number": 112237,
                "title": "DISABLED test_layer_norm_backward_5d_size_128_cpu (__main__.TestNestedTensorAutogradCPU)",
                "user": {
                    "login": "pytorch-bot[bot]",
                    "id": 54816060,
                    "node_id": "MDM6Qm90NTQ4MTYwNjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/pytorch-bot",
                    "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    },
                    {
                        "id": 1301397902,
                        "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                        "name": "module: flaky-tests",
                        "color": "f7e101",
                        "default": false,
                        "description": "Problem is a flaky test in CI"
                    },
                    {
                        "id": 1537268693,
                        "node_id": "MDU6TGFiZWwxNTM3MjY4Njkz",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20nestedtensor",
                        "name": "module: nestedtensor",
                        "color": "f7e101",
                        "default": false,
                        "description": "NestedTensor tag see issue #25032"
                    },
                    {
                        "id": 1679533716,
                        "node_id": "MDU6TGFiZWwxNjc5NTMzNzE2",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/skipped",
                        "name": "skipped",
                        "color": "bfdadc",
                        "default": false,
                        "description": "Denotes a (flaky) test currently skipped in CI."
                    },
                    {
                        "id": 4291178647,
                        "node_id": "LA_kwDOA-j9z87_xjCX",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20pt2",
                        "name": "oncall: pt2",
                        "color": "6385A2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T06:39:48Z",
                "updated_at": "2023-10-27T09:39:35Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Platforms: dynamo\n\nThis test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_layer_norm_backward_5d_size_128_cpu&suite=TestNestedTensorAutogradCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18105523198).\n\nOver the past 3 hours, it has been determined flaky in 5 workflow(s) with 15 failures and 5 successes.\n\n**Debugging instructions (after clicking on the recent samples link):**\nDO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.\nTo find relevant log snippets:\n1. Click on the workflow logs linked above\n2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.\n3. Grep for `test_layer_norm_backward_5d_size_128_cpu`\n4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.\n\n\nTest file path: `test_nestedtensor.py`\n\ncc @cpuhrsch @jbschlosser @bhosmer @drisspg @soulitzer @ezyang @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/112237/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/112237/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782611621",
                "html_url": "https://github.com/pytorch/pytorch/issues/112237#issuecomment-1782611621",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112237",
                "id": 1782611621,
                "node_id": "IC_kwDOA-j9z85qQH6l",
                "user": {
                    "login": "pytorch-bot[bot]",
                    "id": 54816060,
                    "node_id": "MDM6Qm90NTQ4MTYwNjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/pytorch-bot",
                    "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:39:35Z",
                "updated_at": "2023-10-27T09:39:35Z",
                "author_association": "NONE",
                "body": "Another case of trunk flakiness has been found [here](https://github.com/pytorch/pytorch/runs/18109328114).\n            Please verify the issue was opened after this instance, that the platforms list includes all of\n            [dynamo], or disable bot might not be working as expected.",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782611621/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:39:35Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894371641",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/112236",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/112236/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112236/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/112236/events",
                "html_url": "https://github.com/pytorch/pytorch/issues/112236",
                "id": 1964866941,
                "node_id": "I_kwDOA-j9z851HX19",
                "number": 112236,
                "title": "DISABLED test_meta_outplace_linalg_pinv_cpu_complex128 (__main__.TestMetaCPU)",
                "user": {
                    "login": "pytorch-bot[bot]",
                    "id": 54816060,
                    "node_id": "MDM6Qm90NTQ4MTYwNjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/pytorch-bot",
                    "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1301347167,
                        "node_id": "MDU6TGFiZWwxMzAxMzQ3MTY3",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/triaged",
                        "name": "triaged",
                        "color": "006b75",
                        "default": false,
                        "description": "This issue has been looked at a team member, and triaged and prioritized into an appropriate module"
                    },
                    {
                        "id": 1301397902,
                        "node_id": "MDU6TGFiZWwxMzAxMzk3OTAy",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20flaky-tests",
                        "name": "module: flaky-tests",
                        "color": "f7e101",
                        "default": false,
                        "description": "Problem is a flaky test in CI"
                    },
                    {
                        "id": 1679533716,
                        "node_id": "MDU6TGFiZWwxNjc5NTMzNzE2",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/skipped",
                        "name": "skipped",
                        "color": "bfdadc",
                        "default": false,
                        "description": "Denotes a (flaky) test currently skipped in CI."
                    },
                    {
                        "id": 4081012228,
                        "node_id": "LA_kwDOA-j9z87zP04E",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20primTorch",
                        "name": "module: primTorch",
                        "color": "455561",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4291178647,
                        "node_id": "LA_kwDOA-j9z87_xjCX",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/oncall:%20pt2",
                        "name": "oncall: pt2",
                        "color": "6385A2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-27T06:39:46Z",
                "updated_at": "2023-10-27T09:39:30Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Platforms: dynamo\n\nThis test was disabled because it is failing in CI. See [recent examples](https://hud.pytorch.org/flakytest?name=test_meta_outplace_linalg_pinv_cpu_complex128&suite=TestMetaCPU) and the most recent trunk [workflow logs](https://github.com/pytorch/pytorch/runs/18107190073).\n\nOver the past 3 hours, it has been determined flaky in 11 workflow(s) with 33 failures and 11 successes.\n\n**Debugging instructions (after clicking on the recent samples link):**\nDO NOT ASSUME THINGS ARE OKAY IF THE CI IS GREEN. We now shield flaky tests from developers so CI will thus be green but it will be harder to parse the logs.\nTo find relevant log snippets:\n1. Click on the workflow logs linked above\n2. Click on the Test step of the job so that it is expanded. Otherwise, the grepping will not work.\n3. Grep for `test_meta_outplace_linalg_pinv_cpu_complex128`\n4. There should be several instances run (as flaky tests are rerun in CI) from which you can study the logs.\n\n\nTest file path: `test_meta.py`\n\ncc @ezyang @mruberry @Lezcano @peterbell10 @msaroufim @wconstab @bdhirsh @anijain2305 @zou3519",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/112236/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/112236/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782611506",
                "html_url": "https://github.com/pytorch/pytorch/issues/112236#issuecomment-1782611506",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112236",
                "id": 1782611506,
                "node_id": "IC_kwDOA-j9z85qQH4y",
                "user": {
                    "login": "pytorch-bot[bot]",
                    "id": 54816060,
                    "node_id": "MDM6Qm90NTQ4MTYwNjA=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/40112?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pytorch-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/pytorch-bot",
                    "followers_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pytorch-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:39:30Z",
                "updated_at": "2023-10-27T09:39:30Z",
                "author_association": "NONE",
                "body": "Another case of trunk flakiness has been found [here](https://github.com/pytorch/pytorch/runs/18108242151).\n            Please verify the issue was opened after this instance, that the platforms list includes all of\n            [dynamo], or disable bot might not be working as expected.",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782611506/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:39:31Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894331378",
        "type": "DeleteEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/mps/112188",
            "ref_type": "tag",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:37:57Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894330990",
        "type": "DeleteEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/trunk/112188",
            "ref_type": "tag",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:37:56Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894328091",
        "type": "PullRequestEvent",
        "actor": {
            "id": 97764156,
            "login": "pytorchmergebot",
            "display_login": "pytorchmergebot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "closed",
            "number": 112188,
            "pull_request": {
                "url": "https://api.github.com/repos/pytorch/pytorch/pulls/112188",
                "id": 1575493923,
                "node_id": "PR_kwDOA-j9z85d6CEj",
                "html_url": "https://github.com/pytorch/pytorch/pull/112188",
                "diff_url": "https://github.com/pytorch/pytorch/pull/112188.diff",
                "patch_url": "https://github.com/pytorch/pytorch/pull/112188.patch",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/112188",
                "number": 112188,
                "state": "closed",
                "locked": false,
                "title": "[MPS] Make the device in MPSGenerator consistent with MPSAllocator",
                "user": {
                    "login": "qqaatw",
                    "id": 24835382,
                    "node_id": "MDQ6VXNlcjI0ODM1Mzgy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/24835382?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qqaatw",
                    "html_url": "https://github.com/qqaatw",
                    "followers_url": "https://api.github.com/users/qqaatw/followers",
                    "following_url": "https://api.github.com/users/qqaatw/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qqaatw/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qqaatw/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qqaatw/subscriptions",
                    "organizations_url": "https://api.github.com/users/qqaatw/orgs",
                    "repos_url": "https://api.github.com/users/qqaatw/repos",
                    "events_url": "https://api.github.com/users/qqaatw/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qqaatw/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #112188\n\r\nhttps://github.com/pytorch/pytorch/blob/1b702b185e8dddadb4ad3f487f5412a02c8777e1/aten/src/ATen/mps/MPSAllocator.mm#L751-L760\r\n\r\nThe device in an MPS tensor is actually allocated with a device index, so this PR makes the device generated by `MPSGenerator` consistent with that.\r\n\r\nFixes https://github.com/pytorch/pytorch/issues/110820#issuecomment-1752088865",
                "created_at": "2023-10-26T19:49:54Z",
                "updated_at": "2023-10-27T09:37:48Z",
                "closed_at": "2023-10-27T09:37:48Z",
                "merged_at": null,
                "merge_commit_sha": "3f3377d3437248a87919a6110cb30e4fef446c3e",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "albanD",
                        "id": 6359743,
                        "node_id": "MDQ6VXNlcjYzNTk3NDM=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/6359743?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/albanD",
                        "html_url": "https://github.com/albanD",
                        "followers_url": "https://api.github.com/users/albanD/followers",
                        "following_url": "https://api.github.com/users/albanD/following{/other_user}",
                        "gists_url": "https://api.github.com/users/albanD/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/albanD/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/albanD/subscriptions",
                        "organizations_url": "https://api.github.com/users/albanD/orgs",
                        "repos_url": "https://api.github.com/users/albanD/repos",
                        "events_url": "https://api.github.com/users/albanD/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/albanD/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "razarmehr",
                        "id": 7240463,
                        "node_id": "MDQ6VXNlcjcyNDA0NjM=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/7240463?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/razarmehr",
                        "html_url": "https://github.com/razarmehr",
                        "followers_url": "https://api.github.com/users/razarmehr/followers",
                        "following_url": "https://api.github.com/users/razarmehr/following{/other_user}",
                        "gists_url": "https://api.github.com/users/razarmehr/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/razarmehr/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/razarmehr/subscriptions",
                        "organizations_url": "https://api.github.com/users/razarmehr/orgs",
                        "repos_url": "https://api.github.com/users/razarmehr/repos",
                        "events_url": "https://api.github.com/users/razarmehr/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/razarmehr/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 2404913419,
                        "node_id": "MDU6TGFiZWwyNDA0OTEzNDE5",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/Merged",
                        "name": "Merged",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3663721061,
                        "node_id": "LA_kwDOA-j9z87aX_Jl",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/trunk",
                        "name": "ciflow/trunk",
                        "color": "574CBB",
                        "default": false,
                        "description": "Trigger trunk jobs on your pull request"
                    },
                    {
                        "id": 4164781683,
                        "node_id": "LA_kwDOA-j9z874PYZz",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/release%20notes:%20mps",
                        "name": "release notes: mps",
                        "color": "1d76db",
                        "default": false,
                        "description": "Release notes category"
                    },
                    {
                        "id": 4417837777,
                        "node_id": "LA_kwDOA-j9z88AAAABB1La0Q",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/mps",
                        "name": "ciflow/mps",
                        "color": "02EDA7",
                        "default": false,
                        "description": "Run MPS tests (subset of trunk)"
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112188/commits",
                "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/112188/comments",
                "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/112188/comments",
                "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/adf94f9f73d7a321bf001a8761f0138ceb46222a",
                "head": {
                    "label": "pytorch:gh/qqaatw/26/head",
                    "ref": "gh/qqaatw/26/head",
                    "sha": "adf94f9f73d7a321bf001a8761f0138ceb46222a",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T08:10:09Z",
                        "pushed_at": "2023-10-27T09:37:43Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209605,
                        "stargazers_count": 72004,
                        "watchers_count": 72004,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72004,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pytorch:gh/qqaatw/26/base",
                    "ref": "gh/qqaatw/26/base",
                    "sha": "3a284dae30e1de15d18372c6b448ac67c13d9040",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T08:10:09Z",
                        "pushed_at": "2023-10-27T09:37:43Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209605,
                        "stargazers_count": 72004,
                        "watchers_count": 72004,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13022,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13022,
                        "watchers": 72004,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112188"
                    },
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/112188"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112188"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/112188/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112188/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/112188/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/statuses/adf94f9f73d7a321bf001a8761f0138ceb46222a"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": true,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 4,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 2,
                "additions": 2,
                "deletions": 2,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:37:49Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894326316",
        "type": "PushEvent",
        "actor": {
            "id": 97764156,
            "login": "pytorchmergebot",
            "display_login": "pytorchmergebot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "repository_id": 65600975,
            "push_id": 15589576577,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "cf5479b57e607f4bbdee06c6eb6e890d42d3aa05",
            "before": "7265c22a5d6a0d0649d06407c2bd1e86ef5c7a9e",
            "commits": [
                {
                    "sha": "cf5479b57e607f4bbdee06c6eb6e890d42d3aa05",
                    "author": {
                        "email": "qqaatw@gmail.com",
                        "name": "Li-Huai (Allan) Lin"
                    },
                    "message": "[MPS] Make the device in MPSGenerator consistent with MPSAllocator (#112188)\n\nhttps://github.com/pytorch/pytorch/blob/1b702b185e8dddadb4ad3f487f5412a02c8777e1/aten/src/ATen/mps/MPSAllocator.mm#L751-L760\n\nThe device in an MPS tensor is actually allocated with a device index, so this PR makes the device generated by `MPSGenerator` consistent with that.\n\nFixes https://github.com/pytorch/pytorch/issues/110820#issuecomment-1752088865\nPull Request resolved: https://github.com/pytorch/pytorch/pull/112188\nApproved by: https://github.com/malfet, https://github.com/kulinseth",
                    "distinct": true,
                    "url": "https://api.github.com/repos/pytorch/pytorch/commits/cf5479b57e607f4bbdee06c6eb6e890d42d3aa05"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:37:45Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894280923",
        "type": "CreateEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/trunk/112138",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:36:03Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894280653",
        "type": "CreateEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/inductor/112138",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:36:02Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894261801",
        "type": "CreateEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/inductor/112135",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:35:21Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894256154",
        "type": "CreateEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/trunk/112135",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:35:09Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894126776",
        "type": "CreateEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/inductor/108690",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:30:17Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894126213",
        "type": "CreateEvent",
        "actor": {
            "id": 54816060,
            "login": "pytorch-bot[bot]",
            "display_login": "pytorch-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorch-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/54816060?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "ref": "ciflow/trunk/108690",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:30:16Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894122198",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 3291265,
            "login": "lezcano",
            "display_login": "lezcano",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lezcano",
            "avatar_url": "https://avatars.githubusercontent.com/u/3291265?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/108690",
                "repository_url": "https://api.github.com/repos/pytorch/pytorch",
                "labels_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690/labels{/name}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690/comments",
                "events_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690/events",
                "html_url": "https://github.com/pytorch/pytorch/pull/108690",
                "id": 1884634803,
                "node_id": "PR_kwDOA-j9z85Zt1iD",
                "number": 108690,
                "title": "Move negative index checking to common.py - Fix issue 97365",
                "user": {
                    "login": "guilhermeleobas",
                    "id": 2712115,
                    "node_id": "MDQ6VXNlcjI3MTIxMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2712115?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/guilhermeleobas",
                    "html_url": "https://github.com/guilhermeleobas",
                    "followers_url": "https://api.github.com/users/guilhermeleobas/followers",
                    "following_url": "https://api.github.com/users/guilhermeleobas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/guilhermeleobas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/guilhermeleobas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/guilhermeleobas/subscriptions",
                    "organizations_url": "https://api.github.com/users/guilhermeleobas/orgs",
                    "repos_url": "https://api.github.com/users/guilhermeleobas/repos",
                    "events_url": "https://api.github.com/users/guilhermeleobas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/guilhermeleobas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 2404913419,
                        "node_id": "MDU6TGFiZWwyNDA0OTEzNDE5",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/Merged",
                        "name": "Merged",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3663721061,
                        "node_id": "LA_kwDOA-j9z87aX_Jl",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/trunk",
                        "name": "ciflow/trunk",
                        "color": "574CBB",
                        "default": false,
                        "description": "Trigger trunk jobs on your pull request"
                    },
                    {
                        "id": 4631339377,
                        "node_id": "LA_kwDOA-j9z88AAAABFAyhcQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20inductor",
                        "name": "module: inductor",
                        "color": "f9d0c4",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4668973195,
                        "node_id": "LA_kwDOA-j9z88AAAABFkrgiw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/inductor",
                        "name": "ciflow/inductor",
                        "color": "8E9C02",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5071672485,
                        "node_id": "LA_kwDOA-j9z88AAAABLkuUpQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/release%20notes:%20inductor",
                        "name": "release notes: inductor",
                        "color": "208D2F",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 18,
                "created_at": "2023-09-06T19:39:49Z",
                "updated_at": "2023-10-27T09:30:07Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/pulls/108690",
                    "html_url": "https://github.com/pytorch/pytorch/pull/108690",
                    "diff_url": "https://github.com/pytorch/pytorch/pull/108690.diff",
                    "patch_url": "https://github.com/pytorch/pytorch/pull/108690.patch",
                    "merged_at": null
                },
                "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #108690\n\r\nFixes https://github.com/pytorch/pytorch/issues/97365\r\n\n\ncc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/108690/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782598378",
                "html_url": "https://github.com/pytorch/pytorch/pull/108690#issuecomment-1782598378",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690",
                "id": 1782598378,
                "node_id": "IC_kwDOA-j9z85qQErq",
                "user": {
                    "login": "lezcano",
                    "id": 3291265,
                    "node_id": "MDQ6VXNlcjMyOTEyNjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3291265?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lezcano",
                    "html_url": "https://github.com/lezcano",
                    "followers_url": "https://api.github.com/users/lezcano/followers",
                    "following_url": "https://api.github.com/users/lezcano/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lezcano/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lezcano/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lezcano/subscriptions",
                    "organizations_url": "https://api.github.com/users/lezcano/orgs",
                    "repos_url": "https://api.github.com/users/lezcano/repos",
                    "events_url": "https://api.github.com/users/lezcano/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lezcano/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T09:30:07Z",
                "author_association": "COLLABORATOR",
                "body": "@izaitsevfb who is going to land this one internally?",
                "reactions": {
                    "url": "https://api.github.com/repos/pytorch/pytorch/issues/comments/1782598378/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:30:08Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32894122454",
        "type": "PullRequestEvent",
        "actor": {
            "id": 3291265,
            "login": "lezcano",
            "display_login": "lezcano",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lezcano",
            "avatar_url": "https://avatars.githubusercontent.com/u/3291265?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "action": "reopened",
            "number": 108690,
            "pull_request": {
                "url": "https://api.github.com/repos/pytorch/pytorch/pulls/108690",
                "id": 1505187971,
                "node_id": "PR_kwDOA-j9z85Zt1iD",
                "html_url": "https://github.com/pytorch/pytorch/pull/108690",
                "diff_url": "https://github.com/pytorch/pytorch/pull/108690.diff",
                "patch_url": "https://github.com/pytorch/pytorch/pull/108690.patch",
                "issue_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690",
                "number": 108690,
                "state": "open",
                "locked": false,
                "title": "Move negative index checking to common.py - Fix issue 97365",
                "user": {
                    "login": "guilhermeleobas",
                    "id": 2712115,
                    "node_id": "MDQ6VXNlcjI3MTIxMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2712115?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/guilhermeleobas",
                    "html_url": "https://github.com/guilhermeleobas",
                    "followers_url": "https://api.github.com/users/guilhermeleobas/followers",
                    "following_url": "https://api.github.com/users/guilhermeleobas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/guilhermeleobas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/guilhermeleobas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/guilhermeleobas/subscriptions",
                    "organizations_url": "https://api.github.com/users/guilhermeleobas/orgs",
                    "repos_url": "https://api.github.com/users/guilhermeleobas/repos",
                    "events_url": "https://api.github.com/users/guilhermeleobas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/guilhermeleobas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* __->__ #108690\n\r\nFixes https://github.com/pytorch/pytorch/issues/97365\r\n\n\ncc @voznesenskym @penguinwu @EikanWang @jgong5 @Guobing-Chen @XiaobingSuper @zhuhaozhe @blzheng @wenzhe-nrv @jiayisunx @peterbell10 @ipiszy @yf225 @chenyang78 @kadeng @muchulee8 @aakhundov @ColinPeppler",
                "created_at": "2023-09-06T19:39:49Z",
                "updated_at": "2023-10-27T09:30:07Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "ff117b4aeda5270b921b4dbfc6cc160837b93769",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 1392590051,
                        "node_id": "MDU6TGFiZWwxMzkyNTkwMDUx",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/open%20source",
                        "name": "open source",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 2404913419,
                        "node_id": "MDU6TGFiZWwyNDA0OTEzNDE5",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/Merged",
                        "name": "Merged",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    },
                    {
                        "id": 3663721061,
                        "node_id": "LA_kwDOA-j9z87aX_Jl",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/trunk",
                        "name": "ciflow/trunk",
                        "color": "574CBB",
                        "default": false,
                        "description": "Trigger trunk jobs on your pull request"
                    },
                    {
                        "id": 4631339377,
                        "node_id": "LA_kwDOA-j9z88AAAABFAyhcQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/module:%20inductor",
                        "name": "module: inductor",
                        "color": "f9d0c4",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4668973195,
                        "node_id": "LA_kwDOA-j9z88AAAABFkrgiw",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/ciflow/inductor",
                        "name": "ciflow/inductor",
                        "color": "8E9C02",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5071672485,
                        "node_id": "LA_kwDOA-j9z88AAAABLkuUpQ",
                        "url": "https://api.github.com/repos/pytorch/pytorch/labels/release%20notes:%20inductor",
                        "name": "release notes: inductor",
                        "color": "208D2F",
                        "default": false,
                        "description": ""
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pytorch/pytorch/pulls/108690/commits",
                "review_comments_url": "https://api.github.com/repos/pytorch/pytorch/pulls/108690/comments",
                "review_comment_url": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pytorch/pytorch/issues/108690/comments",
                "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/1782e4e5aaf0a5d29152f00f9dfa58e01c7ddf2e",
                "head": {
                    "label": "pytorch:gh/guilhermeleobas/1/head",
                    "ref": "gh/guilhermeleobas/1/head",
                    "sha": "1782e4e5aaf0a5d29152f00f9dfa58e01c7ddf2e",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T08:10:09Z",
                        "pushed_at": "2023-10-27T09:22:26Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209605,
                        "stargazers_count": 72004,
                        "watchers_count": 72004,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13023,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13023,
                        "watchers": 72004,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pytorch:gh/guilhermeleobas/1/base",
                    "ref": "gh/guilhermeleobas/1/base",
                    "sha": "1725fe86ee350972a0cced911cbe2e80d3b9163c",
                    "user": {
                        "login": "pytorch",
                        "id": 21003710,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pytorch",
                        "html_url": "https://github.com/pytorch",
                        "followers_url": "https://api.github.com/users/pytorch/followers",
                        "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                        "organizations_url": "https://api.github.com/users/pytorch/orgs",
                        "repos_url": "https://api.github.com/users/pytorch/repos",
                        "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pytorch/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65600975,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTYwMDk3NQ==",
                        "name": "pytorch",
                        "full_name": "pytorch/pytorch",
                        "private": false,
                        "owner": {
                            "login": "pytorch",
                            "id": 21003710,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjIxMDAzNzEw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pytorch",
                            "html_url": "https://github.com/pytorch",
                            "followers_url": "https://api.github.com/users/pytorch/followers",
                            "following_url": "https://api.github.com/users/pytorch/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pytorch/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pytorch/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pytorch/subscriptions",
                            "organizations_url": "https://api.github.com/users/pytorch/orgs",
                            "repos_url": "https://api.github.com/users/pytorch/repos",
                            "events_url": "https://api.github.com/users/pytorch/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pytorch/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pytorch/pytorch",
                        "description": "Tensors and Dynamic neural networks in Python with strong GPU acceleration",
                        "fork": false,
                        "url": "https://api.github.com/repos/pytorch/pytorch",
                        "forks_url": "https://api.github.com/repos/pytorch/pytorch/forks",
                        "keys_url": "https://api.github.com/repos/pytorch/pytorch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pytorch/pytorch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pytorch/pytorch/teams",
                        "hooks_url": "https://api.github.com/repos/pytorch/pytorch/hooks",
                        "issue_events_url": "https://api.github.com/repos/pytorch/pytorch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pytorch/pytorch/events",
                        "assignees_url": "https://api.github.com/repos/pytorch/pytorch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pytorch/pytorch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pytorch/pytorch/tags",
                        "blobs_url": "https://api.github.com/repos/pytorch/pytorch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pytorch/pytorch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pytorch/pytorch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pytorch/pytorch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pytorch/pytorch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pytorch/pytorch/languages",
                        "stargazers_url": "https://api.github.com/repos/pytorch/pytorch/stargazers",
                        "contributors_url": "https://api.github.com/repos/pytorch/pytorch/contributors",
                        "subscribers_url": "https://api.github.com/repos/pytorch/pytorch/subscribers",
                        "subscription_url": "https://api.github.com/repos/pytorch/pytorch/subscription",
                        "commits_url": "https://api.github.com/repos/pytorch/pytorch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pytorch/pytorch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pytorch/pytorch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pytorch/pytorch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pytorch/pytorch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pytorch/pytorch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pytorch/pytorch/merges",
                        "archive_url": "https://api.github.com/repos/pytorch/pytorch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pytorch/pytorch/downloads",
                        "issues_url": "https://api.github.com/repos/pytorch/pytorch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pytorch/pytorch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pytorch/pytorch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pytorch/pytorch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pytorch/pytorch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pytorch/pytorch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pytorch/pytorch/deployments",
                        "created_at": "2016-08-13T05:26:41Z",
                        "updated_at": "2023-10-27T08:10:09Z",
                        "pushed_at": "2023-10-27T09:22:26Z",
                        "git_url": "git://github.com/pytorch/pytorch.git",
                        "ssh_url": "git@github.com:pytorch/pytorch.git",
                        "clone_url": "https://github.com/pytorch/pytorch.git",
                        "svn_url": "https://github.com/pytorch/pytorch",
                        "homepage": "https://pytorch.org",
                        "size": 1209605,
                        "stargazers_count": 72004,
                        "watchers_count": 72004,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 19792,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 13023,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "autograd",
                            "deep-learning",
                            "gpu",
                            "machine-learning",
                            "neural-network",
                            "numpy",
                            "python",
                            "tensor"
                        ],
                        "visibility": "public",
                        "forks": 19792,
                        "open_issues": 13023,
                        "watchers": 72004,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/108690"
                    },
                    "html": {
                        "href": "https://github.com/pytorch/pytorch/pull/108690"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/108690"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/issues/108690/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/108690/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/pulls/108690/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pytorch/pytorch/statuses/1782e4e5aaf0a5d29152f00f9dfa58e01c7ddf2e"
                    }
                },
                "author_association": "COLLABORATOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 18,
                "review_comments": 36,
                "maintainer_can_modify": false,
                "commits": 23,
                "additions": 225,
                "deletions": 165,
                "changed_files": 7
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:30:08Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    },
    {
        "id": "32893921234",
        "type": "PushEvent",
        "actor": {
            "id": 97764156,
            "login": "pytorchmergebot",
            "display_login": "pytorchmergebot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pytorchmergebot",
            "avatar_url": "https://avatars.githubusercontent.com/u/97764156?"
        },
        "repo": {
            "id": 65600975,
            "name": "pytorch/pytorch",
            "url": "https://api.github.com/repos/pytorch/pytorch"
        },
        "payload": {
            "repository_id": 65600975,
            "push_id": 15589380948,
            "size": 2,
            "distinct_size": 0,
            "ref": "refs/heads/viable/strict",
            "head": "20fc2b41869fe4b5f382bfbe21f00b0ba0f7e6cf",
            "before": "6a992915465530ab8566883275364de1092cd403",
            "commits": [
                {
                    "sha": "632ac01bef20b4396f96f0d57b718a531b84505a",
                    "author": {
                        "email": "jezng@fb.com",
                        "name": "Jez Ng"
                    },
                    "message": "[dynamo] Enable typechecking for exc.py (#112127)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/112127\nApproved by: https://github.com/Skylion007\nghstack dependencies: #111894, #111992, #112031",
                    "distinct": false,
                    "url": "https://api.github.com/repos/pytorch/pytorch/commits/632ac01bef20b4396f96f0d57b718a531b84505a"
                },
                {
                    "sha": "20fc2b41869fe4b5f382bfbe21f00b0ba0f7e6cf",
                    "author": {
                        "email": "jezng@fb.com",
                        "name": "Jez Ng"
                    },
                    "message": "[dynamo] Enable typechecking for compiled_autograd.py (#112128)\n\nPull Request resolved: https://github.com/pytorch/pytorch/pull/112128\nApproved by: https://github.com/Skylion007\nghstack dependencies: #111894, #111992, #112031, #112127",
                    "distinct": false,
                    "url": "https://api.github.com/repos/pytorch/pytorch/commits/20fc2b41869fe4b5f382bfbe21f00b0ba0f7e6cf"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:22:29Z",
        "org": {
            "id": 21003710,
            "login": "pytorch",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pytorch",
            "avatar_url": "https://avatars.githubusercontent.com/u/21003710?"
        }
    }
]