[
    {
        "id": "32869807536",
        "type": "WatchEvent",
        "actor": {
            "id": 890632,
            "login": "somehume",
            "display_login": "somehume",
            "gravatar_id": "",
            "url": "https://api.github.com/users/somehume",
            "avatar_url": "https://avatars.githubusercontent.com/u/890632?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T13:34:49Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32859544844",
        "type": "WatchEvent",
        "actor": {
            "id": 21232463,
            "login": "JasonNum1",
            "display_login": "JasonNum1",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JasonNum1",
            "avatar_url": "https://avatars.githubusercontent.com/u/21232463?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T07:41:29Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32857161357",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 435872,
            "login": "meistermeier",
            "display_login": "meistermeier",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meistermeier",
            "avatar_url": "https://avatars.githubusercontent.com/u/435872?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2816",
                "id": 1952660462,
                "node_id": "I_kwDOACWzSs50Yzvu",
                "number": 2816,
                "title": "Neo4j version sniffing for elementId still not working",
                "user": {
                    "login": "michael-simons",
                    "id": 526383,
                    "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/michael-simons",
                    "html_url": "https://github.com/michael-simons",
                    "followers_url": "https://api.github.com/users/michael-simons/followers",
                    "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                    "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                    "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                    "repos_url": "https://api.github.com/users/michael-simons/repos",
                    "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "meistermeier",
                    "id": 435872,
                    "node_id": "MDQ6VXNlcjQzNTg3Mg==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/435872?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/meistermeier",
                    "html_url": "https://github.com/meistermeier",
                    "followers_url": "https://api.github.com/users/meistermeier/followers",
                    "following_url": "https://api.github.com/users/meistermeier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/meistermeier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/meistermeier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/meistermeier/subscriptions",
                    "organizations_url": "https://api.github.com/users/meistermeier/orgs",
                    "repos_url": "https://api.github.com/users/meistermeier/repos",
                    "events_url": "https://api.github.com/users/meistermeier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/meistermeier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "meistermeier",
                        "id": 435872,
                        "node_id": "MDQ6VXNlcjQzNTg3Mg==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/435872?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/meistermeier",
                        "html_url": "https://github.com/meistermeier",
                        "followers_url": "https://api.github.com/users/meistermeier/followers",
                        "following_url": "https://api.github.com/users/meistermeier/following{/other_user}",
                        "gists_url": "https://api.github.com/users/meistermeier/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/meistermeier/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/meistermeier/subscriptions",
                        "organizations_url": "https://api.github.com/users/meistermeier/orgs",
                        "repos_url": "https://api.github.com/users/meistermeier/repos",
                        "events_url": "https://api.github.com/users/meistermeier/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/meistermeier/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-19T16:34:36Z",
                "updated_at": "2023-10-26T05:52:18Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "body": "With\r\n\r\n\r\n```\r\n\r\n@Node\r\npublic class Movie {\r\n\r\n\t@Id\r\n\t@GeneratedValue String elementId;\r\n\r\n\tpublic String getElementId() {\r\n\t\treturn elementId;\r\n\t}\r\n\r\n\tpublic void setElementId(String elementId) {\r\n\t\tthis.elementId = elementId;\r\n\t}\r\n}\r\n\r\npublic interface MovieRepository extends ReactiveNeo4jRepository<Movie, String> {\r\n}\r\n\r\n```\r\n\r\nI still see\r\n\r\n```\r\n2023-10-19T18:34:18.170+02:00  WARN 5766 --- [o4jDriverIO-2-2] o.s.data.neo4j.cypher.deprecation        : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.\r\n\tMATCH (movie:`Movie`) WHERE toString(id(movie)) = $__id__ RETURN movie{__nodeLabels__: labels(movie), __elementId__: id(movie)}\r\n```\r\n\r\non\r\n\r\n```\r\nmovieRepository.findById(\"xxx\").block();\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1780457594",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2816#issuecomment-1780457594",
                "issue_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816",
                "id": 1780457594,
                "node_id": "IC_kwDOACWzSs5qH6B6",
                "user": {
                    "login": "meistermeier",
                    "id": 435872,
                    "node_id": "MDQ6VXNlcjQzNTg3Mg==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/435872?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/meistermeier",
                    "html_url": "https://github.com/meistermeier",
                    "followers_url": "https://api.github.com/users/meistermeier/followers",
                    "following_url": "https://api.github.com/users/meistermeier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/meistermeier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/meistermeier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/meistermeier/subscriptions",
                    "organizations_url": "https://api.github.com/users/meistermeier/orgs",
                    "repos_url": "https://api.github.com/users/meistermeier/repos",
                    "events_url": "https://api.github.com/users/meistermeier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/meistermeier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T05:52:18Z",
                "updated_at": "2023-10-26T05:52:18Z",
                "author_association": "COLLABORATOR",
                "body": "Seems related to #2809",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1780457594/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T05:52:18Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32796685519",
        "type": "PushEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15540953481,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "e4f034858a58eadf2bc21beeb8f29ecb6e3bb340",
            "before": "b3dc32c74c1d345882ac28c77fee92cc2ff1e021",
            "commits": [
                {
                    "sha": "e4f034858a58eadf2bc21beeb8f29ecb6e3bb340",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "refactor: Avoid concurrency issues during some writes and reads.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/e4f034858a58eadf2bc21beeb8f29ecb6e3bb340"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T08:48:06Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32796683352",
        "type": "PushEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15540952451,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/7.1.x",
            "head": "54d5a529e4bb4aaf580a77919f367a80ca0a5098",
            "before": "b2b9023cd05f3a4a1a925f91fce9e95a1a801c99",
            "commits": [
                {
                    "sha": "84976870c1709e79a9577276512c9a9f232817a5",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "build: Exclude gradle enterprise cache in older branches, too.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/84976870c1709e79a9577276512c9a9f232817a5"
                },
                {
                    "sha": "54d5a529e4bb4aaf580a77919f367a80ca0a5098",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "refactor: Avoid concurrency issues during some writes and reads.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/54d5a529e4bb4aaf580a77919f367a80ca0a5098"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T08:48:01Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32796681046",
        "type": "PushEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15540951398,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/7.0.x",
            "head": "43eed88b5e64e70170c96da0059430c96c6a9a54",
            "before": "140b0202c50de25ded7e96730bfa124fb8eca3ff",
            "commits": [
                {
                    "sha": "bdc718b07a5efac9db7567b7d6e587ef6c15ee64",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "build: Exclude gradle enterprise cache in older branches, too.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/bdc718b07a5efac9db7567b7d6e587ef6c15ee64"
                },
                {
                    "sha": "43eed88b5e64e70170c96da0059430c96c6a9a54",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "refactor: Avoid concurrency issues during some writes and reads.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/43eed88b5e64e70170c96da0059430c96c6a9a54"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T08:47:56Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32745175232",
        "type": "ForkEvent",
        "actor": {
            "id": 12482020,
            "login": "airtyon",
            "display_login": "airtyon",
            "gravatar_id": "",
            "url": "https://api.github.com/users/airtyon",
            "avatar_url": "https://avatars.githubusercontent.com/u/12482020?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "forkee": {
                "id": 708201995,
                "node_id": "R_kgDOKjZOCw",
                "name": "spring-data-neo4j",
                "full_name": "airtyon/spring-data-neo4j",
                "private": false,
                "owner": {
                    "login": "airtyon",
                    "id": 12482020,
                    "node_id": "MDQ6VXNlcjEyNDgyMDIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/12482020?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/airtyon",
                    "html_url": "https://github.com/airtyon",
                    "followers_url": "https://api.github.com/users/airtyon/followers",
                    "following_url": "https://api.github.com/users/airtyon/following{/other_user}",
                    "gists_url": "https://api.github.com/users/airtyon/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/airtyon/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/airtyon/subscriptions",
                    "organizations_url": "https://api.github.com/users/airtyon/orgs",
                    "repos_url": "https://api.github.com/users/airtyon/repos",
                    "events_url": "https://api.github.com/users/airtyon/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/airtyon/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/airtyon/spring-data-neo4j",
                "description": "Provide support to increase developer productivity in Java when using Neo4j. Uses familiar Spring concepts such as a template classes for core API usage and lightweight repository style data access.",
                "fork": true,
                "url": "https://api.github.com/repos/airtyon/spring-data-neo4j",
                "forks_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/forks",
                "keys_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/teams",
                "hooks_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/hooks",
                "issue_events_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/issues/events{/number}",
                "events_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/events",
                "assignees_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/assignees{/user}",
                "branches_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/branches{/branch}",
                "tags_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/tags",
                "blobs_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/languages",
                "stargazers_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/stargazers",
                "contributors_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/contributors",
                "subscribers_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/subscribers",
                "subscription_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/subscription",
                "commits_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/contents/{+path}",
                "compare_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/merges",
                "archive_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/downloads",
                "issues_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/issues{/number}",
                "pulls_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/labels{/name}",
                "releases_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/releases{/id}",
                "deployments_url": "https://api.github.com/repos/airtyon/spring-data-neo4j/deployments",
                "created_at": "2023-10-21T20:39:30Z",
                "updated_at": "2023-10-21T20:39:30Z",
                "pushed_at": "2023-10-20T18:22:38Z",
                "git_url": "git://github.com/airtyon/spring-data-neo4j.git",
                "ssh_url": "git@github.com:airtyon/spring-data-neo4j.git",
                "clone_url": "https://github.com/airtyon/spring-data-neo4j.git",
                "svn_url": "https://github.com/airtyon/spring-data-neo4j",
                "homepage": "http://spring.io/projects/spring-data-neo4j",
                "size": 30371,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": false,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-21T20:39:31Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32730867862",
        "type": "PullRequestEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "closed",
            "number": 2811,
            "pull_request": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811",
                "id": 1556043561,
                "node_id": "PR_kwDOACWzSs5cv1cp",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811",
                "diff_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811.diff",
                "patch_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811.patch",
                "issue_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811",
                "number": 2811,
                "state": "closed",
                "locked": false,
                "title": "Connect build to ge.spring.io to benefit from deep build insights and faster builds",
                "user": {
                    "login": "erichaagdev",
                    "id": 5797900,
                    "node_id": "MDQ6VXNlcjU3OTc5MDA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5797900?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/erichaagdev",
                    "html_url": "https://github.com/erichaagdev",
                    "followers_url": "https://api.github.com/users/erichaagdev/followers",
                    "following_url": "https://api.github.com/users/erichaagdev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/erichaagdev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/erichaagdev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/erichaagdev/subscriptions",
                    "organizations_url": "https://api.github.com/users/erichaagdev/orgs",
                    "repos_url": "https://api.github.com/users/erichaagdev/repos",
                    "events_url": "https://api.github.com/users/erichaagdev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/erichaagdev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "This pull request connects the build to the Gradle Enterprise instance at https://ge.spring.io/. This allows the Spring Data Neo4j project to benefit from deep build insights provided by build scans and faster build speeds for all contributors as a result of local and remote build caching. \r\n\r\nThis Gradle Enterprise instance has all features and extensions enabled and is freely available for use by Spring Data Neo4j and all other Spring projects. On this Gradle Enterprise instance, Spring Data Neo4j will have access not only to all of the published build scans, but other aggregate data features such as:\r\n\r\n- Dashboards to view all historical build scans, along with performance trends over time\r\n- Build failure analytics for enhanced investigation and diagnosis of build failures\r\n- Test failure analytics to better understand trends and causes around slow, failing, and flaky tests\r\n\r\n[Spring Boot](https://ge.spring.io/scans?search.rootProjectNames=spring-boot-build), [Spring Framework](https://ge.spring.io/scans?search.rootProjectNames=spring), and [Spring Security](https://ge.spring.io/scans?search.rootProjectNames=spring-security) are already connected to https://ge.spring.io/ and are benefiting from these features. \r\n\r\nAppropriate access must be configured to publish build scans. To provision a Gradle Enterprise access key for local development, you can invoke the following Maven goal:\r\n\r\n```shell\r\n./mvnw gradle-enterprise:provision-access-key\r\n```\r\n\r\nFor instructions to connect CI to the remote build cache and to publish build scans, please follow the instructions here in [Gradle Enterprise Conventions](https://github.com/spring-io/gradle-enterprise-conventions#gradle-enterprise-conventions). You can disregard that this is a Gradle plugin, the instructions in the README work the same.\r\n\r\nPlease let me know if there are any questions about the value of Gradle Enterprise or the changes in this pull request and I\u2019d be happy to address them.",
                "created_at": "2023-10-13T14:47:12Z",
                "updated_at": "2023-10-20T18:23:15Z",
                "closed_at": "2023-10-20T18:23:14Z",
                "merged_at": null,
                "merge_commit_sha": "5fad7a7944b4a0caf8a5b90e2c6a5b3f9e0f2ab0",
                "assignee": {
                    "login": "gregturn",
                    "id": 311040,
                    "node_id": "MDQ6VXNlcjMxMTA0MA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/311040?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gregturn",
                    "html_url": "https://github.com/gregturn",
                    "followers_url": "https://api.github.com/users/gregturn/followers",
                    "following_url": "https://api.github.com/users/gregturn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gregturn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gregturn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gregturn/subscriptions",
                    "organizations_url": "https://api.github.com/users/gregturn/orgs",
                    "repos_url": "https://api.github.com/users/gregturn/repos",
                    "events_url": "https://api.github.com/users/gregturn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gregturn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "gregturn",
                        "id": 311040,
                        "node_id": "MDQ6VXNlcjMxMTA0MA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/311040?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gregturn",
                        "html_url": "https://github.com/gregturn",
                        "followers_url": "https://api.github.com/users/gregturn/followers",
                        "following_url": "https://api.github.com/users/gregturn/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gregturn/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gregturn/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gregturn/subscriptions",
                        "organizations_url": "https://api.github.com/users/gregturn/orgs",
                        "repos_url": "https://api.github.com/users/gregturn/repos",
                        "events_url": "https://api.github.com/users/gregturn/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gregturn/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/324",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/324",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/324/labels",
                    "id": 10047308,
                    "node_id": "MI_kwDOACWzSs4AmU9M",
                    "number": 324,
                    "title": "7.2 GA (2023.1.0)",
                    "description": "2023.1.0",
                    "creator": {
                        "login": "jxblum",
                        "id": 5247119,
                        "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jxblum",
                        "html_url": "https://github.com/jxblum",
                        "followers_url": "https://api.github.com/users/jxblum/followers",
                        "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                        "organizations_url": "https://api.github.com/users/jxblum/orgs",
                        "repos_url": "https://api.github.com/users/jxblum/repos",
                        "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jxblum/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 1,
                    "closed_issues": 1,
                    "state": "open",
                    "created_at": "2023-10-13T16:01:30Z",
                    "updated_at": "2023-10-20T18:23:15Z",
                    "due_on": null,
                    "closed_at": null
                },
                "draft": false,
                "commits_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811/commits",
                "review_comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811/comments",
                "review_comment_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/comments",
                "statuses_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/statuses/c673d76c89a07912e62c57eb4252016a408fc689",
                "head": {
                    "label": "erichaagdev:main",
                    "ref": "main",
                    "sha": "c673d76c89a07912e62c57eb4252016a408fc689",
                    "user": {
                        "login": "erichaagdev",
                        "id": 5797900,
                        "node_id": "MDQ6VXNlcjU3OTc5MDA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5797900?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/erichaagdev",
                        "html_url": "https://github.com/erichaagdev",
                        "followers_url": "https://api.github.com/users/erichaagdev/followers",
                        "following_url": "https://api.github.com/users/erichaagdev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/erichaagdev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/erichaagdev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/erichaagdev/subscriptions",
                        "organizations_url": "https://api.github.com/users/erichaagdev/orgs",
                        "repos_url": "https://api.github.com/users/erichaagdev/repos",
                        "events_url": "https://api.github.com/users/erichaagdev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/erichaagdev/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 704564639,
                        "node_id": "R_kgDOKf7Nnw",
                        "name": "spring-data-neo4j",
                        "full_name": "erichaagdev/spring-data-neo4j",
                        "private": false,
                        "owner": {
                            "login": "erichaagdev",
                            "id": 5797900,
                            "node_id": "MDQ6VXNlcjU3OTc5MDA=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5797900?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/erichaagdev",
                            "html_url": "https://github.com/erichaagdev",
                            "followers_url": "https://api.github.com/users/erichaagdev/followers",
                            "following_url": "https://api.github.com/users/erichaagdev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/erichaagdev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/erichaagdev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/erichaagdev/subscriptions",
                            "organizations_url": "https://api.github.com/users/erichaagdev/orgs",
                            "repos_url": "https://api.github.com/users/erichaagdev/repos",
                            "events_url": "https://api.github.com/users/erichaagdev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/erichaagdev/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/erichaagdev/spring-data-neo4j",
                        "description": "Provide support to increase developer productivity in Java when using Neo4j. Uses familiar Spring concepts such as a template classes for core API usage and lightweight repository style data access.",
                        "fork": true,
                        "url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j",
                        "forks_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/forks",
                        "keys_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/teams",
                        "hooks_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/hooks",
                        "issue_events_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/events",
                        "assignees_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/tags",
                        "blobs_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/languages",
                        "stargazers_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/stargazers",
                        "contributors_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/contributors",
                        "subscribers_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/subscribers",
                        "subscription_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/subscription",
                        "commits_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/merges",
                        "archive_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/downloads",
                        "issues_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/labels{/name}",
                        "releases_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/erichaagdev/spring-data-neo4j/deployments",
                        "created_at": "2023-10-13T14:27:25Z",
                        "updated_at": "2023-10-13T14:32:16Z",
                        "pushed_at": "2023-10-13T14:32:03Z",
                        "git_url": "git://github.com/erichaagdev/spring-data-neo4j.git",
                        "ssh_url": "git@github.com:erichaagdev/spring-data-neo4j.git",
                        "clone_url": "https://github.com/erichaagdev/spring-data-neo4j.git",
                        "svn_url": "https://github.com/erichaagdev/spring-data-neo4j",
                        "homepage": "http://spring.io/projects/spring-data-neo4j",
                        "size": 17026,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Java",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "spring-projects:main",
                    "ref": "main",
                    "sha": "52535f37f5a5d5a2cce4fbdd9d3504a1b07dacb0",
                    "user": {
                        "login": "spring-projects",
                        "id": 317776,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/317776?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/spring-projects",
                        "html_url": "https://github.com/spring-projects",
                        "followers_url": "https://api.github.com/users/spring-projects/followers",
                        "following_url": "https://api.github.com/users/spring-projects/following{/other_user}",
                        "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions",
                        "organizations_url": "https://api.github.com/users/spring-projects/orgs",
                        "repos_url": "https://api.github.com/users/spring-projects/repos",
                        "events_url": "https://api.github.com/users/spring-projects/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/spring-projects/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 2470730,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyNDcwNzMw",
                        "name": "spring-data-neo4j",
                        "full_name": "spring-projects/spring-data-neo4j",
                        "private": false,
                        "owner": {
                            "login": "spring-projects",
                            "id": 317776,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNzc3Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/317776?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/spring-projects",
                            "html_url": "https://github.com/spring-projects",
                            "followers_url": "https://api.github.com/users/spring-projects/followers",
                            "following_url": "https://api.github.com/users/spring-projects/following{/other_user}",
                            "gists_url": "https://api.github.com/users/spring-projects/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/spring-projects/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/spring-projects/subscriptions",
                            "organizations_url": "https://api.github.com/users/spring-projects/orgs",
                            "repos_url": "https://api.github.com/users/spring-projects/repos",
                            "events_url": "https://api.github.com/users/spring-projects/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/spring-projects/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/spring-projects/spring-data-neo4j",
                        "description": "Provide support to increase developer productivity in Java when using Neo4j. Uses familiar Spring concepts such as a template classes for core API usage and lightweight repository style data access.",
                        "fork": false,
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                        "forks_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/forks",
                        "keys_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/teams",
                        "hooks_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/hooks",
                        "issue_events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/events",
                        "assignees_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/tags",
                        "blobs_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/languages",
                        "stargazers_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/stargazers",
                        "contributors_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/contributors",
                        "subscribers_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/subscribers",
                        "subscription_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/subscription",
                        "commits_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/merges",
                        "archive_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/downloads",
                        "issues_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels{/name}",
                        "releases_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/deployments",
                        "created_at": "2011-09-27T21:02:43Z",
                        "updated_at": "2023-10-09T18:50:46Z",
                        "pushed_at": "2023-10-20T18:22:38Z",
                        "git_url": "git://github.com/spring-projects/spring-data-neo4j.git",
                        "ssh_url": "git@github.com:spring-projects/spring-data-neo4j.git",
                        "clone_url": "https://github.com/spring-projects/spring-data-neo4j.git",
                        "svn_url": "https://github.com/spring-projects/spring-data-neo4j",
                        "homepage": "http://spring.io/projects/spring-data-neo4j",
                        "size": 30373,
                        "stargazers_count": 793,
                        "watchers_count": 793,
                        "language": "Java",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": true,
                        "has_discussions": false,
                        "forks_count": 621,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 39,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "ddd",
                            "framework",
                            "java",
                            "neo4j",
                            "spring",
                            "spring-data"
                        ],
                        "visibility": "public",
                        "forks": 621,
                        "open_issues": 39,
                        "watchers": 793,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811"
                    },
                    "html": {
                        "href": "https://github.com/spring-projects/spring-data-neo4j/pull/2811"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/spring-projects/spring-data-neo4j/statuses/c673d76c89a07912e62c57eb4252016a408fc689"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": false,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 1,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 46,
                "deletions": 1,
                "changed_files": 4
            }
        },
        "public": true,
        "created_at": "2023-10-20T18:23:16Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32730867655",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811",
                "id": 1942101973,
                "node_id": "PR_kwDOACWzSs5cv1cp",
                "number": 2811,
                "title": "Connect build to ge.spring.io to benefit from deep build insights and faster builds",
                "user": {
                    "login": "erichaagdev",
                    "id": 5797900,
                    "node_id": "MDQ6VXNlcjU3OTc5MDA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5797900?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/erichaagdev",
                    "html_url": "https://github.com/erichaagdev",
                    "followers_url": "https://api.github.com/users/erichaagdev/followers",
                    "following_url": "https://api.github.com/users/erichaagdev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/erichaagdev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/erichaagdev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/erichaagdev/subscriptions",
                    "organizations_url": "https://api.github.com/users/erichaagdev/orgs",
                    "repos_url": "https://api.github.com/users/erichaagdev/repos",
                    "events_url": "https://api.github.com/users/erichaagdev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/erichaagdev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "gregturn",
                    "id": 311040,
                    "node_id": "MDQ6VXNlcjMxMTA0MA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/311040?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gregturn",
                    "html_url": "https://github.com/gregturn",
                    "followers_url": "https://api.github.com/users/gregturn/followers",
                    "following_url": "https://api.github.com/users/gregturn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gregturn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gregturn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gregturn/subscriptions",
                    "organizations_url": "https://api.github.com/users/gregturn/orgs",
                    "repos_url": "https://api.github.com/users/gregturn/repos",
                    "events_url": "https://api.github.com/users/gregturn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gregturn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "gregturn",
                        "id": 311040,
                        "node_id": "MDQ6VXNlcjMxMTA0MA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/311040?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/gregturn",
                        "html_url": "https://github.com/gregturn",
                        "followers_url": "https://api.github.com/users/gregturn/followers",
                        "following_url": "https://api.github.com/users/gregturn/following{/other_user}",
                        "gists_url": "https://api.github.com/users/gregturn/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/gregturn/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/gregturn/subscriptions",
                        "organizations_url": "https://api.github.com/users/gregturn/orgs",
                        "repos_url": "https://api.github.com/users/gregturn/repos",
                        "events_url": "https://api.github.com/users/gregturn/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/gregturn/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/324",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/324",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/324/labels",
                    "id": 10047308,
                    "node_id": "MI_kwDOACWzSs4AmU9M",
                    "number": 324,
                    "title": "7.2 GA (2023.1.0)",
                    "description": "2023.1.0",
                    "creator": {
                        "login": "jxblum",
                        "id": 5247119,
                        "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jxblum",
                        "html_url": "https://github.com/jxblum",
                        "followers_url": "https://api.github.com/users/jxblum/followers",
                        "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                        "organizations_url": "https://api.github.com/users/jxblum/orgs",
                        "repos_url": "https://api.github.com/users/jxblum/repos",
                        "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jxblum/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 1,
                    "closed_issues": 1,
                    "state": "open",
                    "created_at": "2023-10-13T16:01:30Z",
                    "updated_at": "2023-10-20T18:23:15Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 1,
                "created_at": "2023-10-13T14:47:12Z",
                "updated_at": "2023-10-20T18:23:15Z",
                "closed_at": "2023-10-20T18:23:14Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/pulls/2811",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811",
                    "diff_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811.diff",
                    "patch_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811.patch",
                    "merged_at": null
                },
                "body": "This pull request connects the build to the Gradle Enterprise instance at https://ge.spring.io/. This allows the Spring Data Neo4j project to benefit from deep build insights provided by build scans and faster build speeds for all contributors as a result of local and remote build caching. \r\n\r\nThis Gradle Enterprise instance has all features and extensions enabled and is freely available for use by Spring Data Neo4j and all other Spring projects. On this Gradle Enterprise instance, Spring Data Neo4j will have access not only to all of the published build scans, but other aggregate data features such as:\r\n\r\n- Dashboards to view all historical build scans, along with performance trends over time\r\n- Build failure analytics for enhanced investigation and diagnosis of build failures\r\n- Test failure analytics to better understand trends and causes around slow, failing, and flaky tests\r\n\r\n[Spring Boot](https://ge.spring.io/scans?search.rootProjectNames=spring-boot-build), [Spring Framework](https://ge.spring.io/scans?search.rootProjectNames=spring), and [Spring Security](https://ge.spring.io/scans?search.rootProjectNames=spring-security) are already connected to https://ge.spring.io/ and are benefiting from these features. \r\n\r\nAppropriate access must be configured to publish build scans. To provision a Gradle Enterprise access key for local development, you can invoke the following Maven goal:\r\n\r\n```shell\r\n./mvnw gradle-enterprise:provision-access-key\r\n```\r\n\r\nFor instructions to connect CI to the remote build cache and to publish build scans, please follow the instructions here in [Gradle Enterprise Conventions](https://github.com/spring-io/gradle-enterprise-conventions#gradle-enterprise-conventions). You can disregard that this is a Gradle plugin, the instructions in the README work the same.\r\n\r\nPlease let me know if there are any questions about the value of Gradle Enterprise or the changes in this pull request and I\u2019d be happy to address them.",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1773198581",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/pull/2811#issuecomment-1773198581",
                "issue_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2811",
                "id": 1773198581,
                "node_id": "IC_kwDOACWzSs5psNz1",
                "user": {
                    "login": "gregturn",
                    "id": 311040,
                    "node_id": "MDQ6VXNlcjMxMTA0MA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/311040?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gregturn",
                    "html_url": "https://github.com/gregturn",
                    "followers_url": "https://api.github.com/users/gregturn/followers",
                    "following_url": "https://api.github.com/users/gregturn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gregturn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gregturn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gregturn/subscriptions",
                    "organizations_url": "https://api.github.com/users/gregturn/orgs",
                    "repos_url": "https://api.github.com/users/gregturn/repos",
                    "events_url": "https://api.github.com/users/gregturn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gregturn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T18:23:15Z",
                "updated_at": "2023-10-20T18:23:15Z",
                "author_association": "MEMBER",
                "body": "Resolved.",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1773198581/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T18:23:16Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32730854992",
        "type": "DeleteEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "ref": "issue/develocity",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-20T18:22:40Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32730850612",
        "type": "PushEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15504537519,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "b3dc32c74c1d345882ac28c77fee92cc2ff1e021",
            "before": "42d936ade4ace470a708a6ee2b16ab4f3d9ef574",
            "commits": [
                {
                    "sha": "b3dc32c74c1d345882ac28c77fee92cc2ff1e021",
                    "author": {
                        "email": "ehaag@gradle.com",
                        "name": "Eric Haag"
                    },
                    "message": "Connect build to ge.spring.io.\n\nThis change publishes a build scan to ge.spring.io for every local build from an authenticated Spring committer and for CI where appropriate access tokens are available. The build will not fail if publishing fails.\n\nThis change also allows the build to benefit from local and remote build caching, providing faster builds for all contributors.\n\nAdditionally, the project will have access to all features of Gradle Enterprise such as:\n\n- Dashboards to view all historical build scans, along with performance trends over time\n- Build failure analytics for enhanced investigation and diagnosis of build failures\n- Test failure analytics to better understand trends and causes around slow, failing, and flaky tests\n\nSee #2811",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/b3dc32c74c1d345882ac28c77fee92cc2ff1e021"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-20T18:22:27Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32725404492",
        "type": "CreateEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "ref": "issue/develocity",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "Provide support to increase developer productivity in Java when using Neo4j. Uses familiar Spring concepts such as a template classes for core API usage and lightweight repository style data access.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-20T14:34:37Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32718451777",
        "type": "IssuesEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2798",
                "id": 1906760798,
                "node_id": "I_kwDOACWzSs5xptxe",
                "number": 2798,
                "title": "Errors when working with graalvm native compilation",
                "user": {
                    "login": "Dimibe",
                    "id": 15692917,
                    "node_id": "MDQ6VXNlcjE1NjkyOTE3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15692917?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Dimibe",
                    "html_url": "https://github.com/Dimibe",
                    "followers_url": "https://api.github.com/users/Dimibe/followers",
                    "following_url": "https://api.github.com/users/Dimibe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Dimibe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Dimibe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Dimibe/subscriptions",
                    "organizations_url": "https://api.github.com/users/Dimibe/orgs",
                    "repos_url": "https://api.github.com/users/Dimibe/repos",
                    "events_url": "https://api.github.com/users/Dimibe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Dimibe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509573519,
                        "node_id": "MDU6TGFiZWwyNTA5NTczNTE5",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general bug"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "michael-simons",
                    "id": 526383,
                    "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/michael-simons",
                    "html_url": "https://github.com/michael-simons",
                    "followers_url": "https://api.github.com/users/michael-simons/followers",
                    "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                    "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                    "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                    "repos_url": "https://api.github.com/users/michael-simons/repos",
                    "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "michael-simons",
                        "id": 526383,
                        "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/michael-simons",
                        "html_url": "https://github.com/michael-simons",
                        "followers_url": "https://api.github.com/users/michael-simons/followers",
                        "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                        "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                        "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                        "repos_url": "https://api.github.com/users/michael-simons/repos",
                        "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-09-21T11:33:21Z",
                "updated_at": "2023-10-20T10:17:11Z",
                "closed_at": "2023-10-20T10:17:11Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hello, \r\n\r\nI have a Spring Boot Webflux application and want to create a native image. There I came across two different issues. \r\n\r\n**1. Saving nodes:** \r\nI'm getting an error when saving an node with a reactive repository. I was able to identify the problem. It seems that (at least) the runtime hint for the `ReactiveBeforeBindCallback` is missing. When adding the class to my projects runtime hints the saving of a node works as expected. \r\nFor the non-reactive class the hint is present ([Neo4jRuntimeHints.java#L51](https://github.com/spring-projects/spring-data-neo4j/blob/main/src/main/java/org/springframework/data/neo4j/aot/Neo4jRuntimeHints.java#L51)) and saving works as expected.\r\n\r\n**2. Repository with abstract base class:**\r\n\r\nI have a class hierarchy setup where I have an abstract parent node class and several child classes (see below).\r\nAccording to the section [A note on class hierarchies](https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#mapping.annotations.node) this use case is supported.\r\n\r\n```java\r\n@Node(\"ParentLabel\")\r\nabstract sealed class ParentNode permits ChildNodeA {\r\n// constuctor and properties\r\n}\r\n\r\n@Node(\"ChildALabel\")\r\nfinal class ChildANode extends ParentNode {\r\n // constuctor and properties\r\n}\r\n\r\n@Repository\r\ninterface MyRepository extends ReactiveNeo4jRepository<ParentNode, String> {\r\n    @Query(\"MATCH (t:ParentLabel {name: $name}) RETURN t\")\r\n    Mono<ParentNode> findByName(@Param(\"name\") String name);\r\n}\r\n```\r\n\r\nSaving a `ChildNodeA` works as expected resulting in a node with both labels `ParentLabel` and `ChildALabel`. \r\nBut when calling the `findByName` query an exception is thrown where it seems that it's tried to create an instance of `ParentNode` instead of `ChildNodeA`. Here I didn't found a solution myself. \r\n\r\nThis behavior is the same for both the reactive repository and the non-reactive repository. If not using graalvm the child class is correctly resolved and instanciated. \r\n\r\nBelow the exception from the reactive case: \r\n\r\n```\r\n org.springframework.data.mapping.MappingException: Error mapping Record<{t: node<81>}>\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:123) ~[na:na]\r\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n        *__checkpoint \u21e2 Handler com.example.graalvmtest.TestController#getTest2(String) [DispatcherHandler]\r\n        *__checkpoint \u21e2 HTTP GET \"/test2/11\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n                at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:123) ~[na:na]\r\n                at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:71) ~[na:na]\r\n                at org.springframework.data.neo4j.core.mapping.Schema.lambda$getRequiredMappingFunctionFor$0(Schema.java:96) ~[graalvm-test:7.2.0-M3]\r\n                at org.springframework.data.neo4j.core.mapping.EntityInstanceWithSource.lambda$decorateMappingFunction$0(EntityInstanceWithSource.java:49) ~[graalvm-test:7.2.0-M3]\r\n                at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:246) ~[na:na]\r\n                at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:158) ~[na:na]\r\n                at org.springframework.data.neo4j.core.DefaultReactiveNeo4jClient$DefaultRecordFetchSpec.lambda$executeWith$2(DefaultReactiveNeo4jClient.java:401) ~[na:na]\r\n                at reactor.core.publisher.Flux.lambda$mapNotNull$24(Flux.java:6541) ~[graalvm-test:3.6.0-M3]\r\n                at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113) ~[na:na]\r\n                at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:702) ~[na:na]\r\n                at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161) ~[graalvm-test:3.6.0-M3]\r\n                at org.neo4j.driver.internal.reactivestreams.InternalReactiveResult.lambda$createRecordConsumer$3(InternalReactiveResult.java:91) ~[na:na]\r\n                at org.neo4j.driver.internal.handlers.pulln.BasicPullResponseHandler.onRecord(BasicPullResponseHandler.java:162) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.handlers.RoutingResponseHandler.onRecord(RoutingResponseHandler.java:66) ~[na:na]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleRecordMessage(InboundMessageDispatcher.java:106) ~[na:na]\r\n                at org.neo4j.driver.internal.messaging.common.CommonMessageReader.unpackRecordMessage(CommonMessageReader.java:73) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.messaging.common.CommonMessageReader.read(CommonMessageReader.java:50) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:80) ~[na:na]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:36) ~[na:na]\r\n                at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[graalvm-test:4.1.97.Final]\r\n                at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:42) ~[na:na]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1466) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1329) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1378) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[na:na]\r\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[na:na]\r\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[na:na]\r\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[na:na]\r\n                at java.base@21/java.lang.Thread.runWith(Thread.java:1596) ~[graalvm-test:na]\r\n                at java.base@21/java.lang.Thread.run(Thread.java:1583) ~[graalvm-test:na]\r\n                at org.graalvm.nativeimage.builder/com.oracle.svm.core.thread.PlatformThreads.threadStartRoutine(PlatformThreads.java:833) ~[graalvm-test:na]\r\n                at org.graalvm.nativeimage.builder/com.oracle.svm.core.posix.thread.PosixPlatformThreads.pthreadStartRoutine(PosixPlatformThreads.java:211) ~[na:na]\r\nCaused by: org.springframework.data.mapping.model.MappingInstantiationException: Failed to instantiate com.example.graalvmtest.TestParent using constructor public com.example.graalvmtest.TestParent() with arguments \r\n        at org.springframework.data.mapping.model.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:97) ~[graalvm-test:3.2.0-M3]\r\n        at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98) ~[graalvm-test:3.2.0-M3]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.instantiate(DefaultNeo4jEntityConverter.java:491) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.lambda$map$2(DefaultNeo4jEntityConverter.java:324) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.map(DefaultNeo4jEntityConverter.java:343) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.map(DefaultNeo4jEntityConverter.java:301) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:121) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:71) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.Schema.lambda$getRequiredMappingFunctionFor$0(Schema.java:96) ~[graalvm-test:7.2.0-M3]\r\n        at org.springframework.data.neo4j.core.mapping.EntityInstanceWithSource.lambda$decorateMappingFunction$0(EntityInstanceWithSource.java:49) ~[graalvm-test:7.2.0-M3]\r\n        at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:246) ~[na:na]\r\n        at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:158) ~[na:na]\r\n        at org.springframework.data.neo4j.core.DefaultReactiveNeo4jClient$DefaultRecordFetchSpec.lambda$executeWith$2(DefaultReactiveNeo4jClient.java:401) ~[na:na]\r\n        at reactor.core.publisher.Flux.lambda$mapNotNull$24(Flux.java:6541) ~[graalvm-test:3.6.0-M3]\r\n        at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113) ~[na:na]\r\n        at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:702) ~[na:na]\r\n        at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161) ~[graalvm-test:3.6.0-M3]\r\n        at org.neo4j.driver.internal.reactivestreams.InternalReactiveResult.lambda$createRecordConsumer$3(InternalReactiveResult.java:91) ~[na:na]\r\n        at org.neo4j.driver.internal.handlers.pulln.BasicPullResponseHandler.onRecord(BasicPullResponseHandler.java:162) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.handlers.RoutingResponseHandler.onRecord(RoutingResponseHandler.java:66) ~[na:na]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleRecordMessage(InboundMessageDispatcher.java:106) ~[na:na]\r\n        at org.neo4j.driver.internal.messaging.common.CommonMessageReader.unpackRecordMessage(CommonMessageReader.java:73) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.messaging.common.CommonMessageReader.read(CommonMessageReader.java:50) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:80) ~[na:na]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:36) ~[na:na]\r\n        at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[graalvm-test:4.1.97.Final]\r\n        at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:42) ~[na:na]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1466) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1329) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1378) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[na:na]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[na:na]\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[na:na]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[na:na]\r\n        at java.base@21/java.lang.Thread.runWith(Thread.java:1596) ~[graalvm-test:na]\r\n        at java.base@21/java.lang.Thread.run(Thread.java:1583) ~[graalvm-test:na]\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.thread.PlatformThreads.threadStartRoutine(PlatformThreads.java:833) ~[graalvm-test:na]\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.posix.thread.PosixPlatformThreads.pthreadStartRoutine(PosixPlatformThreads.java:211) ~[na:na]\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.example.graalvmtest.TestParent]: Is it an abstract class?\r\n        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:213) ~[na:na]\r\n        at org.springframework.data.mapping.model.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:95) ~[graalvm-test:3.2.0-M3]\r\n        ... 70 common frames omitted\r\nCaused by: java.lang.InstantiationException: Only non-abstract instance classes can be instantiated using reflection\r\n        at java.base@21/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[graalvm-test:na]\r\n        at java.base@21/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[graalvm-test:na]\r\n        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:196) ~[na:na]\r\n        ... 71 common frames omitted\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-20T10:17:12Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32718450272",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2798",
                "id": 1906760798,
                "node_id": "I_kwDOACWzSs5xptxe",
                "number": 2798,
                "title": "Errors when working with graalvm native compilation",
                "user": {
                    "login": "Dimibe",
                    "id": 15692917,
                    "node_id": "MDQ6VXNlcjE1NjkyOTE3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15692917?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Dimibe",
                    "html_url": "https://github.com/Dimibe",
                    "followers_url": "https://api.github.com/users/Dimibe/followers",
                    "following_url": "https://api.github.com/users/Dimibe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Dimibe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Dimibe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Dimibe/subscriptions",
                    "organizations_url": "https://api.github.com/users/Dimibe/orgs",
                    "repos_url": "https://api.github.com/users/Dimibe/repos",
                    "events_url": "https://api.github.com/users/Dimibe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Dimibe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509573519,
                        "node_id": "MDU6TGFiZWwyNTA5NTczNTE5",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general bug"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "michael-simons",
                    "id": 526383,
                    "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/michael-simons",
                    "html_url": "https://github.com/michael-simons",
                    "followers_url": "https://api.github.com/users/michael-simons/followers",
                    "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                    "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                    "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                    "repos_url": "https://api.github.com/users/michael-simons/repos",
                    "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "michael-simons",
                        "id": 526383,
                        "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/michael-simons",
                        "html_url": "https://github.com/michael-simons",
                        "followers_url": "https://api.github.com/users/michael-simons/followers",
                        "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                        "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                        "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                        "repos_url": "https://api.github.com/users/michael-simons/repos",
                        "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-09-21T11:33:21Z",
                "updated_at": "2023-10-20T10:17:09Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hello, \r\n\r\nI have a Spring Boot Webflux application and want to create a native image. There I came across two different issues. \r\n\r\n**1. Saving nodes:** \r\nI'm getting an error when saving an node with a reactive repository. I was able to identify the problem. It seems that (at least) the runtime hint for the `ReactiveBeforeBindCallback` is missing. When adding the class to my projects runtime hints the saving of a node works as expected. \r\nFor the non-reactive class the hint is present ([Neo4jRuntimeHints.java#L51](https://github.com/spring-projects/spring-data-neo4j/blob/main/src/main/java/org/springframework/data/neo4j/aot/Neo4jRuntimeHints.java#L51)) and saving works as expected.\r\n\r\n**2. Repository with abstract base class:**\r\n\r\nI have a class hierarchy setup where I have an abstract parent node class and several child classes (see below).\r\nAccording to the section [A note on class hierarchies](https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#mapping.annotations.node) this use case is supported.\r\n\r\n```java\r\n@Node(\"ParentLabel\")\r\nabstract sealed class ParentNode permits ChildNodeA {\r\n// constuctor and properties\r\n}\r\n\r\n@Node(\"ChildALabel\")\r\nfinal class ChildANode extends ParentNode {\r\n // constuctor and properties\r\n}\r\n\r\n@Repository\r\ninterface MyRepository extends ReactiveNeo4jRepository<ParentNode, String> {\r\n    @Query(\"MATCH (t:ParentLabel {name: $name}) RETURN t\")\r\n    Mono<ParentNode> findByName(@Param(\"name\") String name);\r\n}\r\n```\r\n\r\nSaving a `ChildNodeA` works as expected resulting in a node with both labels `ParentLabel` and `ChildALabel`. \r\nBut when calling the `findByName` query an exception is thrown where it seems that it's tried to create an instance of `ParentNode` instead of `ChildNodeA`. Here I didn't found a solution myself. \r\n\r\nThis behavior is the same for both the reactive repository and the non-reactive repository. If not using graalvm the child class is correctly resolved and instanciated. \r\n\r\nBelow the exception from the reactive case: \r\n\r\n```\r\n org.springframework.data.mapping.MappingException: Error mapping Record<{t: node<81>}>\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:123) ~[na:na]\r\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n        *__checkpoint \u21e2 Handler com.example.graalvmtest.TestController#getTest2(String) [DispatcherHandler]\r\n        *__checkpoint \u21e2 HTTP GET \"/test2/11\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n                at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:123) ~[na:na]\r\n                at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:71) ~[na:na]\r\n                at org.springframework.data.neo4j.core.mapping.Schema.lambda$getRequiredMappingFunctionFor$0(Schema.java:96) ~[graalvm-test:7.2.0-M3]\r\n                at org.springframework.data.neo4j.core.mapping.EntityInstanceWithSource.lambda$decorateMappingFunction$0(EntityInstanceWithSource.java:49) ~[graalvm-test:7.2.0-M3]\r\n                at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:246) ~[na:na]\r\n                at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:158) ~[na:na]\r\n                at org.springframework.data.neo4j.core.DefaultReactiveNeo4jClient$DefaultRecordFetchSpec.lambda$executeWith$2(DefaultReactiveNeo4jClient.java:401) ~[na:na]\r\n                at reactor.core.publisher.Flux.lambda$mapNotNull$24(Flux.java:6541) ~[graalvm-test:3.6.0-M3]\r\n                at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113) ~[na:na]\r\n                at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:702) ~[na:na]\r\n                at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161) ~[graalvm-test:3.6.0-M3]\r\n                at org.neo4j.driver.internal.reactivestreams.InternalReactiveResult.lambda$createRecordConsumer$3(InternalReactiveResult.java:91) ~[na:na]\r\n                at org.neo4j.driver.internal.handlers.pulln.BasicPullResponseHandler.onRecord(BasicPullResponseHandler.java:162) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.handlers.RoutingResponseHandler.onRecord(RoutingResponseHandler.java:66) ~[na:na]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleRecordMessage(InboundMessageDispatcher.java:106) ~[na:na]\r\n                at org.neo4j.driver.internal.messaging.common.CommonMessageReader.unpackRecordMessage(CommonMessageReader.java:73) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.messaging.common.CommonMessageReader.read(CommonMessageReader.java:50) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:80) ~[na:na]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:36) ~[na:na]\r\n                at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[graalvm-test:4.1.97.Final]\r\n                at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:42) ~[na:na]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1466) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1329) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1378) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[na:na]\r\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[na:na]\r\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[na:na]\r\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[na:na]\r\n                at java.base@21/java.lang.Thread.runWith(Thread.java:1596) ~[graalvm-test:na]\r\n                at java.base@21/java.lang.Thread.run(Thread.java:1583) ~[graalvm-test:na]\r\n                at org.graalvm.nativeimage.builder/com.oracle.svm.core.thread.PlatformThreads.threadStartRoutine(PlatformThreads.java:833) ~[graalvm-test:na]\r\n                at org.graalvm.nativeimage.builder/com.oracle.svm.core.posix.thread.PosixPlatformThreads.pthreadStartRoutine(PosixPlatformThreads.java:211) ~[na:na]\r\nCaused by: org.springframework.data.mapping.model.MappingInstantiationException: Failed to instantiate com.example.graalvmtest.TestParent using constructor public com.example.graalvmtest.TestParent() with arguments \r\n        at org.springframework.data.mapping.model.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:97) ~[graalvm-test:3.2.0-M3]\r\n        at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98) ~[graalvm-test:3.2.0-M3]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.instantiate(DefaultNeo4jEntityConverter.java:491) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.lambda$map$2(DefaultNeo4jEntityConverter.java:324) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.map(DefaultNeo4jEntityConverter.java:343) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.map(DefaultNeo4jEntityConverter.java:301) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:121) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:71) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.Schema.lambda$getRequiredMappingFunctionFor$0(Schema.java:96) ~[graalvm-test:7.2.0-M3]\r\n        at org.springframework.data.neo4j.core.mapping.EntityInstanceWithSource.lambda$decorateMappingFunction$0(EntityInstanceWithSource.java:49) ~[graalvm-test:7.2.0-M3]\r\n        at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:246) ~[na:na]\r\n        at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:158) ~[na:na]\r\n        at org.springframework.data.neo4j.core.DefaultReactiveNeo4jClient$DefaultRecordFetchSpec.lambda$executeWith$2(DefaultReactiveNeo4jClient.java:401) ~[na:na]\r\n        at reactor.core.publisher.Flux.lambda$mapNotNull$24(Flux.java:6541) ~[graalvm-test:3.6.0-M3]\r\n        at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113) ~[na:na]\r\n        at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:702) ~[na:na]\r\n        at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161) ~[graalvm-test:3.6.0-M3]\r\n        at org.neo4j.driver.internal.reactivestreams.InternalReactiveResult.lambda$createRecordConsumer$3(InternalReactiveResult.java:91) ~[na:na]\r\n        at org.neo4j.driver.internal.handlers.pulln.BasicPullResponseHandler.onRecord(BasicPullResponseHandler.java:162) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.handlers.RoutingResponseHandler.onRecord(RoutingResponseHandler.java:66) ~[na:na]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleRecordMessage(InboundMessageDispatcher.java:106) ~[na:na]\r\n        at org.neo4j.driver.internal.messaging.common.CommonMessageReader.unpackRecordMessage(CommonMessageReader.java:73) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.messaging.common.CommonMessageReader.read(CommonMessageReader.java:50) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:80) ~[na:na]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:36) ~[na:na]\r\n        at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[graalvm-test:4.1.97.Final]\r\n        at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:42) ~[na:na]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1466) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1329) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1378) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[na:na]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[na:na]\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[na:na]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[na:na]\r\n        at java.base@21/java.lang.Thread.runWith(Thread.java:1596) ~[graalvm-test:na]\r\n        at java.base@21/java.lang.Thread.run(Thread.java:1583) ~[graalvm-test:na]\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.thread.PlatformThreads.threadStartRoutine(PlatformThreads.java:833) ~[graalvm-test:na]\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.posix.thread.PosixPlatformThreads.pthreadStartRoutine(PosixPlatformThreads.java:211) ~[na:na]\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.example.graalvmtest.TestParent]: Is it an abstract class?\r\n        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:213) ~[na:na]\r\n        at org.springframework.data.mapping.model.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:95) ~[graalvm-test:3.2.0-M3]\r\n        ... 70 common frames omitted\r\nCaused by: java.lang.InstantiationException: Only non-abstract instance classes can be instantiated using reflection\r\n        at java.base@21/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[graalvm-test:na]\r\n        at java.base@21/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[graalvm-test:na]\r\n        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:196) ~[na:na]\r\n        ... 71 common frames omitted\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1772465143",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2798#issuecomment-1772465143",
                "issue_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798",
                "id": 1772465143,
                "node_id": "IC_kwDOACWzSs5ppav3",
                "user": {
                    "login": "michael-simons",
                    "id": 526383,
                    "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/michael-simons",
                    "html_url": "https://github.com/michael-simons",
                    "followers_url": "https://api.github.com/users/michael-simons/followers",
                    "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                    "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                    "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                    "repos_url": "https://api.github.com/users/michael-simons/repos",
                    "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T10:17:08Z",
                "updated_at": "2023-10-20T10:17:08Z",
                "author_association": "COLLABORATOR",
                "body": "Oh excellent, thank you so much for your feedback!",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1772465143/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T10:17:09Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32718428341",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 15692917,
            "login": "Dimibe",
            "display_login": "Dimibe",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dimibe",
            "avatar_url": "https://avatars.githubusercontent.com/u/15692917?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2798",
                "id": 1906760798,
                "node_id": "I_kwDOACWzSs5xptxe",
                "number": 2798,
                "title": "Errors when working with graalvm native compilation",
                "user": {
                    "login": "Dimibe",
                    "id": 15692917,
                    "node_id": "MDQ6VXNlcjE1NjkyOTE3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15692917?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Dimibe",
                    "html_url": "https://github.com/Dimibe",
                    "followers_url": "https://api.github.com/users/Dimibe/followers",
                    "following_url": "https://api.github.com/users/Dimibe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Dimibe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Dimibe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Dimibe/subscriptions",
                    "organizations_url": "https://api.github.com/users/Dimibe/orgs",
                    "repos_url": "https://api.github.com/users/Dimibe/repos",
                    "events_url": "https://api.github.com/users/Dimibe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Dimibe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509573519,
                        "node_id": "MDU6TGFiZWwyNTA5NTczNTE5",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general bug"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "michael-simons",
                    "id": 526383,
                    "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/michael-simons",
                    "html_url": "https://github.com/michael-simons",
                    "followers_url": "https://api.github.com/users/michael-simons/followers",
                    "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                    "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                    "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                    "repos_url": "https://api.github.com/users/michael-simons/repos",
                    "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "michael-simons",
                        "id": 526383,
                        "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/michael-simons",
                        "html_url": "https://github.com/michael-simons",
                        "followers_url": "https://api.github.com/users/michael-simons/followers",
                        "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                        "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                        "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                        "repos_url": "https://api.github.com/users/michael-simons/repos",
                        "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-09-21T11:33:21Z",
                "updated_at": "2023-10-20T10:16:19Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hello, \r\n\r\nI have a Spring Boot Webflux application and want to create a native image. There I came across two different issues. \r\n\r\n**1. Saving nodes:** \r\nI'm getting an error when saving an node with a reactive repository. I was able to identify the problem. It seems that (at least) the runtime hint for the `ReactiveBeforeBindCallback` is missing. When adding the class to my projects runtime hints the saving of a node works as expected. \r\nFor the non-reactive class the hint is present ([Neo4jRuntimeHints.java#L51](https://github.com/spring-projects/spring-data-neo4j/blob/main/src/main/java/org/springframework/data/neo4j/aot/Neo4jRuntimeHints.java#L51)) and saving works as expected.\r\n\r\n**2. Repository with abstract base class:**\r\n\r\nI have a class hierarchy setup where I have an abstract parent node class and several child classes (see below).\r\nAccording to the section [A note on class hierarchies](https://docs.spring.io/spring-data/neo4j/docs/current/reference/html/#mapping.annotations.node) this use case is supported.\r\n\r\n```java\r\n@Node(\"ParentLabel\")\r\nabstract sealed class ParentNode permits ChildNodeA {\r\n// constuctor and properties\r\n}\r\n\r\n@Node(\"ChildALabel\")\r\nfinal class ChildANode extends ParentNode {\r\n // constuctor and properties\r\n}\r\n\r\n@Repository\r\ninterface MyRepository extends ReactiveNeo4jRepository<ParentNode, String> {\r\n    @Query(\"MATCH (t:ParentLabel {name: $name}) RETURN t\")\r\n    Mono<ParentNode> findByName(@Param(\"name\") String name);\r\n}\r\n```\r\n\r\nSaving a `ChildNodeA` works as expected resulting in a node with both labels `ParentLabel` and `ChildALabel`. \r\nBut when calling the `findByName` query an exception is thrown where it seems that it's tried to create an instance of `ParentNode` instead of `ChildNodeA`. Here I didn't found a solution myself. \r\n\r\nThis behavior is the same for both the reactive repository and the non-reactive repository. If not using graalvm the child class is correctly resolved and instanciated. \r\n\r\nBelow the exception from the reactive case: \r\n\r\n```\r\n org.springframework.data.mapping.MappingException: Error mapping Record<{t: node<81>}>\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:123) ~[na:na]\r\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nError has been observed at the following site(s):\r\n        *__checkpoint \u21e2 Handler com.example.graalvmtest.TestController#getTest2(String) [DispatcherHandler]\r\n        *__checkpoint \u21e2 HTTP GET \"/test2/11\" [ExceptionHandlingWebHandler]\r\nOriginal Stack Trace:\r\n                at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:123) ~[na:na]\r\n                at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:71) ~[na:na]\r\n                at org.springframework.data.neo4j.core.mapping.Schema.lambda$getRequiredMappingFunctionFor$0(Schema.java:96) ~[graalvm-test:7.2.0-M3]\r\n                at org.springframework.data.neo4j.core.mapping.EntityInstanceWithSource.lambda$decorateMappingFunction$0(EntityInstanceWithSource.java:49) ~[graalvm-test:7.2.0-M3]\r\n                at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:246) ~[na:na]\r\n                at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:158) ~[na:na]\r\n                at org.springframework.data.neo4j.core.DefaultReactiveNeo4jClient$DefaultRecordFetchSpec.lambda$executeWith$2(DefaultReactiveNeo4jClient.java:401) ~[na:na]\r\n                at reactor.core.publisher.Flux.lambda$mapNotNull$24(Flux.java:6541) ~[graalvm-test:3.6.0-M3]\r\n                at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113) ~[na:na]\r\n                at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:702) ~[na:na]\r\n                at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161) ~[graalvm-test:3.6.0-M3]\r\n                at org.neo4j.driver.internal.reactivestreams.InternalReactiveResult.lambda$createRecordConsumer$3(InternalReactiveResult.java:91) ~[na:na]\r\n                at org.neo4j.driver.internal.handlers.pulln.BasicPullResponseHandler.onRecord(BasicPullResponseHandler.java:162) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.handlers.RoutingResponseHandler.onRecord(RoutingResponseHandler.java:66) ~[na:na]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleRecordMessage(InboundMessageDispatcher.java:106) ~[na:na]\r\n                at org.neo4j.driver.internal.messaging.common.CommonMessageReader.unpackRecordMessage(CommonMessageReader.java:73) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.messaging.common.CommonMessageReader.read(CommonMessageReader.java:50) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:80) ~[na:na]\r\n                at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:36) ~[na:na]\r\n                at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[graalvm-test:4.1.97.Final]\r\n                at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:42) ~[na:na]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1466) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1329) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1378) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[graalvm-test:4.1.97.Final]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[na:na]\r\n                at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[na:na]\r\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[na:na]\r\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[na:na]\r\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[na:na]\r\n                at java.base@21/java.lang.Thread.runWith(Thread.java:1596) ~[graalvm-test:na]\r\n                at java.base@21/java.lang.Thread.run(Thread.java:1583) ~[graalvm-test:na]\r\n                at org.graalvm.nativeimage.builder/com.oracle.svm.core.thread.PlatformThreads.threadStartRoutine(PlatformThreads.java:833) ~[graalvm-test:na]\r\n                at org.graalvm.nativeimage.builder/com.oracle.svm.core.posix.thread.PosixPlatformThreads.pthreadStartRoutine(PosixPlatformThreads.java:211) ~[na:na]\r\nCaused by: org.springframework.data.mapping.model.MappingInstantiationException: Failed to instantiate com.example.graalvmtest.TestParent using constructor public com.example.graalvmtest.TestParent() with arguments \r\n        at org.springframework.data.mapping.model.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:97) ~[graalvm-test:3.2.0-M3]\r\n        at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98) ~[graalvm-test:3.2.0-M3]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.instantiate(DefaultNeo4jEntityConverter.java:491) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.lambda$map$2(DefaultNeo4jEntityConverter.java:324) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.map(DefaultNeo4jEntityConverter.java:343) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.map(DefaultNeo4jEntityConverter.java:301) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:121) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.DefaultNeo4jEntityConverter.read(DefaultNeo4jEntityConverter.java:71) ~[na:na]\r\n        at org.springframework.data.neo4j.core.mapping.Schema.lambda$getRequiredMappingFunctionFor$0(Schema.java:96) ~[graalvm-test:7.2.0-M3]\r\n        at org.springframework.data.neo4j.core.mapping.EntityInstanceWithSource.lambda$decorateMappingFunction$0(EntityInstanceWithSource.java:49) ~[graalvm-test:7.2.0-M3]\r\n        at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:246) ~[na:na]\r\n        at org.springframework.data.neo4j.core.PreparedQuery$AggregatingMappingFunction.apply(PreparedQuery.java:158) ~[na:na]\r\n        at org.springframework.data.neo4j.core.DefaultReactiveNeo4jClient$DefaultRecordFetchSpec.lambda$executeWith$2(DefaultReactiveNeo4jClient.java:401) ~[na:na]\r\n        at reactor.core.publisher.Flux.lambda$mapNotNull$24(Flux.java:6541) ~[graalvm-test:3.6.0-M3]\r\n        at reactor.core.publisher.FluxHandle$HandleSubscriber.onNext(FluxHandle.java:113) ~[na:na]\r\n        at reactor.core.publisher.FluxCreate$IgnoreSink.next(FluxCreate.java:702) ~[na:na]\r\n        at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:161) ~[graalvm-test:3.6.0-M3]\r\n        at org.neo4j.driver.internal.reactivestreams.InternalReactiveResult.lambda$createRecordConsumer$3(InternalReactiveResult.java:91) ~[na:na]\r\n        at org.neo4j.driver.internal.handlers.pulln.BasicPullResponseHandler.onRecord(BasicPullResponseHandler.java:162) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.handlers.RoutingResponseHandler.onRecord(RoutingResponseHandler.java:66) ~[na:na]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleRecordMessage(InboundMessageDispatcher.java:106) ~[na:na]\r\n        at org.neo4j.driver.internal.messaging.common.CommonMessageReader.unpackRecordMessage(CommonMessageReader.java:73) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.messaging.common.CommonMessageReader.read(CommonMessageReader.java:50) ~[graalvm-test:5.12.0-5bd7c0c762668653c02b042b55c6d983d5f245d9]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:80) ~[na:na]\r\n        at org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:36) ~[na:na]\r\n        at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[graalvm-test:4.1.97.Final]\r\n        at org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:42) ~[na:na]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:333) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:454) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1466) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1329) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1378) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[graalvm-test:4.1.97.Final]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[na:na]\r\n        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[na:na]\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[na:na]\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[na:na]\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[na:na]\r\n        at java.base@21/java.lang.Thread.runWith(Thread.java:1596) ~[graalvm-test:na]\r\n        at java.base@21/java.lang.Thread.run(Thread.java:1583) ~[graalvm-test:na]\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.thread.PlatformThreads.threadStartRoutine(PlatformThreads.java:833) ~[graalvm-test:na]\r\n        at org.graalvm.nativeimage.builder/com.oracle.svm.core.posix.thread.PosixPlatformThreads.pthreadStartRoutine(PosixPlatformThreads.java:211) ~[na:na]\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.example.graalvmtest.TestParent]: Is it an abstract class?\r\n        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:213) ~[na:na]\r\n        at org.springframework.data.mapping.model.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:95) ~[graalvm-test:3.2.0-M3]\r\n        ... 70 common frames omitted\r\nCaused by: java.lang.InstantiationException: Only non-abstract instance classes can be instantiated using reflection\r\n        at java.base@21/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[graalvm-test:na]\r\n        at java.base@21/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[graalvm-test:na]\r\n        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:196) ~[na:na]\r\n        ... 71 common frames omitted\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1772462942",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2798#issuecomment-1772462942",
                "issue_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2798",
                "id": 1772462942,
                "node_id": "IC_kwDOACWzSs5ppaNe",
                "user": {
                    "login": "Dimibe",
                    "id": 15692917,
                    "node_id": "MDQ6VXNlcjE1NjkyOTE3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15692917?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Dimibe",
                    "html_url": "https://github.com/Dimibe",
                    "followers_url": "https://api.github.com/users/Dimibe/followers",
                    "following_url": "https://api.github.com/users/Dimibe/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Dimibe/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Dimibe/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Dimibe/subscriptions",
                    "organizations_url": "https://api.github.com/users/Dimibe/orgs",
                    "repos_url": "https://api.github.com/users/Dimibe/repos",
                    "events_url": "https://api.github.com/users/Dimibe/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Dimibe/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T10:16:19Z",
                "updated_at": "2023-10-20T10:16:19Z",
                "author_association": "NONE",
                "body": "Hi @michael-simons, \r\nI just tested my code with spring-boot 3.1.5 and the workarounds are not needed anymore. \r\nSo I think this ticket is completed. ",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/comments/1772462942/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T10:16:20Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32698457843",
        "type": "PushEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15488210892,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "42d936ade4ace470a708a6ee2b16ab4f3d9ef574",
            "before": "5c3982b2134be21c49fc417f403cb76dbcc8e6e5",
            "commits": [
                {
                    "sha": "42d936ade4ace470a708a6ee2b16ab4f3d9ef574",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "fix: Sent bookmark updated event only while bookmarks are locked.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/42d936ade4ace470a708a6ee2b16ab4f3d9ef574"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-19T16:38:21Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32698455680",
        "type": "PushEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15488209792,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/7.1.x",
            "head": "b2b9023cd05f3a4a1a925f91fce9e95a1a801c99",
            "before": "82271dd53d658097a0c16c6e7074d866aa2e282d",
            "commits": [
                {
                    "sha": "b2b9023cd05f3a4a1a925f91fce9e95a1a801c99",
                    "author": {
                        "email": "michael@simons.ac",
                        "name": "Michael Simons"
                    },
                    "message": "fix: Sent bookmark updated event only while bookmarks are locked.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/b2b9023cd05f3a4a1a925f91fce9e95a1a801c99"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-19T16:38:16Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32698361508",
        "type": "IssuesEvent",
        "actor": {
            "id": 526383,
            "login": "michael-simons",
            "display_login": "michael-simons",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michael-simons",
            "avatar_url": "https://avatars.githubusercontent.com/u/526383?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2816",
                "id": 1952660462,
                "node_id": "I_kwDOACWzSs50Yzvu",
                "number": 2816,
                "title": "Neo4j version sniffing for elementId still not working",
                "user": {
                    "login": "michael-simons",
                    "id": 526383,
                    "node_id": "MDQ6VXNlcjUyNjM4Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/526383?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/michael-simons",
                    "html_url": "https://github.com/michael-simons",
                    "followers_url": "https://api.github.com/users/michael-simons/followers",
                    "following_url": "https://api.github.com/users/michael-simons/following{/other_user}",
                    "gists_url": "https://api.github.com/users/michael-simons/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/michael-simons/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/michael-simons/subscriptions",
                    "organizations_url": "https://api.github.com/users/michael-simons/orgs",
                    "repos_url": "https://api.github.com/users/michael-simons/repos",
                    "events_url": "https://api.github.com/users/michael-simons/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/michael-simons/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "meistermeier",
                    "id": 435872,
                    "node_id": "MDQ6VXNlcjQzNTg3Mg==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/435872?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/meistermeier",
                    "html_url": "https://github.com/meistermeier",
                    "followers_url": "https://api.github.com/users/meistermeier/followers",
                    "following_url": "https://api.github.com/users/meistermeier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/meistermeier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/meistermeier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/meistermeier/subscriptions",
                    "organizations_url": "https://api.github.com/users/meistermeier/orgs",
                    "repos_url": "https://api.github.com/users/meistermeier/repos",
                    "events_url": "https://api.github.com/users/meistermeier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/meistermeier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "meistermeier",
                        "id": 435872,
                        "node_id": "MDQ6VXNlcjQzNTg3Mg==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/435872?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/meistermeier",
                        "html_url": "https://github.com/meistermeier",
                        "followers_url": "https://api.github.com/users/meistermeier/followers",
                        "following_url": "https://api.github.com/users/meistermeier/following{/other_user}",
                        "gists_url": "https://api.github.com/users/meistermeier/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/meistermeier/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/meistermeier/subscriptions",
                        "organizations_url": "https://api.github.com/users/meistermeier/orgs",
                        "repos_url": "https://api.github.com/users/meistermeier/repos",
                        "events_url": "https://api.github.com/users/meistermeier/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/meistermeier/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-19T16:34:36Z",
                "updated_at": "2023-10-19T16:34:36Z",
                "closed_at": null,
                "author_association": "COLLABORATOR",
                "active_lock_reason": null,
                "body": "With\r\n\r\n\r\n```\r\n\r\n@Node\r\npublic class Movie {\r\n\r\n\t@Id\r\n\t@GeneratedValue String elementId;\r\n\r\n\tpublic String getElementId() {\r\n\t\treturn elementId;\r\n\t}\r\n\r\n\tpublic void setElementId(String elementId) {\r\n\t\tthis.elementId = elementId;\r\n\t}\r\n}\r\n\r\npublic interface MovieRepository extends ReactiveNeo4jRepository<Movie, String> {\r\n}\r\n\r\n```\r\n\r\nI still see\r\n\r\n```\r\n2023-10-19T18:34:18.170+02:00  WARN 5766 --- [o4jDriverIO-2-2] o.s.data.neo4j.cypher.deprecation        : Neo.ClientNotification.Statement.FeatureDeprecationWarning: This feature is deprecated and will be removed in future versions.\r\n\tMATCH (movie:`Movie`) WHERE toString(id(movie)) = $__id__ RETURN movie{__nodeLabels__: labels(movie), __elementId__: id(movie)}\r\n```\r\n\r\non\r\n\r\n```\r\nmovieRepository.findById(\"xxx\").block();\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2816/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-19T16:34:37Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32694834452",
        "type": "PushEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15486487603,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "5c3982b2134be21c49fc417f403cb76dbcc8e6e5",
            "before": "d8df9fd7fc0e45a4b09e14b044ce480617f08e31",
            "commits": [
                {
                    "sha": "5c3982b2134be21c49fc417f403cb76dbcc8e6e5",
                    "author": {
                        "email": "gturnquist@vmware.com",
                        "name": "Greg L. Turnquist"
                    },
                    "message": "Update CI properties.\n\nSee #2813",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/5c3982b2134be21c49fc417f403cb76dbcc8e6e5"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-19T14:38:58Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32666895737",
        "type": "ForkEvent",
        "actor": {
            "id": 7488672,
            "login": "mshimokura",
            "display_login": "mshimokura",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mshimokura",
            "avatar_url": "https://avatars.githubusercontent.com/u/7488672?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "forkee": {
                "id": 706835482,
                "node_id": "R_kgDOKiF0Gg",
                "name": "spring-data-neo4j",
                "full_name": "mshimokura/spring-data-neo4j",
                "private": false,
                "owner": {
                    "login": "mshimokura",
                    "id": 7488672,
                    "node_id": "MDQ6VXNlcjc0ODg2NzI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7488672?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mshimokura",
                    "html_url": "https://github.com/mshimokura",
                    "followers_url": "https://api.github.com/users/mshimokura/followers",
                    "following_url": "https://api.github.com/users/mshimokura/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mshimokura/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mshimokura/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mshimokura/subscriptions",
                    "organizations_url": "https://api.github.com/users/mshimokura/orgs",
                    "repos_url": "https://api.github.com/users/mshimokura/repos",
                    "events_url": "https://api.github.com/users/mshimokura/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mshimokura/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/mshimokura/spring-data-neo4j",
                "description": "Provide support to increase developer productivity in Java when using Neo4j. Uses familiar Spring concepts such as a template classes for core API usage and lightweight repository style data access.",
                "fork": true,
                "url": "https://api.github.com/repos/mshimokura/spring-data-neo4j",
                "forks_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/forks",
                "keys_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/teams",
                "hooks_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/hooks",
                "issue_events_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/issues/events{/number}",
                "events_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/events",
                "assignees_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/assignees{/user}",
                "branches_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/branches{/branch}",
                "tags_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/tags",
                "blobs_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/languages",
                "stargazers_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/stargazers",
                "contributors_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/contributors",
                "subscribers_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/subscribers",
                "subscription_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/subscription",
                "commits_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/contents/{+path}",
                "compare_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/merges",
                "archive_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/downloads",
                "issues_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/issues{/number}",
                "pulls_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/labels{/name}",
                "releases_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/releases{/id}",
                "deployments_url": "https://api.github.com/repos/mshimokura/spring-data-neo4j/deployments",
                "created_at": "2023-10-18T17:55:29Z",
                "updated_at": "2023-10-18T17:55:29Z",
                "pushed_at": "2023-10-16T18:28:21Z",
                "git_url": "git://github.com/mshimokura/spring-data-neo4j.git",
                "ssh_url": "git@github.com:mshimokura/spring-data-neo4j.git",
                "clone_url": "https://github.com/mshimokura/spring-data-neo4j.git",
                "svn_url": "https://github.com/mshimokura/spring-data-neo4j",
                "homepage": "http://spring.io/projects/spring-data-neo4j",
                "size": 30364,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": false,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-18T17:55:30Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32645275786",
        "type": "IssuesEvent",
        "actor": {
            "id": 35307799,
            "login": "Kanish2002",
            "display_login": "Kanish2002",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kanish2002",
            "avatar_url": "https://avatars.githubusercontent.com/u/35307799?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2815",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2815/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2815/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2815/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2815",
                "id": 1948845849,
                "node_id": "I_kwDOACWzSs50KQcZ",
                "number": 2815,
                "title": "Traversing Graphs",
                "user": {
                    "login": "Kanish2002",
                    "id": 35307799,
                    "node_id": "MDQ6VXNlcjM1MzA3Nzk5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/35307799?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Kanish2002",
                    "html_url": "https://github.com/Kanish2002",
                    "followers_url": "https://api.github.com/users/Kanish2002/followers",
                    "following_url": "https://api.github.com/users/Kanish2002/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Kanish2002/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Kanish2002/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Kanish2002/subscriptions",
                    "organizations_url": "https://api.github.com/users/Kanish2002/orgs",
                    "repos_url": "https://api.github.com/users/Kanish2002/repos",
                    "events_url": "https://api.github.com/users/Kanish2002/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Kanish2002/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-18T05:17:30Z",
                "updated_at": "2023-10-18T05:17:30Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi @meistermeier I'm creating graph using models with @Relationship annotation as it goes nested..\r\nusing Neo4jRepository I'm retrieving the graph from DB in memory using repo features like findBy......().\r\n\r\nIs there any way to traverse these graph in memory in a efficient way..\r\n\r\n```\r\n@Node\r\nclass SStarter(\r\n    @Id @GeneratedValue(UUIDStringGenerator::class)\r\n    var id: String?,\r\n    val sName: String,\r\n    @Relationship(type = \"RETRIEVES\", direction = Relationship.Direction.OUTGOING)\r\n    var dataRetriever: List<DataRetriever>\r\n) {\r\n    @PersistenceCreator\r\n    constructor(sName: String, dataRetriever: List<DataRetriever>) : this(null, strategyName, dataRetriever)\r\n}\r\n\r\n@Node\r\nclass DataRetriever(\r\n    var DataRetrieverName: String,\r\n    var DataSource: String,\r\n    @Relationship(type = \"DATA_COLLECTED_BY\", direction = Relationship.Direction.OUTGOING)\r\n    val dataCollector: DataCollector\r\n)\r\n```\r\n\r\nAs of now I'm traversing it like \r\nval starter = findBySName()\r\nval dataRetriever = starter.dataRetriever\r\n.\r\n.\r\n. and so on..\r\n\r\n\r\nCan you suggest me any ways of doing it.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2815/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2815/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-18T05:17:32Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32601264032",
        "type": "PushEvent",
        "actor": {
            "id": 311040,
            "login": "gregturn",
            "display_login": "gregturn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregturn",
            "avatar_url": "https://avatars.githubusercontent.com/u/311040?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15440305099,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "d8df9fd7fc0e45a4b09e14b044ce480617f08e31",
            "before": "c314dc56a88e4d65a8dd935965d2de7ae3b6489b",
            "commits": [
                {
                    "sha": "d8df9fd7fc0e45a4b09e14b044ce480617f08e31",
                    "author": {
                        "email": "gturnquist@vmware.com",
                        "name": "Greg L. Turnquist"
                    },
                    "message": "Update CI properties.\n\nSee #2813",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/d8df9fd7fc0e45a4b09e14b044ce480617f08e31"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-16T18:28:23Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32584318958",
        "type": "IssuesEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2814",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2814/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2814/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2814/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2814",
                "id": 1944698603,
                "node_id": "I_kwDOACWzSs5z6b7r",
                "number": 2814,
                "title": "Release 6.3.18 (2021.2.18)",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/325",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/325",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/325/labels",
                    "id": 10054479,
                    "node_id": "MI_kwDOACWzSs4AmWtP",
                    "number": 325,
                    "title": "6.3.18 (2021.2.18)",
                    "description": "2021.2.18",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 1,
                    "closed_issues": 0,
                    "state": "open",
                    "created_at": "2023-10-16T08:47:00Z",
                    "updated_at": "2023-10-16T08:47:17Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 0,
                "created_at": "2023-10-16T08:47:17Z",
                "updated_at": "2023-10-16T08:47:17Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": null,
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2814/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2814/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-16T08:47:19Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547895362",
        "type": "IssuesEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2813",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2813/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2813/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2813/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2813",
                "id": 1942217801,
                "node_id": "I_kwDOACWzSs5zw-RJ",
                "number": 2813,
                "title": "Release 7.2 GA (2023.1.0)",
                "user": {
                    "login": "jxblum",
                    "id": 5247119,
                    "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jxblum",
                    "html_url": "https://github.com/jxblum",
                    "followers_url": "https://api.github.com/users/jxblum/followers",
                    "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                    "organizations_url": "https://api.github.com/users/jxblum/orgs",
                    "repos_url": "https://api.github.com/users/jxblum/repos",
                    "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jxblum/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/324",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/324",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/324/labels",
                    "id": 10047308,
                    "node_id": "MI_kwDOACWzSs4AmU9M",
                    "number": 324,
                    "title": "7.2 GA (2023.1.0)",
                    "description": "2023.1.0",
                    "creator": {
                        "login": "jxblum",
                        "id": 5247119,
                        "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jxblum",
                        "html_url": "https://github.com/jxblum",
                        "followers_url": "https://api.github.com/users/jxblum/followers",
                        "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                        "organizations_url": "https://api.github.com/users/jxblum/orgs",
                        "repos_url": "https://api.github.com/users/jxblum/repos",
                        "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jxblum/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 1,
                    "closed_issues": 0,
                    "state": "open",
                    "created_at": "2023-10-13T16:01:30Z",
                    "updated_at": "2023-10-13T16:01:43Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 0,
                "created_at": "2023-10-13T16:01:43Z",
                "updated_at": "2023-10-13T16:01:43Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": null,
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2813/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2813/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-13T16:01:45Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547850952",
        "type": "IssuesEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2796",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2796/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2796/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2796/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2796",
                "id": 1898083320,
                "node_id": "I_kwDOACWzSs5xInP4",
                "number": 2796,
                "title": "Release 7.2 RC1 (2023.1.0)",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "jxblum",
                    "id": 5247119,
                    "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jxblum",
                    "html_url": "https://github.com/jxblum",
                    "followers_url": "https://api.github.com/users/jxblum/followers",
                    "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                    "organizations_url": "https://api.github.com/users/jxblum/orgs",
                    "repos_url": "https://api.github.com/users/jxblum/repos",
                    "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jxblum/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "jxblum",
                        "id": 5247119,
                        "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jxblum",
                        "html_url": "https://github.com/jxblum",
                        "followers_url": "https://api.github.com/users/jxblum/followers",
                        "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                        "organizations_url": "https://api.github.com/users/jxblum/orgs",
                        "repos_url": "https://api.github.com/users/jxblum/repos",
                        "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jxblum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/321",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/321",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/321/labels",
                    "id": 9925867,
                    "node_id": "MI_kwDOACWzSs4Al3Tr",
                    "number": 321,
                    "title": "7.2 RC1 (2023.1.0)",
                    "description": "2023.1.0-RC1",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 3,
                    "state": "closed",
                    "created_at": "2023-09-15T09:46:13Z",
                    "updated_at": "2023-10-13T15:59:55Z",
                    "due_on": null,
                    "closed_at": "2023-10-13T15:59:35Z"
                },
                "comments": 0,
                "created_at": "2023-09-15T09:46:25Z",
                "updated_at": "2023-10-13T15:59:55Z",
                "closed_at": "2023-10-13T15:59:54Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": null,
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2796/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2796/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-13T15:59:55Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547831373",
        "type": "IssuesEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2812",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2812/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2812/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2812/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2812",
                "id": 1942213780,
                "node_id": "I_kwDOACWzSs5zw9SU",
                "number": 2812,
                "title": "Release 7.1.6 (2023.0.6)",
                "user": {
                    "login": "jxblum",
                    "id": 5247119,
                    "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jxblum",
                    "html_url": "https://github.com/jxblum",
                    "followers_url": "https://api.github.com/users/jxblum/followers",
                    "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                    "organizations_url": "https://api.github.com/users/jxblum/orgs",
                    "repos_url": "https://api.github.com/users/jxblum/repos",
                    "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jxblum/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/323",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/323",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/323/labels",
                    "id": 10047289,
                    "node_id": "MI_kwDOACWzSs4AmU85",
                    "number": 323,
                    "title": "7.1.6 (2023.0.6)",
                    "description": "2023.0.6",
                    "creator": {
                        "login": "jxblum",
                        "id": 5247119,
                        "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jxblum",
                        "html_url": "https://github.com/jxblum",
                        "followers_url": "https://api.github.com/users/jxblum/followers",
                        "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                        "organizations_url": "https://api.github.com/users/jxblum/orgs",
                        "repos_url": "https://api.github.com/users/jxblum/repos",
                        "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jxblum/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 1,
                    "closed_issues": 0,
                    "state": "open",
                    "created_at": "2023-10-13T15:58:49Z",
                    "updated_at": "2023-10-13T15:59:03Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 0,
                "created_at": "2023-10-13T15:59:02Z",
                "updated_at": "2023-10-13T15:59:03Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": null,
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2812/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2812/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-13T15:59:04Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547790547",
        "type": "IssuesEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2795",
                "repository_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j",
                "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2795/labels{/name}",
                "comments_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2795/comments",
                "events_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2795/events",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/issues/2795",
                "id": 1898066826,
                "node_id": "I_kwDOACWzSs5xIjOK",
                "number": 2795,
                "title": "Release 7.1.5 (2023.0.5)",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2509575113,
                        "node_id": "MDU6TGFiZWwyNTA5NTc1MTEz",
                        "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/labels/type:%20task",
                        "name": "type: task",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general task"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "jxblum",
                    "id": 5247119,
                    "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jxblum",
                    "html_url": "https://github.com/jxblum",
                    "followers_url": "https://api.github.com/users/jxblum/followers",
                    "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                    "organizations_url": "https://api.github.com/users/jxblum/orgs",
                    "repos_url": "https://api.github.com/users/jxblum/repos",
                    "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jxblum/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "jxblum",
                        "id": 5247119,
                        "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jxblum",
                        "html_url": "https://github.com/jxblum",
                        "followers_url": "https://api.github.com/users/jxblum/followers",
                        "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                        "organizations_url": "https://api.github.com/users/jxblum/orgs",
                        "repos_url": "https://api.github.com/users/jxblum/repos",
                        "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jxblum/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/320",
                    "html_url": "https://github.com/spring-projects/spring-data-neo4j/milestone/320",
                    "labels_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/milestones/320/labels",
                    "id": 9925814,
                    "node_id": "MI_kwDOACWzSs4Al3S2",
                    "number": 320,
                    "title": "7.1.5 (2023.0.5)",
                    "description": "2023.0.5",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 6,
                    "state": "closed",
                    "created_at": "2023-09-15T09:35:38Z",
                    "updated_at": "2023-10-13T15:57:21Z",
                    "due_on": null,
                    "closed_at": "2023-10-13T15:57:01Z"
                },
                "comments": 0,
                "created_at": "2023-09-15T09:35:50Z",
                "updated_at": "2023-10-13T15:57:21Z",
                "closed_at": "2023-10-13T15:57:20Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": null,
                "reactions": {
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2795/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/issues/2795/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-13T15:57:21Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547673028",
        "type": "ReleaseEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "action": "published",
            "release": {
                "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/releases/125007627",
                "assets_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/releases/125007627/assets",
                "upload_url": "https://uploads.github.com/repos/spring-projects/spring-data-neo4j/releases/125007627/assets{?name,label}",
                "html_url": "https://github.com/spring-projects/spring-data-neo4j/releases/tag/7.2.0-RC1",
                "id": 125007627,
                "author": {
                    "login": "jxblum",
                    "id": 5247119,
                    "node_id": "MDQ6VXNlcjUyNDcxMTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5247119?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jxblum",
                    "html_url": "https://github.com/jxblum",
                    "followers_url": "https://api.github.com/users/jxblum/followers",
                    "following_url": "https://api.github.com/users/jxblum/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jxblum/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jxblum/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jxblum/subscriptions",
                    "organizations_url": "https://api.github.com/users/jxblum/orgs",
                    "repos_url": "https://api.github.com/users/jxblum/repos",
                    "events_url": "https://api.github.com/users/jxblum/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jxblum/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "node_id": "RE_kwDOACWzSs4Hc3cL",
                "tag_name": "7.2.0-RC1",
                "target_commitish": "main",
                "name": "7.2.0-RC1",
                "draft": false,
                "prerelease": true,
                "created_at": "2023-10-13T15:51:31Z",
                "published_at": "2023-10-13T15:52:20Z",
                "assets": [],
                "tarball_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/tarball/7.2.0-RC1",
                "zipball_url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/zipball/7.2.0-RC1",
                "body": "## :green_book: Links\n* [Spring Data Neo4j 7.2 Reference documentation](https://docs.spring.io/spring-data/neo4j/reference/)\n* [Spring Data Neo4j 7.2 Javadoc](https://docs.spring.io/spring-data/neo4j/docs/7.2.0-RC1/api/)\n\n## :star: New Features\n\n- Fail to use map of nodes as custom query param [#2791](https://github.com/spring-projects/spring-data-neo4j/issues/2791)\n## :lady_beetle: Bug Fixes\n\n- Errors when working with graalvm native compilation [#2798](https://github.com/spring-projects/spring-data-neo4j/issues/2798)\n## :hammer: Dependency Upgrades\n\n- Upgrade to Maven Wrapper 3.9.5 [#2805](https://github.com/spring-projects/spring-data-neo4j/issues/2805)\n- Upgrade to OpenWebBeans 4.0 [#2804](https://github.com/spring-projects/spring-data-neo4j/issues/2804)\n\n",
                "short_description_html": "<h2>\ud83d\udcd7 Links</h2>\n<ul>\n<li><a href=\"https://docs.spring.io/spring-data/neo4j/reference/\" rel=\"nofollow\">Spring Data Neo4j 7.2 Reference documentation</a></li>\n<li><a href=\"https://docs.spring.io/spring-data/neo4j/docs/7.2.0-RC1/api/\" rel=\"nofollow\">Spring Data Neo4j 7.2 Javadoc</a></li>\n</ul>\n<h2>\u2b50 New Features</h2>\n<ul>\n<li>Fail to use map of nodes as custom query param <a href=\"https://github.com/spring-projects/spring-data-neo4j/issues/2791\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-data-neo4j/issues/2791/hovercard\">#2791</a>\n</li>\n</ul>\n<h2>\ud83d\udc1e Bug Fixes</h2>\n<ul>\n<li>Errors when working with gra\u2026</li>\n</ul>",
                "is_short_description_html_truncated": true
            }
        },
        "public": true,
        "created_at": "2023-10-13T15:52:20Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547668220",
        "type": "CreateEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "ref": "7.2.0-RC1",
            "ref_type": "tag",
            "master_branch": "main",
            "description": "Provide support to increase developer productivity in Java when using Neo4j. Uses familiar Spring concepts such as a template classes for core API usage and lightweight repository style data access.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-13T15:52:08Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    },
    {
        "id": "32547666936",
        "type": "PushEvent",
        "actor": {
            "id": 5247119,
            "login": "jxblum",
            "display_login": "jxblum",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxblum",
            "avatar_url": "https://avatars.githubusercontent.com/u/5247119?"
        },
        "repo": {
            "id": 2470730,
            "name": "spring-projects/spring-data-neo4j",
            "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j"
        },
        "payload": {
            "repository_id": 2470730,
            "push_id": 15410640768,
            "size": 4,
            "distinct_size": 4,
            "ref": "refs/heads/main",
            "head": "c314dc56a88e4d65a8dd935965d2de7ae3b6489b",
            "before": "52535f37f5a5d5a2cce4fbdd9d3504a1b07dacb0",
            "commits": [
                {
                    "sha": "b8db05939faf073f876136d035aeefa90466ce52",
                    "author": {
                        "email": "jblum@vmware.com",
                        "name": "John Blum"
                    },
                    "message": "Prepare 7.2 RC1 (2023.1.0).\n\nSee #2796",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/b8db05939faf073f876136d035aeefa90466ce52"
                },
                {
                    "sha": "cefb1072df2684d741fb5bc829a05d6556fc861d",
                    "author": {
                        "email": "jblum@vmware.com",
                        "name": "John Blum"
                    },
                    "message": "Release version 7.2 RC1 (2023.1.0).\n\nSee #2796",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/cefb1072df2684d741fb5bc829a05d6556fc861d"
                },
                {
                    "sha": "b67e6073ba0cc03a6fb69fc3e7d9e72f31122226",
                    "author": {
                        "email": "jblum@vmware.com",
                        "name": "John Blum"
                    },
                    "message": "Prepare next development iteration.\n\nSee #2796",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/b67e6073ba0cc03a6fb69fc3e7d9e72f31122226"
                },
                {
                    "sha": "c314dc56a88e4d65a8dd935965d2de7ae3b6489b",
                    "author": {
                        "email": "jblum@vmware.com",
                        "name": "John Blum"
                    },
                    "message": "After release cleanups.\n\nSee #2796",
                    "distinct": true,
                    "url": "https://api.github.com/repos/spring-projects/spring-data-neo4j/commits/c314dc56a88e4d65a8dd935965d2de7ae3b6489b"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-13T15:52:05Z",
        "org": {
            "id": 317776,
            "login": "spring-projects",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/spring-projects",
            "avatar_url": "https://avatars.githubusercontent.com/u/317776?"
        }
    }
]