[
    {
        "id": "32894953471",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 17,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-27T10:01:33Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1782642105",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1782642105",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1782642105,
                "node_id": "IC_kwDOAx7ZgM5qQPW5",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:01:33Z",
                "updated_at": "2023-10-27T10:01:33Z",
                "author_association": "MEMBER",
                "body": ">This ties in to the original topic of this issue and your redesign: could window creation be a two-step process, perhaps requiring the user to resize the window immediately after construction?\r\n\r\nI'll just add a hook to finish window building on handling `None` better, since we can actually get replies back. But yeah, if you resize yourself `kwin` could decide to send a confirmation with `configure` back, but some stacking wms.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1782642105/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:01:33Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32894805813",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 16,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-27T09:55:59Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1782634451",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1782634451",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1782634451,
                "node_id": "IC_kwDOAx7ZgM5qQNfT",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:55:59Z",
                "updated_at": "2023-10-27T09:55:59Z",
                "author_association": "CONTRIBUTOR",
                "body": "It's definitely not an attempt to restore the previous window size but probably is due to kwin not merging batched resizes...\r\n\r\n... however, I notice that `WindowState::configure` does call `resize` and hence `set_window_geometry` gets called twice from my `Window::resume` method (when the window is initially constructed to get the scale factor, and when I set the recalculated size).\r\n\r\nThis ties in to the original topic of this issue and your redesign: could window creation be a two-step process, perhaps requiring the user to resize the window immediately after construction?",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1782634451/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:56:00Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32893862745",
        "type": "WatchEvent",
        "actor": {
            "id": 24817072,
            "login": "galinator9000",
            "display_login": "galinator9000",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galinator9000",
            "avatar_url": "https://avatars.githubusercontent.com/u/24817072?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:20:18Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32887839847",
        "type": "WatchEvent",
        "actor": {
            "id": 16386583,
            "login": "Kaifuny",
            "display_login": "Kaifuny",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kaifuny",
            "avatar_url": "https://avatars.githubusercontent.com/u/16386583?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T04:19:50Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32881691596",
        "type": "IssuesEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3187",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3187/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3187/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3187/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3187",
                "id": 1961196594,
                "node_id": "I_kwDOAx7ZgM505Xwy",
                "number": 3187,
                "title": "Delay `size` convertion on Wayland until we get scaling for initial window",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T11:44:10Z",
                "updated_at": "2023-10-26T20:56:25Z",
                "closed_at": "2023-10-26T20:56:25Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "This should be possible now with the updated wording to `xdg_shell`, new `wl_compositor`, and `wp_fractional_scale`.\r\n\r\nHowever, we can't do anything like that about logical sizes for `min/max` inner sizes.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3187/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3187/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-26T20:56:26Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32881691562",
        "type": "PushEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "repository_id": 52353408,
            "push_id": 15583071441,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "12dbbf8012524e6f1420f19062acd6ab17252e27",
            "before": "53ca5af48ff5cf17ca0fa0012f1860e582fa9402",
            "commits": [
                {
                    "sha": "12dbbf8012524e6f1420f19062acd6ab17252e27",
                    "author": {
                        "email": "contact@kchibisov.com",
                        "name": "Kirill Chibisov"
                    },
                    "message": "On Wayland, improve initial user size handling\n\nKeep the user provided size in the original values and convert only\r\nwhen we're getting a `configure` event. On some compositors will\r\nhave a scale available, so it'll work, however with some we'll\r\nstill have old 'pick 1` as default.\r\n\r\nAlso configure_bounds when compositor tells the user to pick the size,\r\nthat will ensure that initial `with_inner_size` won't grow beyond the\r\nworking area.\r\n\r\nFixes #3187.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/rust-windowing/winit/commits/12dbbf8012524e6f1420f19062acd6ab17252e27"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T20:56:25Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32881691322",
        "type": "PullRequestEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "closed",
            "number": 3189,
            "pull_request": {
                "url": "https://api.github.com/repos/rust-windowing/winit/pulls/3189",
                "id": 1573101823,
                "node_id": "PR_kwDOAx7ZgM5dw6D_",
                "html_url": "https://github.com/rust-windowing/winit/pull/3189",
                "diff_url": "https://github.com/rust-windowing/winit/pull/3189.diff",
                "patch_url": "https://github.com/rust-windowing/winit/pull/3189.patch",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3189",
                "number": 3189,
                "state": "closed",
                "locked": false,
                "title": "On Wayland, improve initial user size handling",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Keep the user provided size in the original values and convert only when we're getting a `configure` event. On some compositors will have a scale available, so it'll work, however with some we'll still have old 'pick 1` as default.\r\n\r\nAlso configure_bounds when compositor tells the user to pick the size, that will ensure that initial `with_inner_size` won't grow beyond the working area.\r\n\r\nFixes #3187.\r\n\r\n- [ ] Tested on all platforms changed\r\n- [x] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\n\r\n@dhardy can you test this? It should probably make the `PhysicalSize` work on at least some systems and if you pass the big `with_inner_size` winit will constrain to the the size compositor wants.",
                "created_at": "2023-10-25T14:43:52Z",
                "updated_at": "2023-10-26T20:56:24Z",
                "closed_at": "2023-10-26T20:56:24Z",
                "merged_at": "2023-10-26T20:56:24Z",
                "merge_commit_sha": "12dbbf8012524e6f1420f19062acd6ab17252e27",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/milestones/12",
                    "html_url": "https://github.com/rust-windowing/winit/milestone/12",
                    "labels_url": "https://api.github.com/repos/rust-windowing/winit/milestones/12/labels",
                    "id": 10084883,
                    "node_id": "MI_kwDOAx7ZgM4AmeIT",
                    "number": 12,
                    "title": "Version 0.29.3",
                    "description": "",
                    "creator": {
                        "login": "kchibisov",
                        "id": 27620401,
                        "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/kchibisov",
                        "html_url": "https://github.com/kchibisov",
                        "followers_url": "https://api.github.com/users/kchibisov/followers",
                        "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                        "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                        "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                        "repos_url": "https://api.github.com/users/kchibisov/repos",
                        "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 1,
                    "closed_issues": 7,
                    "state": "open",
                    "created_at": "2023-10-22T04:51:11Z",
                    "updated_at": "2023-10-26T20:56:24Z",
                    "due_on": null,
                    "closed_at": null
                },
                "draft": false,
                "commits_url": "https://api.github.com/repos/rust-windowing/winit/pulls/3189/commits",
                "review_comments_url": "https://api.github.com/repos/rust-windowing/winit/pulls/3189/comments",
                "review_comment_url": "https://api.github.com/repos/rust-windowing/winit/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3189/comments",
                "statuses_url": "https://api.github.com/repos/rust-windowing/winit/statuses/1699de331dbcd32b5496d7f1d30e5d467c4bacb4",
                "head": {
                    "label": "kchibisov:configure-bounds",
                    "ref": "configure-bounds",
                    "sha": "1699de331dbcd32b5496d7f1d30e5d467c4bacb4",
                    "user": {
                        "login": "kchibisov",
                        "id": 27620401,
                        "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/kchibisov",
                        "html_url": "https://github.com/kchibisov",
                        "followers_url": "https://api.github.com/users/kchibisov/followers",
                        "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                        "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                        "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                        "repos_url": "https://api.github.com/users/kchibisov/repos",
                        "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 146343801,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDYzNDM4MDE=",
                        "name": "winit",
                        "full_name": "kchibisov/winit",
                        "private": false,
                        "owner": {
                            "login": "kchibisov",
                            "id": 27620401,
                            "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/kchibisov",
                            "html_url": "https://github.com/kchibisov",
                            "followers_url": "https://api.github.com/users/kchibisov/followers",
                            "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                            "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                            "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                            "repos_url": "https://api.github.com/users/kchibisov/repos",
                            "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/kchibisov/winit",
                        "description": "Window handling library in pure Rust",
                        "fork": true,
                        "url": "https://api.github.com/repos/kchibisov/winit",
                        "forks_url": "https://api.github.com/repos/kchibisov/winit/forks",
                        "keys_url": "https://api.github.com/repos/kchibisov/winit/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/kchibisov/winit/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/kchibisov/winit/teams",
                        "hooks_url": "https://api.github.com/repos/kchibisov/winit/hooks",
                        "issue_events_url": "https://api.github.com/repos/kchibisov/winit/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/kchibisov/winit/events",
                        "assignees_url": "https://api.github.com/repos/kchibisov/winit/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/kchibisov/winit/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/kchibisov/winit/tags",
                        "blobs_url": "https://api.github.com/repos/kchibisov/winit/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/kchibisov/winit/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/kchibisov/winit/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/kchibisov/winit/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/kchibisov/winit/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/kchibisov/winit/languages",
                        "stargazers_url": "https://api.github.com/repos/kchibisov/winit/stargazers",
                        "contributors_url": "https://api.github.com/repos/kchibisov/winit/contributors",
                        "subscribers_url": "https://api.github.com/repos/kchibisov/winit/subscribers",
                        "subscription_url": "https://api.github.com/repos/kchibisov/winit/subscription",
                        "commits_url": "https://api.github.com/repos/kchibisov/winit/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/kchibisov/winit/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/kchibisov/winit/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/kchibisov/winit/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/kchibisov/winit/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/kchibisov/winit/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/kchibisov/winit/merges",
                        "archive_url": "https://api.github.com/repos/kchibisov/winit/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/kchibisov/winit/downloads",
                        "issues_url": "https://api.github.com/repos/kchibisov/winit/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/kchibisov/winit/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/kchibisov/winit/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/kchibisov/winit/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/kchibisov/winit/labels{/name}",
                        "releases_url": "https://api.github.com/repos/kchibisov/winit/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/kchibisov/winit/deployments",
                        "created_at": "2018-08-27T19:25:41Z",
                        "updated_at": "2021-12-01T11:23:27Z",
                        "pushed_at": "2023-10-26T20:31:55Z",
                        "git_url": "git://github.com/kchibisov/winit.git",
                        "ssh_url": "git@github.com:kchibisov/winit.git",
                        "clone_url": "https://github.com/kchibisov/winit.git",
                        "svn_url": "https://github.com/kchibisov/winit",
                        "homepage": null,
                        "size": 13306,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Rust",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "rust-windowing:master",
                    "ref": "master",
                    "sha": "53ca5af48ff5cf17ca0fa0012f1860e582fa9402",
                    "user": {
                        "login": "rust-windowing",
                        "id": 49372933,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ5MzcyOTMz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/49372933?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rust-windowing",
                        "html_url": "https://github.com/rust-windowing",
                        "followers_url": "https://api.github.com/users/rust-windowing/followers",
                        "following_url": "https://api.github.com/users/rust-windowing/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rust-windowing/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rust-windowing/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rust-windowing/subscriptions",
                        "organizations_url": "https://api.github.com/users/rust-windowing/orgs",
                        "repos_url": "https://api.github.com/users/rust-windowing/repos",
                        "events_url": "https://api.github.com/users/rust-windowing/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rust-windowing/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 52353408,
                        "node_id": "MDEwOlJlcG9zaXRvcnk1MjM1MzQwOA==",
                        "name": "winit",
                        "full_name": "rust-windowing/winit",
                        "private": false,
                        "owner": {
                            "login": "rust-windowing",
                            "id": 49372933,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQ5MzcyOTMz",
                            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/rust-windowing",
                            "html_url": "https://github.com/rust-windowing",
                            "followers_url": "https://api.github.com/users/rust-windowing/followers",
                            "following_url": "https://api.github.com/users/rust-windowing/following{/other_user}",
                            "gists_url": "https://api.github.com/users/rust-windowing/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/rust-windowing/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/rust-windowing/subscriptions",
                            "organizations_url": "https://api.github.com/users/rust-windowing/orgs",
                            "repos_url": "https://api.github.com/users/rust-windowing/repos",
                            "events_url": "https://api.github.com/users/rust-windowing/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/rust-windowing/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/rust-windowing/winit",
                        "description": "Window handling library in pure Rust",
                        "fork": false,
                        "url": "https://api.github.com/repos/rust-windowing/winit",
                        "forks_url": "https://api.github.com/repos/rust-windowing/winit/forks",
                        "keys_url": "https://api.github.com/repos/rust-windowing/winit/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/rust-windowing/winit/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/rust-windowing/winit/teams",
                        "hooks_url": "https://api.github.com/repos/rust-windowing/winit/hooks",
                        "issue_events_url": "https://api.github.com/repos/rust-windowing/winit/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/rust-windowing/winit/events",
                        "assignees_url": "https://api.github.com/repos/rust-windowing/winit/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/rust-windowing/winit/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/rust-windowing/winit/tags",
                        "blobs_url": "https://api.github.com/repos/rust-windowing/winit/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/rust-windowing/winit/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/rust-windowing/winit/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/rust-windowing/winit/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/rust-windowing/winit/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/rust-windowing/winit/languages",
                        "stargazers_url": "https://api.github.com/repos/rust-windowing/winit/stargazers",
                        "contributors_url": "https://api.github.com/repos/rust-windowing/winit/contributors",
                        "subscribers_url": "https://api.github.com/repos/rust-windowing/winit/subscribers",
                        "subscription_url": "https://api.github.com/repos/rust-windowing/winit/subscription",
                        "commits_url": "https://api.github.com/repos/rust-windowing/winit/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/rust-windowing/winit/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/rust-windowing/winit/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/rust-windowing/winit/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/rust-windowing/winit/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/rust-windowing/winit/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/rust-windowing/winit/merges",
                        "archive_url": "https://api.github.com/repos/rust-windowing/winit/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/rust-windowing/winit/downloads",
                        "issues_url": "https://api.github.com/repos/rust-windowing/winit/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/rust-windowing/winit/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/rust-windowing/winit/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/rust-windowing/winit/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/rust-windowing/winit/labels{/name}",
                        "releases_url": "https://api.github.com/repos/rust-windowing/winit/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/rust-windowing/winit/deployments",
                        "created_at": "2016-02-23T11:17:06Z",
                        "updated_at": "2023-10-26T11:18:11Z",
                        "pushed_at": "2023-10-26T20:56:24Z",
                        "git_url": "git://github.com/rust-windowing/winit.git",
                        "ssh_url": "git@github.com:rust-windowing/winit.git",
                        "clone_url": "https://github.com/rust-windowing/winit.git",
                        "svn_url": "https://github.com/rust-windowing/winit",
                        "homepage": "https://docs.rs/winit/",
                        "size": 8677,
                        "stargazers_count": 3776,
                        "watchers_count": 3776,
                        "language": "Rust",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 778,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 404,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "android",
                            "ios",
                            "macos",
                            "rust",
                            "wasm",
                            "wayland",
                            "windowing",
                            "windows",
                            "x11"
                        ],
                        "visibility": "public",
                        "forks": 778,
                        "open_issues": 404,
                        "watchers": 3776,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/pulls/3189"
                    },
                    "html": {
                        "href": "https://github.com/rust-windowing/winit/pull/3189"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/issues/3189"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/issues/3189/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/pulls/3189/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/pulls/3189/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/rust-windowing/winit/statuses/1699de331dbcd32b5496d7f1d30e5d467c4bacb4"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 11,
                "review_comments": 5,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 92,
                "deletions": 26,
                "changed_files": 5
            }
        },
        "public": true,
        "created_at": "2023-10-26T20:56:25Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32881464944",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 15,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T20:45:33Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781870878",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781870878",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781870878,
                "node_id": "IC_kwDOAx7ZgM5qNTEe",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T20:45:33Z",
                "updated_at": "2023-10-26T20:45:33Z",
                "author_association": "MEMBER",
                "body": "idk, I'd ask kwin folks on that matter.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781870878/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T20:45:33Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32881311805",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 14,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T20:38:17Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781862265",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781862265",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781862265,
                "node_id": "IC_kwDOAx7ZgM5qNQ95",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T20:38:17Z",
                "updated_at": "2023-10-26T20:38:17Z",
                "author_association": "CONTRIBUTOR",
                "body": "Yes.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781862265/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T20:38:18Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32876890641",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 13,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T17:28:35Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781542278",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781542278",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781542278,
                "node_id": "IC_kwDOAx7ZgM5qMC2G",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T17:28:35Z",
                "updated_at": "2023-10-26T17:28:35Z",
                "author_association": "MEMBER",
                "body": "btw, if you try to create a window with decorations do you see this happening?",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781542278/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:28:36Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32876763560",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 12,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T17:23:28Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781535218",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781535218",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781535218,
                "node_id": "IC_kwDOAx7ZgM5qMBHy",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T17:23:28Z",
                "updated_at": "2023-10-26T17:23:28Z",
                "author_association": "MEMBER",
                "body": "I don't know, winit has no control over that, it's all on kwin.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781535218/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:23:29Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32876623592",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 11,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T17:18:21Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781527981",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781527981",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781527981,
                "node_id": "IC_kwDOAx7ZgM5qL_Wt",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T17:18:21Z",
                "updated_at": "2023-10-26T17:18:21Z",
                "author_association": "CONTRIBUTOR",
                "body": "Is this an attempt to restore the previous size and position? If so, it would be good to have a way of accepting that without requesting another resize (provided certain constraints are met).\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781527981/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:18:22Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875831967",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 10,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:47:20Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781484436",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781484436",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781484436,
                "node_id": "IC_kwDOAx7ZgM5qL0uU",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:47:20Z",
                "updated_at": "2023-10-26T16:47:20Z",
                "author_association": "MEMBER",
                "body": ">331:[  59609.748] xdg_toplevel@26.configure(0, 0, array[0])\r\n\r\nThat's initial configure where winit used the `inner_size` you provided during build.\r\n\r\n>1020:[  59653.347] xdg_toplevel@26.configure(379, 695, array[4])\r\n\r\nThat's kwin just send us for whatever reason.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781484436/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:47:21Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875805576",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:46:17Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781483016",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781483016",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781483016,
                "node_id": "IC_kwDOAx7ZgM5qL0YI",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:46:16Z",
                "updated_at": "2023-10-26T16:46:16Z",
                "author_association": "MEMBER",
                "body": "```\r\n11:[  59468.112] wl_registry@2.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n56:[  59468.669]  -> wl_registry@2.bind(10, \"wp_fractional_scale_manager_v1\", 1, new id [unknown]@9)\r\n70:[  59468.964] wl_output@5.scale(2)\r\n105:[  59510.513] wl_registry@2.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n173:[  59538.480] wl_registry@2.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n240:[  59542.241] wl_registry@2.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n304:[2023-10-26T16:25:02Z DEBUG kas_core::event] full_configure of Window#1\r\n313:[  59609.195]  -> wp_fractional_scale_manager_v1@9.get_fractional_scale(new id wp_fractional_scale_v1@29, wl_surface@24)\r\n327:[  59609.731] wp_fractional_scale_v1@29.preferred_scale(180)\r\n328:[  59609.736] zxdg_toplevel_decoration_v1@27.configure(1)\r\n330:[  59609.744] xdg_toplevel@26.configure_bounds(2488, 1440)\r\n331:[  59609.748] xdg_toplevel@26.configure(0, 0, array[0])\r\n332:[  59609.752] xdg_surface@25.configure(39634)\r\n333:[  59611.184]  -> xdg_surface@25.ack_configure(39634)\r\n373:[2023-10-26T16:25:02Z INFO  kas_core::shell::window] new: constructed with physical size Size(569, 1043), scale factor 1.5\r\n403:[  59629.306] wl_registry@43.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n410:[  59629.331] wl_registry@45.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n530:[  59638.182] wl_registry@39.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n608:[  59638.519] wl_registry@33.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n684:[  59638.948] wl_registry@30.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n791:WindowEvent::ScaleFactorChanged(1.5)\r\n792:WindowEvent::Resized(PhysicalSize { width: 567, height: 1016 })\r\n793:Surface resize from Size(569, 1043) to Size(567, 1016)\r\n808:[  59641.703] wl_registry@54.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n884:[  59642.025] wl_registry@50.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n1020:[  59653.347] xdg_toplevel@26.configure(379, 695, array[4])\r\n1021:[  59653.355] xdg_surface@25.configure(39641)\r\n1023:[  59653.502]  -> xdg_surface@25.ack_configure(39641)\r\n1030:WindowEvent::Resized(PhysicalSize { width: 569, height: 1043 })\r\n1031:Surface resize from Size(567, 1016) to Size(569, 1043)\r\n1043:[  59653.831] wl_registry@51.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n1119:[  59654.189] wl_registry@32.global(10, \"wp_fractional_scale_manager_v1\", 1)\r\n1325:[  61510.077]  -> wp_fractional_scale_v1@29.destroy()\r\n\r\n```\r\n\r\nIt's just `KDE` decided to resize you, the event was not queued at all. Though, from the log I'd like to change some minor thing and remove all of that surface deletions since you hide the frame from what I can see.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781483016/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:46:17Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875730556",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:43:19Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781478875",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781478875",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781478875,
                "node_id": "IC_kwDOAx7ZgM5qLzXb",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:43:19Z",
                "updated_at": "2023-10-26T16:43:19Z",
                "author_association": "MEMBER",
                "body": "The thing is that you could just have a function to handle resize separate from `resize` and `request_inner_size`, it's just on Wayland the user controls the size, this is quite unique and I don't see why we need a rountrip.\r\n\r\nIt was discussed in the past when I brought the `request_inner_size`. I really don't see a big issue in any of that. You also sometimes know that something was not resized at all.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781478875/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:43:19Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875613047",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:38:40Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781471584",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781471584",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781471584,
                "node_id": "IC_kwDOAx7ZgM5qLxlg",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:38:39Z",
                "updated_at": "2023-10-26T16:38:39Z",
                "author_association": "CONTRIBUTOR",
                "body": "Great for Wayland but a slight pain to code for multiple platforms when an event-loop round-trip should be cheap. But it isn't important.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781471584/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:38:40Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875530135",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:35:25Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781466774",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781466774",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781466774,
                "node_id": "IC_kwDOAx7ZgM5qLwaW",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:35:24Z",
                "updated_at": "2023-10-26T16:35:24Z",
                "author_association": "MEMBER",
                "body": ">The same is true of Window::request_inner_size: having to handle two paths in the app (immediate or postponed resize) should not be necessary.\r\n\r\nBut why should we do `async` roundtrip with all of that? You do understand that your resize will have to go thread the event loop and back to you, while in reality you don't need any of that on Wayland? And you handle the resize logic in some handler if you want to or just mark the state as resized and run the resize logic.\r\n\r\nIt's sort of common...",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781466774/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:35:25Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875466233",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 2263150,
            "login": "ids1024",
            "display_login": "ids1024",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ids1024",
            "avatar_url": "https://avatars.githubusercontent.com/u/2263150?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/events",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                "id": 1735978473,
                "node_id": "PR_kwDOAx7ZgM5R4jUI",
                "number": 2832,
                "title": "Add support for wlr_layer_shell windows",
                "user": {
                    "login": "TheOnlyMrCat",
                    "id": 23222857,
                    "node_id": "MDQ6VXNlcjIzMjIyODU3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23222857?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheOnlyMrCat",
                    "html_url": "https://github.com/TheOnlyMrCat",
                    "followers_url": "https://api.github.com/users/TheOnlyMrCat/followers",
                    "following_url": "https://api.github.com/users/TheOnlyMrCat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheOnlyMrCat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheOnlyMrCat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheOnlyMrCat/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheOnlyMrCat/orgs",
                    "repos_url": "https://api.github.com/users/TheOnlyMrCat/repos",
                    "events_url": "https://api.github.com/users/TheOnlyMrCat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheOnlyMrCat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 12,
                "created_at": "2023-06-01T10:21:50Z",
                "updated_at": "2023-10-26T16:32:55Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": true,
                "pull_request": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/pulls/2832",
                    "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                    "diff_url": "https://github.com/rust-windowing/winit/pull/2832.diff",
                    "patch_url": "https://github.com/rust-windowing/winit/pull/2832.patch",
                    "merged_at": null
                },
                "body": "- [x] Tested on all platforms changed\r\n- [ ] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n  - Example programs are currently completely broken on wayland, since windows don't display until something is rendered to them. I do have an example I used for testing, but I will have to excise `softbuffer` from it.\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\nLayer shell windows are very different to normal windows, so there is quite a bit of weirdness that results from handling both XDG and Layer shells with the same system. (`let...else` from Rust 1.65 would make the code a lot nicer).\r\n\r\nOn the other hand, it would be nice to have winit's input handling for layer_shell apps.\r\n\r\nFixes #2582\r\n\r\nUnresolved design questions:\r\n- I would imagine `Anchor`, `KeyboardInteractivity`, and `Layer` should be reexported in `winit::platform::wayland`.\r\n- Currently, I have the `closed` event sending a `CloseRequested` event to the event loop. A panic will likely result if the window is attempted to be used after this is received. I am not sure when the compositor would send this event, nor what the library should do in response to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/reactions",
                    "total_count": 10,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 6,
                    "confused": 0,
                    "heart": 4,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781462966",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832#issuecomment-1781462966",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "id": 1781462966,
                "node_id": "IC_kwDOAx7ZgM5qLve2",
                "user": {
                    "login": "ids1024",
                    "id": 2263150,
                    "node_id": "MDQ6VXNlcjIyNjMxNTA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2263150?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ids1024",
                    "html_url": "https://github.com/ids1024",
                    "followers_url": "https://api.github.com/users/ids1024/followers",
                    "following_url": "https://api.github.com/users/ids1024/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ids1024/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ids1024/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ids1024/subscriptions",
                    "organizations_url": "https://api.github.com/users/ids1024/orgs",
                    "repos_url": "https://api.github.com/users/ids1024/repos",
                    "events_url": "https://api.github.com/users/ids1024/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ids1024/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:32:55Z",
                "updated_at": "2023-10-26T16:32:55Z",
                "author_association": "MEMBER",
                "body": "> The only application is if you want a cross platform bar, which means X11 and Wayland at the same time. \r\n\r\nOr if a Rust toolkit wants to support normal windows (across platforms, using winit), and layer shell surfaces.\r\n\r\nIn theory wlr-layer-shell is also going to be replaced by ext-layer-shell at some point, though not necessarily any time soon: https://gitlab.freedesktop.org/wayland/wayland-protocols/-/merge_requests/28",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781462966/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:32:55Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875361096",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:28:52Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781456159",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781456159",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781456159,
                "node_id": "IC_kwDOAx7ZgM5qLt0f",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:28:52Z",
                "updated_at": "2023-10-26T16:28:52Z",
                "author_association": "CONTRIBUTOR",
                "body": "The same is true of `Window::request_inner_size`: having to handle two paths in the app (immediate or postponed resize) should not be necessary.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781456159/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:28:53Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875323002",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:27:27Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781453932",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781453932",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781453932,
                "node_id": "IC_kwDOAx7ZgM5qLtRs",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:27:27Z",
                "updated_at": "2023-10-26T16:27:27Z",
                "author_association": "CONTRIBUTOR",
                "body": "https://gist.github.com/dhardy/83e48fe7b83042fb6f8602dcbc79d088",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781453932/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:27:27Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32875062054",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:17:46Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781438430",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781438430",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781438430,
                "node_id": "IC_kwDOAx7ZgM5qLpfe",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:17:45Z",
                "updated_at": "2023-10-26T16:17:45Z",
                "author_association": "MEMBER",
                "body": ">The same applies to a trait-based solution: guaranteeing a call to resize after window creation simplifies app logic.\r\n\r\nit's just all the logic will be different, but probably simpler.\r\n\r\n@dhardy could you post a `WAYLAND_DEBUG=1` log for me actually? We don't queue anything on wayland.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781438430/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:17:46Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32874929556",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474350557,
                        "node_id": "MDU6TGFiZWw0NzQzNTA1NTc=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/S%20-%20api",
                        "name": "S - api",
                        "color": "1D76DB",
                        "default": false,
                        "description": "Design and usability"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T16:12:55Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781430816",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781430816",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781430816,
                "node_id": "IC_kwDOAx7ZgM5qLnog",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T16:12:54Z",
                "updated_at": "2023-10-26T16:12:54Z",
                "author_association": "CONTRIBUTOR",
                "body": "The same applies to a trait-based solution: guaranteeing a call to `resize` after window creation simplifies app logic.\r\n\r\nThe current situation is actually a bit worse (Wayland):\r\n```\r\n# Initial constraints with scale_factor=1:\r\n[2023-10-26T16:06:11Z DEBUG kas_core::layout::sizer] find_constraints: min=Size(326, 143), ideal=Size(378, 677), margins=Margins { horiz: (0, 0), vert: (0, 0) }\r\n# Updated constraints with scale_factor=1.5:\r\n[2023-10-26T16:06:11Z DEBUG kas_core::layout::sizer] find_constraints: min=Size(508, 220), ideal=Size(569, 1042), margins=Margins { horiz: (0, 0), vert: (0, 0) }\r\n[2023-10-26T16:06:11Z INFO  kas_core::shell::window] new: constructed with physical size Size(569, 1043), scale factor 1.5\r\n# ...\r\nWindowEvent::ScaleFactorChanged(1.5)\r\n# This is a queued resize?\r\nWindowEvent::Resized(PhysicalSize { width: 567, height: 1016 })\r\n# Now the real resize:\r\nWindowEvent::Resized(PhysicalSize { width: 569, height: 1043 })\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781430816/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:12:55Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32874291517",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T15:50:37Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781394156",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192#issuecomment-1781394156",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "id": 1781394156,
                "node_id": "IC_kwDOAx7ZgM5qLers",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T15:50:37Z",
                "updated_at": "2023-10-26T15:50:37Z",
                "author_association": "MEMBER",
                "body": "I think on Wayland it's always send as long as it's not `1`. We can probably try to do so, but I really want to just get rid of the events in the current form all together, since we're solving problem that shouldn't even exist...",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781394156/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T15:50:37Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32874091645",
        "type": "IssuesEvent",
        "actor": {
            "id": 134893,
            "login": "dhardy",
            "display_login": "dhardy",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dhardy",
            "avatar_url": "https://avatars.githubusercontent.com/u/134893?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/events",
                "html_url": "https://github.com/rust-windowing/winit/issues/3192",
                "id": 1963855369,
                "node_id": "I_kwDOAx7ZgM51Dg4J",
                "number": 3192,
                "title": "Guarantee sending WindowEvent::Resized on window creation?",
                "user": {
                    "login": "dhardy",
                    "id": 134893,
                    "node_id": "MDQ6VXNlcjEzNDg5Mw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/134893?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dhardy",
                    "html_url": "https://github.com/dhardy",
                    "followers_url": "https://api.github.com/users/dhardy/followers",
                    "following_url": "https://api.github.com/users/dhardy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dhardy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dhardy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dhardy/subscriptions",
                    "organizations_url": "https://api.github.com/users/dhardy/orgs",
                    "repos_url": "https://api.github.com/users/dhardy/repos",
                    "events_url": "https://api.github.com/users/dhardy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dhardy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T15:43:47Z",
                "updated_at": "2023-10-26T15:43:47Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "Testing shows my app always receives `WindowEvent::Resized` after window creation (tested on Wayland and X11). Great, can I rely on it (avoid setting up the surface until receiving `Resized`)?\r\n\r\nThe same applies to `ScaleFactorChanged` which is received on Wayland but not X11. A guarantee that it will always be sent on start (at least when not 1) would allow simpler app logic.\r\n\r\nI don't see any documentation in this regard and haven't checked other platforms, but can make a PR if requested.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/3192/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T15:43:48Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32869674047",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 53652728,
            "login": "RegenJacob",
            "display_login": "RegenJacob",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RegenJacob",
            "avatar_url": "https://avatars.githubusercontent.com/u/53652728?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/events",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                "id": 1735978473,
                "node_id": "PR_kwDOAx7ZgM5R4jUI",
                "number": 2832,
                "title": "Add support for wlr_layer_shell windows",
                "user": {
                    "login": "TheOnlyMrCat",
                    "id": 23222857,
                    "node_id": "MDQ6VXNlcjIzMjIyODU3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23222857?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheOnlyMrCat",
                    "html_url": "https://github.com/TheOnlyMrCat",
                    "followers_url": "https://api.github.com/users/TheOnlyMrCat/followers",
                    "following_url": "https://api.github.com/users/TheOnlyMrCat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheOnlyMrCat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheOnlyMrCat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheOnlyMrCat/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheOnlyMrCat/orgs",
                    "repos_url": "https://api.github.com/users/TheOnlyMrCat/repos",
                    "events_url": "https://api.github.com/users/TheOnlyMrCat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheOnlyMrCat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 11,
                "created_at": "2023-06-01T10:21:50Z",
                "updated_at": "2023-10-26T13:30:56Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": true,
                "pull_request": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/pulls/2832",
                    "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                    "diff_url": "https://github.com/rust-windowing/winit/pull/2832.diff",
                    "patch_url": "https://github.com/rust-windowing/winit/pull/2832.patch",
                    "merged_at": null
                },
                "body": "- [x] Tested on all platforms changed\r\n- [ ] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n  - Example programs are currently completely broken on wayland, since windows don't display until something is rendered to them. I do have an example I used for testing, but I will have to excise `softbuffer` from it.\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\nLayer shell windows are very different to normal windows, so there is quite a bit of weirdness that results from handling both XDG and Layer shells with the same system. (`let...else` from Rust 1.65 would make the code a lot nicer).\r\n\r\nOn the other hand, it would be nice to have winit's input handling for layer_shell apps.\r\n\r\nFixes #2582\r\n\r\nUnresolved design questions:\r\n- I would imagine `Anchor`, `KeyboardInteractivity`, and `Layer` should be reexported in `winit::platform::wayland`.\r\n- Currently, I have the `closed` event sending a `CloseRequested` event to the event loop. A panic will likely result if the window is attempted to be used after this is received. I am not sure when the compositor would send this event, nor what the library should do in response to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/reactions",
                    "total_count": 10,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 6,
                    "confused": 0,
                    "heart": 4,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781132257",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832#issuecomment-1781132257",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "id": 1781132257,
                "node_id": "IC_kwDOAx7ZgM5qKevh",
                "user": {
                    "login": "RegenJacob",
                    "id": 53652728,
                    "node_id": "MDQ6VXNlcjUzNjUyNzI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53652728?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RegenJacob",
                    "html_url": "https://github.com/RegenJacob",
                    "followers_url": "https://api.github.com/users/RegenJacob/followers",
                    "following_url": "https://api.github.com/users/RegenJacob/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RegenJacob/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RegenJacob/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RegenJacob/subscriptions",
                    "organizations_url": "https://api.github.com/users/RegenJacob/orgs",
                    "repos_url": "https://api.github.com/users/RegenJacob/repos",
                    "events_url": "https://api.github.com/users/RegenJacob/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RegenJacob/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T13:30:55Z",
                "updated_at": "2023-10-26T13:30:55Z",
                "author_association": "NONE",
                "body": "> @RegenJacob have you seen SCTK's example to make a layer-shell window? It has all of that, and that's what winit is using. Winit just builds cross platform api on top of that.\n\nYes I edited my response didn't reload the page so I'm just now seeing this ",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781132257/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:30:56Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32869325699",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/events",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                "id": 1735978473,
                "node_id": "PR_kwDOAx7ZgM5R4jUI",
                "number": 2832,
                "title": "Add support for wlr_layer_shell windows",
                "user": {
                    "login": "TheOnlyMrCat",
                    "id": 23222857,
                    "node_id": "MDQ6VXNlcjIzMjIyODU3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23222857?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheOnlyMrCat",
                    "html_url": "https://github.com/TheOnlyMrCat",
                    "followers_url": "https://api.github.com/users/TheOnlyMrCat/followers",
                    "following_url": "https://api.github.com/users/TheOnlyMrCat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheOnlyMrCat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheOnlyMrCat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheOnlyMrCat/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheOnlyMrCat/orgs",
                    "repos_url": "https://api.github.com/users/TheOnlyMrCat/repos",
                    "events_url": "https://api.github.com/users/TheOnlyMrCat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheOnlyMrCat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 10,
                "created_at": "2023-06-01T10:21:50Z",
                "updated_at": "2023-10-26T13:20:37Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": true,
                "pull_request": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/pulls/2832",
                    "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                    "diff_url": "https://github.com/rust-windowing/winit/pull/2832.diff",
                    "patch_url": "https://github.com/rust-windowing/winit/pull/2832.patch",
                    "merged_at": null
                },
                "body": "- [x] Tested on all platforms changed\r\n- [ ] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n  - Example programs are currently completely broken on wayland, since windows don't display until something is rendered to them. I do have an example I used for testing, but I will have to excise `softbuffer` from it.\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\nLayer shell windows are very different to normal windows, so there is quite a bit of weirdness that results from handling both XDG and Layer shells with the same system. (`let...else` from Rust 1.65 would make the code a lot nicer).\r\n\r\nOn the other hand, it would be nice to have winit's input handling for layer_shell apps.\r\n\r\nFixes #2582\r\n\r\nUnresolved design questions:\r\n- I would imagine `Anchor`, `KeyboardInteractivity`, and `Layer` should be reexported in `winit::platform::wayland`.\r\n- Currently, I have the `closed` event sending a `CloseRequested` event to the event loop. A panic will likely result if the window is attempted to be used after this is received. I am not sure when the compositor would send this event, nor what the library should do in response to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/reactions",
                    "total_count": 10,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 6,
                    "confused": 0,
                    "heart": 4,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781113320",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832#issuecomment-1781113320",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "id": 1781113320,
                "node_id": "IC_kwDOAx7ZgM5qKaHo",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T13:20:37Z",
                "updated_at": "2023-10-26T13:20:37Z",
                "author_association": "MEMBER",
                "body": "@RegenJacob have you seen SCTK's example to make a layer-shell window? It has all of that, and that's what winit is using. Winit just builds cross platform api on top of that.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781113320/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:20:38Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32869138881",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 53652728,
            "login": "RegenJacob",
            "display_login": "RegenJacob",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RegenJacob",
            "avatar_url": "https://avatars.githubusercontent.com/u/53652728?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/events",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                "id": 1735978473,
                "node_id": "PR_kwDOAx7ZgM5R4jUI",
                "number": 2832,
                "title": "Add support for wlr_layer_shell windows",
                "user": {
                    "login": "TheOnlyMrCat",
                    "id": 23222857,
                    "node_id": "MDQ6VXNlcjIzMjIyODU3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23222857?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheOnlyMrCat",
                    "html_url": "https://github.com/TheOnlyMrCat",
                    "followers_url": "https://api.github.com/users/TheOnlyMrCat/followers",
                    "following_url": "https://api.github.com/users/TheOnlyMrCat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheOnlyMrCat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheOnlyMrCat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheOnlyMrCat/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheOnlyMrCat/orgs",
                    "repos_url": "https://api.github.com/users/TheOnlyMrCat/repos",
                    "events_url": "https://api.github.com/users/TheOnlyMrCat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheOnlyMrCat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-06-01T10:21:50Z",
                "updated_at": "2023-10-26T13:15:10Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": true,
                "pull_request": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/pulls/2832",
                    "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                    "diff_url": "https://github.com/rust-windowing/winit/pull/2832.diff",
                    "patch_url": "https://github.com/rust-windowing/winit/pull/2832.patch",
                    "merged_at": null
                },
                "body": "- [x] Tested on all platforms changed\r\n- [ ] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n  - Example programs are currently completely broken on wayland, since windows don't display until something is rendered to them. I do have an example I used for testing, but I will have to excise `softbuffer` from it.\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\nLayer shell windows are very different to normal windows, so there is quite a bit of weirdness that results from handling both XDG and Layer shells with the same system. (`let...else` from Rust 1.65 would make the code a lot nicer).\r\n\r\nOn the other hand, it would be nice to have winit's input handling for layer_shell apps.\r\n\r\nFixes #2582\r\n\r\nUnresolved design questions:\r\n- I would imagine `Anchor`, `KeyboardInteractivity`, and `Layer` should be reexported in `winit::platform::wayland`.\r\n- Currently, I have the `closed` event sending a `CloseRequested` event to the event loop. A panic will likely result if the window is attempted to be used after this is received. I am not sure when the compositor would send this event, nor what the library should do in response to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/reactions",
                    "total_count": 10,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 6,
                    "confused": 0,
                    "heart": 4,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781102483",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832#issuecomment-1781102483",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "id": 1781102483,
                "node_id": "IC_kwDOAx7ZgM5qKXeT",
                "user": {
                    "login": "RegenJacob",
                    "id": 53652728,
                    "node_id": "MDQ6VXNlcjUzNjUyNzI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53652728?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RegenJacob",
                    "html_url": "https://github.com/RegenJacob",
                    "followers_url": "https://api.github.com/users/RegenJacob/followers",
                    "following_url": "https://api.github.com/users/RegenJacob/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RegenJacob/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RegenJacob/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RegenJacob/subscriptions",
                    "organizations_url": "https://api.github.com/users/RegenJacob/orgs",
                    "repos_url": "https://api.github.com/users/RegenJacob/repos",
                    "events_url": "https://api.github.com/users/RegenJacob/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RegenJacob/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T13:15:10Z",
                "updated_at": "2023-10-26T13:15:10Z",
                "author_association": "NONE",
                "body": "It would be great to have a helper library that adds some groundwork like raw-window-handle (and maybe an event loop?)",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781102483/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:15:10Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32868943325",
        "type": "ForkEvent",
        "actor": {
            "id": 15831781,
            "login": "crupest",
            "display_login": "crupest",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crupest",
            "avatar_url": "https://avatars.githubusercontent.com/u/15831781?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "forkee": {
                "id": 710318641,
                "node_id": "R_kgDOKlaaMQ",
                "name": "winit",
                "full_name": "crupest/winit",
                "private": false,
                "owner": {
                    "login": "crupest",
                    "id": 15831781,
                    "node_id": "MDQ6VXNlcjE1ODMxNzgx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15831781?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/crupest",
                    "html_url": "https://github.com/crupest",
                    "followers_url": "https://api.github.com/users/crupest/followers",
                    "following_url": "https://api.github.com/users/crupest/following{/other_user}",
                    "gists_url": "https://api.github.com/users/crupest/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/crupest/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/crupest/subscriptions",
                    "organizations_url": "https://api.github.com/users/crupest/orgs",
                    "repos_url": "https://api.github.com/users/crupest/repos",
                    "events_url": "https://api.github.com/users/crupest/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/crupest/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/crupest/winit",
                "description": "Window handling library in pure Rust",
                "fork": true,
                "url": "https://api.github.com/repos/crupest/winit",
                "forks_url": "https://api.github.com/repos/crupest/winit/forks",
                "keys_url": "https://api.github.com/repos/crupest/winit/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/crupest/winit/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/crupest/winit/teams",
                "hooks_url": "https://api.github.com/repos/crupest/winit/hooks",
                "issue_events_url": "https://api.github.com/repos/crupest/winit/issues/events{/number}",
                "events_url": "https://api.github.com/repos/crupest/winit/events",
                "assignees_url": "https://api.github.com/repos/crupest/winit/assignees{/user}",
                "branches_url": "https://api.github.com/repos/crupest/winit/branches{/branch}",
                "tags_url": "https://api.github.com/repos/crupest/winit/tags",
                "blobs_url": "https://api.github.com/repos/crupest/winit/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/crupest/winit/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/crupest/winit/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/crupest/winit/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/crupest/winit/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/crupest/winit/languages",
                "stargazers_url": "https://api.github.com/repos/crupest/winit/stargazers",
                "contributors_url": "https://api.github.com/repos/crupest/winit/contributors",
                "subscribers_url": "https://api.github.com/repos/crupest/winit/subscribers",
                "subscription_url": "https://api.github.com/repos/crupest/winit/subscription",
                "commits_url": "https://api.github.com/repos/crupest/winit/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/crupest/winit/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/crupest/winit/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/crupest/winit/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/crupest/winit/contents/{+path}",
                "compare_url": "https://api.github.com/repos/crupest/winit/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/crupest/winit/merges",
                "archive_url": "https://api.github.com/repos/crupest/winit/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/crupest/winit/downloads",
                "issues_url": "https://api.github.com/repos/crupest/winit/issues{/number}",
                "pulls_url": "https://api.github.com/repos/crupest/winit/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/crupest/winit/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/crupest/winit/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/crupest/winit/labels{/name}",
                "releases_url": "https://api.github.com/repos/crupest/winit/releases{/id}",
                "deployments_url": "https://api.github.com/repos/crupest/winit/deployments",
                "created_at": "2023-10-26T13:09:11Z",
                "updated_at": "2023-10-26T13:09:11Z",
                "pushed_at": "2023-10-25T16:59:40Z",
                "git_url": "git://github.com/crupest/winit.git",
                "ssh_url": "git@github.com:crupest/winit.git",
                "clone_url": "https://github.com/crupest/winit.git",
                "svn_url": "https://github.com/crupest/winit",
                "homepage": "https://docs.rs/winit/",
                "size": 8677,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": {
                    "key": "apache-2.0",
                    "name": "Apache License 2.0",
                    "spdx_id": "Apache-2.0",
                    "url": "https://api.github.com/licenses/apache-2.0",
                    "node_id": "MDc6TGljZW5zZTI="
                },
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:09:16Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32868705290",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 27620401,
            "login": "kchibisov",
            "display_login": "kchibisov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kchibisov",
            "avatar_url": "https://avatars.githubusercontent.com/u/27620401?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/events",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                "id": 1735978473,
                "node_id": "PR_kwDOAx7ZgM5R4jUI",
                "number": 2832,
                "title": "Add support for wlr_layer_shell windows",
                "user": {
                    "login": "TheOnlyMrCat",
                    "id": 23222857,
                    "node_id": "MDQ6VXNlcjIzMjIyODU3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23222857?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheOnlyMrCat",
                    "html_url": "https://github.com/TheOnlyMrCat",
                    "followers_url": "https://api.github.com/users/TheOnlyMrCat/followers",
                    "following_url": "https://api.github.com/users/TheOnlyMrCat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheOnlyMrCat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheOnlyMrCat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheOnlyMrCat/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheOnlyMrCat/orgs",
                    "repos_url": "https://api.github.com/users/TheOnlyMrCat/repos",
                    "events_url": "https://api.github.com/users/TheOnlyMrCat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheOnlyMrCat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-06-01T10:21:50Z",
                "updated_at": "2023-10-26T13:01:59Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": true,
                "pull_request": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/pulls/2832",
                    "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                    "diff_url": "https://github.com/rust-windowing/winit/pull/2832.diff",
                    "patch_url": "https://github.com/rust-windowing/winit/pull/2832.patch",
                    "merged_at": null
                },
                "body": "- [x] Tested on all platforms changed\r\n- [ ] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n  - Example programs are currently completely broken on wayland, since windows don't display until something is rendered to them. I do have an example I used for testing, but I will have to excise `softbuffer` from it.\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\nLayer shell windows are very different to normal windows, so there is quite a bit of weirdness that results from handling both XDG and Layer shells with the same system. (`let...else` from Rust 1.65 would make the code a lot nicer).\r\n\r\nOn the other hand, it would be nice to have winit's input handling for layer_shell apps.\r\n\r\nFixes #2582\r\n\r\nUnresolved design questions:\r\n- I would imagine `Anchor`, `KeyboardInteractivity`, and `Layer` should be reexported in `winit::platform::wayland`.\r\n- Currently, I have the `closed` event sending a `CloseRequested` event to the event loop. A panic will likely result if the window is attempted to be used after this is received. I am not sure when the compositor would send this event, nor what the library should do in response to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/reactions",
                    "total_count": 10,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 6,
                    "confused": 0,
                    "heart": 4,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781079515",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832#issuecomment-1781079515",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "id": 1781079515,
                "node_id": "IC_kwDOAx7ZgM5qKR3b",
                "user": {
                    "login": "kchibisov",
                    "id": 27620401,
                    "node_id": "MDQ6VXNlcjI3NjIwNDAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/27620401?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/kchibisov",
                    "html_url": "https://github.com/kchibisov",
                    "followers_url": "https://api.github.com/users/kchibisov/followers",
                    "following_url": "https://api.github.com/users/kchibisov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/kchibisov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/kchibisov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/kchibisov/subscriptions",
                    "organizations_url": "https://api.github.com/users/kchibisov/orgs",
                    "repos_url": "https://api.github.com/users/kchibisov/repos",
                    "events_url": "https://api.github.com/users/kchibisov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/kchibisov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T13:01:59Z",
                "updated_at": "2023-10-26T13:01:59Z",
                "author_association": "MEMBER",
                "body": "Maybe one day.\r\n\r\nDon't get me wrong, the layer-shell stuff is just very different to normal desktop use. And you can use `sctk` directly already for that. The only application is if you want a cross platform bar, which means X11 and Wayland at the same time. But using sctk directly should be easier anyway, especially given how limited layer-shell is compared to any normal application. ",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781079515/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:02:00Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    },
    {
        "id": "32868534970",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 32438954,
            "login": "Pebor",
            "display_login": "Pebor",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pebor",
            "avatar_url": "https://avatars.githubusercontent.com/u/32438954?"
        },
        "repo": {
            "id": 52353408,
            "name": "rust-windowing/winit",
            "url": "https://api.github.com/repos/rust-windowing/winit"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "repository_url": "https://api.github.com/repos/rust-windowing/winit",
                "labels_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/labels{/name}",
                "comments_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/comments",
                "events_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/events",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                "id": 1735978473,
                "node_id": "PR_kwDOAx7ZgM5R4jUI",
                "number": 2832,
                "title": "Add support for wlr_layer_shell windows",
                "user": {
                    "login": "TheOnlyMrCat",
                    "id": 23222857,
                    "node_id": "MDQ6VXNlcjIzMjIyODU3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23222857?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/TheOnlyMrCat",
                    "html_url": "https://github.com/TheOnlyMrCat",
                    "followers_url": "https://api.github.com/users/TheOnlyMrCat/followers",
                    "following_url": "https://api.github.com/users/TheOnlyMrCat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/TheOnlyMrCat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/TheOnlyMrCat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/TheOnlyMrCat/subscriptions",
                    "organizations_url": "https://api.github.com/users/TheOnlyMrCat/orgs",
                    "repos_url": "https://api.github.com/users/TheOnlyMrCat/repos",
                    "events_url": "https://api.github.com/users/TheOnlyMrCat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/TheOnlyMrCat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 474349960,
                        "node_id": "MDU6TGFiZWw0NzQzNDk5NjA=",
                        "url": "https://api.github.com/repos/rust-windowing/winit/labels/DS%20-%20wayland",
                        "name": "DS - wayland",
                        "color": "FBCA04",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-06-01T10:21:50Z",
                "updated_at": "2023-10-26T12:56:56Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": true,
                "pull_request": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/pulls/2832",
                    "html_url": "https://github.com/rust-windowing/winit/pull/2832",
                    "diff_url": "https://github.com/rust-windowing/winit/pull/2832.diff",
                    "patch_url": "https://github.com/rust-windowing/winit/pull/2832.patch",
                    "merged_at": null
                },
                "body": "- [x] Tested on all platforms changed\r\n- [ ] Added an entry to `CHANGELOG.md` if knowledge of this change could be valuable to users\r\n- [ ] Updated documentation to reflect any user-facing changes, including notes of platform-specific behavior\r\n- [ ] Created or updated an example program if it would help users understand this functionality\r\n  - Example programs are currently completely broken on wayland, since windows don't display until something is rendered to them. I do have an example I used for testing, but I will have to excise `softbuffer` from it.\r\n- [ ] Updated [feature matrix](https://github.com/rust-windowing/winit/blob/master/FEATURES.md), if new features were added or implemented\r\n\r\nLayer shell windows are very different to normal windows, so there is quite a bit of weirdness that results from handling both XDG and Layer shells with the same system. (`let...else` from Rust 1.65 would make the code a lot nicer).\r\n\r\nOn the other hand, it would be nice to have winit's input handling for layer_shell apps.\r\n\r\nFixes #2582\r\n\r\nUnresolved design questions:\r\n- I would imagine `Anchor`, `KeyboardInteractivity`, and `Layer` should be reexported in `winit::platform::wayland`.\r\n- Currently, I have the `closed` event sending a `CloseRequested` event to the event loop. A panic will likely result if the window is attempted to be used after this is received. I am not sure when the compositor would send this event, nor what the library should do in response to it.",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/reactions",
                    "total_count": 10,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 6,
                    "confused": 0,
                    "heart": 4,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781070766",
                "html_url": "https://github.com/rust-windowing/winit/pull/2832#issuecomment-1781070766",
                "issue_url": "https://api.github.com/repos/rust-windowing/winit/issues/2832",
                "id": 1781070766,
                "node_id": "IC_kwDOAx7ZgM5qKPuu",
                "user": {
                    "login": "Pebor",
                    "id": 32438954,
                    "node_id": "MDQ6VXNlcjMyNDM4OTU0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/32438954?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Pebor",
                    "html_url": "https://github.com/Pebor",
                    "followers_url": "https://api.github.com/users/Pebor/followers",
                    "following_url": "https://api.github.com/users/Pebor/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Pebor/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Pebor/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Pebor/subscriptions",
                    "organizations_url": "https://api.github.com/users/Pebor/orgs",
                    "repos_url": "https://api.github.com/users/Pebor/repos",
                    "events_url": "https://api.github.com/users/Pebor/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Pebor/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:56:55Z",
                "updated_at": "2023-10-26T12:56:55Z",
                "author_association": "NONE",
                "body": "Ping :open_hands: \r\nAny update on this? :)",
                "reactions": {
                    "url": "https://api.github.com/repos/rust-windowing/winit/issues/comments/1781070766/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:56:56Z",
        "org": {
            "id": 49372933,
            "login": "rust-windowing",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/rust-windowing",
            "avatar_url": "https://avatars.githubusercontent.com/u/49372933?"
        }
    }
]