[
    {
        "id": "32889946979",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4623701,
            "login": "mrbean-bremen",
            "display_login": "mrbean-bremen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrbean-bremen",
            "avatar_url": "https://avatars.githubusercontent.com/u/4623701?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "repository_url": "https://api.github.com/repos/pydicom/pydicom",
                "labels_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/labels{/name}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/comments",
                "events_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/events",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922",
                "id": 1964807645,
                "node_id": "I_kwDOANW3M851HJXd",
                "number": 1922,
                "title": "Switch FileSet's temporary file names over to using UUIDs",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 63501231,
                        "node_id": "MDU6TGFiZWw2MzUwMTIzMQ==",
                        "url": "https://api.github.com/repos/pydicom/pydicom/labels/bug",
                        "name": "bug",
                        "color": "fc2929",
                        "default": true,
                        "description": null
                    },
                    {
                        "id": 63501233,
                        "node_id": "MDU6TGFiZWw2MzUwMTIzMw==",
                        "url": "https://api.github.com/repos/pydicom/pydicom/labels/enhancement",
                        "name": "enhancement",
                        "color": "84b6eb",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-27T05:44:00Z",
                "updated_at": "2023-10-27T06:38:41Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Currently the `FileSet` instances are written to a temporary folder with their SOP Instance UIDs as the filename. I'm not an expert, but conceivably this may potentially lead to a security issue with malicious values? In any case, I think they should be switched out for a random UUID instead.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782378580",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922#issuecomment-1782378580",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "id": 1782378580,
                "node_id": "IC_kwDOANW3M85qPPBU",
                "user": {
                    "login": "mrbean-bremen",
                    "id": 4623701,
                    "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mrbean-bremen",
                    "html_url": "https://github.com/mrbean-bremen",
                    "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                    "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                    "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                    "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                    "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T06:38:40Z",
                "updated_at": "2023-10-27T06:38:40Z",
                "author_association": "MEMBER",
                "body": "Yeah ok, I guessed that you meant something like that. I'm also not an expert in security related stuff, so...\r\nI think you are right and it makes sense to change this.",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782378580/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:38:41Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32889454099",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "repository_url": "https://api.github.com/repos/pydicom/pydicom",
                "labels_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/labels{/name}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/comments",
                "events_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/events",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922",
                "id": 1964807645,
                "node_id": "I_kwDOANW3M851HJXd",
                "number": 1922,
                "title": "Switch FileSet's temporary file names over to using UUIDs",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 63501233,
                        "node_id": "MDU6TGFiZWw2MzUwMTIzMw==",
                        "url": "https://api.github.com/repos/pydicom/pydicom/labels/enhancement",
                        "name": "enhancement",
                        "color": "84b6eb",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-27T05:44:00Z",
                "updated_at": "2023-10-27T06:11:59Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Currently the `FileSet` instances are written to a temporary folder with their SOP Instance UIDs as the filename. I'm not an expert, but conceivably this may potentially lead to a security issue with malicious values? In any case, I think they should be switched out for a random UUID instead.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782354037",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922#issuecomment-1782354037",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "id": 1782354037,
                "node_id": "IC_kwDOANW3M85qPJB1",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T06:11:59Z",
                "updated_at": "2023-10-27T06:11:59Z",
                "author_association": "MEMBER",
                "body": "```python\r\nfrom pydicom import dcmread\r\nfrom pydicom.data import get_testdata_file\r\nfrom pydicom.fileset import FileSet\r\n\r\nfs = FileSet()\r\nds = dcmread(get_testdata_file(\"CT_small.dcm\")\r\nds.SOPInstanceUID = \"/home/[user]/freeeeee.dcm\"\r\nfs.add(ds)\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782354037/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:12:00Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32889415656",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "repository_url": "https://api.github.com/repos/pydicom/pydicom",
                "labels_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/labels{/name}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/comments",
                "events_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/events",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922",
                "id": 1964807645,
                "node_id": "I_kwDOANW3M851HJXd",
                "number": 1922,
                "title": "Switch FileSet's temporary file names over to using UUIDs",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 63501233,
                        "node_id": "MDU6TGFiZWw2MzUwMTIzMw==",
                        "url": "https://api.github.com/repos/pydicom/pydicom/labels/enhancement",
                        "name": "enhancement",
                        "color": "84b6eb",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T05:44:00Z",
                "updated_at": "2023-10-27T06:09:49Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Currently the `FileSet` instances are written to a temporary folder with their SOP Instance UIDs as the filename. I'm not an expert, but conceivably this may potentially lead to a security issue with malicious values? In any case, I think they should be switched out for a random UUID instead.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782352073",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922#issuecomment-1782352073",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "id": 1782352073,
                "node_id": "IC_kwDOANW3M85qPIjJ",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T06:09:48Z",
                "updated_at": "2023-10-27T06:09:48Z",
                "author_association": "MEMBER",
                "body": "Keep in mind I have very little knowledge of this, but you can do:\r\n1. Set the SOP Instance UID maliciously (`ds.SOPInstanceUID = \"/home/user/test.dcm\"`)\r\n2. ???\r\n3. Profit - in my case, when I call `FileSet.write()` I get the `test.dcm` file escaping the temporary directory and writing itself to my home directory.\r\n\r\nWhen pydicom is setting the filenames, this is mitigated.",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782352073/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:09:49Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32889108882",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4623701,
            "login": "mrbean-bremen",
            "display_login": "mrbean-bremen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrbean-bremen",
            "avatar_url": "https://avatars.githubusercontent.com/u/4623701?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "repository_url": "https://api.github.com/repos/pydicom/pydicom",
                "labels_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/labels{/name}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/comments",
                "events_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/events",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922",
                "id": 1964807645,
                "node_id": "I_kwDOANW3M851HJXd",
                "number": 1922,
                "title": "Switch FileSet's temporary file names over to using UUIDs",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 63501233,
                        "node_id": "MDU6TGFiZWw2MzUwMTIzMw==",
                        "url": "https://api.github.com/repos/pydicom/pydicom/labels/enhancement",
                        "name": "enhancement",
                        "color": "84b6eb",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T05:44:00Z",
                "updated_at": "2023-10-27T05:51:02Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Currently the `FileSet` instances are written to a temporary folder with their SOP Instance UIDs as the filename. I'm not an expert, but conceivably this may potentially lead to a security issue with malicious values? In any case, I think they should be switched out for a random UUID instead.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782335831",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922#issuecomment-1782335831",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "id": 1782335831,
                "node_id": "IC_kwDOANW3M85qPElX",
                "user": {
                    "login": "mrbean-bremen",
                    "id": 4623701,
                    "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mrbean-bremen",
                    "html_url": "https://github.com/mrbean-bremen",
                    "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                    "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                    "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                    "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                    "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T05:51:02Z",
                "updated_at": "2023-10-27T05:51:02Z",
                "author_association": "MEMBER",
                "body": "Hm, how are SOP Instance UIDs in practice different from UUIDs? I may not understand the problem... do you think somebody will write a file path in the UID so the file will be saved in a sensible location, or something like that?",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782335831/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T05:51:02Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32889003055",
        "type": "IssuesEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922",
                "repository_url": "https://api.github.com/repos/pydicom/pydicom",
                "labels_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/labels{/name}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/comments",
                "events_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/events",
                "html_url": "https://github.com/pydicom/pydicom/issues/1922",
                "id": 1964807645,
                "node_id": "I_kwDOANW3M851HJXd",
                "number": 1922,
                "title": "Switch FileSet's temporary file names over to using UUIDs",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 63501233,
                        "node_id": "MDU6TGFiZWw2MzUwMTIzMw==",
                        "url": "https://api.github.com/repos/pydicom/pydicom/labels/enhancement",
                        "name": "enhancement",
                        "color": "84b6eb",
                        "default": true,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T05:44:00Z",
                "updated_at": "2023-10-27T05:44:00Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Currently the `FileSet` instances are written to a temporary folder with their SOP Instance UIDs as the filename. I'm not an expert, but conceivably this may potentially lead to a security issue with malicious values? In any case, I think they should be switched out for a random UUID instead.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pydicom/pydicom/issues/1922/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T05:44:01Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32884616127",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373940038",
                "pull_request_review_id": 1700810380,
                "id": 1373940038,
                "node_id": "PRRC_kwDOANW3M85R5KlG",
                "diff_hunk": "@@ -245,7 +244,7 @@ You can create a new File-set by creating a new\n \n This will create a completely conformant File-set, however it won't contain\n any SOP instances. Since empty File-sets aren't very useful, our next step\n-will be to add some.\n+will be to add some SOP instances to it.",
                "path": "doc/tutorials/filesets.rst",
                "commit_id": "ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                "original_commit_id": "ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "This sentence has been bugging me since it got merged",
                "created_at": "2023-10-27T00:04:17Z",
                "updated_at": "2023-10-27T00:04:17Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921#discussion_r1373940038",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373940038"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1921#discussion_r1373940038"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373940038/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 247,
                "original_line": 247,
                "side": "RIGHT",
                "original_position": 26,
                "position": 26,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921",
                "id": 1575728952,
                "node_id": "PR_kwDOANW3M85d67c4",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1921.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1921.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921",
                "number": 1921,
                "state": "open",
                "locked": false,
                "title": "[WIP] Add examples module",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "#### Describe the changes\r\nRelated to #1918, \r\n\r\n* Add an `examples` module which returns selected datasets\r\n* Updates to the documentation to use the examples module where appropriate\r\n* Test coverage for the examples module\r\n\r\n#### Tasks\r\n- [x] Unit tests added that reproduce the issue or prove feature is working\r\n- [x] Fix or feature added\r\n- [x] Code typed and mypy shows no errors\r\n- [x] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-26T23:49:08Z",
                "updated_at": "2023-10-27T00:04:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "41077266edec003bb989de6e7e0236dbec0253e6",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                "head": {
                    "label": "scaramallion:dev-examples",
                    "ref": "dev-examples",
                    "sha": "ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                    "user": {
                        "login": "scaramallion",
                        "id": 10226372,
                        "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/scaramallion",
                        "html_url": "https://github.com/scaramallion",
                        "followers_url": "https://api.github.com/users/scaramallion/followers",
                        "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                        "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                        "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                        "repos_url": "https://api.github.com/users/scaramallion/repos",
                        "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 35849487,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTg0OTQ4Nw==",
                        "name": "pydicom",
                        "full_name": "scaramallion/pydicom",
                        "private": false,
                        "owner": {
                            "login": "scaramallion",
                            "id": 10226372,
                            "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/scaramallion",
                            "html_url": "https://github.com/scaramallion",
                            "followers_url": "https://api.github.com/users/scaramallion/followers",
                            "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                            "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                            "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                            "repos_url": "https://api.github.com/users/scaramallion/repos",
                            "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/scaramallion/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/scaramallion/pydicom",
                        "forks_url": "https://api.github.com/repos/scaramallion/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/scaramallion/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/scaramallion/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/scaramallion/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/scaramallion/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/scaramallion/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/scaramallion/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/scaramallion/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/scaramallion/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/scaramallion/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/scaramallion/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/scaramallion/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/scaramallion/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/scaramallion/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/scaramallion/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/scaramallion/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/scaramallion/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/scaramallion/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/scaramallion/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/scaramallion/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/scaramallion/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/scaramallion/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/scaramallion/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/scaramallion/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/scaramallion/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/scaramallion/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/scaramallion/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/scaramallion/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/scaramallion/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/scaramallion/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/scaramallion/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/scaramallion/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/scaramallion/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/scaramallion/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/scaramallion/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/scaramallion/pydicom/deployments",
                        "created_at": "2015-05-19T00:18:20Z",
                        "updated_at": "2022-01-13T16:44:55Z",
                        "pushed_at": "2023-10-26T23:48:49Z",
                        "git_url": "git://github.com/scaramallion/pydicom.git",
                        "ssh_url": "git@github.com:scaramallion/pydicom.git",
                        "clone_url": "https://github.com/scaramallion/pydicom.git",
                        "svn_url": "https://github.com/scaramallion/pydicom",
                        "homepage": null,
                        "size": 46481,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T23:49:08Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 62,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 62,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1921"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1921"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:04:17Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32884616113",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700810380,
                "node_id": "PRR_kwDOANW3M85lYE6M",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                "submitted_at": "2023-10-27T00:04:17Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921#pullrequestreview-1700810380",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1921#pullrequestreview-1700810380"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921",
                "id": 1575728952,
                "node_id": "PR_kwDOANW3M85d67c4",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1921.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1921.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921",
                "number": 1921,
                "state": "open",
                "locked": false,
                "title": "[WIP] Add examples module",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "#### Describe the changes\r\nRelated to #1918, \r\n\r\n* Add an `examples` module which returns selected datasets\r\n* Updates to the documentation to use the examples module where appropriate\r\n* Test coverage for the examples module\r\n\r\n#### Tasks\r\n- [x] Unit tests added that reproduce the issue or prove feature is working\r\n- [x] Fix or feature added\r\n- [x] Code typed and mypy shows no errors\r\n- [x] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-26T23:49:08Z",
                "updated_at": "2023-10-27T00:04:17Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "41077266edec003bb989de6e7e0236dbec0253e6",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                "head": {
                    "label": "scaramallion:dev-examples",
                    "ref": "dev-examples",
                    "sha": "ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                    "user": {
                        "login": "scaramallion",
                        "id": 10226372,
                        "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/scaramallion",
                        "html_url": "https://github.com/scaramallion",
                        "followers_url": "https://api.github.com/users/scaramallion/followers",
                        "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                        "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                        "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                        "repos_url": "https://api.github.com/users/scaramallion/repos",
                        "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 35849487,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTg0OTQ4Nw==",
                        "name": "pydicom",
                        "full_name": "scaramallion/pydicom",
                        "private": false,
                        "owner": {
                            "login": "scaramallion",
                            "id": 10226372,
                            "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/scaramallion",
                            "html_url": "https://github.com/scaramallion",
                            "followers_url": "https://api.github.com/users/scaramallion/followers",
                            "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                            "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                            "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                            "repos_url": "https://api.github.com/users/scaramallion/repos",
                            "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/scaramallion/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/scaramallion/pydicom",
                        "forks_url": "https://api.github.com/repos/scaramallion/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/scaramallion/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/scaramallion/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/scaramallion/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/scaramallion/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/scaramallion/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/scaramallion/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/scaramallion/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/scaramallion/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/scaramallion/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/scaramallion/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/scaramallion/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/scaramallion/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/scaramallion/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/scaramallion/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/scaramallion/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/scaramallion/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/scaramallion/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/scaramallion/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/scaramallion/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/scaramallion/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/scaramallion/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/scaramallion/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/scaramallion/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/scaramallion/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/scaramallion/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/scaramallion/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/scaramallion/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/scaramallion/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/scaramallion/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/scaramallion/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/scaramallion/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/scaramallion/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/scaramallion/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/scaramallion/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/scaramallion/pydicom/deployments",
                        "created_at": "2015-05-19T00:18:20Z",
                        "updated_at": "2022-01-13T16:44:55Z",
                        "pushed_at": "2023-10-26T23:48:49Z",
                        "git_url": "git://github.com/scaramallion/pydicom.git",
                        "ssh_url": "git@github.com:scaramallion/pydicom.git",
                        "clone_url": "https://github.com/scaramallion/pydicom.git",
                        "svn_url": "https://github.com/scaramallion/pydicom",
                        "homepage": null,
                        "size": 46481,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T23:49:08Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 62,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 62,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1921"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1921"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:04:18Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32884492100",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 22429695,
            "login": "codecov[bot]",
            "display_login": "codecov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codecov[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/22429695?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/1921",
                "repository_url": "https://api.github.com/repos/pydicom/pydicom",
                "labels_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/labels{/name}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments",
                "events_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/events",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921",
                "id": 1964533306,
                "node_id": "PR_kwDOANW3M85d67c4",
                "number": 1921,
                "title": "[WIP] Add examples module",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-26T23:49:08Z",
                "updated_at": "2023-10-26T23:54:21Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921",
                    "html_url": "https://github.com/pydicom/pydicom/pull/1921",
                    "diff_url": "https://github.com/pydicom/pydicom/pull/1921.diff",
                    "patch_url": "https://github.com/pydicom/pydicom/pull/1921.patch",
                    "merged_at": null
                },
                "body": "#### Describe the changes\r\nRelated to #1918, \r\n\r\n* Add an `examples` module which returns selected datasets\r\n* Updates to the documentation to use the examples module where appropriate\r\n* Test coverage for the examples module\r\n\r\n#### Tasks\r\n- [x] Unit tests added that reproduce the issue or prove feature is working\r\n- [x] Fix or feature added\r\n- [x] Code typed and mypy shows no errors\r\n- [x] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782086465",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921#issuecomment-1782086465",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921",
                "id": 1782086465,
                "node_id": "IC_kwDOANW3M85qOHtB",
                "user": {
                    "login": "codecov[bot]",
                    "id": 22429695,
                    "node_id": "MDM6Qm90MjI0Mjk2OTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/254?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/codecov%5Bbot%5D",
                    "html_url": "https://github.com/apps/codecov",
                    "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-26T23:54:20Z",
                "updated_at": "2023-10-26T23:54:20Z",
                "author_association": "NONE",
                "body": "## [Codecov](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom) Report\n> Merging [#1921](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom) (ea8b5e7) into [main](https://app.codecov.io/gh/pydicom/pydicom/commit/4a5d000d64f859f0fd1f46829d39e453c303a6a0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom) (4a5d000) will **increase** coverage by `0.00%`.\n> Report is 1 commits behind head on main.\n> The diff coverage is `100.00%`.\n\n```diff\n@@           Coverage Diff           @@\n##             main    #1921   +/-   ##\n=======================================\n  Coverage   97.75%   97.75%           \n=======================================\n  Files          62       63    +1     \n  Lines       10716    10725    +9     \n=======================================\n+ Hits        10475    10484    +9     \n  Misses        241      241           \n```\n\n\n| [Files](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom) | Coverage \u0394 | |\n|---|---|---|\n| [src/pydicom/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom#diff-c3JjL3B5ZGljb20vX19pbml0X18ucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [src/pydicom/dataset.py](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom#diff-c3JjL3B5ZGljb20vZGF0YXNldC5weQ==) | `99.22% <\u00f8> (\u00f8)` | |\n| [src/pydicom/examples/\\_\\_init\\_\\_.py](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom#diff-c3JjL3B5ZGljb20vZXhhbXBsZXMvX19pbml0X18ucHk=) | `100.00% <100.00%> (\u00f8)` | |\n| [src/pydicom/fileset.py](https://app.codecov.io/gh/pydicom/pydicom/pull/1921?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom#diff-c3JjL3B5ZGljb20vZmlsZXNldC5weQ==) | `100.00% <\u00f8> (\u00f8)` | |\n\n:mega: We\u2019re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=pydicom)\n",
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/issues/comments/1782086465/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:54:21Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32884431598",
        "type": "PullRequestEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "opened",
            "number": 1921,
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921",
                "id": 1575728952,
                "node_id": "PR_kwDOANW3M85d67c4",
                "html_url": "https://github.com/pydicom/pydicom/pull/1921",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1921.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1921.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921",
                "number": 1921,
                "state": "open",
                "locked": false,
                "title": "[WIP] Add examples module",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "#### Describe the changes\r\nRelated to #1918, \r\n\r\n* Add an `examples` module which returns selected datasets\r\n* Updates to the documentation to use the examples module where appropriate\r\n* Test coverage for the examples module\r\n\r\n#### Tasks\r\n- [x] Unit tests added that reproduce the issue or prove feature is working\r\n- [x] Fix or feature added\r\n- [x] Code typed and mypy shows no errors\r\n- [x] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-26T23:49:08Z",
                "updated_at": "2023-10-26T23:49:08Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                "head": {
                    "label": "scaramallion:dev-examples",
                    "ref": "dev-examples",
                    "sha": "ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f",
                    "user": {
                        "login": "scaramallion",
                        "id": 10226372,
                        "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/scaramallion",
                        "html_url": "https://github.com/scaramallion",
                        "followers_url": "https://api.github.com/users/scaramallion/followers",
                        "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                        "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                        "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                        "repos_url": "https://api.github.com/users/scaramallion/repos",
                        "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 35849487,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTg0OTQ4Nw==",
                        "name": "pydicom",
                        "full_name": "scaramallion/pydicom",
                        "private": false,
                        "owner": {
                            "login": "scaramallion",
                            "id": 10226372,
                            "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/scaramallion",
                            "html_url": "https://github.com/scaramallion",
                            "followers_url": "https://api.github.com/users/scaramallion/followers",
                            "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                            "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                            "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                            "repos_url": "https://api.github.com/users/scaramallion/repos",
                            "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/scaramallion/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/scaramallion/pydicom",
                        "forks_url": "https://api.github.com/repos/scaramallion/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/scaramallion/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/scaramallion/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/scaramallion/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/scaramallion/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/scaramallion/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/scaramallion/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/scaramallion/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/scaramallion/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/scaramallion/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/scaramallion/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/scaramallion/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/scaramallion/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/scaramallion/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/scaramallion/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/scaramallion/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/scaramallion/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/scaramallion/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/scaramallion/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/scaramallion/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/scaramallion/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/scaramallion/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/scaramallion/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/scaramallion/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/scaramallion/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/scaramallion/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/scaramallion/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/scaramallion/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/scaramallion/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/scaramallion/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/scaramallion/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/scaramallion/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/scaramallion/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/scaramallion/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/scaramallion/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/scaramallion/pydicom/deployments",
                        "created_at": "2015-05-19T00:18:20Z",
                        "updated_at": "2022-01-13T16:44:55Z",
                        "pushed_at": "2023-10-26T23:48:49Z",
                        "git_url": "git://github.com/scaramallion/pydicom.git",
                        "ssh_url": "git@github.com:scaramallion/pydicom.git",
                        "clone_url": "https://github.com/scaramallion/pydicom.git",
                        "svn_url": "https://github.com/scaramallion/pydicom",
                        "homepage": null,
                        "size": 46481,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T23:49:08Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 62,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 62,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1921"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1921"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1921/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1921/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/ea8b5e7aa64ca02914ca34f3af85ebd15e5aed1f"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 3,
                "additions": 251,
                "deletions": 170,
                "changed_files": 25
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:49:09Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883585811",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373893507",
                "pull_request_review_id": 1700745126,
                "id": 1373893507,
                "node_id": "PRRC_kwDOANW3M85R4_OD",
                "diff_hunk": "@@ -303,14 +303,48 @@ def write_numbers(fp: DicomIO, elem: DataElement, struct_format: str) -> None:\n         raise OSError(f\"{str(e)}\\nfor data_element:\\n{str(elem)}\")\n \n \n+def _check_encaps_pixel_data(fp: DicomIO, value: bytes):\n+    # valid pixel data with undefined length shall contain encapsulated\n+    # data, e.g. sequence items - raise ValueError otherwise (see #238)\n+\n+    encap_item = b\"\\xfe\\xff\\x00\\xe0\"\n+    if not fp.is_little_endian:\n+        # Non-conformant endianness\n+        encap_item = b\"\\xff\\xfe\\xe0\\x00\"\n+    if not value.startswith(encap_item):\n+        raise ValueError(\n+            \"(7FE0,0010) Pixel Data has an undefined length indicating \"\n+            \"that it's compressed, but the data isn't encapsulated as \"\n+            \"required. See pydicom.encaps.encapsulate() for more \"\n+            \"information\"\n+        )\n+\n+\n def write_OBvalue(fp: DicomIO, elem: DataElement) -> None:\n     \"\"\"Write a data_element with VR of 'other byte' (OB).\"\"\"\n-    if len(elem.value) % 2:\n-        # Pad odd length values\n-        fp.write(cast(bytes, elem.value))\n-        fp.write(b\"\\x00\")\n+    value_length = 0\n+    encaps_bytes: bytes = b\"\"\n+    if elem.is_buffered:\n+        # stream data instead of reading the whole value at once\n+        for chunk in elem.value_generator():\n+            # need to store the first few bytes to check if the pixel data\n+            # is encapsulated or not\n+            if not encaps_bytes:\n+                encaps_bytes = chunk[0:4]\n+\n+            fp.write(chunk)\n+\n+        value_length = elem.bytes_read_from_buffer\n     else:\n         fp.write(cast(bytes, elem.value))\n+        value_length = len(elem.value)\n+\n+    if value_length % 2:\n+        # Pad odd length values\n+        fp.write(b\"\\x00\")\n+\n+    if elem.is_undefined_length and elem.tag == 0x7FE00010:\n+        _check_encaps_pixel_data(fp, cast(bytes, elem.value))",
                "path": "src/pydicom/filewriter.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Hmm, have I misunderstood or is the OW element buffer writing missing?",
                "created_at": "2023-10-26T22:43:40Z",
                "updated_at": "2023-10-26T22:43:40Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373893507",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373893507"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373893507"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373893507/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 346,
                "original_start_line": 346,
                "start_side": "RIGHT",
                "line": 347,
                "original_line": 347,
                "side": "RIGHT",
                "in_reply_to_id": 1373880123,
                "original_position": 49,
                "position": 49,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:43:40Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:43:40Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883585754",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700745126,
                "node_id": "PRR_kwDOANW3M85lX0-m",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T22:43:40Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700745126",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700745126"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:43:40Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:43:40Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883571135",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373892959",
                "pull_request_review_id": 1700744233,
                "id": 1373892959,
                "node_id": "PRRC_kwDOANW3M85R4_Ff",
                "diff_hunk": "@@ -571,25 +605,12 @@ def write_data_element(\n                 # numeric format parameter\n                 if param is not None:\n                     fn(buffer, elem, param)  # type: ignore[operator]\n-                else:\n+                elif not elem.is_buffered:\n+                    # defer writing from the buffer until we write the rest of the required\n+                    # elements",
                "path": "src/pydicom/filewriter.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Is this missing code to write when an OW element is buffered?",
                "created_at": "2023-10-26T22:42:37Z",
                "updated_at": "2023-10-26T22:42:37Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373892959",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373892959"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373892959"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373892959/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 608,
                "original_start_line": 608,
                "start_side": "RIGHT",
                "line": 610,
                "original_line": 610,
                "side": "RIGHT",
                "original_position": 60,
                "position": 60,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:42:37Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:42:37Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883571105",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700744233,
                "node_id": "PRR_kwDOANW3M85lX0wp",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T22:42:37Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700744233",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700744233"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:42:37Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:42:38Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883453370",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373886730",
                "pull_request_review_id": 1700736229,
                "id": 1373886730,
                "node_id": "PRRC_kwDOANW3M85R49kK",
                "diff_hunk": "@@ -208,13 +211,27 @@ def __init__(\n             tag = Tag(tag)\n         self.tag = tag\n \n+        # check if the value is a buffer. If so, we can't check the length or access\n+        # the value directly\n+        is_buffered = False\n+        if isinstance(value, BufferedIOBase):\n+            is_buffered = True\n+            valid_vrs = (VR_.OB, VR_.OB_OW, VR_.OW)",
                "path": "src/pydicom/dataelem.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I think it'd be good to support OD and OF as well for *Float Pixel Data* and *Double Float Pixel Data*.\r\n\r\nPossibly the other O* VRs?",
                "created_at": "2023-10-26T22:34:23Z",
                "updated_at": "2023-10-26T22:34:23Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373886730",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373886730"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373886730"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373886730/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 219,
                "original_line": 219,
                "side": "RIGHT",
                "in_reply_to_id": 1373849284,
                "original_position": 29,
                "position": 29,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:34:23Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:34:23Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883453337",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700736229,
                "node_id": "PRR_kwDOANW3M85lXyzl",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T22:34:23Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700736229",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700736229"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:34:23Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:34:23Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883387776",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700732746,
                "node_id": "PRR_kwDOANW3M85lXx9K",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T22:30:06Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700732746",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700732746"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:30:06Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:30:07Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883387816",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373883860",
                "pull_request_review_id": 1700732746,
                "id": 1373883860,
                "node_id": "PRRC_kwDOANW3M85R483U",
                "diff_hunk": "@@ -303,14 +303,48 @@ def write_numbers(fp: DicomIO, elem: DataElement, struct_format: str) -> None:\n         raise OSError(f\"{str(e)}\\nfor data_element:\\n{str(elem)}\")\n \n \n+def _check_encaps_pixel_data(fp: DicomIO, value: bytes):\n+    # valid pixel data with undefined length shall contain encapsulated\n+    # data, e.g. sequence items - raise ValueError otherwise (see #238)\n+\n+    encap_item = b\"\\xfe\\xff\\x00\\xe0\"\n+    if not fp.is_little_endian:\n+        # Non-conformant endianness\n+        encap_item = b\"\\xff\\xfe\\xe0\\x00\"\n+    if not value.startswith(encap_item):\n+        raise ValueError(\n+            \"(7FE0,0010) Pixel Data has an undefined length indicating \"\n+            \"that it's compressed, but the data isn't encapsulated as \"\n+            \"required. See pydicom.encaps.encapsulate() for more \"\n+            \"information\"\n+        )\n+\n+\n def write_OBvalue(fp: DicomIO, elem: DataElement) -> None:\n     \"\"\"Write a data_element with VR of 'other byte' (OB).\"\"\"\n-    if len(elem.value) % 2:\n-        # Pad odd length values\n-        fp.write(cast(bytes, elem.value))\n-        fp.write(b\"\\x00\")\n+    value_length = 0\n+    encaps_bytes: bytes = b\"\"\n+    if elem.is_buffered:\n+        # stream data instead of reading the whole value at once\n+        for chunk in elem.value_generator():\n+            # need to store the first few bytes to check if the pixel data\n+            # is encapsulated or not\n+            if not encaps_bytes:\n+                encaps_bytes = chunk[0:4]\n+\n+            fp.write(chunk)\n+\n+        value_length = elem.bytes_read_from_buffer\n     else:\n         fp.write(cast(bytes, elem.value))\n+        value_length = len(elem.value)\n+\n+    if value_length % 2:\n+        # Pad odd length values\n+        fp.write(b\"\\x00\")\n+\n+    if elem.is_undefined_length and elem.tag == 0x7FE00010:\n+        _check_encaps_pixel_data(fp, cast(bytes, elem.value))",
                "path": "src/pydicom/filewriter.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Also, am I wrong in thinking that you're only writing OB buffer? Wouldn't you also want to write an OW buffer if you want to work with *Pixel Data*?",
                "created_at": "2023-10-26T22:30:06Z",
                "updated_at": "2023-10-26T22:30:06Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373883860",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373883860"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373883860"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373883860/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 346,
                "original_start_line": 346,
                "start_side": "RIGHT",
                "line": 347,
                "original_line": 347,
                "side": "RIGHT",
                "in_reply_to_id": 1373880123,
                "original_position": 49,
                "position": 49,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:30:06Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:30:06Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883314613",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373880123",
                "pull_request_review_id": 1700728259,
                "id": 1373880123,
                "node_id": "PRRC_kwDOANW3M85R4787",
                "diff_hunk": "@@ -303,14 +303,48 @@ def write_numbers(fp: DicomIO, elem: DataElement, struct_format: str) -> None:\n         raise OSError(f\"{str(e)}\\nfor data_element:\\n{str(elem)}\")\n \n \n+def _check_encaps_pixel_data(fp: DicomIO, value: bytes):\n+    # valid pixel data with undefined length shall contain encapsulated\n+    # data, e.g. sequence items - raise ValueError otherwise (see #238)\n+\n+    encap_item = b\"\\xfe\\xff\\x00\\xe0\"\n+    if not fp.is_little_endian:\n+        # Non-conformant endianness\n+        encap_item = b\"\\xff\\xfe\\xe0\\x00\"\n+    if not value.startswith(encap_item):\n+        raise ValueError(\n+            \"(7FE0,0010) Pixel Data has an undefined length indicating \"\n+            \"that it's compressed, but the data isn't encapsulated as \"\n+            \"required. See pydicom.encaps.encapsulate() for more \"\n+            \"information\"\n+        )\n+\n+\n def write_OBvalue(fp: DicomIO, elem: DataElement) -> None:\n     \"\"\"Write a data_element with VR of 'other byte' (OB).\"\"\"\n-    if len(elem.value) % 2:\n-        # Pad odd length values\n-        fp.write(cast(bytes, elem.value))\n-        fp.write(b\"\\x00\")\n+    value_length = 0\n+    encaps_bytes: bytes = b\"\"\n+    if elem.is_buffered:\n+        # stream data instead of reading the whole value at once\n+        for chunk in elem.value_generator():\n+            # need to store the first few bytes to check if the pixel data\n+            # is encapsulated or not\n+            if not encaps_bytes:\n+                encaps_bytes = chunk[0:4]\n+\n+            fp.write(chunk)\n+\n+        value_length = elem.bytes_read_from_buffer\n     else:\n         fp.write(cast(bytes, elem.value))\n+        value_length = len(elem.value)\n+\n+    if value_length % 2:\n+        # Pad odd length values\n+        fp.write(b\"\\x00\")\n+\n+    if elem.is_undefined_length and elem.tag == 0x7FE00010:\n+        _check_encaps_pixel_data(fp, cast(bytes, elem.value))",
                "path": "src/pydicom/filewriter.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I'm not sure if I like this being under `write_OB`, seems like something that only needs to be checked once per dataset, not on every OB element.\r\n\r\nShouldn't it also run when writing OW?",
                "created_at": "2023-10-26T22:25:26Z",
                "updated_at": "2023-10-26T22:25:27Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373880123",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373880123"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373880123"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373880123/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 346,
                "original_start_line": 346,
                "start_side": "RIGHT",
                "line": 347,
                "original_line": 347,
                "side": "RIGHT",
                "original_position": 49,
                "position": 49,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:25:27Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:25:26Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32883314597",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700728259,
                "node_id": "PRR_kwDOANW3M85lXw3D",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T22:25:27Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700728259",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700728259"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:25:27Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:25:27Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882899951",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373860417",
                "pull_request_review_id": 1700704467,
                "id": 1373860417,
                "node_id": "PRRC_kwDOANW3M85R43JB",
                "diff_hunk": "@@ -441,6 +461,16 @@ def value(self, val: Any) -> None:\n         # * Which str-like VRs can have backslashes in Part 5, Section 6.2\n         # * All byte-like VRs\n         # * Ambiguous VRs that may be byte-like\n+        if isinstance(val, BufferedIOBase):\n+            valid_vrs = (VR_.OB, VR_.OB_OW, VR_.OW)",
                "path": "src/pydicom/dataelem.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Same as above",
                "created_at": "2023-10-26T22:01:33Z",
                "updated_at": "2023-10-26T22:01:33Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373860417",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373860417"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373860417"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373860417/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 465,
                "original_line": 465,
                "side": "RIGHT",
                "original_position": 76,
                "position": 76,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:01:33Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:01:33Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882899890",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700704467,
                "node_id": "PRR_kwDOANW3M85lXrDT",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T22:01:33Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700704467",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700704467"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T22:01:33Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:01:34Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882849649",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700701776,
                "node_id": "PRR_kwDOANW3M85lXqZQ",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T21:58:37Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700701776",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700701776"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T21:58:37Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:58:38Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882849688",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373858227",
                "pull_request_review_id": 1700701776,
                "id": 1373858227,
                "node_id": "PRRC_kwDOANW3M85R42mz",
                "diff_hunk": "@@ -208,13 +211,27 @@ def __init__(\n             tag = Tag(tag)\n         self.tag = tag\n \n+        # check if the value is a buffer. If so, we can't check the length or access\n+        # the value directly\n+        is_buffered = False\n+        if isinstance(value, BufferedIOBase):\n+            is_buffered = True\n+            valid_vrs = (VR_.OB, VR_.OB_OW, VR_.OW)",
                "path": "src/pydicom/dataelem.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Maybe consider `BYTE_VRS - VR.UN` instead?",
                "created_at": "2023-10-26T21:58:37Z",
                "updated_at": "2023-10-26T21:58:37Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373858227",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373858227"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373858227"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373858227/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 219,
                "original_line": 219,
                "side": "RIGHT",
                "in_reply_to_id": 1373849284,
                "original_position": 29,
                "position": 29,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T21:58:37Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:58:37Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882652198",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373849284",
                "pull_request_review_id": 1700690370,
                "id": 1373849284,
                "node_id": "PRRC_kwDOANW3M85R40bE",
                "diff_hunk": "@@ -208,13 +211,27 @@ def __init__(\n             tag = Tag(tag)\n         self.tag = tag\n \n+        # check if the value is a buffer. If so, we can't check the length or access\n+        # the value directly\n+        is_buffered = False\n+        if isinstance(value, BufferedIOBase):\n+            is_buffered = True\n+            valid_vrs = (VR_.OB, VR_.OB_OW, VR_.OW)",
                "path": "src/pydicom/dataelem.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Can you add this as a set in valuerep instead? We try and keep all the VR stuff together to make maintenance easier when new VRs are added",
                "created_at": "2023-10-26T21:46:45Z",
                "updated_at": "2023-10-26T21:46:46Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373849284",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373849284"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373849284"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373849284/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 219,
                "original_line": 219,
                "side": "RIGHT",
                "original_position": 29,
                "position": 29,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T21:46:45Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:46:45Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882652143",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700690370,
                "node_id": "PRR_kwDOANW3M85lXnnC",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T21:46:45Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700690370",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700690370"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T21:46:45Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:46:46Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32882615197",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 10226372,
            "login": "scaramallion",
            "display_login": "scaramallion",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scaramallion",
            "avatar_url": "https://avatars.githubusercontent.com/u/10226372?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700688204,
                "node_id": "PRR_kwDOANW3M85lXnFM",
                "user": {
                    "login": "scaramallion",
                    "id": 10226372,
                    "node_id": "MDQ6VXNlcjEwMjI2Mzcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/10226372?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/scaramallion",
                    "html_url": "https://github.com/scaramallion",
                    "followers_url": "https://api.github.com/users/scaramallion/followers",
                    "following_url": "https://api.github.com/users/scaramallion/following{/other_user}",
                    "gists_url": "https://api.github.com/users/scaramallion/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/scaramallion/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/scaramallion/subscriptions",
                    "organizations_url": "https://api.github.com/users/scaramallion/orgs",
                    "repos_url": "https://api.github.com/users/scaramallion/repos",
                    "events_url": "https://api.github.com/users/scaramallion/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/scaramallion/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "",
                "commit_id": "9363629bc1bc58101be5b7745b92a7056d570cc6",
                "submitted_at": "2023-10-26T21:44:31Z",
                "state": "approved",
                "html_url": "https://github.com/pydicom/pydicom/pull/1920#pullrequestreview-1700688204",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1920",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1920#pullrequestreview-1700688204"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1920"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1920",
                "id": 1573477236,
                "node_id": "PR_kwDOANW3M85dyVt0",
                "html_url": "https://github.com/pydicom/pydicom/pull/1920",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1920.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1920.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1920",
                "number": 1920,
                "state": "open",
                "locked": false,
                "title": "[MRG] Raise ValueError if get_testdata_file is called with absolute path",
                "user": {
                    "login": "mrbean-bremen",
                    "id": 4623701,
                    "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mrbean-bremen",
                    "html_url": "https://github.com/mrbean-bremen",
                    "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                    "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                    "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                    "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                    "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "- same for get_testdata_file called with absolute file pattern\r\n\r\nAs discussed in #1918 \r\n\r\n#### Tasks\r\n- [x] Unit tests added that reproduce the issue or prove feature is working\r\n- [x] Fix or feature added\r\n- [x] Code typed and mypy shows no errors\r\n- [x] Documentation updated (if relevant)\r\n  - [x] No warnings during build\r\n  - [x] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [x] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T18:49:10Z",
                "updated_at": "2023-10-26T21:44:32Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "78b102cc5c85600e282d9b649f91763bcbadd548",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1920/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1920/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1920/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/9363629bc1bc58101be5b7745b92a7056d570cc6",
                "head": {
                    "label": "mrbean-bremen:error-msg",
                    "ref": "error-msg",
                    "sha": "9363629bc1bc58101be5b7745b92a7056d570cc6",
                    "user": {
                        "login": "mrbean-bremen",
                        "id": 4623701,
                        "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mrbean-bremen",
                        "html_url": "https://github.com/mrbean-bremen",
                        "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                        "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                        "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                        "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                        "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 65673081,
                        "node_id": "MDEwOlJlcG9zaXRvcnk2NTY3MzA4MQ==",
                        "name": "pydicom",
                        "full_name": "mrbean-bremen/pydicom",
                        "private": false,
                        "owner": {
                            "login": "mrbean-bremen",
                            "id": 4623701,
                            "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mrbean-bremen",
                            "html_url": "https://github.com/mrbean-bremen",
                            "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                            "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                            "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                            "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                            "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mrbean-bremen/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/mrbean-bremen/pydicom",
                        "forks_url": "https://api.github.com/repos/mrbean-bremen/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/mrbean-bremen/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mrbean-bremen/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mrbean-bremen/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/mrbean-bremen/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/mrbean-bremen/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mrbean-bremen/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/mrbean-bremen/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mrbean-bremen/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mrbean-bremen/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/mrbean-bremen/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mrbean-bremen/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mrbean-bremen/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mrbean-bremen/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mrbean-bremen/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mrbean-bremen/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/mrbean-bremen/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/mrbean-bremen/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/mrbean-bremen/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/mrbean-bremen/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/mrbean-bremen/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mrbean-bremen/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mrbean-bremen/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mrbean-bremen/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mrbean-bremen/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mrbean-bremen/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mrbean-bremen/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/mrbean-bremen/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mrbean-bremen/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/mrbean-bremen/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mrbean-bremen/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mrbean-bremen/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mrbean-bremen/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mrbean-bremen/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mrbean-bremen/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mrbean-bremen/pydicom/deployments",
                        "created_at": "2016-08-14T15:31:07Z",
                        "updated_at": "2023-08-17T13:42:37Z",
                        "pushed_at": "2023-10-25T19:14:00Z",
                        "git_url": "git://github.com/mrbean-bremen/pydicom.git",
                        "ssh_url": "git@github.com:mrbean-bremen/pydicom.git",
                        "clone_url": "https://github.com/mrbean-bremen/pydicom.git",
                        "svn_url": "https://github.com/mrbean-bremen/pydicom",
                        "homepage": null,
                        "size": 46080,
                        "stargazers_count": 1,
                        "watchers_count": 1,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 1,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1920"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1920"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1920"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1920/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1920/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1920/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/9363629bc1bc58101be5b7745b92a7056d570cc6"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:44:32Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32877448328",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 4623701,
            "login": "mrbean-bremen",
            "display_login": "mrbean-bremen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrbean-bremen",
            "avatar_url": "https://avatars.githubusercontent.com/u/4623701?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373533643",
                "pull_request_review_id": 1700200645,
                "id": 1373533643,
                "node_id": "PRRC_kwDOANW3M85R3nXL",
                "diff_hunk": "@@ -625,7 +646,19 @@ def write_data_element(\n         # unless is SQ with undefined length.\n         fp.write_UL(0xFFFFFFFF if is_undefined_length else value_length)\n \n-    fp.write(buffer.getvalue())\n+    # if the element was buffered, we wrote directly to the file already\n+    if elem.is_buffered:\n+        # write to the file directly\n+        fn(fp, elem)\n+    else:\n+        # copy the buffer to the file\n+        fp.write(buffer.getvalue())\n+        # write the length now that we know it\n+        curr_pos = fp.tell()\n+        fp.seek(vr_length_seek_pos)\n+        fp.write_UL(elem.bytes_read_from_buffer)\n+        fp.seek(curr_pos)",
                "path": "src/pydicom/filewriter.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "mrbean-bremen",
                    "id": 4623701,
                    "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mrbean-bremen",
                    "html_url": "https://github.com/mrbean-bremen",
                    "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                    "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                    "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                    "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                    "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I'm not sure I follow the logic here, but I see no reason why you have to first write the buffer before writing the length, as you can get the length from the buffer. Also note that we don't want to seek backwards at all as this breaks certain use cases where fp is a stream or a zip file I think (I don't remember what use case it was exactly).",
                "created_at": "2023-10-26T17:52:08Z",
                "updated_at": "2023-10-26T17:52:08Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373533643",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373533643"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373533643"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373533643/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 657,
                "original_start_line": 657,
                "start_side": "RIGHT",
                "line": 660,
                "original_line": 660,
                "side": "RIGHT",
                "in_reply_to_id": 1373439644,
                "original_position": 115,
                "position": 115,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T17:52:08Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:52:08Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32877448243",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 4623701,
            "login": "mrbean-bremen",
            "display_login": "mrbean-bremen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrbean-bremen",
            "avatar_url": "https://avatars.githubusercontent.com/u/4623701?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700200645,
                "node_id": "PRR_kwDOANW3M85lVwDF",
                "user": {
                    "login": "mrbean-bremen",
                    "id": 4623701,
                    "node_id": "MDQ6VXNlcjQ2MjM3MDE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4623701?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mrbean-bremen",
                    "html_url": "https://github.com/mrbean-bremen",
                    "followers_url": "https://api.github.com/users/mrbean-bremen/followers",
                    "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions",
                    "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs",
                    "repos_url": "https://api.github.com/users/mrbean-bremen/repos",
                    "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T17:52:08Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700200645",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700200645"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T17:52:08Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45870,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:52:09Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32875321567",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 94397477,
            "login": "gnottobfly",
            "display_login": "gnottobfly",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnottobfly",
            "avatar_url": "https://avatars.githubusercontent.com/u/94397477?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373439644",
                "pull_request_review_id": 1700063034,
                "id": 1373439644,
                "node_id": "PRRC_kwDOANW3M85R3Qac",
                "diff_hunk": "@@ -625,7 +646,19 @@ def write_data_element(\n         # unless is SQ with undefined length.\n         fp.write_UL(0xFFFFFFFF if is_undefined_length else value_length)\n \n-    fp.write(buffer.getvalue())\n+    # if the element was buffered, we wrote directly to the file already\n+    if elem.is_buffered:\n+        # write to the file directly\n+        fn(fp, elem)\n+    else:\n+        # copy the buffer to the file\n+        fp.write(buffer.getvalue())\n+        # write the length now that we know it\n+        curr_pos = fp.tell()\n+        fp.seek(vr_length_seek_pos)\n+        fp.write_UL(elem.bytes_read_from_buffer)\n+        fp.seek(curr_pos)",
                "path": "src/pydicom/filewriter.py",
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "original_commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "This feels pretty hacky - I'd love to get some thoughts on how to handle this. I'm stuck on how to handle writing the length of data before we know the length of data without having to backtrack without calling `stat` on the original file the buffer is from.",
                "created_at": "2023-10-26T16:27:23Z",
                "updated_at": "2023-10-26T16:27:23Z",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373439644",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "NONE",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373439644"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#discussion_r1373439644"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments/1373439644/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 657,
                "original_start_line": 657,
                "start_side": "RIGHT",
                "line": 660,
                "original_line": 660,
                "side": "RIGHT",
                "original_position": 115,
                "position": 115,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T16:27:23Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45811,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:27:23Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    },
    {
        "id": "32875321505",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 94397477,
            "login": "gnottobfly",
            "display_login": "gnottobfly",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gnottobfly",
            "avatar_url": "https://avatars.githubusercontent.com/u/94397477?"
        },
        "repo": {
            "id": 14006067,
            "name": "pydicom/pydicom",
            "url": "https://api.github.com/repos/pydicom/pydicom"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700063034,
                "node_id": "PRR_kwDOANW3M85lVOc6",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "submitted_at": "2023-10-26T16:27:23Z",
                "state": "commented",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700063034",
                "pull_request_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "author_association": "NONE",
                "_links": {
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919#pullrequestreview-1700063034"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919",
                "id": 1573177522,
                "node_id": "PR_kwDOANW3M85dxMiy",
                "html_url": "https://github.com/pydicom/pydicom/pull/1919",
                "diff_url": "https://github.com/pydicom/pydicom/pull/1919.diff",
                "patch_url": "https://github.com/pydicom/pydicom/pull/1919.patch",
                "issue_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919",
                "number": 1919,
                "state": "open",
                "locked": false,
                "title": "[WIP] Support buffers for OB DataElement Values",
                "user": {
                    "login": "gnottobfly",
                    "id": 94397477,
                    "node_id": "U_kgDOBaBkJQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/94397477?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/gnottobfly",
                    "html_url": "https://github.com/gnottobfly",
                    "followers_url": "https://api.github.com/users/gnottobfly/followers",
                    "following_url": "https://api.github.com/users/gnottobfly/following{/other_user}",
                    "gists_url": "https://api.github.com/users/gnottobfly/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/gnottobfly/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/gnottobfly/subscriptions",
                    "organizations_url": "https://api.github.com/users/gnottobfly/orgs",
                    "repos_url": "https://api.github.com/users/gnottobfly/repos",
                    "events_url": "https://api.github.com/users/gnottobfly/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/gnottobfly/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "## Support buffers for OB DataElement Values\r\n_Putting up an early PR to get some early feedback before investing too much time. Early comments on the approach or API welcomed!_\r\n\r\nThis allows setting a DataElement's value to a buffer. The motivation behind this is to write a dataset to disk without copying all of a large image/video into memory to do so. See #1913 for the discussion that led to this. For now I'm only targeting byte values as those are the ones that are expected to be large.\r\n\r\n<!--\r\nPlease prefix your PR title with [WIP] for PRs that are in progress and change\r\nto [MRG] when you consider them ready for final review.\r\n-->\r\n\r\n#### Describe the changes\r\n* Allows assinging the DataElement's value to a BufferedIOBase\r\n* Adds a new method value_generator that yields chunks from the buffer\r\n\r\n#### Tasks\r\n- [ ] Unit tests added that reproduce the issue or prove feature is working\r\n- [ ] Fix or feature added\r\n- [ ] Code typed and mypy shows no errors\r\n- [ ] Documentation updated (if relevant)\r\n  - [ ] No warnings during build\r\n  - [ ] Preview link (CircleCI -> Artifacts -> `doc/_build/html/index.html`)\r\n- [ ] Unit tests passing and overall coverage the same or better\r\n",
                "created_at": "2023-10-25T15:19:59Z",
                "updated_at": "2023-10-26T16:27:23Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7087149d07a334728c7440dfe4031a91bd044f57",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits",
                "review_comments_url": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments",
                "review_comment_url": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments",
                "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                "head": {
                    "label": "ButterflyNetwork:bfly/pixel_data_buffer",
                    "ref": "bfly/pixel_data_buffer",
                    "sha": "d8f5fbd6d32bcbc17a606d5a4136c28ec2659837",
                    "user": {
                        "login": "ButterflyNetwork",
                        "id": 651456,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ButterflyNetwork",
                        "html_url": "https://github.com/ButterflyNetwork",
                        "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                        "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                        "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                        "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                        "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 707412855,
                        "node_id": "R_kgDOKipDdw",
                        "name": "pydicom",
                        "full_name": "ButterflyNetwork/pydicom",
                        "private": false,
                        "owner": {
                            "login": "ButterflyNetwork",
                            "id": 651456,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY1MTQ1Ng==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/651456?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ButterflyNetwork",
                            "html_url": "https://github.com/ButterflyNetwork",
                            "followers_url": "https://api.github.com/users/ButterflyNetwork/followers",
                            "following_url": "https://api.github.com/users/ButterflyNetwork/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ButterflyNetwork/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ButterflyNetwork/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ButterflyNetwork/subscriptions",
                            "organizations_url": "https://api.github.com/users/ButterflyNetwork/orgs",
                            "repos_url": "https://api.github.com/users/ButterflyNetwork/repos",
                            "events_url": "https://api.github.com/users/ButterflyNetwork/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ButterflyNetwork/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ButterflyNetwork/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": true,
                        "url": "https://api.github.com/repos/ButterflyNetwork/pydicom",
                        "forks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ButterflyNetwork/pydicom/deployments",
                        "created_at": "2023-10-19T21:03:22Z",
                        "updated_at": "2023-10-19T21:03:23Z",
                        "pushed_at": "2023-10-26T16:24:25Z",
                        "git_url": "git://github.com/ButterflyNetwork/pydicom.git",
                        "ssh_url": "git@github.com:ButterflyNetwork/pydicom.git",
                        "clone_url": "https://github.com/ButterflyNetwork/pydicom.git",
                        "svn_url": "https://github.com/ButterflyNetwork/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 45811,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "pydicom:main",
                    "ref": "main",
                    "sha": "7e78047fcf8e6a15cf6226aae261bb43db1fe82c",
                    "user": {
                        "login": "pydicom",
                        "id": 28906941,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pydicom",
                        "html_url": "https://github.com/pydicom",
                        "followers_url": "https://api.github.com/users/pydicom/followers",
                        "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                        "organizations_url": "https://api.github.com/users/pydicom/orgs",
                        "repos_url": "https://api.github.com/users/pydicom/repos",
                        "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pydicom/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14006067,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDAwNjA2Nw==",
                        "name": "pydicom",
                        "full_name": "pydicom/pydicom",
                        "private": false,
                        "owner": {
                            "login": "pydicom",
                            "id": 28906941,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjI4OTA2OTQx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/pydicom",
                            "html_url": "https://github.com/pydicom",
                            "followers_url": "https://api.github.com/users/pydicom/followers",
                            "following_url": "https://api.github.com/users/pydicom/following{/other_user}",
                            "gists_url": "https://api.github.com/users/pydicom/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/pydicom/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/pydicom/subscriptions",
                            "organizations_url": "https://api.github.com/users/pydicom/orgs",
                            "repos_url": "https://api.github.com/users/pydicom/repos",
                            "events_url": "https://api.github.com/users/pydicom/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/pydicom/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/pydicom/pydicom",
                        "description": "Read, modify and write DICOM files with python code",
                        "fork": false,
                        "url": "https://api.github.com/repos/pydicom/pydicom",
                        "forks_url": "https://api.github.com/repos/pydicom/pydicom/forks",
                        "keys_url": "https://api.github.com/repos/pydicom/pydicom/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/pydicom/pydicom/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/pydicom/pydicom/teams",
                        "hooks_url": "https://api.github.com/repos/pydicom/pydicom/hooks",
                        "issue_events_url": "https://api.github.com/repos/pydicom/pydicom/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/pydicom/pydicom/events",
                        "assignees_url": "https://api.github.com/repos/pydicom/pydicom/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/pydicom/pydicom/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/pydicom/pydicom/tags",
                        "blobs_url": "https://api.github.com/repos/pydicom/pydicom/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/pydicom/pydicom/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/pydicom/pydicom/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/pydicom/pydicom/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/pydicom/pydicom/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/pydicom/pydicom/languages",
                        "stargazers_url": "https://api.github.com/repos/pydicom/pydicom/stargazers",
                        "contributors_url": "https://api.github.com/repos/pydicom/pydicom/contributors",
                        "subscribers_url": "https://api.github.com/repos/pydicom/pydicom/subscribers",
                        "subscription_url": "https://api.github.com/repos/pydicom/pydicom/subscription",
                        "commits_url": "https://api.github.com/repos/pydicom/pydicom/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/pydicom/pydicom/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/pydicom/pydicom/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/pydicom/pydicom/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/pydicom/pydicom/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/pydicom/pydicom/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/pydicom/pydicom/merges",
                        "archive_url": "https://api.github.com/repos/pydicom/pydicom/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/pydicom/pydicom/downloads",
                        "issues_url": "https://api.github.com/repos/pydicom/pydicom/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/pydicom/pydicom/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/pydicom/pydicom/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/pydicom/pydicom/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/pydicom/pydicom/labels{/name}",
                        "releases_url": "https://api.github.com/repos/pydicom/pydicom/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/pydicom/pydicom/deployments",
                        "created_at": "2013-10-31T02:58:52Z",
                        "updated_at": "2023-10-25T08:52:26Z",
                        "pushed_at": "2023-10-26T16:24:28Z",
                        "git_url": "git://github.com/pydicom/pydicom.git",
                        "ssh_url": "git@github.com:pydicom/pydicom.git",
                        "clone_url": "https://github.com/pydicom/pydicom.git",
                        "svn_url": "https://github.com/pydicom/pydicom",
                        "homepage": "https://pydicom.github.io/pydicom/dev",
                        "size": 93857,
                        "stargazers_count": 1721,
                        "watchers_count": 1721,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 451,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 61,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "dicom",
                            "pydicom",
                            "python"
                        ],
                        "visibility": "public",
                        "forks": 451,
                        "open_issues": 61,
                        "watchers": 1721,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919"
                    },
                    "html": {
                        "href": "https://github.com/pydicom/pydicom/pull/1919"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/issues/1919/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/pulls/1919/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/pydicom/pydicom/statuses/d8f5fbd6d32bcbc17a606d5a4136c28ec2659837"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:27:24Z",
        "org": {
            "id": 28906941,
            "login": "pydicom",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/pydicom",
            "avatar_url": "https://avatars.githubusercontent.com/u/28906941?"
        }
    }
]