[
    {
        "id": "32895462918",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2634",
                "id": 1914566514,
                "node_id": "I_kwDOEcNkxM5yHfdy",
                "number": 2634,
                "title": "tests.system.aiplatform.test_pipeline_job_schedule.TestPipelineJobSchedule: test_create_get_pause_resume_update_list failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 37,
                "created_at": "2023-09-27T02:16:23Z",
                "updated_at": "2023-10-27T10:20:55Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "This test failed!\n\nTo configure my behavior, see [the Flaky Bot documentation](https://github.com/googleapis/repo-automation-bots/tree/main/packages/flakybot).\n\nIf I'm commenting on this issue too often, add the `flakybot: quiet` label and\nI will stop commenting.\n\n---\n\ncommit: 23dae360031967adcd4261579c3fe860b2771958\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/efba17e1-86d9-4441-a020-eb15ee6fce2c), [Sponge](http://sponge2/efba17e1-86d9-4441-a020-eb15ee6fce2c)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job_schedule.TestPipelineJobSchedule object at 0x7f6a037e1d90>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-pjs-8a419546-76d8-42b6-8e43-8bd42b5d2028>, 'staging_bucket_name': 'tmpvrtxsdk-e2e-pjs-8a419546-76d8-42b6-8e43-8bd42b5d2028', 'storage_client': <google.cloud.storage.client.Client object at 0x7f6a01423590>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782668081",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2634#issuecomment-1782668081",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634",
                "id": 1782668081,
                "node_id": "IC_kwDOEcNkxM5qQVsx",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:55Z",
                "updated_at": "2023-10-27T10:20:55Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job_schedule.TestPipelineJobSchedule object at 0x7fc3bf5a93f0>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-pjs-c32b1cd7-d237-4499-ac85-65c7f96f0b5f>, 'staging_bucket_name': 'tmpvrtxsdk-e2e-pjs-c32b1cd7-d237-4499-ac85-65c7f96f0b5f', 'storage_client': <google.cloud.storage.client.Client object at 0x7fc3be700e20>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782668081/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:55Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895461934",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2783",
                "id": 1929377930,
                "node_id": "I_kwDOEcNkxM5y__iK",
                "number": 2783,
                "title": "tests.system.aiplatform.test_custom_job.TestCustomJob: test_from_local_script_enable_autolog_prebuilt_container failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "jaycee-li",
                    "id": 102714969,
                    "node_id": "U_kgDOBh9OWQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jaycee-li",
                    "html_url": "https://github.com/jaycee-li",
                    "followers_url": "https://api.github.com/users/jaycee-li/followers",
                    "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                    "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                    "repos_url": "https://api.github.com/users/jaycee-li/repos",
                    "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "jaycee-li",
                        "id": 102714969,
                        "node_id": "U_kgDOBh9OWQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jaycee-li",
                        "html_url": "https://github.com/jaycee-li",
                        "followers_url": "https://api.github.com/users/jaycee-li/followers",
                        "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                        "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                        "repos_url": "https://api.github.com/users/jaycee-li/repos",
                        "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 25,
                "created_at": "2023-10-06T03:34:54Z",
                "updated_at": "2023-10-27T10:20:53Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #2081 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: 9fedd34d004a60c7105c066085a296bc12b28138\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/aaf17fbf-f2da-418c-82e6-ee39b893cb83), [Sponge](http://sponge2/aaf17fbf-f2da-418c-82e6-ee39b893cb83)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_custom_job.TestCustomJob object at 0x7f2d1ac29110>\nshared_state = {'bucket': <Bucket: temp-vertex-sdk-custom-job-e4836847-d29e-4278-acf7-b7d38eaca022>, 'resources': [<google.cloud.aipl...e4836847-d29e-4278-acf7-b7d38eaca022', 'storage_client': <google.cloud.storage.client.Client object at 0x7f2cd6139c50>}\n\n    def test_from_local_script_enable_autolog_prebuilt_container(self, shared_state):\n    \n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            staging_bucket=shared_state[\"staging_bucket_name\"],\n            experiment=self._experiment_name,\n            experiment_tensorboard=self._backing_tensorboard,\n        )\n    \n        shared_state[\"resources\"].append(self._backing_tensorboard)\n        shared_state[\"resources\"].append(\n            aiplatform.metadata.metadata._experiment_tracker.experiment\n        )\n    \n        display_name = self._make_display_name(\"custom-job\")\n    \n        custom_job = aiplatform.CustomJob.from_local_script(\n            display_name=display_name,\n            script_path=_LOCAL_TRAINING_SCRIPT_PATH,\n            container_uri=_PREBUILT_CONTAINER_IMAGE,\n            requirements=[\"scikit-learn\", \"pandas\"],\n            enable_autolog=True,\n        )\n    \n>       custom_job.run(\n            experiment=self._experiment_name,\n            experiment_run=self._experiment_run_name,\n            service_account=self._service_account,\n        )\n\ntests/system/aiplatform/test_custom_job.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/jobs.py:1712: in run\n    self._run(\ngoogle/cloud/aiplatform/base.py:816: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/jobs.py:1813: in _run\n    self._block_until_complete()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <google.cloud.aiplatform.jobs.CustomJob object at 0x7f2df7ffa910> \nresource name: projects/580378083368/locations/us-central1/customJobs/3172255216963682304\n\n    def _block_until_complete(self):\n        \"\"\"Helper method to block and check on runnable job until complete.\n    \n        Raises:\n            RuntimeError: If job failed or cancelled.\n        \"\"\"\n    \n        log_wait = _LOG_WAIT_TIME\n    \n        previous_time = time.time()\n        while self.state not in _JOB_COMPLETE_STATES:\n            current_time = time.time()\n            if current_time - previous_time >= _LOG_WAIT_TIME:\n                self._log_job_state()\n                log_wait = min(log_wait * _WAIT_TIME_MULTIPLIER, _MAX_WAIT_TIME)\n                previous_time = current_time\n            self._log_web_access_uris()\n            time.sleep(_JOB_WAIT_TIME)\n    \n        self._log_job_state()\n    \n        if isinstance(self, CustomJob) and self._experiment_run:\n            # sync resource before end run\n            self._experiment_run = aiplatform.ExperimentRun.get(\n                self._experiment_run.name,\n                experiment=self._experiment,\n            )\n            self._experiment_run.end_run()\n    \n        # Error is only populated when the job state is\n        # JOB_STATE_FAILED or JOB_STATE_CANCELLED.\n        if self._gca_resource.state in _JOB_ERROR_STATES:\n>           raise RuntimeError(\"Job failed with:\\n%s\" % self._gca_resource.error)\nE           RuntimeError: Job failed with:\nE           code: 3\nE           message: \"The replica workerpool0-0 exited with a non-zero status of 1. To find out more about why your job exited please check the logs: https://console.cloud.google.com/logs/viewer?project=580378083368&resource=ml_job%2Fjob_id%2F3172255216963682304&advancedFilter=resource.type%3D%22ml_job%22%0Aresource.labels.job_id%3D%223172255216963682304%22\"\n\ngoogle/cloud/aiplatform/jobs.py:1109: RuntimeError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782668036",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2783#issuecomment-1782668036",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783",
                "id": 1782668036,
                "node_id": "IC_kwDOEcNkxM5qQVsE",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:53Z",
                "updated_at": "2023-10-27T10:20:53Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_custom_job.TestCustomJob object at 0x7effbe9fc250>\nshared_state = {'bucket': <Bucket: temp-vertex-sdk-custom-job-5708c5fc-49c9-4a03-987b-67f482ea431a>, 'resources': [<google.cloud.aipl...5708c5fc-49c9-4a03-987b-67f482ea431a', 'storage_client': <google.cloud.storage.client.Client object at 0x7effa2fbfaf0>}\n\n    def test_from_local_script_enable_autolog_prebuilt_container(self, shared_state):\n    \n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            staging_bucket=shared_state[\"staging_bucket_name\"],\n            experiment=self._experiment_name,\n            experiment_tensorboard=self._backing_tensorboard,\n        )\n    \n        shared_state[\"resources\"].append(self._backing_tensorboard)\n        shared_state[\"resources\"].append(\n            aiplatform.metadata.metadata._experiment_tracker.experiment\n        )\n    \n        display_name = self._make_display_name(\"custom-job\")\n    \n        custom_job = aiplatform.CustomJob.from_local_script(\n            display_name=display_name,\n            script_path=_LOCAL_TRAINING_SCRIPT_PATH,\n            container_uri=_PREBUILT_CONTAINER_IMAGE,\n            requirements=[\"scikit-learn\", \"pandas\"],\n            enable_autolog=True,\n        )\n    \n>       custom_job.run(\n            experiment=self._experiment_name,\n            experiment_run=self._experiment_run_name,\n            service_account=self._service_account,\n        )\n\ntests/system/aiplatform/test_custom_job.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/jobs.py:1714: in run\n    self._run(\ngoogle/cloud/aiplatform/base.py:817: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/jobs.py:1815: in _run\n    self._block_until_complete()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <google.cloud.aiplatform.jobs.CustomJob object at 0x7effa2f4af80> \nresource name: projects/580378083368/locations/us-central1/customJobs/3785691995553398784\n\n    def _block_until_complete(self):\n        \"\"\"Helper method to block and check on runnable job until complete.\n    \n        Raises:\n            RuntimeError: If job failed or cancelled.\n        \"\"\"\n    \n        log_wait = _LOG_WAIT_TIME\n    \n        previous_time = time.time()\n        while self.state not in _JOB_COMPLETE_STATES:\n            current_time = time.time()\n            if current_time - previous_time >= _LOG_WAIT_TIME:\n                self._log_job_state()\n                log_wait = min(log_wait * _WAIT_TIME_MULTIPLIER, _MAX_WAIT_TIME)\n                previous_time = current_time\n            self._log_web_access_uris()\n            time.sleep(_JOB_WAIT_TIME)\n    \n        self._log_job_state()\n    \n        if isinstance(self, CustomJob) and self._experiment_run:\n            # sync resource before end run\n            self._experiment_run = aiplatform.ExperimentRun.get(\n                self._experiment_run.name,\n                experiment=self._experiment,\n            )\n            self._experiment_run.end_run()\n    \n        # Error is only populated when the job state is\n        # JOB_STATE_FAILED or JOB_STATE_CANCELLED.\n        if self._gca_resource.state in _JOB_ERROR_STATES:\n>           raise RuntimeError(\"Job failed with:\\n%s\" % self._gca_resource.error)\nE           RuntimeError: Job failed with:\nE           code: 3\nE           message: \"The replica workerpool0-0 exited with a non-zero status of 1. To find out more about why your job exited please check the logs: https://console.cloud.google.com/logs/viewer?project=580378083368&resource=ml_job%2Fjob_id%2F3785691995553398784&advancedFilter=resource.type%3D%22ml_job%22%0Aresource.labels.job_id%3D%223785691995553398784%22\"\n\ngoogle/cloud/aiplatform/jobs.py:1111: RuntimeError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782668036/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:53Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895460572",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2410",
                "id": 1841612765,
                "node_id": "I_kwDOEcNkxM5txMfd",
                "number": 2410,
                "title": "tests.system.aiplatform.test_experiments.TestExperiments: test_get_experiments_df failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370970992,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwOTky",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p2",
                        "name": "priority: p2",
                        "color": "fef2c0",
                        "default": false,
                        "description": "Moderately-important priority. Fix may not be included in next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "jaycee-li",
                    "id": 102714969,
                    "node_id": "U_kgDOBh9OWQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jaycee-li",
                    "html_url": "https://github.com/jaycee-li",
                    "followers_url": "https://api.github.com/users/jaycee-li/followers",
                    "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                    "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                    "repos_url": "https://api.github.com/users/jaycee-li/repos",
                    "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "jaycee-li",
                        "id": 102714969,
                        "node_id": "U_kgDOBh9OWQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jaycee-li",
                        "html_url": "https://github.com/jaycee-li",
                        "followers_url": "https://api.github.com/users/jaycee-li/followers",
                        "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                        "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                        "repos_url": "https://api.github.com/users/jaycee-li/repos",
                        "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 91,
                "created_at": "2023-08-08T16:13:08Z",
                "updated_at": "2023-10-27T10:20:50Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #2277 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: dec8ffd80d8804d4a5afaccc1c748d886225b6bf\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/db2663fd-0466-46b4-b05b-50a9c8d71a27), [Sponge](http://sponge2/db2663fd-0466-46b4-b05b-50a9c8d71a27)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7fae104175b0>\n\n    def test_get_experiments_df(self):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n    \n        df = aiplatform.get_experiment_df()\n    \n        pipelines_param_and_metrics = {\n            \"param.dropout_rate\": 0.2,\n            \"param.learning_rate\": 0.1,\n            \"metric.accuracy\": 0.8,\n            \"metric.mse\": 1.2,\n        }\n    \n        true_df_dict_1 = {f\"metric.{key}\": value for key, value in _METRICS.items()}\n        for key, value in _PARAMS.items():\n            true_df_dict_1[f\"param.{key}\"] = value\n    \n        true_df_dict_1[\"experiment_name\"] = self._experiment_name\n        true_df_dict_1[\"run_name\"] = _RUN\n        true_df_dict_1[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_1[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_1[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 4.0\n    \n        true_df_dict_2 = {f\"metric.{key}\": value for key, value in _METRICS_2.items()}\n        for key, value in _PARAMS_2.items():\n            true_df_dict_2[f\"param.{key}\"] = value\n    \n        true_df_dict_2[\"experiment_name\"] = self._experiment_name\n        true_df_dict_2[\"run_name\"] = _RUN_2\n        true_df_dict_2[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_2[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_2[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 0.0\n    \n        true_df_dict_3 = {\n            \"experiment_name\": self._experiment_name,\n            \"run_name\": self._pipeline_job_id,\n            \"run_type\": aiplatform.metadata.constants.SYSTEM_PIPELINE_RUN,\n            \"state\": aiplatform.gapic.Execution.State.COMPLETE.name,\n            \"time_series_metric.accuracy\": 0.0,\n        }\n    \n        true_df_dict_3.update(pipelines_param_and_metrics)\n    \n        for key in pipelines_param_and_metrics.keys():\n            true_df_dict_1[key] = 0.0\n            true_df_dict_2[key] = 0.0\n    \n        for key in _PARAMS.keys():\n            true_df_dict_3[f\"param.{key}\"] = 0.0\n    \n        for key in _METRICS.keys():\n            true_df_dict_3[f\"metric.{key}\"] = 0.0\n    \n>       assert sorted(\n            [true_df_dict_1, true_df_dict_2, true_df_dict_3],\n            key=lambda d: d[\"run_name\"],\n        ) == sorted(df.fillna(0.0).to_dict(\"records\"), key=lambda d: d[\"run_name\"])\nE       AssertionError: assert [{'experiment...1': 0.0, ...}] == [{'experiment...1': 0.0, ...}]\nE         At index 0 diff: {'metric.sdk-metric-test-1': 0.8, 'metric.sdk-metric-test-2': 100.0, 'param.sdk-param-test-1': 0.1, 'param.sdk-param-test-2': 0.2, 'experiment_name': 'tmpvrtxsdk-e2e--1df19484-ccd7-47bf-95af-96768e61fafb', 'run_name': 'run-1', 'state': 'COMPLETE', 'run_type': 'system.ExperimentRun', 'time_series_metric.accuracy': 4.0, 'param.dropout_rate': 0.0, 'param.learning_rate': 0.0, 'metric.accuracy': 0.0, 'metric.mse': 0.0} != {'experiment_name': 'tmpvrtxsdk-e2e--1df19484-ccd7-47bf-95af-96768e61fafb', 'run_name': 'run-1', 'run_type': 'system.ExperimentRun', 'stat...\nE         \nE         ...Full output truncated (2 lines hidden), use '-vv' to show\n\ntests/system/aiplatform/test_experiments.py:441: AssertionError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667977",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2410#issuecomment-1782667977",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410",
                "id": 1782667977,
                "node_id": "IC_kwDOEcNkxM5qQVrJ",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:50Z",
                "updated_at": "2023-10-27T10:20:50Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7ff6589ca590>\n\n    def test_get_experiments_df(self):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n    \n        df = aiplatform.get_experiment_df()\n    \n        pipelines_param_and_metrics = {\n            \"param.dropout_rate\": 0.2,\n            \"param.learning_rate\": 0.1,\n            \"metric.accuracy\": 0.8,\n            \"metric.mse\": 1.2,\n        }\n    \n        true_df_dict_1 = {f\"metric.{key}\": value for key, value in _METRICS.items()}\n        for key, value in _PARAMS.items():\n            true_df_dict_1[f\"param.{key}\"] = value\n    \n        true_df_dict_1[\"experiment_name\"] = self._experiment_name\n        true_df_dict_1[\"run_name\"] = _RUN\n        true_df_dict_1[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_1[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_1[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 4.0\n    \n        true_df_dict_2 = {f\"metric.{key}\": value for key, value in _METRICS_2.items()}\n        for key, value in _PARAMS_2.items():\n            true_df_dict_2[f\"param.{key}\"] = value\n    \n        true_df_dict_2[\"experiment_name\"] = self._experiment_name\n        true_df_dict_2[\"run_name\"] = _RUN_2\n        true_df_dict_2[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_2[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_2[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 0.0\n    \n        true_df_dict_3 = {\n            \"experiment_name\": self._experiment_name,\n            \"run_name\": self._pipeline_job_id,\n            \"run_type\": aiplatform.metadata.constants.SYSTEM_PIPELINE_RUN,\n            \"state\": aiplatform.gapic.Execution.State.COMPLETE.name,\n            \"time_series_metric.accuracy\": 0.0,\n        }\n    \n        true_df_dict_3.update(pipelines_param_and_metrics)\n    \n        for key in pipelines_param_and_metrics.keys():\n            true_df_dict_1[key] = 0.0\n            true_df_dict_2[key] = 0.0\n    \n        for key in _PARAMS.keys():\n            true_df_dict_3[f\"param.{key}\"] = 0.0\n    \n        for key in _METRICS.keys():\n            true_df_dict_3[f\"metric.{key}\"] = 0.0\n    \n>       assert sorted(\n            [true_df_dict_1, true_df_dict_2, true_df_dict_3],\n            key=lambda d: d[\"run_name\"],\n        ) == sorted(df.fillna(0.0).to_dict(\"records\"), key=lambda d: d[\"run_name\"])\nE       AssertionError: assert [{'experiment...1': 0.0, ...}] == [{'experiment...1': 0.0, ...}]\nE         At index 0 diff: {'metric.sdk-metric-test-1': 0.8, 'metric.sdk-metric-test-2': 100.0, 'param.sdk-param-test-1': 0.1, 'param.sdk-param-test-2': 0.2, 'experiment_name': 'tmpvrtxsdk-e2e--77191205-b892-4a4d-8651-f4d12137dcef', 'run_name': 'run-1', 'state': 'COMPLETE', 'run_type': 'system.ExperimentRun', 'time_series_metric.accuracy': 4.0, 'param.dropout_rate': 0.0, 'param.learning_rate': 0.0, 'metric.accuracy': 0.0, 'metric.mse': 0.0} != {'experiment_name': 'tmpvrtxsdk-e2e--77191205-b892-4a4d-8651-f4d12137dcef', 'run_name': 'run-1', 'run_type': 'system.ExperimentRun', 'stat...\nE         \nE         ...Full output truncated (46 lines hidden), use '-vv' to show\n\ntests/system/aiplatform/test_experiments.py:453: AssertionError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667977/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:51Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895459437",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2827",
                "id": 1953482407,
                "node_id": "I_kwDOEcNkxM50b8an",
                "number": 2827,
                "title": "tests.system.aiplatform.test_experiments.TestExperiments: test_log_model failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 2686741855,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODU1",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20flaky",
                        "name": "flakybot: flaky",
                        "color": "86d9d7",
                        "default": false,
                        "description": "Tells the Flaky Bot not to close or comment on this issue."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "ZhenyiQ",
                    "id": 125383657,
                    "node_id": "U_kgDOB3kz6Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ZhenyiQ",
                    "html_url": "https://github.com/ZhenyiQ",
                    "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                    "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                    "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                    "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                    "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "ZhenyiQ",
                        "id": 125383657,
                        "node_id": "U_kgDOB3kz6Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ZhenyiQ",
                        "html_url": "https://github.com/ZhenyiQ",
                        "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                        "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                        "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                        "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                        "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-10-20T04:11:19Z",
                "updated_at": "2023-10-27T10:20:48Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #1944 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: eb6071fe567ef80ba5490b9eaae0cedd6958aac5\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/8f121aa4-ded5-4afe-9092-c7e1ac231655), [Sponge](http://sponge2/8f121aa4-ded5-4afe-9092-c7e1ac231655)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:946: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7f117f638890>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7f117f63ae40>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(state, call, with_call, deadline):\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.UNAVAILABLE\nE           \tdetails = \"The service is currently unavailable.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:74.125.20.95:443 {grpc_message:\"The service is currently unavailable.\", grpc_status:14, created_time:\"2023-10-19T20:24:04.262912227+00:00\"}\"\nE           >\n\n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:849: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7f1181419690>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-af83d61e-7c75-4e99-9d34-0d6319466f79>, 'resources': [<google.cloud.aiplatform.tenso...af83d61e-7c75-4e99-9d34-0d6319466f79', 'storage_client': <google.cloud.storage.client.Client object at 0x7f117f7ca750>}\n\n    def test_log_model(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n        aiplatform.start_run(_RUN, resume=True)\n    \n        train_x = np.array([[1, 1], [1, 2], [2, 2], [2, 3]])\n        train_y = np.dot(train_x, np.array([1, 2])) + 3\n        model = LinearRegression()\n        model.fit(train_x, train_y)\n    \n        model_artifact = aiplatform.log_model(\n            model=model,\n            artifact_id=\"sklearn-model\",\n            uri=f\"gs://{shared_state['staging_bucket_name']}/sklearn-model\",\n            input_example=train_x,\n        )\n        shared_state[\"resources\"].append(model_artifact)\n    \n>       run = aiplatform.ExperimentRun(run_name=_RUN, experiment=self._experiment_name)\n\ntests/system/aiplatform/test_experiments.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:175: in __init__\n    self._backing_tensorboard_run = self._lookup_tensorboard_run_artifact()\ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:382: in _lookup_tensorboard_run_artifact\n    resource=tensorboard_resource.TensorboardRun(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:651: in __init__\n    self._get_time_series_display_name_to_id_mapping()\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:917: in _get_time_series_display_name_to_id_mapping\n    time_series = TensorboardTimeSeries.list(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:1302: in list\n    return super()._list(\ngoogle/cloud/aiplatform/base.py:1128: in _list\n    resource_list = resource_list_method(request=list_request) or []\ngoogle/cloud/aiplatform_v1/services/tensorboard_service/client.py:3376: in list_tensorboard_time_series\n    response = rpc(\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/gapic_v1/method.py:131: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.ServiceUnavailable: 503 The service is currently unavailable.\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:77: ServiceUnavailable</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/timeline",
                "performed_via_github_app": null,
                "state_reason": "reopened"
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667928",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2827#issuecomment-1782667928",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827",
                "id": 1782667928,
                "node_id": "IC_kwDOEcNkxM5qQVqY",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:48Z",
                "updated_at": "2023-10-27T10:20:48Z",
                "author_association": "NONE",
                "body": "Looks like this issue is flaky. :worried:\n\nI'm going to leave this open and stop commenting.\n\nA human should fix and close this.\n\n---\n\ncommit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7ff6589cb3a0>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-e3b7656e-fb73-4f7e-9db6-643c0282fa9c>, 'resources': [<google.cloud.aiplatform.tenso...e3b7656e-fb73-4f7e-9db6-643c0282fa9c', 'storage_client': <google.cloud.storage.client.Client object at 0x7ff63de42e00>}\n\n    def test_log_model(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n        aiplatform.start_run(_RUN, resume=True)\n    \n        train_x = np.array([[1, 1], [1, 2], [2, 2], [2, 3]])\n        train_y = np.dot(train_x, np.array([1, 2])) + 3\n        model = LinearRegression()\n        model.fit(train_x, train_y)\n    \n        try:\n            model_artifact = aiplatform.log_model(\n                model=model,\n                artifact_id=\"sklearn-model\",\n                uri=f\"gs://{shared_state['staging_bucket_name']}/sklearn-model\",\n                input_example=train_x,\n            )\n            shared_state[\"resources\"].append(model_artifact)\n    \n            run = aiplatform.ExperimentRun(\n                run_name=_RUN, experiment=self._experiment_name\n            )\n            experiment_model = run.get_experiment_models()[0]\n            assert experiment_model.name == \"sklearn-model\"\n            assert (\n                experiment_model.uri\n                == f\"gs://{shared_state['staging_bucket_name']}/sklearn-model\"\n            )\n            assert experiment_model.get_model_info() == {\n                \"model_class\": \"sklearn.linear_model._base.LinearRegression\",\n                \"framework_name\": \"sklearn\",\n                \"framework_version\": sklearn.__version__,\n                \"input_example\": {\n                    \"type\": \"numpy.ndarray\",\n                    \"data\": train_x.tolist(),\n                },\n            }\n            experiment_model.delete()\n        finally:\n            # Make sure that, if the model resources already exists but the call\n            # aiplatform.log_model fails, we clean up the model resource.\n            run = aiplatform.ExperimentRun(\n                run_name=_RUN, experiment=self._experiment_name\n            )\n>           experiment_model = run.get_experiment_models()[0]\nE           IndexError: list index out of range\n\ntests/system/aiplatform/test_experiments.py:236: IndexError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667928/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:48Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895458867",
        "type": "IssuesEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "reopened",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2827",
                "id": 1953482407,
                "node_id": "I_kwDOEcNkxM50b8an",
                "number": 2827,
                "title": "tests.system.aiplatform.test_experiments.TestExperiments: test_log_model failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 2686741855,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODU1",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20flaky",
                        "name": "flakybot: flaky",
                        "color": "86d9d7",
                        "default": false,
                        "description": "Tells the Flaky Bot not to close or comment on this issue."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "ZhenyiQ",
                    "id": 125383657,
                    "node_id": "U_kgDOB3kz6Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ZhenyiQ",
                    "html_url": "https://github.com/ZhenyiQ",
                    "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                    "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                    "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                    "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                    "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "ZhenyiQ",
                        "id": 125383657,
                        "node_id": "U_kgDOB3kz6Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ZhenyiQ",
                        "html_url": "https://github.com/ZhenyiQ",
                        "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                        "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                        "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                        "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                        "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-10-20T04:11:19Z",
                "updated_at": "2023-10-27T10:20:47Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #1944 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: eb6071fe567ef80ba5490b9eaae0cedd6958aac5\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/8f121aa4-ded5-4afe-9092-c7e1ac231655), [Sponge](http://sponge2/8f121aa4-ded5-4afe-9092-c7e1ac231655)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:946: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7f117f638890>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7f117f63ae40>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(state, call, with_call, deadline):\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.UNAVAILABLE\nE           \tdetails = \"The service is currently unavailable.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:74.125.20.95:443 {grpc_message:\"The service is currently unavailable.\", grpc_status:14, created_time:\"2023-10-19T20:24:04.262912227+00:00\"}\"\nE           >\n\n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:849: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7f1181419690>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-af83d61e-7c75-4e99-9d34-0d6319466f79>, 'resources': [<google.cloud.aiplatform.tenso...af83d61e-7c75-4e99-9d34-0d6319466f79', 'storage_client': <google.cloud.storage.client.Client object at 0x7f117f7ca750>}\n\n    def test_log_model(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n        aiplatform.start_run(_RUN, resume=True)\n    \n        train_x = np.array([[1, 1], [1, 2], [2, 2], [2, 3]])\n        train_y = np.dot(train_x, np.array([1, 2])) + 3\n        model = LinearRegression()\n        model.fit(train_x, train_y)\n    \n        model_artifact = aiplatform.log_model(\n            model=model,\n            artifact_id=\"sklearn-model\",\n            uri=f\"gs://{shared_state['staging_bucket_name']}/sklearn-model\",\n            input_example=train_x,\n        )\n        shared_state[\"resources\"].append(model_artifact)\n    \n>       run = aiplatform.ExperimentRun(run_name=_RUN, experiment=self._experiment_name)\n\ntests/system/aiplatform/test_experiments.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:175: in __init__\n    self._backing_tensorboard_run = self._lookup_tensorboard_run_artifact()\ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:382: in _lookup_tensorboard_run_artifact\n    resource=tensorboard_resource.TensorboardRun(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:651: in __init__\n    self._get_time_series_display_name_to_id_mapping()\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:917: in _get_time_series_display_name_to_id_mapping\n    time_series = TensorboardTimeSeries.list(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:1302: in list\n    return super()._list(\ngoogle/cloud/aiplatform/base.py:1128: in _list\n    resource_list = resource_list_method(request=list_request) or []\ngoogle/cloud/aiplatform_v1/services/tensorboard_service/client.py:3376: in list_tensorboard_time_series\n    response = rpc(\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/gapic_v1/method.py:131: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.ServiceUnavailable: 503 The service is currently unavailable.\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:77: ServiceUnavailable</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/timeline",
                "performed_via_github_app": null,
                "state_reason": "reopened"
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:47Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895458093",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2304",
                "id": 1759090804,
                "node_id": "I_kwDOEcNkxM5o2Zh0",
                "number": 2304,
                "title": "tests.system.aiplatform.test_language_models.TestLanguageModels: test_tuning failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 101,
                "created_at": "2023-06-15T15:30:35Z",
                "updated_at": "2023-10-27T10:20:45Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "This test failed!\n\nTo configure my behavior, see [the Flaky Bot documentation](https://github.com/googleapis/repo-automation-bots/tree/main/packages/flakybot).\n\nIf I'm commenting on this issue too often, add the `flakybot: quiet` label and\nI will stop commenting.\n\n---\n\ncommit: 8191035571d58713f0655b2baee6105a53cbcad8\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/2134c762-bd7d-4539-9c6d-d731958893f9), [Sponge](http://sponge2/2134c762-bd7d-4539-9c6d-d731958893f9)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_language_models.TestLanguageModels object at 0x7f4fccf45100>\nshared_state = {}\n\n    def test_tuning(self, shared_state):\n        \"\"\"Test tuning, listing and loading models.\"\"\"\n        aiplatform.init(project=e2e_base._PROJECT, location=e2e_base._LOCATION)\n    \n        model = TextGenerationModel.from_pretrained(\"google/text-bison@001\")\n    \n        import pandas\n    \n        training_data = pandas.DataFrame(\n            data=[\n                {\"input_text\": \"Input 0\", \"output_text\": \"Output 0\"},\n                {\"input_text\": \"Input 1\", \"output_text\": \"Output 1\"},\n                {\"input_text\": \"Input 2\", \"output_text\": \"Output 2\"},\n                {\"input_text\": \"Input 3\", \"output_text\": \"Output 3\"},\n                {\"input_text\": \"Input 4\", \"output_text\": \"Output 4\"},\n                {\"input_text\": \"Input 5\", \"output_text\": \"Output 5\"},\n                {\"input_text\": \"Input 6\", \"output_text\": \"Output 6\"},\n                {\"input_text\": \"Input 7\", \"output_text\": \"Output 7\"},\n                {\"input_text\": \"Input 8\", \"output_text\": \"Output 8\"},\n                {\"input_text\": \"Input 9\", \"output_text\": \"Output 9\"},\n            ]\n        )\n    \n>       model.tune_model(\n            training_data=training_data,\n            train_steps=1,\n            tuning_job_location=\"europe-west4\",\n            tuned_model_location=\"us-central1\",\n        )\n\ntests/system/aiplatform/test_language_models.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvertexai/language_models/_language_models.py:181: in tune_model\n    pipeline_job = _launch_tuning_job(\nvertexai/language_models/_language_models.py:936: in _launch_tuning_job\n    job = _launch_tuning_job_on_jsonl_data(\nvertexai/language_models/_language_models.py:984: in _launch_tuning_job_on_jsonl_data\n    job = aiplatform.PipelineJob(\ngoogle/cloud/aiplatform/pipeline_jobs.py:212: in __init__\n    pipeline_json = yaml_utils.load_yaml(\ngoogle/cloud/aiplatform/utils/yaml_utils.py:56: in load_yaml\n    return _load_yaml_from_https_uri(path, credentials)\ngoogle/cloud/aiplatform/utils/yaml_utils.py:140: in _load_yaml_from_https_uri\n    credentials.refresh(transport.requests.Request())\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/service_account.py:408: in refresh\n    access_token, expiry, _ = _client.jwt_grant(\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/_client.py:193: in jwt_grant\n    response_data = _token_endpoint_request(request, token_uri, body)\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/_client.py:165: in _token_endpoint_request\n    _handle_error_response(response_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_data = {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'}\n\n    def _handle_error_response(response_data):\n        \"\"\"Translates an error response into an exception.\n    \n        Args:\n            response_data (Mapping): The decoded response data.\n    \n        Raises:\n            google.auth.exceptions.RefreshError: The errors contained in response_data.\n        \"\"\"\n        try:\n            error_details = \"{}: {}\".format(\n                response_data[\"error\"], response_data.get(\"error_description\")\n            )\n        # If no details could be extracted, use the response data.\n        except (KeyError, ValueError):\n            error_details = json.dumps(response_data)\n    \n>       raise exceptions.RefreshError(error_details, response_data)\nE       google.auth.exceptions.RefreshError: ('invalid_scope: Invalid OAuth scope or ID token audience provided.', {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'})\n\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/_client.py:60: RefreshError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667870",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2304#issuecomment-1782667870",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304",
                "id": 1782667870,
                "node_id": "IC_kwDOEcNkxM5qQVpe",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:45Z",
                "updated_at": "2023-10-27T10:20:45Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_language_models.TestLanguageModels object at 0x7f7494cfadd0>\nshared_state = {}\n\n    def test_tuning(self, shared_state):\n        \"\"\"Test tuning, listing and loading models.\"\"\"\n        aiplatform.init(project=e2e_base._PROJECT, location=e2e_base._LOCATION)\n    \n        model = language_models.TextGenerationModel.from_pretrained(\"text-bison@001\")\n    \n        import pandas\n    \n        training_data = pandas.DataFrame(\n            data=[\n                {\"input_text\": \"Input 0\", \"output_text\": \"Output 0\"},\n                {\"input_text\": \"Input 1\", \"output_text\": \"Output 1\"},\n                {\"input_text\": \"Input 2\", \"output_text\": \"Output 2\"},\n                {\"input_text\": \"Input 3\", \"output_text\": \"Output 3\"},\n                {\"input_text\": \"Input 4\", \"output_text\": \"Output 4\"},\n                {\"input_text\": \"Input 5\", \"output_text\": \"Output 5\"},\n                {\"input_text\": \"Input 6\", \"output_text\": \"Output 6\"},\n                {\"input_text\": \"Input 7\", \"output_text\": \"Output 7\"},\n                {\"input_text\": \"Input 8\", \"output_text\": \"Output 8\"},\n                {\"input_text\": \"Input 9\", \"output_text\": \"Output 9\"},\n            ]\n        )\n    \n        dataset_uri = (\n            STAGING_DIR_URI + \"/veretx_llm_tuning_training_data.text-bison.dummy.jsonl\"\n        )\n        gcs_utils._upload_pandas_df_to_gcs(\n            df=training_data, upload_gcs_path=dataset_uri\n        )\n    \n>       tuning_job = model.tune_model(\n            training_data=training_data,\n            train_steps=1,\n            tuning_job_location=\"europe-west4\",\n            tuned_model_location=\"us-central1\",\n            learning_rate_multiplier=2.0,\n            tuning_evaluation_spec=preview_language_models.TuningEvaluationSpec(\n                evaluation_data=dataset_uri,\n                evaluation_interval=37,\n                enable_early_stopping=True,\n            ),\n        )\n\ntests/system/aiplatform/test_language_models.py:326: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvertexai/language_models/_language_models.py:397: in tune_model\n    return super().tune_model(\nvertexai/language_models/_language_models.py:279: in tune_model\n    return self._tune_model(\nvertexai/language_models/_language_models.py:334: in _tune_model\n    pipeline_job = _launch_tuning_job(\nvertexai/language_models/_language_models.py:2874: in _launch_tuning_job\n    job = aiplatform.PipelineJob(\ngoogle/cloud/aiplatform/pipeline_jobs.py:218: in __init__\n    pipeline_json = yaml_utils.load_yaml(\ngoogle/cloud/aiplatform/utils/yaml_utils.py:56: in load_yaml\n    return _load_yaml_from_https_uri(path, credentials)\ngoogle/cloud/aiplatform/utils/yaml_utils.py:140: in _load_yaml_from_https_uri\n    credentials.refresh(transport.requests.Request())\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/service_account.py:438: in refresh\n    access_token, expiry, _ = _client.jwt_grant(\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/_client.py:308: in jwt_grant\n    response_data = _token_endpoint_request(\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/_client.py:279: in _token_endpoint_request\n    _handle_error_response(response_data, retryable_error)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_data = {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'}\nretryable_error = False\n\n    def _handle_error_response(response_data, retryable_error):\n        \"\"\"Translates an error response into an exception.\n    \n        Args:\n            response_data (Mapping | str): The decoded response data.\n            retryable_error Optional[bool]: A boolean indicating if an error is retryable.\n                Defaults to False.\n    \n        Raises:\n            google.auth.exceptions.RefreshError: The errors contained in response_data.\n        \"\"\"\n    \n        retryable_error = retryable_error if retryable_error else False\n    \n        if isinstance(response_data, str):\n            raise exceptions.RefreshError(response_data, retryable=retryable_error)\n        try:\n            error_details = \"{}: {}\".format(\n                response_data[\"error\"], response_data.get(\"error_description\")\n            )\n        # If no details could be extracted, use the response data.\n        except (KeyError, ValueError):\n            error_details = json.dumps(response_data)\n    \n>       raise exceptions.RefreshError(\n            error_details, response_data, retryable=retryable_error\n        )\nE       google.auth.exceptions.RefreshError: ('invalid_scope: Invalid OAuth scope or ID token audience provided.', {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'})\n\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/_client.py:72: RefreshError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667870/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:46Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895456364",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2414",
                "id": 1841613069,
                "node_id": "I_kwDOEcNkxM5txMkN",
                "number": 2414,
                "title": "tests.system.aiplatform.test_model_evaluation.TestModelEvaluationJob: test_model_evaluate_custom_tabular_model failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 91,
                "created_at": "2023-08-08T16:13:20Z",
                "updated_at": "2023-10-27T10:20:42Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "This test failed!\n\nTo configure my behavior, see [the Flaky Bot documentation](https://github.com/googleapis/repo-automation-bots/tree/main/packages/flakybot).\n\nIf I'm commenting on this issue too often, add the `flakybot: quiet` label and\nI will stop commenting.\n\n---\n\ncommit: dec8ffd80d8804d4a5afaccc1c748d886225b6bf\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/db2663fd-0466-46b4-b05b-50a9c8d71a27), [Sponge](http://sponge2/db2663fd-0466-46b4-b05b-50a9c8d71a27)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_model_evaluation.TestModelEvaluationJob object at 0x7fae102ffd30>\nshared_state = {'bucket': <Bucket: temp_vertex_sdk_model_evaluation_test-b9f13527-1989-4092-9af8-5>, 'staging_bucket_name': 'temp_ver...ation_test-b9f13527-1989-4092-9af8-5', 'storage_client': <google.cloud.storage.client.Client object at 0x7fae6d894d90>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:178: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667803",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2414#issuecomment-1782667803",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414",
                "id": 1782667803,
                "node_id": "IC_kwDOEcNkxM5qQVob",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:41Z",
                "updated_at": "2023-10-27T10:20:41Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_model_evaluation.TestModelEvaluationJob object at 0x7f5e4d4ce950>\nshared_state = {'bucket': <Bucket: temp_vertex_sdk_model_evaluation_test-c0521385-a88c-450c-a89d-e>, 'staging_bucket_name': 'temp_ver...ation_test-c0521385-a88c-450c-a89d-e', 'storage_client': <google.cloud.storage.client.Client object at 0x7f5e328859f0>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667803/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:42Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895455079",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2315",
                "id": 1767495876,
                "node_id": "I_kwDOEcNkxM5pWdjE",
                "number": 2315,
                "title": "tests.system.aiplatform.test_pipeline_job.TestPipelineJob: test_add_pipeline_job_to_experiment failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970951,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwOTUx",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20process",
                        "name": "type: process",
                        "color": "c5def5",
                        "default": false,
                        "description": "A process-related concern. May include testing, release, or the like."
                    },
                    {
                        "id": 2370970992,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwOTky",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p2",
                        "name": "priority: p2",
                        "color": "fef2c0",
                        "default": false,
                        "description": "Moderately-important priority. Fix may not be included in next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "IronPan",
                    "id": 2348602,
                    "node_id": "MDQ6VXNlcjIzNDg2MDI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2348602?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/IronPan",
                    "html_url": "https://github.com/IronPan",
                    "followers_url": "https://api.github.com/users/IronPan/followers",
                    "following_url": "https://api.github.com/users/IronPan/following{/other_user}",
                    "gists_url": "https://api.github.com/users/IronPan/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/IronPan/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/IronPan/subscriptions",
                    "organizations_url": "https://api.github.com/users/IronPan/orgs",
                    "repos_url": "https://api.github.com/users/IronPan/repos",
                    "events_url": "https://api.github.com/users/IronPan/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/IronPan/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "IronPan",
                        "id": 2348602,
                        "node_id": "MDQ6VXNlcjIzNDg2MDI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/2348602?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/IronPan",
                        "html_url": "https://github.com/IronPan",
                        "followers_url": "https://api.github.com/users/IronPan/followers",
                        "following_url": "https://api.github.com/users/IronPan/following{/other_user}",
                        "gists_url": "https://api.github.com/users/IronPan/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/IronPan/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/IronPan/subscriptions",
                        "organizations_url": "https://api.github.com/users/IronPan/orgs",
                        "repos_url": "https://api.github.com/users/IronPan/repos",
                        "events_url": "https://api.github.com/users/IronPan/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/IronPan/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 98,
                "created_at": "2023-06-21T12:30:23Z",
                "updated_at": "2023-10-27T10:20:39Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #1958 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: 2235305c7714835ff331e5294f90a6a23e31391d\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/282b2d95-c702-4500-b272-c68e5ff03574), [Sponge](http://sponge2/282b2d95-c702-4500-b272-c68e5ff03574)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job.TestPipelineJob object at 0x7fe65151b310>\nshared_state = {}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:178: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667738",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2315#issuecomment-1782667738",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315",
                "id": 1782667738,
                "node_id": "IC_kwDOEcNkxM5qQVna",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:39Z",
                "updated_at": "2023-10-27T10:20:39Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job.TestPipelineJob object at 0x7f23656be410>\nshared_state = {}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667738/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:40Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32895453670",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2576",
                "id": 1894838730,
                "node_id": "I_kwDOEcNkxM5w8PHK",
                "number": 2576,
                "title": "tests.system.aiplatform.test_matching_engine_index.TestMatchingEngine: test_create_get_list_matching_engine_index failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "nayaknishant",
                    "id": 25442602,
                    "node_id": "MDQ6VXNlcjI1NDQyNjAy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25442602?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/nayaknishant",
                    "html_url": "https://github.com/nayaknishant",
                    "followers_url": "https://api.github.com/users/nayaknishant/followers",
                    "following_url": "https://api.github.com/users/nayaknishant/following{/other_user}",
                    "gists_url": "https://api.github.com/users/nayaknishant/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/nayaknishant/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/nayaknishant/subscriptions",
                    "organizations_url": "https://api.github.com/users/nayaknishant/orgs",
                    "repos_url": "https://api.github.com/users/nayaknishant/repos",
                    "events_url": "https://api.github.com/users/nayaknishant/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/nayaknishant/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "nayaknishant",
                        "id": 25442602,
                        "node_id": "MDQ6VXNlcjI1NDQyNjAy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25442602?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/nayaknishant",
                        "html_url": "https://github.com/nayaknishant",
                        "followers_url": "https://api.github.com/users/nayaknishant/followers",
                        "following_url": "https://api.github.com/users/nayaknishant/following{/other_user}",
                        "gists_url": "https://api.github.com/users/nayaknishant/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/nayaknishant/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/nayaknishant/subscriptions",
                        "organizations_url": "https://api.github.com/users/nayaknishant/orgs",
                        "repos_url": "https://api.github.com/users/nayaknishant/repos",
                        "events_url": "https://api.github.com/users/nayaknishant/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/nayaknishant/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 52,
                "created_at": "2023-09-13T16:04:52Z",
                "updated_at": "2023-10-27T10:20:37Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #2305 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: 0fa47aea08b635159e9c6dc64f7d330f047dfb5d\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/6a410ac8-ed78-42d5-81dc-9db12d6aa1fb), [Sponge](http://sponge2/6a410ac8-ed78-42d5-81dc-9db12d6aa1fb)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-client', 'model-builder/1.32.0 gl-python/3.11.1 grpc/1.58.0 gax/2.11.1 gapic/1.32.0')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:1161: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7ff88ff34f10>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7ff88ff34d80>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(\n        state: _RPCState,\n        call: cygrpc.SegregatedCall,\n        with_call: bool,\n        deadline: Optional[float],\n    ) -> Union[ResponseType, Tuple[ResponseType, grpc.Call]]:\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)  # pytype: disable=not-instantiable\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.FAILED_PRECONDITION\nE           \tdetails = \"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:74.125.197.95:443 {created_time:\"2023-09-13T10:40:17.014736581+00:00\", grpc_status:9, grpc_message:\"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"}\"\nE           >\n\n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:1004: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_matching_engine_index.TestMatchingEngine object at 0x7ff89b301a50>\nshared_state = {'index': <google.cloud.aiplatform.matching_engine.matching_engine_index.MatchingEngineIndex object at 0x7ff89492d950>...dex object at 0x7ff89492d950> \nresource name: projects/580378083368/locations/us-central1/indexes/4011431834498891776]}\n\n    def test_create_get_list_matching_engine_index(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n        )\n    \n        # Create an index\n        index = aiplatform.MatchingEngineIndex.create_tree_ah_index(\n            display_name=_TEST_INDEX_DISPLAY_NAME,\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI,\n            dimensions=_TEST_INDEX_CONFIG_DIMENSIONS,\n            approximate_neighbors_count=_TEST_INDEX_APPROXIMATE_NEIGHBORS_COUNT,\n            distance_measure_type=_TEST_INDEX_DISTANCE_MEASURE_TYPE,\n            leaf_node_embedding_count=_TEST_LEAF_NODE_EMBEDDING_COUNT,\n            leaf_nodes_to_search_percent=_TEST_LEAF_NODES_TO_SEARCH_PERCENT,\n            description=_TEST_INDEX_DESCRIPTION,\n            labels=_TEST_LABELS,\n        )\n    \n        shared_state[\"resources\"] = [index]\n        shared_state[\"index\"] = index\n        shared_state[\"index_name\"] = index.resource_name\n    \n        # Verify that the retrieved index is the same\n        get_index = aiplatform.MatchingEngineIndex(index_name=index.resource_name)\n        assert index.resource_name == get_index.resource_name\n    \n        # Create index and check that it is listed\n        list_indexes = aiplatform.MatchingEngineIndex.list()\n        assert get_index.resource_name in [\n            index.resource_name for index in list_indexes\n        ]\n    \n        # Update the index metadata\n        updated_index = get_index.update_metadata(\n            display_name=_TEST_DISPLAY_NAME_UPDATE,\n            description=_TEST_DESCRIPTION_UPDATE,\n            labels=_TEST_LABELS_UPDATE,\n        )\n    \n        assert updated_index.name == get_index.name\n        # TODO: Reinstate assertions once b/220005272 is fixed.\n        # assert updated_index.display_name == _TEST_DISPLAY_NAME_UPDATE\n        # assert updated_index.description == _TEST_DESCRIPTION_UPDATE\n        # assert updated_index.labels == _TEST_LABELS_UPDATE\n    \n        # Update the index embeddings\n        updated_index = get_index.update_embeddings(\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI_UPDATE,\n            is_complete_overwrite=_TEST_IS_COMPLETE_OVERWRITE,\n        )\n    \n        assert updated_index.name == get_index.name\n    \n        # Create endpoint and check that it is listed\n        my_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_INDEX_ENDPOINT_DESCRIPTION,\n            network=e2e_base._VPC_NETWORK_URI,\n            labels=_TEST_LABELS,\n        )\n        assert my_index_endpoint.resource_name in [\n            index_endpoint.resource_name\n            for index_endpoint in aiplatform.MatchingEngineIndexEndpoint.list()\n        ]\n    \n        assert my_index_endpoint.labels == _TEST_LABELS\n        assert my_index_endpoint.display_name == _TEST_INDEX_ENDPOINT_DISPLAY_NAME\n        assert my_index_endpoint.description == _TEST_INDEX_ENDPOINT_DESCRIPTION\n    \n        # Create endpoint and check that it is listed\n>       public_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_PUBLIC_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_PUBLIC_INDEX_ENDPOINT_DESCRIPTION,\n            public_endpoint_enabled=True,\n            labels=_TEST_LABELS,\n        )\n\ntests/system/aiplatform/test_matching_engine_index.py:249: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:227: in create\n    return cls._create(\ngoogle/cloud/aiplatform/base.py:819: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:329: in _create\n    create_lro = api_client.create_index_endpoint(\ngoogle/cloud/aiplatform_v1/services/index_endpoint_service/client.py:594: in create_index_endpoint\n    response = rpc(\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/gapic_v1/method.py:113: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-client', 'model-builder/1.32.0 gl-python/3.11.1 grpc/1.58.0 gax/2.11.1 gapic/1.32.0')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.FailedPrecondition: 400 Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:74: FailedPrecondition</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667676",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2576#issuecomment-1782667676",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576",
                "id": 1782667676,
                "node_id": "IC_kwDOEcNkxM5qQVmc",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:20:36Z",
                "updated_at": "2023-10-27T10:20:36Z",
                "author_association": "NONE",
                "body": "commit: 0b825c9f4615d119859dc3c3ecaf558614d5e148\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/85629f69-1a1c-40da-98f8-53c12fa6cd4e), [Sponge](http://sponge2/85629f69-1a1c-40da-98f8-53c12fa6cd4e)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-clie...or_method+google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint.MatchingEngineIndexEndpoint.create')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-10/lib/python3.10/site-packages/google/api_core/grpc_helpers.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-10/lib/python3.10/site-packages/grpc/_channel.py:946: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7fc3b95c6f80>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7fc3b95e1200>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(state, call, with_call, deadline):\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.FAILED_PRECONDITION\nE           \tdetails = \"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:142.250.99.95:443 {created_time:\"2023-10-27T03:50:30.645516471+00:00\", grpc_status:9, grpc_message:\"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"}\"\nE           >\n\n.nox/system-3-10/lib/python3.10/site-packages/grpc/_channel.py:849: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_matching_engine_index.TestMatchingEngine object at 0x7fc3c081efe0>\nshared_state = {'index': <google.cloud.aiplatform.matching_engine.matching_engine_index.MatchingEngineIndex object at 0x7fc3be7029b0>...dex object at 0x7fc3be7029b0> \nresource name: projects/580378083368/locations/us-central1/indexes/5839765739862491136]}\n\n    def test_create_get_list_matching_engine_index(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n        )\n    \n        # Create an index\n        index = aiplatform.MatchingEngineIndex.create_tree_ah_index(\n            display_name=_TEST_INDEX_DISPLAY_NAME,\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI,\n            dimensions=_TEST_INDEX_CONFIG_DIMENSIONS,\n            approximate_neighbors_count=_TEST_INDEX_APPROXIMATE_NEIGHBORS_COUNT,\n            distance_measure_type=_TEST_INDEX_DISTANCE_MEASURE_TYPE,\n            leaf_node_embedding_count=_TEST_LEAF_NODE_EMBEDDING_COUNT,\n            leaf_nodes_to_search_percent=_TEST_LEAF_NODES_TO_SEARCH_PERCENT,\n            description=_TEST_INDEX_DESCRIPTION,\n            labels=_TEST_LABELS,\n        )\n    \n        shared_state[\"resources\"] = [index]\n        shared_state[\"index\"] = index\n        shared_state[\"index_name\"] = index.resource_name\n    \n        # Verify that the retrieved index is the same\n        get_index = aiplatform.MatchingEngineIndex(index_name=index.resource_name)\n        assert index.resource_name == get_index.resource_name\n    \n        # Create index and check that it is listed\n        list_indexes = aiplatform.MatchingEngineIndex.list()\n        assert get_index.resource_name in [\n            index.resource_name for index in list_indexes\n        ]\n    \n        # Update the index metadata\n        updated_index = get_index.update_metadata(\n            display_name=_TEST_DISPLAY_NAME_UPDATE,\n            description=_TEST_DESCRIPTION_UPDATE,\n            labels=_TEST_LABELS_UPDATE,\n        )\n    \n        assert updated_index.name == get_index.name\n        # TODO: Reinstate assertions once b/220005272 is fixed.\n        # assert updated_index.display_name == _TEST_DISPLAY_NAME_UPDATE\n        # assert updated_index.description == _TEST_DESCRIPTION_UPDATE\n        # assert updated_index.labels == _TEST_LABELS_UPDATE\n    \n        # Update the index embeddings\n        updated_index = get_index.update_embeddings(\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI_UPDATE,\n            is_complete_overwrite=_TEST_IS_COMPLETE_OVERWRITE,\n        )\n    \n        assert updated_index.name == get_index.name\n    \n        # Create endpoint and check that it is listed\n        my_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_INDEX_ENDPOINT_DESCRIPTION,\n            network=e2e_base._VPC_NETWORK_URI,\n            labels=_TEST_LABELS,\n        )\n        assert my_index_endpoint.resource_name in [\n            index_endpoint.resource_name\n            for index_endpoint in aiplatform.MatchingEngineIndexEndpoint.list()\n        ]\n    \n        assert my_index_endpoint.labels == _TEST_LABELS\n        assert my_index_endpoint.display_name == _TEST_INDEX_ENDPOINT_DISPLAY_NAME\n        assert my_index_endpoint.description == _TEST_INDEX_ENDPOINT_DESCRIPTION\n    \n        # Create endpoint and check that it is listed\n>       public_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_PUBLIC_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_PUBLIC_INDEX_ENDPOINT_DESCRIPTION,\n            public_endpoint_enabled=True,\n            labels=_TEST_LABELS,\n        )\n\ntests/system/aiplatform/test_matching_engine_index.py:249: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:227: in create\n    return cls._create(\ngoogle/cloud/aiplatform/base.py:817: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:329: in _create\n    create_lro = api_client.create_index_endpoint(\ngoogle/cloud/aiplatform_v1/services/index_endpoint_service/client.py:594: in create_index_endpoint\n    response = rpc(\n.nox/system-3-10/lib/python3.10/site-packages/google/api_core/gapic_v1/method.py:113: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-clie...or_method+google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint.MatchingEngineIndexEndpoint.create')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.FailedPrecondition: 400 Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\n\n.nox/system-3-10/lib/python3.10/site-packages/google/api_core/grpc_helpers.py:67: FailedPrecondition</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782667676/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:20:37Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885715046",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 13503072,
            "login": "wdhorton",
            "display_login": "wdhorton",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wdhorton",
            "avatar_url": "https://avatars.githubusercontent.com/u/13503072?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866",
                "id": 1964530202,
                "node_id": "PR_kwDOEcNkxM5d66wy",
                "number": 2866,
                "title": "Fix issue with LLM async streaming",
                "user": {
                    "login": "wdhorton",
                    "id": 13503072,
                    "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wdhorton",
                    "html_url": "https://github.com/wdhorton",
                    "followers_url": "https://api.github.com/users/wdhorton/followers",
                    "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                    "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                    "repos_url": "https://api.github.com/users/wdhorton/repos",
                    "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3989549216,
                        "node_id": "LA_kwDOEcNkxM7ty7Cg",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/size:%20xs",
                        "name": "size: xs",
                        "color": "ae5816",
                        "default": false,
                        "description": "Pull request size is extra small."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-26T23:44:53Z",
                "updated_at": "2023-10-27T01:30:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866",
                    "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866",
                    "diff_url": "https://github.com/googleapis/python-aiplatform/pull/2866.diff",
                    "patch_url": "https://github.com/googleapis/python-aiplatform/pull/2866.patch",
                    "merged_at": null
                },
                "body": "I was installing the library from master to try out the unreleased LLM async streaming functionality. I ran into this error:\r\n```\r\n   File \"my_code.py\", line 126, in _gen\r\n     async for response in response_gen:\r\n   File \"/usr/local/lib/python3.10/site-packages/vertexai/language_models/_language_models.py\", line 947, in predict_streaming_async\r\n     async for prediction_dict in _streaming_prediction.predict_stream_of_dicts_from_single_dict_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 242, in predict_stream_of_dicts_from_single_dict_async\r\n     async for dict_list in predict_stream_of_dict_lists_from_single_dict_list_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 186, in predict_stream_of_dict_lists_from_single_dict_list_async\r\n     async for tensor_list in predict_stream_of_tensor_lists_from_single_tensor_list_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 133, in predict_stream_of_tensor_lists_from_single_tensor_list_async\r\n     async for response in prediction_service_async_client.server_streaming_predict(\r\n TypeError: 'async for' requires an object with __aiter__ method, got coroutine\r\n```\r\n\r\nAfter debugging my code and then digging into the library code, I think I spotted the issue.\r\n\r\nThe `server_streaming_predict` method being called in the last line of the trace has the return signature `Awaitable[AsyncIterable[prediction_service.StreamingPredictResponse]]`, which means it's not returning an `AsyncIterable` directly, but must be `await`ed first. This can be seen in the code snippet in the method's docstring:\r\n```\r\n            async def sample_server_streaming_predict():\r\n                # Create a client\r\n                client = aiplatform_v1.PredictionServiceAsyncClient()\r\n\r\n                # Initialize request argument(s)\r\n                request = aiplatform_v1.StreamingPredictRequest(\r\n                    endpoint=\"endpoint_value\",\r\n                )\r\n\r\n                # Make the request\r\n                stream = await client.server_streaming_predict(request=request)\r\n\r\n                # Handle the response\r\n                async for response in stream:\r\n                    print(response)\r\n```\r\n\r\nYou have to `await` before passing it to `async for`\r\n\r\nThis change should fix the issue",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782152786",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866#issuecomment-1782152786",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866",
                "id": 1782152786,
                "node_id": "IC_kwDOEcNkxM5qOX5S",
                "user": {
                    "login": "wdhorton",
                    "id": 13503072,
                    "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wdhorton",
                    "html_url": "https://github.com/wdhorton",
                    "followers_url": "https://api.github.com/users/wdhorton/followers",
                    "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                    "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                    "repos_url": "https://api.github.com/users/wdhorton/repos",
                    "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:30:49Z",
                "updated_at": "2023-10-27T01:30:49Z",
                "author_association": "NONE",
                "body": "I just tested my internal code with the patched version of the library and it did resolve the error I was seeing",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782152786/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:30:50Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885605900",
        "type": "PushEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "repository_id": 298017988,
            "push_id": 15585129393,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/copybara_577027107",
            "head": "60768b2ef32bb6b3075816910ecd2aee588d04a1",
            "before": "5c1d8e53053da183255437156129e9f3dde3f681",
            "commits": [
                {
                    "sha": "60768b2ef32bb6b3075816910ecd2aee588d04a1",
                    "author": {
                        "email": "tangmatthew@google.com",
                        "name": "Matthew Tang"
                    },
                    "message": "fix: Raise exception for RoV BQ Write for too many rate limit exceeded\n\nPiperOrigin-RevId: 577027107",
                    "distinct": true,
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/commits/60768b2ef32bb6b3075816910ecd2aee588d04a1"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T01:22:07Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885604583",
        "type": "PushEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "repository_id": 298017988,
            "push_id": 15585128678,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/copybara_577025699",
            "head": "e5abb5b5047e91ca20990b3aa84f4d503aa5b7aa",
            "before": "138837a77d2a12cc958c8297df35b9722591c15a",
            "commits": [
                {
                    "sha": "e5abb5b5047e91ca20990b3aa84f4d503aa5b7aa",
                    "author": {
                        "email": "tangmatthew@google.com",
                        "name": "Matthew Tang"
                    },
                    "message": "fix: Rollback BigQuery Datasource to use do_write() interface\n\nPiperOrigin-RevId: 577025699",
                    "distinct": true,
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/commits/e5abb5b5047e91ca20990b3aa84f4d503aa5b7aa"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T01:22:00Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885543972",
        "type": "IssuesEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2827",
                "id": 1953482407,
                "node_id": "I_kwDOEcNkxM50b8an",
                "number": 2827,
                "title": "tests.system.aiplatform.test_experiments.TestExperiments: test_log_model failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "ZhenyiQ",
                    "id": 125383657,
                    "node_id": "U_kgDOB3kz6Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ZhenyiQ",
                    "html_url": "https://github.com/ZhenyiQ",
                    "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                    "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                    "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                    "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                    "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "ZhenyiQ",
                        "id": 125383657,
                        "node_id": "U_kgDOB3kz6Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ZhenyiQ",
                        "html_url": "https://github.com/ZhenyiQ",
                        "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                        "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                        "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                        "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                        "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-10-20T04:11:19Z",
                "updated_at": "2023-10-27T01:16:55Z",
                "closed_at": "2023-10-27T01:16:55Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #1944 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: eb6071fe567ef80ba5490b9eaae0cedd6958aac5\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/8f121aa4-ded5-4afe-9092-c7e1ac231655), [Sponge](http://sponge2/8f121aa4-ded5-4afe-9092-c7e1ac231655)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:946: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7f117f638890>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7f117f63ae40>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(state, call, with_call, deadline):\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.UNAVAILABLE\nE           \tdetails = \"The service is currently unavailable.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:74.125.20.95:443 {grpc_message:\"The service is currently unavailable.\", grpc_status:14, created_time:\"2023-10-19T20:24:04.262912227+00:00\"}\"\nE           >\n\n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:849: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7f1181419690>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-af83d61e-7c75-4e99-9d34-0d6319466f79>, 'resources': [<google.cloud.aiplatform.tenso...af83d61e-7c75-4e99-9d34-0d6319466f79', 'storage_client': <google.cloud.storage.client.Client object at 0x7f117f7ca750>}\n\n    def test_log_model(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n        aiplatform.start_run(_RUN, resume=True)\n    \n        train_x = np.array([[1, 1], [1, 2], [2, 2], [2, 3]])\n        train_y = np.dot(train_x, np.array([1, 2])) + 3\n        model = LinearRegression()\n        model.fit(train_x, train_y)\n    \n        model_artifact = aiplatform.log_model(\n            model=model,\n            artifact_id=\"sklearn-model\",\n            uri=f\"gs://{shared_state['staging_bucket_name']}/sklearn-model\",\n            input_example=train_x,\n        )\n        shared_state[\"resources\"].append(model_artifact)\n    \n>       run = aiplatform.ExperimentRun(run_name=_RUN, experiment=self._experiment_name)\n\ntests/system/aiplatform/test_experiments.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:175: in __init__\n    self._backing_tensorboard_run = self._lookup_tensorboard_run_artifact()\ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:382: in _lookup_tensorboard_run_artifact\n    resource=tensorboard_resource.TensorboardRun(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:651: in __init__\n    self._get_time_series_display_name_to_id_mapping()\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:917: in _get_time_series_display_name_to_id_mapping\n    time_series = TensorboardTimeSeries.list(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:1302: in list\n    return super()._list(\ngoogle/cloud/aiplatform/base.py:1128: in _list\n    resource_list = resource_list_method(request=list_request) or []\ngoogle/cloud/aiplatform_v1/services/tensorboard_service/client.py:3376: in list_tensorboard_time_series\n    response = rpc(\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/gapic_v1/method.py:131: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.ServiceUnavailable: 503 The service is currently unavailable.\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:77: ServiceUnavailable</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:56Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885543772",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2827",
                "id": 1953482407,
                "node_id": "I_kwDOEcNkxM50b8an",
                "number": 2827,
                "title": "tests.system.aiplatform.test_experiments.TestExperiments: test_log_model failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "ZhenyiQ",
                    "id": 125383657,
                    "node_id": "U_kgDOB3kz6Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ZhenyiQ",
                    "html_url": "https://github.com/ZhenyiQ",
                    "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                    "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                    "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                    "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                    "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "ZhenyiQ",
                        "id": 125383657,
                        "node_id": "U_kgDOB3kz6Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/125383657?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ZhenyiQ",
                        "html_url": "https://github.com/ZhenyiQ",
                        "followers_url": "https://api.github.com/users/ZhenyiQ/followers",
                        "following_url": "https://api.github.com/users/ZhenyiQ/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ZhenyiQ/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ZhenyiQ/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ZhenyiQ/subscriptions",
                        "organizations_url": "https://api.github.com/users/ZhenyiQ/orgs",
                        "repos_url": "https://api.github.com/users/ZhenyiQ/repos",
                        "events_url": "https://api.github.com/users/ZhenyiQ/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ZhenyiQ/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-10-20T04:11:19Z",
                "updated_at": "2023-10-27T01:16:54Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #1944 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: eb6071fe567ef80ba5490b9eaae0cedd6958aac5\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/8f121aa4-ded5-4afe-9092-c7e1ac231655), [Sponge](http://sponge2/8f121aa4-ded5-4afe-9092-c7e1ac231655)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:946: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7f117f638890>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7f117f63ae40>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(state, call, with_call, deadline):\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.UNAVAILABLE\nE           \tdetails = \"The service is currently unavailable.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:74.125.20.95:443 {grpc_message:\"The service is currently unavailable.\", grpc_status:14, created_time:\"2023-10-19T20:24:04.262912227+00:00\"}\"\nE           >\n\n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:849: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7f1181419690>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-af83d61e-7c75-4e99-9d34-0d6319466f79>, 'resources': [<google.cloud.aiplatform.tenso...af83d61e-7c75-4e99-9d34-0d6319466f79', 'storage_client': <google.cloud.storage.client.Client object at 0x7f117f7ca750>}\n\n    def test_log_model(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n        aiplatform.start_run(_RUN, resume=True)\n    \n        train_x = np.array([[1, 1], [1, 2], [2, 2], [2, 3]])\n        train_y = np.dot(train_x, np.array([1, 2])) + 3\n        model = LinearRegression()\n        model.fit(train_x, train_y)\n    \n        model_artifact = aiplatform.log_model(\n            model=model,\n            artifact_id=\"sklearn-model\",\n            uri=f\"gs://{shared_state['staging_bucket_name']}/sklearn-model\",\n            input_example=train_x,\n        )\n        shared_state[\"resources\"].append(model_artifact)\n    \n>       run = aiplatform.ExperimentRun(run_name=_RUN, experiment=self._experiment_name)\n\ntests/system/aiplatform/test_experiments.py:210: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:175: in __init__\n    self._backing_tensorboard_run = self._lookup_tensorboard_run_artifact()\ngoogle/cloud/aiplatform/metadata/experiment_run_resource.py:382: in _lookup_tensorboard_run_artifact\n    resource=tensorboard_resource.TensorboardRun(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:651: in __init__\n    self._get_time_series_display_name_to_id_mapping()\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:917: in _get_time_series_display_name_to_id_mapping\n    time_series = TensorboardTimeSeries.list(\ngoogle/cloud/aiplatform/tensorboard/tensorboard_resource.py:1302: in list\n    return super()._list(\ngoogle/cloud/aiplatform/base.py:1128: in _list\n    resource_list = resource_list_method(request=list_request) or []\ngoogle/cloud/aiplatform_v1/services/tensorboard_service/client.py:3376: in list_tensorboard_time_series\n    response = rpc(\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/gapic_v1/method.py:131: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/580378083368/locations/us-central1/tensorboards/7633605766439501824/experiments/tmpvrtxsdk-e2e--ed67e2d9-df39-4988-a636-64bb269f64f5/runs/run-1\"\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/580378083368/locations/us-central1/tensorboards/7633605766439....35.0+top_google_constructor_method+google.cloud.aiplatform.metadata.experiment_run_resource.ExperimentRun.__init__')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.ServiceUnavailable: 503 The service is currently unavailable.\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:77: ServiceUnavailable</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143462",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2827#issuecomment-1782143462",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2827",
                "id": 1782143462,
                "node_id": "IC_kwDOEcNkxM5qOVnm",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:54Z",
                "updated_at": "2023-10-27T01:16:54Z",
                "author_association": "NONE",
                "body": "Test passed for commit 50f857f47dc854851ca5812840c79f260d61c868 ([Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca))! Closing this issue.",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143462/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:55Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885543528",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2634",
                "id": 1914566514,
                "node_id": "I_kwDOEcNkxM5yHfdy",
                "number": 2634,
                "title": "tests.system.aiplatform.test_pipeline_job_schedule.TestPipelineJobSchedule: test_create_get_pause_resume_update_list failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 36,
                "created_at": "2023-09-27T02:16:23Z",
                "updated_at": "2023-10-27T01:16:53Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "This test failed!\n\nTo configure my behavior, see [the Flaky Bot documentation](https://github.com/googleapis/repo-automation-bots/tree/main/packages/flakybot).\n\nIf I'm commenting on this issue too often, add the `flakybot: quiet` label and\nI will stop commenting.\n\n---\n\ncommit: 23dae360031967adcd4261579c3fe860b2771958\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/efba17e1-86d9-4441-a020-eb15ee6fce2c), [Sponge](http://sponge2/efba17e1-86d9-4441-a020-eb15ee6fce2c)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job_schedule.TestPipelineJobSchedule object at 0x7f6a037e1d90>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-pjs-8a419546-76d8-42b6-8e43-8bd42b5d2028>, 'staging_bucket_name': 'tmpvrtxsdk-e2e-pjs-8a419546-76d8-42b6-8e43-8bd42b5d2028', 'storage_client': <google.cloud.storage.client.Client object at 0x7f6a01423590>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143452",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2634#issuecomment-1782143452",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2634",
                "id": 1782143452,
                "node_id": "IC_kwDOEcNkxM5qOVnc",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:53Z",
                "updated_at": "2023-10-27T01:16:53Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job_schedule.TestPipelineJobSchedule object at 0x7f9089321b40>\nshared_state = {'bucket': <Bucket: tmpvrtxsdk-e2e-pjs-e1c21538-9242-4828-aaaa-6097e757b798>, 'staging_bucket_name': 'tmpvrtxsdk-e2e-pjs-e1c21538-9242-4828-aaaa-6097e757b798', 'storage_client': <google.cloud.storage.client.Client object at 0x7f9088553be0>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143452/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:53Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885543155",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2783",
                "id": 1929377930,
                "node_id": "I_kwDOEcNkxM5y__iK",
                "number": 2783,
                "title": "tests.system.aiplatform.test_custom_job.TestCustomJob: test_from_local_script_enable_autolog_prebuilt_container failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "jaycee-li",
                    "id": 102714969,
                    "node_id": "U_kgDOBh9OWQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jaycee-li",
                    "html_url": "https://github.com/jaycee-li",
                    "followers_url": "https://api.github.com/users/jaycee-li/followers",
                    "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                    "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                    "repos_url": "https://api.github.com/users/jaycee-li/repos",
                    "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "jaycee-li",
                        "id": 102714969,
                        "node_id": "U_kgDOBh9OWQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jaycee-li",
                        "html_url": "https://github.com/jaycee-li",
                        "followers_url": "https://api.github.com/users/jaycee-li/followers",
                        "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                        "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                        "repos_url": "https://api.github.com/users/jaycee-li/repos",
                        "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 24,
                "created_at": "2023-10-06T03:34:54Z",
                "updated_at": "2023-10-27T01:16:51Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #2081 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: 9fedd34d004a60c7105c066085a296bc12b28138\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/aaf17fbf-f2da-418c-82e6-ee39b893cb83), [Sponge](http://sponge2/aaf17fbf-f2da-418c-82e6-ee39b893cb83)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_custom_job.TestCustomJob object at 0x7f2d1ac29110>\nshared_state = {'bucket': <Bucket: temp-vertex-sdk-custom-job-e4836847-d29e-4278-acf7-b7d38eaca022>, 'resources': [<google.cloud.aipl...e4836847-d29e-4278-acf7-b7d38eaca022', 'storage_client': <google.cloud.storage.client.Client object at 0x7f2cd6139c50>}\n\n    def test_from_local_script_enable_autolog_prebuilt_container(self, shared_state):\n    \n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            staging_bucket=shared_state[\"staging_bucket_name\"],\n            experiment=self._experiment_name,\n            experiment_tensorboard=self._backing_tensorboard,\n        )\n    \n        shared_state[\"resources\"].append(self._backing_tensorboard)\n        shared_state[\"resources\"].append(\n            aiplatform.metadata.metadata._experiment_tracker.experiment\n        )\n    \n        display_name = self._make_display_name(\"custom-job\")\n    \n        custom_job = aiplatform.CustomJob.from_local_script(\n            display_name=display_name,\n            script_path=_LOCAL_TRAINING_SCRIPT_PATH,\n            container_uri=_PREBUILT_CONTAINER_IMAGE,\n            requirements=[\"scikit-learn\", \"pandas\"],\n            enable_autolog=True,\n        )\n    \n>       custom_job.run(\n            experiment=self._experiment_name,\n            experiment_run=self._experiment_run_name,\n            service_account=self._service_account,\n        )\n\ntests/system/aiplatform/test_custom_job.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/jobs.py:1712: in run\n    self._run(\ngoogle/cloud/aiplatform/base.py:816: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/jobs.py:1813: in _run\n    self._block_until_complete()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <google.cloud.aiplatform.jobs.CustomJob object at 0x7f2df7ffa910> \nresource name: projects/580378083368/locations/us-central1/customJobs/3172255216963682304\n\n    def _block_until_complete(self):\n        \"\"\"Helper method to block and check on runnable job until complete.\n    \n        Raises:\n            RuntimeError: If job failed or cancelled.\n        \"\"\"\n    \n        log_wait = _LOG_WAIT_TIME\n    \n        previous_time = time.time()\n        while self.state not in _JOB_COMPLETE_STATES:\n            current_time = time.time()\n            if current_time - previous_time >= _LOG_WAIT_TIME:\n                self._log_job_state()\n                log_wait = min(log_wait * _WAIT_TIME_MULTIPLIER, _MAX_WAIT_TIME)\n                previous_time = current_time\n            self._log_web_access_uris()\n            time.sleep(_JOB_WAIT_TIME)\n    \n        self._log_job_state()\n    \n        if isinstance(self, CustomJob) and self._experiment_run:\n            # sync resource before end run\n            self._experiment_run = aiplatform.ExperimentRun.get(\n                self._experiment_run.name,\n                experiment=self._experiment,\n            )\n            self._experiment_run.end_run()\n    \n        # Error is only populated when the job state is\n        # JOB_STATE_FAILED or JOB_STATE_CANCELLED.\n        if self._gca_resource.state in _JOB_ERROR_STATES:\n>           raise RuntimeError(\"Job failed with:\\n%s\" % self._gca_resource.error)\nE           RuntimeError: Job failed with:\nE           code: 3\nE           message: \"The replica workerpool0-0 exited with a non-zero status of 1. To find out more about why your job exited please check the logs: https://console.cloud.google.com/logs/viewer?project=580378083368&resource=ml_job%2Fjob_id%2F3172255216963682304&advancedFilter=resource.type%3D%22ml_job%22%0Aresource.labels.job_id%3D%223172255216963682304%22\"\n\ngoogle/cloud/aiplatform/jobs.py:1109: RuntimeError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143429",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2783#issuecomment-1782143429",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2783",
                "id": 1782143429,
                "node_id": "IC_kwDOEcNkxM5qOVnF",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:51Z",
                "updated_at": "2023-10-27T01:16:51Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_custom_job.TestCustomJob object at 0x7f5b75e5c070>\nshared_state = {'bucket': <Bucket: temp-vertex-sdk-custom-job-3b9aa34a-4527-45ea-afb9-98e974db668d>, 'resources': [<google.cloud.aipl...3b9aa34a-4527-45ea-afb9-98e974db668d', 'storage_client': <google.cloud.storage.client.Client object at 0x7f5b5a4a3e20>}\n\n    def test_from_local_script_enable_autolog_prebuilt_container(self, shared_state):\n    \n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            staging_bucket=shared_state[\"staging_bucket_name\"],\n            experiment=self._experiment_name,\n            experiment_tensorboard=self._backing_tensorboard,\n        )\n    \n        shared_state[\"resources\"].append(self._backing_tensorboard)\n        shared_state[\"resources\"].append(\n            aiplatform.metadata.metadata._experiment_tracker.experiment\n        )\n    \n        display_name = self._make_display_name(\"custom-job\")\n    \n        custom_job = aiplatform.CustomJob.from_local_script(\n            display_name=display_name,\n            script_path=_LOCAL_TRAINING_SCRIPT_PATH,\n            container_uri=_PREBUILT_CONTAINER_IMAGE,\n            requirements=[\"scikit-learn\", \"pandas\"],\n            enable_autolog=True,\n        )\n    \n>       custom_job.run(\n            experiment=self._experiment_name,\n            experiment_run=self._experiment_run_name,\n            service_account=self._service_account,\n        )\n\ntests/system/aiplatform/test_custom_job.py:146: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/jobs.py:1714: in run\n    self._run(\ngoogle/cloud/aiplatform/base.py:817: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/jobs.py:1815: in _run\n    self._block_until_complete()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <google.cloud.aiplatform.jobs.CustomJob object at 0x7f5c55f84ac0> \nresource name: projects/580378083368/locations/us-central1/customJobs/7005976835355836416\n\n    def _block_until_complete(self):\n        \"\"\"Helper method to block and check on runnable job until complete.\n    \n        Raises:\n            RuntimeError: If job failed or cancelled.\n        \"\"\"\n    \n        log_wait = _LOG_WAIT_TIME\n    \n        previous_time = time.time()\n        while self.state not in _JOB_COMPLETE_STATES:\n            current_time = time.time()\n            if current_time - previous_time >= _LOG_WAIT_TIME:\n                self._log_job_state()\n                log_wait = min(log_wait * _WAIT_TIME_MULTIPLIER, _MAX_WAIT_TIME)\n                previous_time = current_time\n            self._log_web_access_uris()\n            time.sleep(_JOB_WAIT_TIME)\n    \n        self._log_job_state()\n    \n        if isinstance(self, CustomJob) and self._experiment_run:\n            # sync resource before end run\n            self._experiment_run = aiplatform.ExperimentRun.get(\n                self._experiment_run.name,\n                experiment=self._experiment,\n            )\n            self._experiment_run.end_run()\n    \n        # Error is only populated when the job state is\n        # JOB_STATE_FAILED or JOB_STATE_CANCELLED.\n        if self._gca_resource.state in _JOB_ERROR_STATES:\n>           raise RuntimeError(\"Job failed with:\\n%s\" % self._gca_resource.error)\nE           RuntimeError: Job failed with:\nE           code: 3\nE           message: \"The replica workerpool0-0 exited with a non-zero status of 1. To find out more about why your job exited please check the logs: https://console.cloud.google.com/logs/viewer?project=580378083368&resource=ml_job%2Fjob_id%2F7005976835355836416&advancedFilter=resource.type%3D%22ml_job%22%0Aresource.labels.job_id%3D%227005976835355836416%22\"\n\ngoogle/cloud/aiplatform/jobs.py:1111: RuntimeError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143429/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:52Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885542857",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2410",
                "id": 1841612765,
                "node_id": "I_kwDOEcNkxM5txMfd",
                "number": 2410,
                "title": "tests.system.aiplatform.test_experiments.TestExperiments: test_get_experiments_df failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370970992,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwOTky",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p2",
                        "name": "priority: p2",
                        "color": "fef2c0",
                        "default": false,
                        "description": "Moderately-important priority. Fix may not be included in next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "jaycee-li",
                    "id": 102714969,
                    "node_id": "U_kgDOBh9OWQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jaycee-li",
                    "html_url": "https://github.com/jaycee-li",
                    "followers_url": "https://api.github.com/users/jaycee-li/followers",
                    "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                    "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                    "repos_url": "https://api.github.com/users/jaycee-li/repos",
                    "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "jaycee-li",
                        "id": 102714969,
                        "node_id": "U_kgDOBh9OWQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/102714969?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jaycee-li",
                        "html_url": "https://github.com/jaycee-li",
                        "followers_url": "https://api.github.com/users/jaycee-li/followers",
                        "following_url": "https://api.github.com/users/jaycee-li/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jaycee-li/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jaycee-li/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jaycee-li/subscriptions",
                        "organizations_url": "https://api.github.com/users/jaycee-li/orgs",
                        "repos_url": "https://api.github.com/users/jaycee-li/repos",
                        "events_url": "https://api.github.com/users/jaycee-li/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jaycee-li/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 90,
                "created_at": "2023-08-08T16:13:08Z",
                "updated_at": "2023-10-27T01:16:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #2277 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: dec8ffd80d8804d4a5afaccc1c748d886225b6bf\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/db2663fd-0466-46b4-b05b-50a9c8d71a27), [Sponge](http://sponge2/db2663fd-0466-46b4-b05b-50a9c8d71a27)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7fae104175b0>\n\n    def test_get_experiments_df(self):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n    \n        df = aiplatform.get_experiment_df()\n    \n        pipelines_param_and_metrics = {\n            \"param.dropout_rate\": 0.2,\n            \"param.learning_rate\": 0.1,\n            \"metric.accuracy\": 0.8,\n            \"metric.mse\": 1.2,\n        }\n    \n        true_df_dict_1 = {f\"metric.{key}\": value for key, value in _METRICS.items()}\n        for key, value in _PARAMS.items():\n            true_df_dict_1[f\"param.{key}\"] = value\n    \n        true_df_dict_1[\"experiment_name\"] = self._experiment_name\n        true_df_dict_1[\"run_name\"] = _RUN\n        true_df_dict_1[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_1[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_1[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 4.0\n    \n        true_df_dict_2 = {f\"metric.{key}\": value for key, value in _METRICS_2.items()}\n        for key, value in _PARAMS_2.items():\n            true_df_dict_2[f\"param.{key}\"] = value\n    \n        true_df_dict_2[\"experiment_name\"] = self._experiment_name\n        true_df_dict_2[\"run_name\"] = _RUN_2\n        true_df_dict_2[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_2[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_2[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 0.0\n    \n        true_df_dict_3 = {\n            \"experiment_name\": self._experiment_name,\n            \"run_name\": self._pipeline_job_id,\n            \"run_type\": aiplatform.metadata.constants.SYSTEM_PIPELINE_RUN,\n            \"state\": aiplatform.gapic.Execution.State.COMPLETE.name,\n            \"time_series_metric.accuracy\": 0.0,\n        }\n    \n        true_df_dict_3.update(pipelines_param_and_metrics)\n    \n        for key in pipelines_param_and_metrics.keys():\n            true_df_dict_1[key] = 0.0\n            true_df_dict_2[key] = 0.0\n    \n        for key in _PARAMS.keys():\n            true_df_dict_3[f\"param.{key}\"] = 0.0\n    \n        for key in _METRICS.keys():\n            true_df_dict_3[f\"metric.{key}\"] = 0.0\n    \n>       assert sorted(\n            [true_df_dict_1, true_df_dict_2, true_df_dict_3],\n            key=lambda d: d[\"run_name\"],\n        ) == sorted(df.fillna(0.0).to_dict(\"records\"), key=lambda d: d[\"run_name\"])\nE       AssertionError: assert [{'experiment...1': 0.0, ...}] == [{'experiment...1': 0.0, ...}]\nE         At index 0 diff: {'metric.sdk-metric-test-1': 0.8, 'metric.sdk-metric-test-2': 100.0, 'param.sdk-param-test-1': 0.1, 'param.sdk-param-test-2': 0.2, 'experiment_name': 'tmpvrtxsdk-e2e--1df19484-ccd7-47bf-95af-96768e61fafb', 'run_name': 'run-1', 'state': 'COMPLETE', 'run_type': 'system.ExperimentRun', 'time_series_metric.accuracy': 4.0, 'param.dropout_rate': 0.0, 'param.learning_rate': 0.0, 'metric.accuracy': 0.0, 'metric.mse': 0.0} != {'experiment_name': 'tmpvrtxsdk-e2e--1df19484-ccd7-47bf-95af-96768e61fafb', 'run_name': 'run-1', 'run_type': 'system.ExperimentRun', 'stat...\nE         \nE         ...Full output truncated (2 lines hidden), use '-vv' to show\n\ntests/system/aiplatform/test_experiments.py:441: AssertionError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143417",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2410#issuecomment-1782143417",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2410",
                "id": 1782143417,
                "node_id": "IC_kwDOEcNkxM5qOVm5",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:49Z",
                "updated_at": "2023-10-27T01:16:49Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_experiments.TestExperiments object at 0x7f8eb2221cc0>\n\n    def test_get_experiments_df(self):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n            experiment=self._experiment_name,\n        )\n    \n        df = aiplatform.get_experiment_df()\n    \n        pipelines_param_and_metrics = {\n            \"param.dropout_rate\": 0.2,\n            \"param.learning_rate\": 0.1,\n            \"metric.accuracy\": 0.8,\n            \"metric.mse\": 1.2,\n        }\n    \n        true_df_dict_1 = {f\"metric.{key}\": value for key, value in _METRICS.items()}\n        for key, value in _PARAMS.items():\n            true_df_dict_1[f\"param.{key}\"] = value\n    \n        true_df_dict_1[\"experiment_name\"] = self._experiment_name\n        true_df_dict_1[\"run_name\"] = _RUN\n        true_df_dict_1[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_1[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_1[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 4.0\n    \n        true_df_dict_2 = {f\"metric.{key}\": value for key, value in _METRICS_2.items()}\n        for key, value in _PARAMS_2.items():\n            true_df_dict_2[f\"param.{key}\"] = value\n    \n        true_df_dict_2[\"experiment_name\"] = self._experiment_name\n        true_df_dict_2[\"run_name\"] = _RUN_2\n        true_df_dict_2[\"state\"] = aiplatform.gapic.Execution.State.COMPLETE.name\n        true_df_dict_2[\"run_type\"] = aiplatform.metadata.constants.SYSTEM_EXPERIMENT_RUN\n        true_df_dict_2[f\"time_series_metric.{_TIME_SERIES_METRIC_KEY}\"] = 0.0\n    \n        true_df_dict_3 = {\n            \"experiment_name\": self._experiment_name,\n            \"run_name\": self._pipeline_job_id,\n            \"run_type\": aiplatform.metadata.constants.SYSTEM_PIPELINE_RUN,\n            \"state\": aiplatform.gapic.Execution.State.COMPLETE.name,\n            \"time_series_metric.accuracy\": 0.0,\n        }\n    \n        true_df_dict_3.update(pipelines_param_and_metrics)\n    \n        for key in pipelines_param_and_metrics.keys():\n            true_df_dict_1[key] = 0.0\n            true_df_dict_2[key] = 0.0\n    \n        for key in _PARAMS.keys():\n            true_df_dict_3[f\"param.{key}\"] = 0.0\n    \n        for key in _METRICS.keys():\n            true_df_dict_3[f\"metric.{key}\"] = 0.0\n    \n>       assert sorted(\n            [true_df_dict_1, true_df_dict_2, true_df_dict_3],\n            key=lambda d: d[\"run_name\"],\n        ) == sorted(df.fillna(0.0).to_dict(\"records\"), key=lambda d: d[\"run_name\"])\nE       AssertionError: assert [{'experiment...1': 0.0, ...}] == [{'experiment...1': 0.0, ...}]\nE         At index 0 diff: {'metric.sdk-metric-test-1': 0.8, 'metric.sdk-metric-test-2': 100.0, 'param.sdk-param-test-1': 0.1, 'param.sdk-param-test-2': 0.2, 'experiment_name': 'tmpvrtxsdk-e2e--206a5a14-1987-4664-b3fc-604b24ff796e', 'run_name': 'run-1', 'state': 'COMPLETE', 'run_type': 'system.ExperimentRun', 'time_series_metric.accuracy': 4.0, 'param.dropout_rate': 0.0, 'param.learning_rate': 0.0, 'metric.accuracy': 0.0, 'metric.mse': 0.0} != {'experiment_name': 'tmpvrtxsdk-e2e--206a5a14-1987-4664-b3fc-604b24ff796e', 'run_name': 'run-1', 'run_type': 'system.ExperimentRun', 'stat...\nE         \nE         ...Full output truncated (46 lines hidden), use '-vv' to show\n\ntests/system/aiplatform/test_experiments.py:441: AssertionError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143417/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:50Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885542236",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2304",
                "id": 1759090804,
                "node_id": "I_kwDOEcNkxM5o2Zh0",
                "number": 2304,
                "title": "tests.system.aiplatform.test_language_models.TestLanguageModels: test_tuning failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 100,
                "created_at": "2023-06-15T15:30:35Z",
                "updated_at": "2023-10-27T01:16:46Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "This test failed!\n\nTo configure my behavior, see [the Flaky Bot documentation](https://github.com/googleapis/repo-automation-bots/tree/main/packages/flakybot).\n\nIf I'm commenting on this issue too often, add the `flakybot: quiet` label and\nI will stop commenting.\n\n---\n\ncommit: 8191035571d58713f0655b2baee6105a53cbcad8\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/2134c762-bd7d-4539-9c6d-d731958893f9), [Sponge](http://sponge2/2134c762-bd7d-4539-9c6d-d731958893f9)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_language_models.TestLanguageModels object at 0x7f4fccf45100>\nshared_state = {}\n\n    def test_tuning(self, shared_state):\n        \"\"\"Test tuning, listing and loading models.\"\"\"\n        aiplatform.init(project=e2e_base._PROJECT, location=e2e_base._LOCATION)\n    \n        model = TextGenerationModel.from_pretrained(\"google/text-bison@001\")\n    \n        import pandas\n    \n        training_data = pandas.DataFrame(\n            data=[\n                {\"input_text\": \"Input 0\", \"output_text\": \"Output 0\"},\n                {\"input_text\": \"Input 1\", \"output_text\": \"Output 1\"},\n                {\"input_text\": \"Input 2\", \"output_text\": \"Output 2\"},\n                {\"input_text\": \"Input 3\", \"output_text\": \"Output 3\"},\n                {\"input_text\": \"Input 4\", \"output_text\": \"Output 4\"},\n                {\"input_text\": \"Input 5\", \"output_text\": \"Output 5\"},\n                {\"input_text\": \"Input 6\", \"output_text\": \"Output 6\"},\n                {\"input_text\": \"Input 7\", \"output_text\": \"Output 7\"},\n                {\"input_text\": \"Input 8\", \"output_text\": \"Output 8\"},\n                {\"input_text\": \"Input 9\", \"output_text\": \"Output 9\"},\n            ]\n        )\n    \n>       model.tune_model(\n            training_data=training_data,\n            train_steps=1,\n            tuning_job_location=\"europe-west4\",\n            tuned_model_location=\"us-central1\",\n        )\n\ntests/system/aiplatform/test_language_models.py:108: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvertexai/language_models/_language_models.py:181: in tune_model\n    pipeline_job = _launch_tuning_job(\nvertexai/language_models/_language_models.py:936: in _launch_tuning_job\n    job = _launch_tuning_job_on_jsonl_data(\nvertexai/language_models/_language_models.py:984: in _launch_tuning_job_on_jsonl_data\n    job = aiplatform.PipelineJob(\ngoogle/cloud/aiplatform/pipeline_jobs.py:212: in __init__\n    pipeline_json = yaml_utils.load_yaml(\ngoogle/cloud/aiplatform/utils/yaml_utils.py:56: in load_yaml\n    return _load_yaml_from_https_uri(path, credentials)\ngoogle/cloud/aiplatform/utils/yaml_utils.py:140: in _load_yaml_from_https_uri\n    credentials.refresh(transport.requests.Request())\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/service_account.py:408: in refresh\n    access_token, expiry, _ = _client.jwt_grant(\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/_client.py:193: in jwt_grant\n    response_data = _token_endpoint_request(request, token_uri, body)\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/_client.py:165: in _token_endpoint_request\n    _handle_error_response(response_data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_data = {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'}\n\n    def _handle_error_response(response_data):\n        \"\"\"Translates an error response into an exception.\n    \n        Args:\n            response_data (Mapping): The decoded response data.\n    \n        Raises:\n            google.auth.exceptions.RefreshError: The errors contained in response_data.\n        \"\"\"\n        try:\n            error_details = \"{}: {}\".format(\n                response_data[\"error\"], response_data.get(\"error_description\")\n            )\n        # If no details could be extracted, use the response data.\n        except (KeyError, ValueError):\n            error_details = json.dumps(response_data)\n    \n>       raise exceptions.RefreshError(error_details, response_data)\nE       google.auth.exceptions.RefreshError: ('invalid_scope: Invalid OAuth scope or ID token audience provided.', {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'})\n\n.nox/system-3-8/lib/python3.8/site-packages/google/oauth2/_client.py:60: RefreshError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143389",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2304#issuecomment-1782143389",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2304",
                "id": 1782143389,
                "node_id": "IC_kwDOEcNkxM5qOVmd",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:46Z",
                "updated_at": "2023-10-27T01:16:46Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_language_models.TestLanguageModels object at 0x7ff143856950>\nshared_state = {}\n\n    def test_tuning(self, shared_state):\n        \"\"\"Test tuning, listing and loading models.\"\"\"\n        aiplatform.init(project=e2e_base._PROJECT, location=e2e_base._LOCATION)\n    \n        model = language_models.TextGenerationModel.from_pretrained(\"text-bison@001\")\n    \n        import pandas\n    \n        training_data = pandas.DataFrame(\n            data=[\n                {\"input_text\": \"Input 0\", \"output_text\": \"Output 0\"},\n                {\"input_text\": \"Input 1\", \"output_text\": \"Output 1\"},\n                {\"input_text\": \"Input 2\", \"output_text\": \"Output 2\"},\n                {\"input_text\": \"Input 3\", \"output_text\": \"Output 3\"},\n                {\"input_text\": \"Input 4\", \"output_text\": \"Output 4\"},\n                {\"input_text\": \"Input 5\", \"output_text\": \"Output 5\"},\n                {\"input_text\": \"Input 6\", \"output_text\": \"Output 6\"},\n                {\"input_text\": \"Input 7\", \"output_text\": \"Output 7\"},\n                {\"input_text\": \"Input 8\", \"output_text\": \"Output 8\"},\n                {\"input_text\": \"Input 9\", \"output_text\": \"Output 9\"},\n            ]\n        )\n    \n        dataset_uri = (\n            STAGING_DIR_URI + \"/veretx_llm_tuning_training_data.text-bison.dummy.jsonl\"\n        )\n        gcs_utils._upload_pandas_df_to_gcs(\n            df=training_data, upload_gcs_path=dataset_uri\n        )\n    \n>       tuning_job = model.tune_model(\n            training_data=training_data,\n            train_steps=1,\n            tuning_job_location=\"europe-west4\",\n            tuned_model_location=\"us-central1\",\n            learning_rate_multiplier=2.0,\n            tuning_evaluation_spec=preview_language_models.TuningEvaluationSpec(\n                evaluation_data=dataset_uri,\n                evaluation_interval=37,\n                enable_early_stopping=True,\n            ),\n        )\n\ntests/system/aiplatform/test_language_models.py:326: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvertexai/language_models/_language_models.py:387: in tune_model\n    return super().tune_model(\nvertexai/language_models/_language_models.py:269: in tune_model\n    return self._tune_model(\nvertexai/language_models/_language_models.py:324: in _tune_model\n    pipeline_job = _launch_tuning_job(\nvertexai/language_models/_language_models.py:2870: in _launch_tuning_job\n    job = aiplatform.PipelineJob(\ngoogle/cloud/aiplatform/pipeline_jobs.py:218: in __init__\n    pipeline_json = yaml_utils.load_yaml(\ngoogle/cloud/aiplatform/utils/yaml_utils.py:56: in load_yaml\n    return _load_yaml_from_https_uri(path, credentials)\ngoogle/cloud/aiplatform/utils/yaml_utils.py:140: in _load_yaml_from_https_uri\n    credentials.refresh(transport.requests.Request())\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/service_account.py:438: in refresh\n    access_token, expiry, _ = _client.jwt_grant(\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/_client.py:308: in jwt_grant\n    response_data = _token_endpoint_request(\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/_client.py:279: in _token_endpoint_request\n    _handle_error_response(response_data, retryable_error)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_data = {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'}\nretryable_error = False\n\n    def _handle_error_response(response_data, retryable_error):\n        \"\"\"Translates an error response into an exception.\n    \n        Args:\n            response_data (Mapping | str): The decoded response data.\n            retryable_error Optional[bool]: A boolean indicating if an error is retryable.\n                Defaults to False.\n    \n        Raises:\n            google.auth.exceptions.RefreshError: The errors contained in response_data.\n        \"\"\"\n    \n        retryable_error = retryable_error if retryable_error else False\n    \n        if isinstance(response_data, str):\n            raise exceptions.RefreshError(response_data, retryable=retryable_error)\n        try:\n            error_details = \"{}: {}\".format(\n                response_data[\"error\"], response_data.get(\"error_description\")\n            )\n        # If no details could be extracted, use the response data.\n        except (KeyError, ValueError):\n            error_details = json.dumps(response_data)\n    \n>       raise exceptions.RefreshError(\n            error_details, response_data, retryable=retryable_error\n        )\nE       google.auth.exceptions.RefreshError: ('invalid_scope: Invalid OAuth scope or ID token audience provided.', {'error': 'invalid_scope', 'error_description': 'Invalid OAuth scope or ID token audience provided.'})\n\n.nox/system-3-10/lib/python3.10/site-packages/google/oauth2/_client.py:72: RefreshError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143389/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:47Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885541775",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2414",
                "id": 1841613069,
                "node_id": "I_kwDOEcNkxM5txMkN",
                "number": 2414,
                "title": "tests.system.aiplatform.test_model_evaluation.TestModelEvaluationJob: test_model_evaluate_custom_tabular_model failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 90,
                "created_at": "2023-08-08T16:13:20Z",
                "updated_at": "2023-10-27T01:16:44Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "This test failed!\n\nTo configure my behavior, see [the Flaky Bot documentation](https://github.com/googleapis/repo-automation-bots/tree/main/packages/flakybot).\n\nIf I'm commenting on this issue too often, add the `flakybot: quiet` label and\nI will stop commenting.\n\n---\n\ncommit: dec8ffd80d8804d4a5afaccc1c748d886225b6bf\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/db2663fd-0466-46b4-b05b-50a9c8d71a27), [Sponge](http://sponge2/db2663fd-0466-46b4-b05b-50a9c8d71a27)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_model_evaluation.TestModelEvaluationJob object at 0x7fae102ffd30>\nshared_state = {'bucket': <Bucket: temp_vertex_sdk_model_evaluation_test-b9f13527-1989-4092-9af8-5>, 'staging_bucket_name': 'temp_ver...ation_test-b9f13527-1989-4092-9af8-5', 'storage_client': <google.cloud.storage.client.Client object at 0x7fae6d894d90>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:178: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143362",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2414#issuecomment-1782143362",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2414",
                "id": 1782143362,
                "node_id": "IC_kwDOEcNkxM5qOVmC",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:44Z",
                "updated_at": "2023-10-27T01:16:44Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_model_evaluation.TestModelEvaluationJob object at 0x7f292ba9faf0>\nshared_state = {'bucket': <Bucket: temp_vertex_sdk_model_evaluation_test-de6006f5-c83c-4ad1-afb8-c>, 'staging_bucket_name': 'temp_ver...ation_test-de6006f5-c83c-4ad1-afb8-c', 'storage_client': <google.cloud.storage.client.Client object at 0x7f2929c0fd30>}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143362/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:44Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885541309",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2315",
                "id": 1767495876,
                "node_id": "I_kwDOEcNkxM5pWdjE",
                "number": 2315,
                "title": "tests.system.aiplatform.test_pipeline_job.TestPipelineJob: test_add_pipeline_job_to_experiment failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970951,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwOTUx",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20process",
                        "name": "type: process",
                        "color": "c5def5",
                        "default": false,
                        "description": "A process-related concern. May include testing, release, or the like."
                    },
                    {
                        "id": 2370970992,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwOTky",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p2",
                        "name": "priority: p2",
                        "color": "fef2c0",
                        "default": false,
                        "description": "Moderately-important priority. Fix may not be included in next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "IronPan",
                    "id": 2348602,
                    "node_id": "MDQ6VXNlcjIzNDg2MDI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2348602?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/IronPan",
                    "html_url": "https://github.com/IronPan",
                    "followers_url": "https://api.github.com/users/IronPan/followers",
                    "following_url": "https://api.github.com/users/IronPan/following{/other_user}",
                    "gists_url": "https://api.github.com/users/IronPan/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/IronPan/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/IronPan/subscriptions",
                    "organizations_url": "https://api.github.com/users/IronPan/orgs",
                    "repos_url": "https://api.github.com/users/IronPan/repos",
                    "events_url": "https://api.github.com/users/IronPan/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/IronPan/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "IronPan",
                        "id": 2348602,
                        "node_id": "MDQ6VXNlcjIzNDg2MDI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/2348602?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/IronPan",
                        "html_url": "https://github.com/IronPan",
                        "followers_url": "https://api.github.com/users/IronPan/followers",
                        "following_url": "https://api.github.com/users/IronPan/following{/other_user}",
                        "gists_url": "https://api.github.com/users/IronPan/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/IronPan/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/IronPan/subscriptions",
                        "organizations_url": "https://api.github.com/users/IronPan/orgs",
                        "repos_url": "https://api.github.com/users/IronPan/repos",
                        "events_url": "https://api.github.com/users/IronPan/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/IronPan/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 97,
                "created_at": "2023-06-21T12:30:23Z",
                "updated_at": "2023-10-27T01:16:42Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #1958 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: 2235305c7714835ff331e5294f90a6a23e31391d\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/282b2d95-c702-4500-b272-c68e5ff03574), [Sponge](http://sponge2/282b2d95-c702-4500-b272-c68e5ff03574)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job.TestPipelineJob object at 0x7fe65151b310>\nshared_state = {}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:178: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143334",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2315#issuecomment-1782143334",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2315",
                "id": 1782143334,
                "node_id": "IC_kwDOEcNkxM5qOVlm",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:41Z",
                "updated_at": "2023-10-27T01:16:41Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>self = <tests.system.aiplatform.test_pipeline_job.TestPipelineJob object at 0x7f82f308ae00>\nshared_state = {}\n\n    @pytest.fixture(scope=\"class\")\n    def tear_down_resources(self, shared_state: Dict[str, Any]):\n        \"\"\"Delete every Vertex AI resource created during test\"\"\"\n    \n        yield\n    \n        # TODO(b/218310362): Add resource deletion system tests\n        # Bring all Endpoints to the front of the list\n        # Ensures Models are undeployed first before we attempt deletion\n>       shared_state[\"resources\"].sort(\n            key=lambda r: 1\n            if isinstance(r, aiplatform.Endpoint)\n            or isinstance(r, aiplatform.MatchingEngineIndexEndpoint)\n            or isinstance(r, aiplatform.Experiment)\n            else 2\n        )\nE       KeyError: 'resources'\n\ntests/system/aiplatform/e2e_base.py:181: KeyError</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143334/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:42Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885540805",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 59032223,
            "login": "flaky-bot[bot]",
            "display_login": "flaky-bot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/flaky-bot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/59032223?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2576",
                "id": 1894838730,
                "node_id": "I_kwDOEcNkxM5w8PHK",
                "number": 2576,
                "title": "tests.system.aiplatform.test_matching_engine_index.TestMatchingEngine: test_create_get_list_matching_engine_index failed",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2370970893,
                        "node_id": "MDU6TGFiZWwyMzcwOTcwODkz",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/type:%20bug",
                        "name": "type: bug",
                        "color": "db4437",
                        "default": false,
                        "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."
                    },
                    {
                        "id": 2370971019,
                        "node_id": "MDU6TGFiZWwyMzcwOTcxMDE5",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/priority:%20p1",
                        "name": "priority: p1",
                        "color": "ffa03e",
                        "default": false,
                        "description": "Important issue which blocks shipping the next release. Will be fixed prior to next release."
                    },
                    {
                        "id": 2686741836,
                        "node_id": "MDU6TGFiZWwyNjg2NzQxODM2",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/flakybot:%20issue",
                        "name": "flakybot: issue",
                        "color": "a9f9f7",
                        "default": false,
                        "description": "An issue filed by the Flaky Bot. Should not be added manually."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "nayaknishant",
                    "id": 25442602,
                    "node_id": "MDQ6VXNlcjI1NDQyNjAy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25442602?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/nayaknishant",
                    "html_url": "https://github.com/nayaknishant",
                    "followers_url": "https://api.github.com/users/nayaknishant/followers",
                    "following_url": "https://api.github.com/users/nayaknishant/following{/other_user}",
                    "gists_url": "https://api.github.com/users/nayaknishant/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/nayaknishant/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/nayaknishant/subscriptions",
                    "organizations_url": "https://api.github.com/users/nayaknishant/orgs",
                    "repos_url": "https://api.github.com/users/nayaknishant/repos",
                    "events_url": "https://api.github.com/users/nayaknishant/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/nayaknishant/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "nayaknishant",
                        "id": 25442602,
                        "node_id": "MDQ6VXNlcjI1NDQyNjAy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25442602?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/nayaknishant",
                        "html_url": "https://github.com/nayaknishant",
                        "followers_url": "https://api.github.com/users/nayaknishant/followers",
                        "following_url": "https://api.github.com/users/nayaknishant/following{/other_user}",
                        "gists_url": "https://api.github.com/users/nayaknishant/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/nayaknishant/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/nayaknishant/subscriptions",
                        "organizations_url": "https://api.github.com/users/nayaknishant/orgs",
                        "repos_url": "https://api.github.com/users/nayaknishant/repos",
                        "events_url": "https://api.github.com/users/nayaknishant/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/nayaknishant/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 51,
                "created_at": "2023-09-13T16:04:52Z",
                "updated_at": "2023-10-27T01:16:39Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Note: #2305 was also for this test, but it was closed more than 10 days ago. So, I didn't mark it flaky.\n\n----\n\ncommit: 0fa47aea08b635159e9c6dc64f7d330f047dfb5d\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/6a410ac8-ed78-42d5-81dc-9db12d6aa1fb), [Sponge](http://sponge2/6a410ac8-ed78-42d5-81dc-9db12d6aa1fb)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-client', 'model-builder/1.32.0 gl-python/3.11.1 grpc/1.58.0 gax/2.11.1 gapic/1.32.0')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:1161: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7ff88ff34f10>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7ff88ff34d80>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(\n        state: _RPCState,\n        call: cygrpc.SegregatedCall,\n        with_call: bool,\n        deadline: Optional[float],\n    ) -> Union[ResponseType, Tuple[ResponseType, grpc.Call]]:\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)  # pytype: disable=not-instantiable\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.FAILED_PRECONDITION\nE           \tdetails = \"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:74.125.197.95:443 {created_time:\"2023-09-13T10:40:17.014736581+00:00\", grpc_status:9, grpc_message:\"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"}\"\nE           >\n\n.nox/system-3-11/lib/python3.11/site-packages/grpc/_channel.py:1004: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_matching_engine_index.TestMatchingEngine object at 0x7ff89b301a50>\nshared_state = {'index': <google.cloud.aiplatform.matching_engine.matching_engine_index.MatchingEngineIndex object at 0x7ff89492d950>...dex object at 0x7ff89492d950> \nresource name: projects/580378083368/locations/us-central1/indexes/4011431834498891776]}\n\n    def test_create_get_list_matching_engine_index(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n        )\n    \n        # Create an index\n        index = aiplatform.MatchingEngineIndex.create_tree_ah_index(\n            display_name=_TEST_INDEX_DISPLAY_NAME,\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI,\n            dimensions=_TEST_INDEX_CONFIG_DIMENSIONS,\n            approximate_neighbors_count=_TEST_INDEX_APPROXIMATE_NEIGHBORS_COUNT,\n            distance_measure_type=_TEST_INDEX_DISTANCE_MEASURE_TYPE,\n            leaf_node_embedding_count=_TEST_LEAF_NODE_EMBEDDING_COUNT,\n            leaf_nodes_to_search_percent=_TEST_LEAF_NODES_TO_SEARCH_PERCENT,\n            description=_TEST_INDEX_DESCRIPTION,\n            labels=_TEST_LABELS,\n        )\n    \n        shared_state[\"resources\"] = [index]\n        shared_state[\"index\"] = index\n        shared_state[\"index_name\"] = index.resource_name\n    \n        # Verify that the retrieved index is the same\n        get_index = aiplatform.MatchingEngineIndex(index_name=index.resource_name)\n        assert index.resource_name == get_index.resource_name\n    \n        # Create index and check that it is listed\n        list_indexes = aiplatform.MatchingEngineIndex.list()\n        assert get_index.resource_name in [\n            index.resource_name for index in list_indexes\n        ]\n    \n        # Update the index metadata\n        updated_index = get_index.update_metadata(\n            display_name=_TEST_DISPLAY_NAME_UPDATE,\n            description=_TEST_DESCRIPTION_UPDATE,\n            labels=_TEST_LABELS_UPDATE,\n        )\n    \n        assert updated_index.name == get_index.name\n        # TODO: Reinstate assertions once b/220005272 is fixed.\n        # assert updated_index.display_name == _TEST_DISPLAY_NAME_UPDATE\n        # assert updated_index.description == _TEST_DESCRIPTION_UPDATE\n        # assert updated_index.labels == _TEST_LABELS_UPDATE\n    \n        # Update the index embeddings\n        updated_index = get_index.update_embeddings(\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI_UPDATE,\n            is_complete_overwrite=_TEST_IS_COMPLETE_OVERWRITE,\n        )\n    \n        assert updated_index.name == get_index.name\n    \n        # Create endpoint and check that it is listed\n        my_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_INDEX_ENDPOINT_DESCRIPTION,\n            network=e2e_base._VPC_NETWORK_URI,\n            labels=_TEST_LABELS,\n        )\n        assert my_index_endpoint.resource_name in [\n            index_endpoint.resource_name\n            for index_endpoint in aiplatform.MatchingEngineIndexEndpoint.list()\n        ]\n    \n        assert my_index_endpoint.labels == _TEST_LABELS\n        assert my_index_endpoint.display_name == _TEST_INDEX_ENDPOINT_DISPLAY_NAME\n        assert my_index_endpoint.description == _TEST_INDEX_ENDPOINT_DESCRIPTION\n    \n        # Create endpoint and check that it is listed\n>       public_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_PUBLIC_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_PUBLIC_INDEX_ENDPOINT_DESCRIPTION,\n            public_endpoint_enabled=True,\n            labels=_TEST_LABELS,\n        )\n\ntests/system/aiplatform/test_matching_engine_index.py:249: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:227: in create\n    return cls._create(\ngoogle/cloud/aiplatform/base.py:819: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:329: in _create\n    create_lro = api_client.create_index_endpoint(\ngoogle/cloud/aiplatform_v1/services/index_endpoint_service/client.py:594: in create_index_endpoint\n    response = rpc(\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/gapic_v1/method.py:113: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-client', 'model-builder/1.32.0 gl-python/3.11.1 grpc/1.58.0 gax/2.11.1 gapic/1.32.0')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.FailedPrecondition: 400 Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\n\n.nox/system-3-11/lib/python3.11/site-packages/google/api_core/grpc_helpers.py:74: FailedPrecondition</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143316",
                "html_url": "https://github.com/googleapis/python-aiplatform/issues/2576#issuecomment-1782143316",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2576",
                "id": 1782143316,
                "node_id": "IC_kwDOEcNkxM5qOVlU",
                "user": {
                    "login": "flaky-bot[bot]",
                    "id": 59032223,
                    "node_id": "MDM6Qm90NTkwMzIyMjM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/49504?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/flaky-bot%5Bbot%5D",
                    "html_url": "https://github.com/apps/flaky-bot",
                    "followers_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/flaky-bot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:16:39Z",
                "updated_at": "2023-10-27T01:16:39Z",
                "author_association": "NONE",
                "body": "commit: 50f857f47dc854851ca5812840c79f260d61c868\nbuildURL: [Build Status](https://source.cloud.google.com/results/invocations/ced5b587-e929-4dad-ad71-482c72486fca), [Sponge](http://sponge2/ced5b587-e929-4dad-ad71-482c72486fca)\nstatus: failed\n<details><summary>Test output</summary><br><pre>args = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-clie...or_method+google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint.MatchingEngineIndexEndpoint.create')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n>           return callable_(*args, **kwargs)\n\n.nox/system-3-10/lib/python3.10/site-packages/google/api_core/grpc_helpers.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.nox/system-3-10/lib/python3.10/site-packages/grpc/_channel.py:946: in __call__\n    return _end_unary_response_blocking(state, call, False, None)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstate = <grpc._channel._RPCState object at 0x7f9088570b50>\ncall = <grpc._cython.cygrpc.SegregatedCall object at 0x7f90885794c0>\nwith_call = False, deadline = None\n\n    def _end_unary_response_blocking(state, call, with_call, deadline):\n        if state.code is grpc.StatusCode.OK:\n            if with_call:\n                rendezvous = _MultiThreadedRendezvous(state, call, None, deadline)\n                return state.response, rendezvous\n            else:\n                return state.response\n        else:\n>           raise _InactiveRpcError(state)\nE           grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\nE           \tstatus = StatusCode.FAILED_PRECONDITION\nE           \tdetails = \"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"\nE           \tdebug_error_string = \"UNKNOWN:Error received from peer ipv4:173.194.203.95:443 {created_time:\"2023-10-26T18:27:52.400636454+00:00\", grpc_status:9, grpc_message:\"Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\"}\"\nE           >\n\n.nox/system-3-10/lib/python3.10/site-packages/grpc/_channel.py:849: _InactiveRpcError\n\nThe above exception was the direct cause of the following exception:\n\nself = <tests.system.aiplatform.test_matching_engine_index.TestMatchingEngine object at 0x7f908a74f400>\nshared_state = {'index': <google.cloud.aiplatform.matching_engine.matching_engine_index.MatchingEngineIndex object at 0x7f90884d6920>...dex object at 0x7f90884d6920> \nresource name: projects/580378083368/locations/us-central1/indexes/5520010166319185920]}\n\n    def test_create_get_list_matching_engine_index(self, shared_state):\n        aiplatform.init(\n            project=e2e_base._PROJECT,\n            location=e2e_base._LOCATION,\n        )\n    \n        # Create an index\n        index = aiplatform.MatchingEngineIndex.create_tree_ah_index(\n            display_name=_TEST_INDEX_DISPLAY_NAME,\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI,\n            dimensions=_TEST_INDEX_CONFIG_DIMENSIONS,\n            approximate_neighbors_count=_TEST_INDEX_APPROXIMATE_NEIGHBORS_COUNT,\n            distance_measure_type=_TEST_INDEX_DISTANCE_MEASURE_TYPE,\n            leaf_node_embedding_count=_TEST_LEAF_NODE_EMBEDDING_COUNT,\n            leaf_nodes_to_search_percent=_TEST_LEAF_NODES_TO_SEARCH_PERCENT,\n            description=_TEST_INDEX_DESCRIPTION,\n            labels=_TEST_LABELS,\n        )\n    \n        shared_state[\"resources\"] = [index]\n        shared_state[\"index\"] = index\n        shared_state[\"index_name\"] = index.resource_name\n    \n        # Verify that the retrieved index is the same\n        get_index = aiplatform.MatchingEngineIndex(index_name=index.resource_name)\n        assert index.resource_name == get_index.resource_name\n    \n        # Create index and check that it is listed\n        list_indexes = aiplatform.MatchingEngineIndex.list()\n        assert get_index.resource_name in [\n            index.resource_name for index in list_indexes\n        ]\n    \n        # Update the index metadata\n        updated_index = get_index.update_metadata(\n            display_name=_TEST_DISPLAY_NAME_UPDATE,\n            description=_TEST_DESCRIPTION_UPDATE,\n            labels=_TEST_LABELS_UPDATE,\n        )\n    \n        assert updated_index.name == get_index.name\n        # TODO: Reinstate assertions once b/220005272 is fixed.\n        # assert updated_index.display_name == _TEST_DISPLAY_NAME_UPDATE\n        # assert updated_index.description == _TEST_DESCRIPTION_UPDATE\n        # assert updated_index.labels == _TEST_LABELS_UPDATE\n    \n        # Update the index embeddings\n        updated_index = get_index.update_embeddings(\n            contents_delta_uri=_TEST_CONTENTS_DELTA_URI_UPDATE,\n            is_complete_overwrite=_TEST_IS_COMPLETE_OVERWRITE,\n        )\n    \n        assert updated_index.name == get_index.name\n    \n        # Create endpoint and check that it is listed\n        my_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_INDEX_ENDPOINT_DESCRIPTION,\n            network=e2e_base._VPC_NETWORK_URI,\n            labels=_TEST_LABELS,\n        )\n        assert my_index_endpoint.resource_name in [\n            index_endpoint.resource_name\n            for index_endpoint in aiplatform.MatchingEngineIndexEndpoint.list()\n        ]\n    \n        assert my_index_endpoint.labels == _TEST_LABELS\n        assert my_index_endpoint.display_name == _TEST_INDEX_ENDPOINT_DISPLAY_NAME\n        assert my_index_endpoint.description == _TEST_INDEX_ENDPOINT_DESCRIPTION\n    \n        # Create endpoint and check that it is listed\n>       public_index_endpoint = aiplatform.MatchingEngineIndexEndpoint.create(\n            display_name=_TEST_PUBLIC_INDEX_ENDPOINT_DISPLAY_NAME,\n            description=_TEST_PUBLIC_INDEX_ENDPOINT_DESCRIPTION,\n            public_endpoint_enabled=True,\n            labels=_TEST_LABELS,\n        )\n\ntests/system/aiplatform/test_matching_engine_index.py:249: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:227: in create\n    return cls._create(\ngoogle/cloud/aiplatform/base.py:817: in wrapper\n    return method(*args, **kwargs)\ngoogle/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py:329: in _create\n    create_lro = api_client.create_index_endpoint(\ngoogle/cloud/aiplatform_v1/services/index_endpoint_service/client.py:594: in create_index_endpoint\n    response = rpc(\n.nox/system-3-10/lib/python3.10/site-packages/google/api_core/gapic_v1/method.py:113: in __call__\n    return wrapped_func(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nargs = (parent: \"projects/ucaip-sample-tests/locations/us-central1\"\nindex_endpoint {\n  display_name: \"public_endpoint_name\"\n ...ption: \"my public endpoint\"\n  labels {\n    key: \"my_key\"\n    value: \"my_value\"\n  }\n  public_endpoint_enabled: true\n}\n,)\nkwargs = {'metadata': [('x-goog-request-params', 'parent=projects/ucaip-sample-tests/locations/us-central1'), ('x-goog-api-clie...or_method+google.cloud.aiplatform.matching_engine.matching_engine_index_endpoint.MatchingEngineIndexEndpoint.create')]}\n\n    @functools.wraps(callable_)\n    def error_remapped_callable(*args, **kwargs):\n        try:\n            return callable_(*args, **kwargs)\n        except grpc.RpcError as exc:\n>           raise exceptions.from_grpc_error(exc) from exc\nE           google.api_core.exceptions.FailedPrecondition: 400 Exceeds maximum number of PublicEndpoint(s) allowed for a single Project, which is 15.\n\n.nox/system-3-10/lib/python3.10/site-packages/google/api_core/grpc_helpers.py:67: FailedPrecondition</pre></details>",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782143316/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:16:40Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32885045310",
        "type": "PushEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "repository_id": 298017988,
            "push_id": 15584813974,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/copybara_577027107",
            "head": "5c1d8e53053da183255437156129e9f3dde3f681",
            "before": "7185705acea7cf1d49b32012a9e398fee858b669",
            "commits": [
                {
                    "sha": "5c1d8e53053da183255437156129e9f3dde3f681",
                    "author": {
                        "email": "tangmatthew@google.com",
                        "name": "Matthew Tang"
                    },
                    "message": "fix: Raise exception for RoV BQ Write for too many rate limit exceeded\n\nPiperOrigin-RevId: 577027107",
                    "distinct": true,
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/commits/5c1d8e53053da183255437156129e9f3dde3f681"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T00:37:17Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884662101",
        "type": "PullRequestEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "opened",
            "number": 2868,
            "pull_request": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2868",
                "id": 1575742051,
                "node_id": "PR_kwDOEcNkxM5d6-pj",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2868",
                "diff_url": "https://github.com/googleapis/python-aiplatform/pull/2868.diff",
                "patch_url": "https://github.com/googleapis/python-aiplatform/pull/2868.patch",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2868",
                "number": 2868,
                "state": "open",
                "locked": false,
                "title": "fix: Raise exception for RoV BQ Write for too many rate limit exceeded",
                "user": {
                    "login": "copybara-service[bot]",
                    "id": 56741989,
                    "node_id": "MDM6Qm90NTY3NDE5ODk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/44061?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/copybara-service%5Bbot%5D",
                    "html_url": "https://github.com/apps/copybara-service",
                    "followers_url": "https://api.github.com/users/copybara-service%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/copybara-service%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/copybara-service%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/copybara-service%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/copybara-service%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/copybara-service%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/copybara-service%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/copybara-service%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/copybara-service%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "body": "fix: Raise exception for RoV BQ Write for too many rate limit exceeded\n",
                "created_at": "2023-10-27T00:07:41Z",
                "updated_at": "2023-10-27T00:07:41Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "5aa4d87329a48e340c13e819e49f84f1af02ded0",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2868/commits",
                "review_comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2868/comments",
                "review_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2868/comments",
                "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/7185705acea7cf1d49b32012a9e398fee858b669",
                "head": {
                    "label": "googleapis:copybara_577027107",
                    "ref": "copybara_577027107",
                    "sha": "7185705acea7cf1d49b32012a9e398fee858b669",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-27T00:07:42Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88173,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 297,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 214,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 297,
                        "open_issues": 214,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "googleapis:main",
                    "ref": "main",
                    "sha": "0b825c9f4615d119859dc3c3ecaf558614d5e148",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-27T00:07:42Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88173,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 297,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 214,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 297,
                        "open_issues": 214,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2868"
                    },
                    "html": {
                        "href": "https://github.com/googleapis/python-aiplatform/pull/2868"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2868"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2868/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2868/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2868/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/7185705acea7cf1d49b32012a9e398fee858b669"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": true,
                "mergeable_state": "unstable",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 79,
                "deletions": 51,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:07:43Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884661793",
        "type": "CreateEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "ref": "copybara_577027107",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T00:07:41Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884589182",
        "type": "PullRequestEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "opened",
            "number": 2867,
            "pull_request": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2867",
                "id": 1575737967,
                "node_id": "PR_kwDOEcNkxM5d69pv",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2867",
                "diff_url": "https://github.com/googleapis/python-aiplatform/pull/2867.diff",
                "patch_url": "https://github.com/googleapis/python-aiplatform/pull/2867.patch",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2867",
                "number": 2867,
                "state": "open",
                "locked": false,
                "title": "fix: Rollback BigQuery Datasource to use do_write() interface",
                "user": {
                    "login": "copybara-service[bot]",
                    "id": 56741989,
                    "node_id": "MDM6Qm90NTY3NDE5ODk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/44061?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/copybara-service%5Bbot%5D",
                    "html_url": "https://github.com/apps/copybara-service",
                    "followers_url": "https://api.github.com/users/copybara-service%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/copybara-service%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/copybara-service%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/copybara-service%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/copybara-service%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/copybara-service%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/copybara-service%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/copybara-service%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/copybara-service%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "body": "fix: Rollback BigQuery Datasource to use do_write() interface\n",
                "created_at": "2023-10-27T00:02:14Z",
                "updated_at": "2023-10-27T00:02:14Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "c88daffafa21464144ba951b9be553c303fc164d",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2867/commits",
                "review_comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2867/comments",
                "review_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2867/comments",
                "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/138837a77d2a12cc958c8297df35b9722591c15a",
                "head": {
                    "label": "googleapis:copybara_577025699",
                    "ref": "copybara_577025699",
                    "sha": "138837a77d2a12cc958c8297df35b9722591c15a",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-27T00:02:15Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88173,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 297,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 213,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 297,
                        "open_issues": 213,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "googleapis:main",
                    "ref": "main",
                    "sha": "0b825c9f4615d119859dc3c3ecaf558614d5e148",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-27T00:02:15Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88173,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 297,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 213,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 297,
                        "open_issues": 213,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2867"
                    },
                    "html": {
                        "href": "https://github.com/googleapis/python-aiplatform/pull/2867"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2867"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2867/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2867/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2867/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/138837a77d2a12cc958c8297df35b9722591c15a"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": true,
                "mergeable_state": "unstable",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 72,
                "deletions": 53,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:02:16Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884588904",
        "type": "CreateEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "ref": "copybara_577025699",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T00:02:15Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884383405",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 55858104,
            "login": "google-cla[bot]",
            "display_login": "google-cla",
            "gravatar_id": "",
            "url": "https://api.github.com/users/google-cla[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/55858104?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866",
                "repository_url": "https://api.github.com/repos/googleapis/python-aiplatform",
                "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/labels{/name}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/comments",
                "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/events",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866",
                "id": 1964530202,
                "node_id": "PR_kwDOEcNkxM5d66wy",
                "number": 2866,
                "title": "Fix issue with LLM async streaming",
                "user": {
                    "login": "wdhorton",
                    "id": 13503072,
                    "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wdhorton",
                    "html_url": "https://github.com/wdhorton",
                    "followers_url": "https://api.github.com/users/wdhorton/followers",
                    "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                    "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                    "repos_url": "https://api.github.com/users/wdhorton/repos",
                    "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-26T23:44:53Z",
                "updated_at": "2023-10-26T23:44:59Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866",
                    "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866",
                    "diff_url": "https://github.com/googleapis/python-aiplatform/pull/2866.diff",
                    "patch_url": "https://github.com/googleapis/python-aiplatform/pull/2866.patch",
                    "merged_at": null
                },
                "body": "I was installing the library from master to try out the unreleased LLM async streaming functionality. I ran into this error:\r\n```\r\n   File \"my_code.py\", line 126, in _gen\r\n     async for response in response_gen:\r\n   File \"/usr/local/lib/python3.10/site-packages/vertexai/language_models/_language_models.py\", line 947, in predict_streaming_async\r\n     async for prediction_dict in _streaming_prediction.predict_stream_of_dicts_from_single_dict_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 242, in predict_stream_of_dicts_from_single_dict_async\r\n     async for dict_list in predict_stream_of_dict_lists_from_single_dict_list_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 186, in predict_stream_of_dict_lists_from_single_dict_list_async\r\n     async for tensor_list in predict_stream_of_tensor_lists_from_single_tensor_list_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 133, in predict_stream_of_tensor_lists_from_single_tensor_list_async\r\n     async for response in prediction_service_async_client.server_streaming_predict(\r\n TypeError: 'async for' requires an object with __aiter__ method, got coroutine\r\n```\r\n\r\nAfter debugging my code and then digging into the library code, I think I spotted the issue.\r\n\r\nThe `server_streaming_predict` method being called in the last line of the trace has the return signature `Awaitable[AsyncIterable[prediction_service.StreamingPredictResponse]]`, which means it's not returning an `AsyncIterable` directly, but must be `await`ed first. This can be seen in the code snippet in the method's docstring:\r\n```\r\n            async def sample_server_streaming_predict():\r\n                # Create a client\r\n                client = aiplatform_v1.PredictionServiceAsyncClient()\r\n\r\n                # Initialize request argument(s)\r\n                request = aiplatform_v1.StreamingPredictRequest(\r\n                    endpoint=\"endpoint_value\",\r\n                )\r\n\r\n                # Make the request\r\n                stream = await client.server_streaming_predict(request=request)\r\n\r\n                # Handle the response\r\n                async for response in stream:\r\n                    print(response)\r\n```\r\n\r\nYou have to `await` before passing it to `async for`\r\n\r\nThis change should fix the issue",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782080126",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866#issuecomment-1782080126",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866",
                "id": 1782080126,
                "node_id": "IC_kwDOEcNkxM5qOGJ-",
                "user": {
                    "login": "google-cla[bot]",
                    "id": 55858104,
                    "node_id": "MDM6Qm90NTU4NTgxMDQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/42202?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/google-cla%5Bbot%5D",
                    "html_url": "https://github.com/apps/google-cla",
                    "followers_url": "https://api.github.com/users/google-cla%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/google-cla%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/google-cla%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/google-cla%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/google-cla%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/google-cla%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/google-cla%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/google-cla%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/google-cla%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-26T23:44:58Z",
                "updated_at": "2023-10-26T23:44:58Z",
                "author_association": "NONE",
                "body": "Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\nView this [failed invocation](https://github.com/googleapis/python-aiplatform/pull/2866/checks?check_run_id=18103048364) of the CLA check for more information.\n\nFor the most up to date status, view the checks section at the bottom of the pull request.",
                "reactions": {
                    "url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments/1782080126/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:44:59Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884382624",
        "type": "PullRequestEvent",
        "actor": {
            "id": 13503072,
            "login": "wdhorton",
            "display_login": "wdhorton",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wdhorton",
            "avatar_url": "https://avatars.githubusercontent.com/u/13503072?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "opened",
            "number": 2866,
            "pull_request": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866",
                "id": 1575726130,
                "node_id": "PR_kwDOEcNkxM5d66wy",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2866",
                "diff_url": "https://github.com/googleapis/python-aiplatform/pull/2866.diff",
                "patch_url": "https://github.com/googleapis/python-aiplatform/pull/2866.patch",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866",
                "number": 2866,
                "state": "open",
                "locked": false,
                "title": "Fix issue with LLM async streaming",
                "user": {
                    "login": "wdhorton",
                    "id": 13503072,
                    "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wdhorton",
                    "html_url": "https://github.com/wdhorton",
                    "followers_url": "https://api.github.com/users/wdhorton/followers",
                    "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                    "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                    "repos_url": "https://api.github.com/users/wdhorton/repos",
                    "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "I was installing the library from master to try out the unreleased LLM async streaming functionality. I ran into this error:\r\n```\r\n   File \"my_code.py\", line 126, in _gen\r\n     async for response in response_gen:\r\n   File \"/usr/local/lib/python3.10/site-packages/vertexai/language_models/_language_models.py\", line 947, in predict_streaming_async\r\n     async for prediction_dict in _streaming_prediction.predict_stream_of_dicts_from_single_dict_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 242, in predict_stream_of_dicts_from_single_dict_async\r\n     async for dict_list in predict_stream_of_dict_lists_from_single_dict_list_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 186, in predict_stream_of_dict_lists_from_single_dict_list_async\r\n     async for tensor_list in predict_stream_of_tensor_lists_from_single_tensor_list_async(\r\n   File \"/usr/local/lib/python3.10/site-packages/google/cloud/aiplatform/_streaming_prediction.py\", line 133, in predict_stream_of_tensor_lists_from_single_tensor_list_async\r\n     async for response in prediction_service_async_client.server_streaming_predict(\r\n TypeError: 'async for' requires an object with __aiter__ method, got coroutine\r\n```\r\n\r\nAfter debugging my code and then digging into the library code, I think I spotted the issue.\r\n\r\nThe `server_streaming_predict` method being called in the last line of the trace has the return signature `Awaitable[AsyncIterable[prediction_service.StreamingPredictResponse]]`, which means it's not returning an `AsyncIterable` directly, but must be `await`ed first. This can be seen in the code snippet in the method's docstring:\r\n```\r\n            async def sample_server_streaming_predict():\r\n                # Create a client\r\n                client = aiplatform_v1.PredictionServiceAsyncClient()\r\n\r\n                # Initialize request argument(s)\r\n                request = aiplatform_v1.StreamingPredictRequest(\r\n                    endpoint=\"endpoint_value\",\r\n                )\r\n\r\n                # Make the request\r\n                stream = await client.server_streaming_predict(request=request)\r\n\r\n                # Handle the response\r\n                async for response in stream:\r\n                    print(response)\r\n```\r\n\r\nYou have to `await` before passing it to `async for`\r\n\r\nThis change should fix the issue",
                "created_at": "2023-10-26T23:44:53Z",
                "updated_at": "2023-10-26T23:44:53Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866/commits",
                "review_comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866/comments",
                "review_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/comments",
                "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/412986a313cc4a790f2ce40efbb586a0d8982d94",
                "head": {
                    "label": "wdhorton:patch-1",
                    "ref": "patch-1",
                    "sha": "412986a313cc4a790f2ce40efbb586a0d8982d94",
                    "user": {
                        "login": "wdhorton",
                        "id": 13503072,
                        "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wdhorton",
                        "html_url": "https://github.com/wdhorton",
                        "followers_url": "https://api.github.com/users/wdhorton/followers",
                        "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                        "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                        "repos_url": "https://api.github.com/users/wdhorton/repos",
                        "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 710547614,
                        "node_id": "R_kgDOKloYng",
                        "name": "python-aiplatform",
                        "full_name": "wdhorton/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "wdhorton",
                            "id": 13503072,
                            "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/wdhorton",
                            "html_url": "https://github.com/wdhorton",
                            "followers_url": "https://api.github.com/users/wdhorton/followers",
                            "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                            "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                            "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                            "repos_url": "https://api.github.com/users/wdhorton/repos",
                            "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/wdhorton/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": true,
                        "url": "https://api.github.com/repos/wdhorton/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/wdhorton/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/wdhorton/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/wdhorton/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/wdhorton/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/wdhorton/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/wdhorton/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/wdhorton/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/wdhorton/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/wdhorton/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/wdhorton/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/wdhorton/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/wdhorton/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/wdhorton/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/wdhorton/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/wdhorton/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/wdhorton/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/wdhorton/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/wdhorton/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/wdhorton/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/wdhorton/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/wdhorton/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/wdhorton/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/wdhorton/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/wdhorton/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/wdhorton/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/wdhorton/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/wdhorton/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/wdhorton/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/wdhorton/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/wdhorton/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/wdhorton/python-aiplatform/deployments",
                        "created_at": "2023-10-26T23:35:20Z",
                        "updated_at": "2023-10-26T23:35:20Z",
                        "pushed_at": "2023-10-26T23:43:12Z",
                        "git_url": "git://github.com/wdhorton/python-aiplatform.git",
                        "ssh_url": "git@github.com:wdhorton/python-aiplatform.git",
                        "clone_url": "https://github.com/wdhorton/python-aiplatform.git",
                        "svn_url": "https://github.com/wdhorton/python-aiplatform",
                        "homepage": "",
                        "size": 88173,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": null,
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "googleapis:main",
                    "ref": "main",
                    "sha": "0b825c9f4615d119859dc3c3ecaf558614d5e148",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-26T23:44:54Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88173,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 297,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 212,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 297,
                        "open_issues": 212,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866"
                    },
                    "html": {
                        "href": "https://github.com/googleapis/python-aiplatform/pull/2866"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2866/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2866/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/412986a313cc4a790f2ce40efbb586a0d8982d94"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 1,
                "deletions": 1,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:44:55Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32884270569",
        "type": "ForkEvent",
        "actor": {
            "id": 13503072,
            "login": "wdhorton",
            "display_login": "wdhorton",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wdhorton",
            "avatar_url": "https://avatars.githubusercontent.com/u/13503072?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "forkee": {
                "id": 710547614,
                "node_id": "R_kgDOKloYng",
                "name": "python-aiplatform",
                "full_name": "wdhorton/python-aiplatform",
                "private": false,
                "owner": {
                    "login": "wdhorton",
                    "id": 13503072,
                    "node_id": "MDQ6VXNlcjEzNTAzMDcy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/13503072?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wdhorton",
                    "html_url": "https://github.com/wdhorton",
                    "followers_url": "https://api.github.com/users/wdhorton/followers",
                    "following_url": "https://api.github.com/users/wdhorton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wdhorton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wdhorton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wdhorton/subscriptions",
                    "organizations_url": "https://api.github.com/users/wdhorton/orgs",
                    "repos_url": "https://api.github.com/users/wdhorton/repos",
                    "events_url": "https://api.github.com/users/wdhorton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wdhorton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/wdhorton/python-aiplatform",
                "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                "fork": true,
                "url": "https://api.github.com/repos/wdhorton/python-aiplatform",
                "forks_url": "https://api.github.com/repos/wdhorton/python-aiplatform/forks",
                "keys_url": "https://api.github.com/repos/wdhorton/python-aiplatform/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/wdhorton/python-aiplatform/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/wdhorton/python-aiplatform/teams",
                "hooks_url": "https://api.github.com/repos/wdhorton/python-aiplatform/hooks",
                "issue_events_url": "https://api.github.com/repos/wdhorton/python-aiplatform/issues/events{/number}",
                "events_url": "https://api.github.com/repos/wdhorton/python-aiplatform/events",
                "assignees_url": "https://api.github.com/repos/wdhorton/python-aiplatform/assignees{/user}",
                "branches_url": "https://api.github.com/repos/wdhorton/python-aiplatform/branches{/branch}",
                "tags_url": "https://api.github.com/repos/wdhorton/python-aiplatform/tags",
                "blobs_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/wdhorton/python-aiplatform/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/wdhorton/python-aiplatform/languages",
                "stargazers_url": "https://api.github.com/repos/wdhorton/python-aiplatform/stargazers",
                "contributors_url": "https://api.github.com/repos/wdhorton/python-aiplatform/contributors",
                "subscribers_url": "https://api.github.com/repos/wdhorton/python-aiplatform/subscribers",
                "subscription_url": "https://api.github.com/repos/wdhorton/python-aiplatform/subscription",
                "commits_url": "https://api.github.com/repos/wdhorton/python-aiplatform/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/wdhorton/python-aiplatform/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/wdhorton/python-aiplatform/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/wdhorton/python-aiplatform/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/wdhorton/python-aiplatform/contents/{+path}",
                "compare_url": "https://api.github.com/repos/wdhorton/python-aiplatform/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/wdhorton/python-aiplatform/merges",
                "archive_url": "https://api.github.com/repos/wdhorton/python-aiplatform/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/wdhorton/python-aiplatform/downloads",
                "issues_url": "https://api.github.com/repos/wdhorton/python-aiplatform/issues{/number}",
                "pulls_url": "https://api.github.com/repos/wdhorton/python-aiplatform/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/wdhorton/python-aiplatform/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/wdhorton/python-aiplatform/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/wdhorton/python-aiplatform/labels{/name}",
                "releases_url": "https://api.github.com/repos/wdhorton/python-aiplatform/releases{/id}",
                "deployments_url": "https://api.github.com/repos/wdhorton/python-aiplatform/deployments",
                "created_at": "2023-10-26T23:35:20Z",
                "updated_at": "2023-10-26T23:35:20Z",
                "pushed_at": "2023-10-26T22:43:14Z",
                "git_url": "git://github.com/wdhorton/python-aiplatform.git",
                "ssh_url": "git@github.com:wdhorton/python-aiplatform.git",
                "clone_url": "https://github.com/wdhorton/python-aiplatform.git",
                "svn_url": "https://github.com/wdhorton/python-aiplatform",
                "homepage": "",
                "size": 88173,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:35:20Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    },
    {
        "id": "32883579353",
        "type": "PullRequestEvent",
        "actor": {
            "id": 56741989,
            "login": "copybara-service[bot]",
            "display_login": "copybara-service",
            "gravatar_id": "",
            "url": "https://api.github.com/users/copybara-service[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"
        },
        "repo": {
            "id": 298017988,
            "name": "googleapis/python-aiplatform",
            "url": "https://api.github.com/repos/googleapis/python-aiplatform"
        },
        "payload": {
            "action": "closed",
            "number": 2861,
            "pull_request": {
                "url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2861",
                "id": 1575586878,
                "node_id": "PR_kwDOEcNkxM5d6Yw-",
                "html_url": "https://github.com/googleapis/python-aiplatform/pull/2861",
                "diff_url": "https://github.com/googleapis/python-aiplatform/pull/2861.diff",
                "patch_url": "https://github.com/googleapis/python-aiplatform/pull/2861.patch",
                "issue_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2861",
                "number": 2861,
                "state": "closed",
                "locked": false,
                "title": "chore: Ensure the cleanup of the model resource when the log_model call fails.",
                "user": {
                    "login": "copybara-service[bot]",
                    "id": 56741989,
                    "node_id": "MDM6Qm90NTY3NDE5ODk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/44061?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/copybara-service%5Bbot%5D",
                    "html_url": "https://github.com/apps/copybara-service",
                    "followers_url": "https://api.github.com/users/copybara-service%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/copybara-service%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/copybara-service%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/copybara-service%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/copybara-service%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/copybara-service%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/copybara-service%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/copybara-service%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/copybara-service%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "body": "chore: Ensure the cleanup of the model resource when the log_model call fails.\n",
                "created_at": "2023-10-26T21:10:08Z",
                "updated_at": "2023-10-26T22:43:13Z",
                "closed_at": "2023-10-26T22:43:12Z",
                "merged_at": null,
                "merge_commit_sha": "4b9b9d450d559e3808300e956a6393d85fc1f6f8",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 3988985517,
                        "node_id": "LA_kwDOEcNkxM7twxat",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/size:%20m",
                        "name": "size: m",
                        "color": "c406d7",
                        "default": false,
                        "description": "Pull request size is medium."
                    },
                    {
                        "id": 4100000550,
                        "node_id": "LA_kwDOEcNkxM70YQsm",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/api:%20vertex-ai",
                        "name": "api: vertex-ai",
                        "color": "f1d2a0",
                        "default": false,
                        "description": "Issues related to the googleapis/python-aiplatform API."
                    },
                    {
                        "id": 4658450283,
                        "node_id": "LA_kwDOEcNkxM8AAAABFapPaw",
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform/labels/google-contributor",
                        "name": "google-contributor",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2861/commits",
                "review_comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2861/comments",
                "review_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2861/comments",
                "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/0b825c9f4615d119859dc3c3ecaf558614d5e148",
                "head": {
                    "label": "googleapis:copybara_576980766",
                    "ref": "copybara_576980766",
                    "sha": "0b825c9f4615d119859dc3c3ecaf558614d5e148",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-26T22:43:12Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88171,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 296,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 211,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 296,
                        "open_issues": 211,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "googleapis:main",
                    "ref": "main",
                    "sha": "0b825c9f4615d119859dc3c3ecaf558614d5e148",
                    "user": {
                        "login": "googleapis",
                        "id": 16785467,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/googleapis",
                        "html_url": "https://github.com/googleapis",
                        "followers_url": "https://api.github.com/users/googleapis/followers",
                        "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                        "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                        "organizations_url": "https://api.github.com/users/googleapis/orgs",
                        "repos_url": "https://api.github.com/users/googleapis/repos",
                        "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/googleapis/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 298017988,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyOTgwMTc5ODg=",
                        "name": "python-aiplatform",
                        "full_name": "googleapis/python-aiplatform",
                        "private": false,
                        "owner": {
                            "login": "googleapis",
                            "id": 16785467,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjE2Nzg1NDY3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/googleapis",
                            "html_url": "https://github.com/googleapis",
                            "followers_url": "https://api.github.com/users/googleapis/followers",
                            "following_url": "https://api.github.com/users/googleapis/following{/other_user}",
                            "gists_url": "https://api.github.com/users/googleapis/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/googleapis/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/googleapis/subscriptions",
                            "organizations_url": "https://api.github.com/users/googleapis/orgs",
                            "repos_url": "https://api.github.com/users/googleapis/repos",
                            "events_url": "https://api.github.com/users/googleapis/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/googleapis/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/googleapis/python-aiplatform",
                        "description": "A Python SDK for Vertex AI, a fully managed, end-to-end platform for data science and machine learning.",
                        "fork": false,
                        "url": "https://api.github.com/repos/googleapis/python-aiplatform",
                        "forks_url": "https://api.github.com/repos/googleapis/python-aiplatform/forks",
                        "keys_url": "https://api.github.com/repos/googleapis/python-aiplatform/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/googleapis/python-aiplatform/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/googleapis/python-aiplatform/teams",
                        "hooks_url": "https://api.github.com/repos/googleapis/python-aiplatform/hooks",
                        "issue_events_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/googleapis/python-aiplatform/events",
                        "assignees_url": "https://api.github.com/repos/googleapis/python-aiplatform/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/googleapis/python-aiplatform/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/tags",
                        "blobs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/googleapis/python-aiplatform/languages",
                        "stargazers_url": "https://api.github.com/repos/googleapis/python-aiplatform/stargazers",
                        "contributors_url": "https://api.github.com/repos/googleapis/python-aiplatform/contributors",
                        "subscribers_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscribers",
                        "subscription_url": "https://api.github.com/repos/googleapis/python-aiplatform/subscription",
                        "commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/googleapis/python-aiplatform/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/googleapis/python-aiplatform/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/googleapis/python-aiplatform/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/googleapis/python-aiplatform/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/googleapis/python-aiplatform/merges",
                        "archive_url": "https://api.github.com/repos/googleapis/python-aiplatform/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/googleapis/python-aiplatform/downloads",
                        "issues_url": "https://api.github.com/repos/googleapis/python-aiplatform/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/googleapis/python-aiplatform/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/googleapis/python-aiplatform/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/googleapis/python-aiplatform/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/googleapis/python-aiplatform/labels{/name}",
                        "releases_url": "https://api.github.com/repos/googleapis/python-aiplatform/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/googleapis/python-aiplatform/deployments",
                        "created_at": "2020-09-23T15:43:39Z",
                        "updated_at": "2023-10-24T00:34:47Z",
                        "pushed_at": "2023-10-26T22:43:12Z",
                        "git_url": "git://github.com/googleapis/python-aiplatform.git",
                        "ssh_url": "git@github.com:googleapis/python-aiplatform.git",
                        "clone_url": "https://github.com/googleapis/python-aiplatform.git",
                        "svn_url": "https://github.com/googleapis/python-aiplatform",
                        "homepage": "",
                        "size": 88171,
                        "stargazers_count": 424,
                        "watchers_count": 424,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 296,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 211,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 296,
                        "open_issues": 211,
                        "watchers": 424,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2861"
                    },
                    "html": {
                        "href": "https://github.com/googleapis/python-aiplatform/pull/2861"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2861"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/issues/2861/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2861/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/pulls/2861/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/googleapis/python-aiplatform/statuses/0b825c9f4615d119859dc3c3ecaf558614d5e148"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 0,
                "additions": 0,
                "deletions": 0,
                "changed_files": 0
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:43:13Z",
        "org": {
            "id": 16785467,
            "login": "googleapis",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/googleapis",
            "avatar_url": "https://avatars.githubusercontent.com/u/16785467?"
        }
    }
]