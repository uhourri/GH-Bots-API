[
    {
        "id": "32893754075",
        "type": "PushEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "repository_id": 19641638,
            "push_id": 15589300903,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "36311e4f2762236484dbb98a4bfeb69fdc9fbee2",
            "before": "8f43ee1cf49ce2990c1825f18013799a5e22fe52",
            "commits": [
                {
                    "sha": "36311e4f2762236484dbb98a4bfeb69fdc9fbee2",
                    "author": {
                        "email": "mpaluch@paluch.biz",
                        "name": "Mark Paluch"
                    },
                    "message": "Improve documentation on Micrometer percentile config #2538",
                    "distinct": true,
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/commits/36311e4f2762236484dbb98a4bfeb69fdc9fbee2"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:16:13Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32893753933",
        "type": "PushEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "repository_id": 19641638,
            "push_id": 15589300835,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/6.2.x",
            "head": "a9021db7a52c20c6c9e88b90cfd4f7ee0da71ad5",
            "before": "9cb8e7353a86730c3759184bcf9df28e447749ba",
            "commits": [
                {
                    "sha": "a9021db7a52c20c6c9e88b90cfd4f7ee0da71ad5",
                    "author": {
                        "email": "mpaluch@paluch.biz",
                        "name": "Mark Paluch"
                    },
                    "message": "Improve documentation on Micrometer percentile config #2538",
                    "distinct": true,
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/commits/a9021db7a52c20c6c9e88b90cfd4f7ee0da71ad5"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:16:12Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32893727786",
        "type": "GollumEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "pages": [
                {
                    "page_name": "Command-Latency-Metrics",
                    "title": "Command Latency Metrics",
                    "summary": null,
                    "action": "edited",
                    "sha": "037bc0e2d0f8f7cf1d60f998e3b3241e7263fea4",
                    "html_url": "https://github.com/lettuce-io/lettuce-core/wiki/Command-Latency-Metrics"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:15:15Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32893596709",
        "type": "IssuesEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2538",
                "id": 1965076431,
                "node_id": "I_kwDOASu1Js51IK_P",
                "number": 2538,
                "title": "Docs on metrics (wiki) are misleading",
                "user": {
                    "login": "hkupty",
                    "id": 2695819,
                    "node_id": "MDQ6VXNlcjI2OTU4MTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2695819?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/hkupty",
                    "html_url": "https://github.com/hkupty",
                    "followers_url": "https://api.github.com/users/hkupty/followers",
                    "following_url": "https://api.github.com/users/hkupty/following{/other_user}",
                    "gists_url": "https://api.github.com/users/hkupty/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/hkupty/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/hkupty/subscriptions",
                    "organizations_url": "https://api.github.com/users/hkupty/orgs",
                    "repos_url": "https://api.github.com/users/hkupty/repos",
                    "events_url": "https://api.github.com/users/hkupty/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/hkupty/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 616158417,
                        "node_id": "MDU6TGFiZWw2MTYxNTg0MTc=",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20documentation",
                        "name": "type: documentation",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A documentation update"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T08:57:35Z",
                "updated_at": "2023-10-27T09:10:23Z",
                "closed_at": "2023-10-27T09:10:22Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n[The metrics page](https://github.com/lettuce-io/lettuce-core/wiki/Command-Latency-Metrics#micrometer-options), on micrometer's settings, point out that `targetPercentiles` default to `50.0, 90.0, 95.0, 99.0, 99.9` as percent values, but this can be interpreted as the input values being on the range of `0.0` to `100.0` \r\n\r\n#### Current Behavior\r\n\r\n![image](https://github.com/lettuce-io/lettuce-core/assets/2695819/d8bf0e77-0330-4a71-862d-e58354d180e6)\r\n\r\nOf course setting up the wrong values lead to an error\r\n\r\n#### Input Code\r\n\r\nRepo not shared as it is private\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```kotlin\r\n            val options = MicrometerOptions\r\n                .builder()\r\n                .histogram(true)\r\n                .targetPercentiles(doubleArrayOf(50.0, 95.0, 99.0))\r\n                .build()\r\n```\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\nDocs show us input value in the actual format they need to be supplied, for example `0.5, 0.9, 0.95, 0.99, 0.999`.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 6.1.5.RELEASE\r\n- Redis version: N/A\r\n\r\n#### Possible Solution\r\n\r\nUpdate the docs\r\n\r\n#### Additional context\r\n\r\nIf this is described elsewhere, say in a `docs/` folder or in a javadoc-style page, it should be linked in the wiki as well.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:10:24Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32893596582",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2538",
                "id": 1965076431,
                "node_id": "I_kwDOASu1Js51IK_P",
                "number": 2538,
                "title": "Docs on metrics (wiki) are misleading",
                "user": {
                    "login": "hkupty",
                    "id": 2695819,
                    "node_id": "MDQ6VXNlcjI2OTU4MTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2695819?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/hkupty",
                    "html_url": "https://github.com/hkupty",
                    "followers_url": "https://api.github.com/users/hkupty/followers",
                    "following_url": "https://api.github.com/users/hkupty/following{/other_user}",
                    "gists_url": "https://api.github.com/users/hkupty/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/hkupty/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/hkupty/subscriptions",
                    "organizations_url": "https://api.github.com/users/hkupty/orgs",
                    "repos_url": "https://api.github.com/users/hkupty/repos",
                    "events_url": "https://api.github.com/users/hkupty/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/hkupty/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 616158417,
                        "node_id": "MDU6TGFiZWw2MTYxNTg0MTc=",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20documentation",
                        "name": "type: documentation",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A documentation update"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T08:57:35Z",
                "updated_at": "2023-10-27T09:10:23Z",
                "closed_at": "2023-10-27T09:10:22Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n[The metrics page](https://github.com/lettuce-io/lettuce-core/wiki/Command-Latency-Metrics#micrometer-options), on micrometer's settings, point out that `targetPercentiles` default to `50.0, 90.0, 95.0, 99.0, 99.9` as percent values, but this can be interpreted as the input values being on the range of `0.0` to `100.0` \r\n\r\n#### Current Behavior\r\n\r\n![image](https://github.com/lettuce-io/lettuce-core/assets/2695819/d8bf0e77-0330-4a71-862d-e58354d180e6)\r\n\r\nOf course setting up the wrong values lead to an error\r\n\r\n#### Input Code\r\n\r\nRepo not shared as it is private\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```kotlin\r\n            val options = MicrometerOptions\r\n                .builder()\r\n                .histogram(true)\r\n                .targetPercentiles(doubleArrayOf(50.0, 95.0, 99.0))\r\n                .build()\r\n```\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\nDocs show us input value in the actual format they need to be supplied, for example `0.5, 0.9, 0.95, 0.99, 0.999`.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 6.1.5.RELEASE\r\n- Redis version: N/A\r\n\r\n#### Possible Solution\r\n\r\nUpdate the docs\r\n\r\n#### Additional context\r\n\r\nIf this is described elsewhere, say in a `docs/` folder or in a javadoc-style page, it should be linked in the wiki as well.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1782570540",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2538#issuecomment-1782570540",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538",
                "id": 1782570540,
                "node_id": "IC_kwDOASu1Js5qP94s",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:10:22Z",
                "updated_at": "2023-10-27T09:10:22Z",
                "author_association": "MEMBER",
                "body": "Thanks for the hint. That's fixed now.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1782570540/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:10:23Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32893582861",
        "type": "GollumEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "pages": [
                {
                    "page_name": "Command-Latency-Metrics",
                    "title": "Command Latency Metrics",
                    "summary": null,
                    "action": "edited",
                    "sha": "15ea461cdfd776617063834faafedad0b05747d9",
                    "html_url": "https://github.com/lettuce-io/lettuce-core/wiki/Command-Latency-Metrics"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:09:52Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32893257230",
        "type": "IssuesEvent",
        "actor": {
            "id": 2695819,
            "login": "hkupty",
            "display_login": "hkupty",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hkupty",
            "avatar_url": "https://avatars.githubusercontent.com/u/2695819?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2538",
                "id": 1965076431,
                "node_id": "I_kwDOASu1Js51IK_P",
                "number": 2538,
                "title": "Docs on metrics (wiki) are misleading",
                "user": {
                    "login": "hkupty",
                    "id": 2695819,
                    "node_id": "MDQ6VXNlcjI2OTU4MTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/2695819?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/hkupty",
                    "html_url": "https://github.com/hkupty",
                    "followers_url": "https://api.github.com/users/hkupty/followers",
                    "following_url": "https://api.github.com/users/hkupty/following{/other_user}",
                    "gists_url": "https://api.github.com/users/hkupty/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/hkupty/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/hkupty/subscriptions",
                    "organizations_url": "https://api.github.com/users/hkupty/orgs",
                    "repos_url": "https://api.github.com/users/hkupty/repos",
                    "events_url": "https://api.github.com/users/hkupty/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/hkupty/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T08:57:35Z",
                "updated_at": "2023-10-27T08:57:35Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n[The metrics page](https://github.com/lettuce-io/lettuce-core/wiki/Command-Latency-Metrics#micrometer-options), on micrometer's settings, point out that `targetPercentiles` default to `50.0, 90.0, 95.0, 99.0, 99.9` as percent values, but this can be interpreted as the input values being on the range of `0.0` to `100.0` \r\n\r\n#### Current Behavior\r\n\r\n![image](https://github.com/lettuce-io/lettuce-core/assets/2695819/d8bf0e77-0330-4a71-862d-e58354d180e6)\r\n\r\nOf course setting up the wrong values lead to an error\r\n\r\n#### Input Code\r\n\r\nRepo not shared as it is private\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```kotlin\r\n            val options = MicrometerOptions\r\n                .builder()\r\n                .histogram(true)\r\n                .targetPercentiles(doubleArrayOf(50.0, 95.0, 99.0))\r\n                .build()\r\n```\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\nDocs show us input value in the actual format they need to be supplied, for example `0.5, 0.9, 0.95, 0.99, 0.999`.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 6.1.5.RELEASE\r\n- Redis version: N/A\r\n\r\n#### Possible Solution\r\n\r\nUpdate the docs\r\n\r\n#### Additional context\r\n\r\nIf this is described elsewhere, say in a `docs/` folder or in a javadoc-style page, it should be linked in the wiki as well.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2538/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:57:36Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32890552228",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4271525,
            "login": "coolbeevip",
            "display_login": "coolbeevip",
            "gravatar_id": "",
            "url": "https://api.github.com/users/coolbeevip",
            "avatar_url": "https://avatars.githubusercontent.com/u/4271525?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2350",
                "id": 1613318923,
                "node_id": "I_kwDOASu1Js5gKUsL",
                "number": 2350,
                "title": "Lettuce compatibility with Redis Server",
                "user": {
                    "login": "davide-capozzi",
                    "id": 125470225,
                    "node_id": "U_kgDOB3qGEQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/125470225?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davide-capozzi",
                    "html_url": "https://github.com/davide-capozzi",
                    "followers_url": "https://api.github.com/users/davide-capozzi/followers",
                    "following_url": "https://api.github.com/users/davide-capozzi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davide-capozzi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davide-capozzi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davide-capozzi/subscriptions",
                    "organizations_url": "https://api.github.com/users/davide-capozzi/orgs",
                    "repos_url": "https://api.github.com/users/davide-capozzi/repos",
                    "events_url": "https://api.github.com/users/davide-capozzi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davide-capozzi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544799,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5OQ==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/for:%20stackoverflow",
                        "name": "for: stackoverflow",
                        "color": "c5def5",
                        "default": false,
                        "description": "A question that is better suited to stackoverflow.com"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-03-07T12:10:54Z",
                "updated_at": "2023-10-27T07:07:56Z",
                "closed_at": "2023-03-07T14:16:13Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I need to upgrade a redis 5.x cluster which is shared between a lot of apps which are using different lettuce versions, is there any resource available to understand each released lettuce version compatibility with the redis server?\r\n\r\nFor example the latest RELEASE-NOTE for 6.2 says:\r\n\r\n> Lettuce 6 supports Redis 2.6+ up to Redis `7.x.` In terms of Java runtime, Lettuce requires at least Java 8 and works with Java 18.\r\n\r\nBut in 6.1 it was saying:\r\n\r\n> Lettuce 6 supports Redis 2.6+ up to Redis `6.x`. In terms of Java runtime, Lettuce requires at least Java 8 and works with Java 16.\r\n\r\nI'm a bit confused here, does it mean i _need_ lettuce `6.2` to be compatible with a redis `7.x` server or is any `6.x` lettuce client enough?\r\n\r\nIn my specific use case i was able to figure out the apps actually use 3 lettuce versions:\r\n\r\n- 6.1.10.RELEASE\r\n- 6.1.8.RELEASE\r\n- 5.1.8.RELEASE\r\n\r\nNow the RELEASE-NOTE for 5.1.8 doesn't say anything about the compatibility with the redis server, can anyone help me out here? given these 3 clients what is the maximum redis version i can safely upgrade to?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/timeline",
                "performed_via_github_app": null,
                "state_reason": "not_planned"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1782409176",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2350#issuecomment-1782409176",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350",
                "id": 1782409176,
                "node_id": "IC_kwDOASu1Js5qPWfY",
                "user": {
                    "login": "coolbeevip",
                    "id": 4271525,
                    "node_id": "MDQ6VXNlcjQyNzE1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4271525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/coolbeevip",
                    "html_url": "https://github.com/coolbeevip",
                    "followers_url": "https://api.github.com/users/coolbeevip/followers",
                    "following_url": "https://api.github.com/users/coolbeevip/following{/other_user}",
                    "gists_url": "https://api.github.com/users/coolbeevip/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/coolbeevip/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/coolbeevip/subscriptions",
                    "organizations_url": "https://api.github.com/users/coolbeevip/orgs",
                    "repos_url": "https://api.github.com/users/coolbeevip/repos",
                    "events_url": "https://api.github.com/users/coolbeevip/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/coolbeevip/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T07:07:56Z",
                "updated_at": "2023-10-27T07:07:56Z",
                "author_association": "CONTRIBUTOR",
                "body": "> Regarding `HELLO`, you Lettuce tries to auto-discover the protocol. You can pin the Redis version to a fixed one (RESP2/RESP3). In RESP2 mode, `HELLO` isn't used at all.\r\n> \r\n> In any case, happy to hear if you run into any incompatibilities that we can sort out.\r\n\r\nI appreciate your guidance. Changing the protocol to RESP2 resolved the issue I was encountering.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1782409176/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T07:07:56Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32889535239",
        "type": "WatchEvent",
        "actor": {
            "id": 8450596,
            "login": "lux-sit",
            "display_login": "lux-sit",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lux-sit",
            "avatar_url": "https://avatars.githubusercontent.com/u/8450596?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T06:16:34Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32878619252",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5356434,
            "login": "decoursin",
            "display_login": "decoursin",
            "gravatar_id": "",
            "url": "https://api.github.com/users/decoursin",
            "avatar_url": "https://avatars.githubusercontent.com/u/5356434?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2537",
                "id": 1961798118,
                "node_id": "I_kwDOASu1Js507qnm",
                "number": 2537,
                "title": "Lettuce - Automatic connection retry on startup",
                "user": {
                    "login": "decoursin",
                    "id": 5356434,
                    "node_id": "MDQ6VXNlcjUzNTY0MzQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5356434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/decoursin",
                    "html_url": "https://github.com/decoursin",
                    "followers_url": "https://api.github.com/users/decoursin/followers",
                    "following_url": "https://api.github.com/users/decoursin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/decoursin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/decoursin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/decoursin/subscriptions",
                    "organizations_url": "https://api.github.com/users/decoursin/orgs",
                    "repos_url": "https://api.github.com/users/decoursin/repos",
                    "events_url": "https://api.github.com/users/decoursin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/decoursin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T16:23:05Z",
                "updated_at": "2023-10-26T18:39:59Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "`lettuce` has fantastic functionality for handling any Redis disconnections once everything is up and running. If the Redis instance becomes unavailable, use of an appropriate retry_strategy means the client can be set up to try to reconnect until Redis is available again.\r\n\r\nIs it possible to get the client to enter this state at start-up, even if Redis is down?\r\n\r\nMy scenario is this: I am using Redis as a primary data-store, with a fallback secondary data-store which is not Redis-based. When my application starts, if Redis is not available, attempts to retrieve data will use the secondary data-store instead.\r\n\r\nHowever, when Redis does become available, I'd like my application to start using the Redis primary data-store instead. As the Redis connection did not succeed on start-up, the retry_strategy, which would handle this for a previously established connection, does not work.\r\n\r\nI could write code which will retry the initial Redis connection until it is successful, but it strikes me that the functionality available out-of-the-box is already very close to what I need, if I can persuade it to come into play from start-up even though Redis is down.\r\n\r\nPretty much copied from here: https://stackoverflow.com/questions/45836875/establish-connection-retry-behaviour-on-start-up-even-when-redis-is-not-availa",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781671032",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2537#issuecomment-1781671032",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537",
                "id": 1781671032,
                "node_id": "IC_kwDOASu1Js5qMiR4",
                "user": {
                    "login": "decoursin",
                    "id": 5356434,
                    "node_id": "MDQ6VXNlcjUzNTY0MzQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5356434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/decoursin",
                    "html_url": "https://github.com/decoursin",
                    "followers_url": "https://api.github.com/users/decoursin/followers",
                    "following_url": "https://api.github.com/users/decoursin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/decoursin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/decoursin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/decoursin/subscriptions",
                    "organizations_url": "https://api.github.com/users/decoursin/orgs",
                    "repos_url": "https://api.github.com/users/decoursin/repos",
                    "events_url": "https://api.github.com/users/decoursin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/decoursin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T18:39:59Z",
                "updated_at": "2023-10-26T18:39:59Z",
                "author_association": "NONE",
                "body": "Thank you very much for your answer.\r\n\r\n> I rather suggest using a connection pool to introduce fail safety. Asking the pool for a resource and if it succeeds, then perform Redis activity, otherwise, back off and follow the recovery code path.\r\n\r\nCan that be used at startup? I mean, could a connection pool as it works today, be used to solve the describe problem, where I could create the pool at start-up even if redis is unavailable?\r\n\r\nHow does the connection pool feature work with the auto-reconnect and buffering of commands (which by the way are two amazing features), does the connection pool support these two features as well?\r\n\r\nI mean, it seems a little silly to me to have to be dependent on redis. Many people only use it as a cache, I don't want to be dependent on my cache, in that if my cache doesn't work, well, I wouldn't want everything else to be failing just because of it. If redis is required at the beginning of my app, then my app is effectively dependent on redis, and this is especially a problem in today's world, where apps are often running on short-lived computers like Spot instances, so new apps have to start-up all the time.\r\n\r\nI mean, I'm not trying to be disrespectful, I'm very grateful for lettuce, it's awesome, I would just like to objectively point out the flaw.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781671032/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T18:40:00Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32877462919",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 62564281,
            "login": "andrewkruse",
            "display_login": "andrewkruse",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrewkruse",
            "avatar_url": "https://avatars.githubusercontent.com/u/62564281?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373",
                "id": 1647159119,
                "node_id": "I_kwDOASu1Js5iLadP",
                "number": 2373,
                "title": "Add option to disable tracing for individual commands",
                "user": {
                    "login": "huangmiao",
                    "id": 5791417,
                    "node_id": "MDQ6VXNlcjU3OTE0MTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5791417?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/huangmiao",
                    "html_url": "https://github.com/huangmiao",
                    "followers_url": "https://api.github.com/users/huangmiao/followers",
                    "following_url": "https://api.github.com/users/huangmiao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/huangmiao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/huangmiao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/huangmiao/subscriptions",
                    "organizations_url": "https://api.github.com/users/huangmiao/orgs",
                    "repos_url": "https://api.github.com/users/huangmiao/repos",
                    "events_url": "https://api.github.com/users/huangmiao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/huangmiao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544796,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5Ng==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20enhancement",
                        "name": "type: enhancement",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general enhancement"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99",
                    "html_url": "https://github.com/lettuce-io/lettuce-core/milestone/99",
                    "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99/labels",
                    "id": 8682942,
                    "node_id": "MI_kwDOASu1Js4AhH2-",
                    "number": 99,
                    "title": "6.3",
                    "description": "",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 2,
                    "closed_issues": 18,
                    "state": "open",
                    "created_at": "2022-11-23T07:40:23Z",
                    "updated_at": "2023-10-26T12:33:41Z",
                    "due_on": "2023-11-14T08:00:00Z",
                    "closed_at": null
                },
                "comments": 20,
                "created_at": "2023-03-30T08:31:46Z",
                "updated_at": "2023-10-26T17:52:46Z",
                "closed_at": "2023-10-26T12:33:41Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "l dont show ping hello command . set observationPredicate\r\n![image](https://user-images.githubusercontent.com/5791417/228777361-2acd777e-1dfe-4dd9-89f2-1dedf46c58c5.png)\r\nl use zipkin \r\n![image](https://user-images.githubusercontent.com/5791417/228777414-245ea4f2-3de9-478c-9b16-0c4e4188078a.png)\r\nonly change or add tag don`t remove ping and hello .. command \r\nCould you tell me where I can filter",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781573958",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373#issuecomment-1781573958",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "id": 1781573958,
                "node_id": "IC_kwDOASu1Js5qMKlG",
                "user": {
                    "login": "andrewkruse",
                    "id": 62564281,
                    "node_id": "MDQ6VXNlcjYyNTY0Mjgx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/62564281?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andrewkruse",
                    "html_url": "https://github.com/andrewkruse",
                    "followers_url": "https://api.github.com/users/andrewkruse/followers",
                    "following_url": "https://api.github.com/users/andrewkruse/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andrewkruse/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andrewkruse/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andrewkruse/subscriptions",
                    "organizations_url": "https://api.github.com/users/andrewkruse/orgs",
                    "repos_url": "https://api.github.com/users/andrewkruse/repos",
                    "events_url": "https://api.github.com/users/andrewkruse/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andrewkruse/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T17:52:46Z",
                "updated_at": "2023-10-26T17:52:46Z",
                "author_association": "NONE",
                "body": "Thank you for the guidance/int on the predicates being the wrong spot.\r\n\r\nHere's the snippet to blast it away without needing these tweaks.\r\n\r\n```\r\n    @Bean\r\n    fun noRedisHelloCommandError(): ObservationRegistryCustomizer<ObservationRegistry> =\r\n        ObservationRegistryCustomizer<ObservationRegistry> { registry ->\r\n            registry.observationConfig()\r\n                .observationFilter { context ->\r\n                    if (context is LettuceObservationContext) {\r\n                        if (context.requiredCommand.type == CommandType.HELLO) {\r\n                            context.removeHighCardinalityKeyValue(\"spring.data.redis.command.error\")\r\n                        }\r\n                    }\r\n                    context\r\n                }\r\n        }\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781573958/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:52:46Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32873448122",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2350",
                "id": 1613318923,
                "node_id": "I_kwDOASu1Js5gKUsL",
                "number": 2350,
                "title": "Lettuce compatibility with Redis Server",
                "user": {
                    "login": "davide-capozzi",
                    "id": 125470225,
                    "node_id": "U_kgDOB3qGEQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/125470225?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/davide-capozzi",
                    "html_url": "https://github.com/davide-capozzi",
                    "followers_url": "https://api.github.com/users/davide-capozzi/followers",
                    "following_url": "https://api.github.com/users/davide-capozzi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/davide-capozzi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/davide-capozzi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/davide-capozzi/subscriptions",
                    "organizations_url": "https://api.github.com/users/davide-capozzi/orgs",
                    "repos_url": "https://api.github.com/users/davide-capozzi/repos",
                    "events_url": "https://api.github.com/users/davide-capozzi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/davide-capozzi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544799,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5OQ==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/for:%20stackoverflow",
                        "name": "for: stackoverflow",
                        "color": "c5def5",
                        "default": false,
                        "description": "A question that is better suited to stackoverflow.com"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-03-07T12:10:54Z",
                "updated_at": "2023-10-26T15:22:38Z",
                "closed_at": "2023-03-07T14:16:13Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I need to upgrade a redis 5.x cluster which is shared between a lot of apps which are using different lettuce versions, is there any resource available to understand each released lettuce version compatibility with the redis server?\r\n\r\nFor example the latest RELEASE-NOTE for 6.2 says:\r\n\r\n> Lettuce 6 supports Redis 2.6+ up to Redis `7.x.` In terms of Java runtime, Lettuce requires at least Java 8 and works with Java 18.\r\n\r\nBut in 6.1 it was saying:\r\n\r\n> Lettuce 6 supports Redis 2.6+ up to Redis `6.x`. In terms of Java runtime, Lettuce requires at least Java 8 and works with Java 16.\r\n\r\nI'm a bit confused here, does it mean i _need_ lettuce `6.2` to be compatible with a redis `7.x` server or is any `6.x` lettuce client enough?\r\n\r\nIn my specific use case i was able to figure out the apps actually use 3 lettuce versions:\r\n\r\n- 6.1.10.RELEASE\r\n- 6.1.8.RELEASE\r\n- 5.1.8.RELEASE\r\n\r\nNow the RELEASE-NOTE for 5.1.8 doesn't say anything about the compatibility with the redis server, can anyone help me out here? given these 3 clients what is the maximum redis version i can safely upgrade to?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350/timeline",
                "performed_via_github_app": null,
                "state_reason": "not_planned"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781344862",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2350#issuecomment-1781344862",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2350",
                "id": 1781344862,
                "node_id": "IC_kwDOASu1Js5qLSpe",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T15:22:38Z",
                "updated_at": "2023-10-26T15:22:38Z",
                "author_association": "MEMBER",
                "body": "Regarding `HELLO`, you Lettuce tries to auto-discover the protocol. You can pin the Redis version to a fixed one (RESP2/RESP3). In RESP2 mode, `HELLO` isn't used at all.\r\n\r\nIn any case, happy to hear if you run into any incompatibilities that we can sort out.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781344862/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T15:22:38Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32873365890",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530",
                "id": 1952964530,
                "node_id": "I_kwDOASu1Js50Z9-y",
                "number": 2530,
                "title": "Lettuce writing to closed channels, results in persistent failure",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 448480068,
                        "node_id": "MDU6TGFiZWw0NDg0ODAwNjg=",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20waiting-for-feedback",
                        "name": "status: waiting-for-feedback",
                        "color": "fbca04",
                        "default": false,
                        "description": "We need additional information before we can continue"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-19T19:58:18Z",
                "updated_at": "2023-10-26T15:20:01Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\nPreface: I expect that this is client configuration issue but I have been unable to find similar issues, similar documented scenarios or relevant networking details.\r\n\r\nThis is using cluster mode with ElastiCache.\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\nWhen a connection becomes unhealthy (e.g. failover or network disruption) there is no cache activity until a new node becomes primary. When all nodes are exhausted of primary, cache activity within the shard halts indefinitely.\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNote that this will continue indefinitely. Healthy periodic refresh, cluster topology and close stale connections activity is still evident on the scheduled cadence.\r\n\r\n```java\r\n// Healthy access\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] write(ctx, ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5], promise)\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandEncoder: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379] writing command ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Received: 1341 bytes, 1 commands in the stack\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Stack contains: 1 commands\r\n\r\n// Channel is closed - this was time of network failure\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive()\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x9] deactivating endpoint handler\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive() done\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelUnregistered()\r\n\r\n// Failure behavior with auto-reconnect disabled (io.lettuce.core.RedisException: Currently not connected. Commands are rejected)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 16140)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0xc] write() done\r\n[DEBUG] (<Server Thread>-141) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n\r\n// Failure behavior with auto-reconnect enabled (io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 second(s))\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 7732)\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] writeToDisconnectedBuffer() buffering (disconnected) command ClusterCommand [command=AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] write() done\r\n```\r\n\r\nRead/write activity never reaches the socket.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\n<!-- Java/Kotlin/Scala/Groovy/\u2026 or Repo link if applicable: -->\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\nclientResources = DefaultClientResources.builder()\r\n    .reconnectDelay(\r\n        Delay.fullJitter(\r\n            MIN_RECONNECT_DELAY,\r\n            MAX_RECONNECT_DELAY,\r\n            FULL_JITTER_BASE, TimeUnit.MILLISECONDS)\r\n).build();\r\n\r\nRedisClusterClient clusterClient = RedisClusterClient.create(clientResources, <RedisURIBuilder>.build());\r\n\r\nClusterTopologyRefreshOptions clusterTopologyRefreshOptions = ClusterTopologyRefreshOptions.builder()\r\n    .enableAllAdaptiveRefreshTriggers()\r\n    .enablePeriodicRefresh(<1 minute>)\r\n    .closeStaleConnections(true)\r\n    .dynamicRefreshSources(true)\r\n    .build();\r\n\r\nSocketOptions socketOptions = SocketOptions.builder()\r\n    .connectTimeout(<100 ms>)\r\n    .keepAlive(false)\r\n    .tcpNoDelay(true)\r\n    .build();\r\n\r\nclusterClient.setOptions(ClusterClientOptions.builder()\r\n    .autoReconnect(<true/false>)\r\n    .topologyRefreshOptions(clusterTopologyRefreshOptions)\r\n    .socketOptions(socketOptions)\r\n    .build());\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecSync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecSync.setReadFrom(ReadFrom.NEAREST);\r\n    connByteCodecSync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecAsync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecAsync.setReadFrom(ReadFrom.MASTER);\r\n    connByteCodecAsync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<String, String> connStringCodec = clusterClient.connect(StringCodec.UTF8);\r\n    connStringCodec.setReadFrom(ReadFrom.MASTER);\r\n    connStringCodec.setTimeout(<1 second>);\r\n```\r\n\r\nIt then appears `.sync()` is used on these connections each access as the primitive for our cache interaction.\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\n<!-- A clear and concise description of what you expected to happen (or code). -->\r\n\r\nI would expect `closeStaleConnections()` (or some other health check) to stop writing to these channels and instead create new channels.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 5.3.x\r\n- Redis version: 7.0.x\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\nMitigations are restarting host, adding shards/nodes, failing over to node that wasn't hasn't been primary since boot.\r\n\r\n#### Additional context\r\n\r\n<!-- Add any other context about the problem here. Do not add code as screenshots. -->\r\n\r\nOne quick way I've reproduced this is by using `sudo ss -K dport = 6379` to terminate connections on the socket. It will not recover until I fail over primary.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781340165",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530#issuecomment-1781340165",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "id": 1781340165,
                "node_id": "IC_kwDOASu1Js5qLRgF",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T15:20:00Z",
                "updated_at": "2023-10-26T15:20:00Z",
                "author_association": "MEMBER",
                "body": "Redis Cluster mostly works with IP addresses and you can configure DNS resolvers for Lettuce.\r\n\r\n> I don't fully understand what 'remain with the connection is disconnected' means; does this only apply to queued commands, \r\n\r\nTo queued commands and commands routed to that connection if `Partitions` wasn't refreshed yet or no failover has happened.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781340165/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T15:20:01Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32870915353",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 148489015,
            "login": "greeaida",
            "display_login": "greeaida",
            "gravatar_id": "",
            "url": "https://api.github.com/users/greeaida",
            "avatar_url": "https://avatars.githubusercontent.com/u/148489015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530",
                "id": 1952964530,
                "node_id": "I_kwDOASu1Js50Z9-y",
                "number": 2530,
                "title": "Lettuce writing to closed channels, results in persistent failure",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 448480068,
                        "node_id": "MDU6TGFiZWw0NDg0ODAwNjg=",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20waiting-for-feedback",
                        "name": "status: waiting-for-feedback",
                        "color": "fbca04",
                        "default": false,
                        "description": "We need additional information before we can continue"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-19T19:58:18Z",
                "updated_at": "2023-10-26T14:07:22Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\nPreface: I expect that this is client configuration issue but I have been unable to find similar issues, similar documented scenarios or relevant networking details.\r\n\r\nThis is using cluster mode with ElastiCache.\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\nWhen a connection becomes unhealthy (e.g. failover or network disruption) there is no cache activity until a new node becomes primary. When all nodes are exhausted of primary, cache activity within the shard halts indefinitely.\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNote that this will continue indefinitely. Healthy periodic refresh, cluster topology and close stale connections activity is still evident on the scheduled cadence.\r\n\r\n```java\r\n// Healthy access\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] write(ctx, ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5], promise)\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandEncoder: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379] writing command ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Received: 1341 bytes, 1 commands in the stack\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Stack contains: 1 commands\r\n\r\n// Channel is closed - this was time of network failure\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive()\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x9] deactivating endpoint handler\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive() done\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelUnregistered()\r\n\r\n// Failure behavior with auto-reconnect disabled (io.lettuce.core.RedisException: Currently not connected. Commands are rejected)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 16140)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0xc] write() done\r\n[DEBUG] (<Server Thread>-141) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n\r\n// Failure behavior with auto-reconnect enabled (io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 second(s))\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 7732)\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] writeToDisconnectedBuffer() buffering (disconnected) command ClusterCommand [command=AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] write() done\r\n```\r\n\r\nRead/write activity never reaches the socket.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\n<!-- Java/Kotlin/Scala/Groovy/\u2026 or Repo link if applicable: -->\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\nclientResources = DefaultClientResources.builder()\r\n    .reconnectDelay(\r\n        Delay.fullJitter(\r\n            MIN_RECONNECT_DELAY,\r\n            MAX_RECONNECT_DELAY,\r\n            FULL_JITTER_BASE, TimeUnit.MILLISECONDS)\r\n).build();\r\n\r\nRedisClusterClient clusterClient = RedisClusterClient.create(clientResources, <RedisURIBuilder>.build());\r\n\r\nClusterTopologyRefreshOptions clusterTopologyRefreshOptions = ClusterTopologyRefreshOptions.builder()\r\n    .enableAllAdaptiveRefreshTriggers()\r\n    .enablePeriodicRefresh(<1 minute>)\r\n    .closeStaleConnections(true)\r\n    .dynamicRefreshSources(true)\r\n    .build();\r\n\r\nSocketOptions socketOptions = SocketOptions.builder()\r\n    .connectTimeout(<100 ms>)\r\n    .keepAlive(false)\r\n    .tcpNoDelay(true)\r\n    .build();\r\n\r\nclusterClient.setOptions(ClusterClientOptions.builder()\r\n    .autoReconnect(<true/false>)\r\n    .topologyRefreshOptions(clusterTopologyRefreshOptions)\r\n    .socketOptions(socketOptions)\r\n    .build());\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecSync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecSync.setReadFrom(ReadFrom.NEAREST);\r\n    connByteCodecSync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecAsync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecAsync.setReadFrom(ReadFrom.MASTER);\r\n    connByteCodecAsync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<String, String> connStringCodec = clusterClient.connect(StringCodec.UTF8);\r\n    connStringCodec.setReadFrom(ReadFrom.MASTER);\r\n    connStringCodec.setTimeout(<1 second>);\r\n```\r\n\r\nIt then appears `.sync()` is used on these connections each access as the primitive for our cache interaction.\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\n<!-- A clear and concise description of what you expected to happen (or code). -->\r\n\r\nI would expect `closeStaleConnections()` (or some other health check) to stop writing to these channels and instead create new channels.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 5.3.x\r\n- Redis version: 7.0.x\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\nMitigations are restarting host, adding shards/nodes, failing over to node that wasn't hasn't been primary since boot.\r\n\r\n#### Additional context\r\n\r\n<!-- Add any other context about the problem here. Do not add code as screenshots. -->\r\n\r\nOne quick way I've reproduced this is by using `sudo ss -K dport = 6379` to terminate connections on the socket. It will not recover until I fail over primary.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781204786",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530#issuecomment-1781204786",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "id": 1781204786,
                "node_id": "IC_kwDOASu1Js5qKwcy",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T14:07:21Z",
                "updated_at": "2023-10-26T14:07:21Z",
                "author_association": "NONE",
                "body": "> Please pay attention to the endpoint id epid=0xc which remains stable as identifier of the logical connection. Channel is the physical one that gets recreated upon reconnect.\r\n\r\nWe cache DNS forever (JVM misconfiguration, not intentional). Does this mean an unhealthy endpoint / logical connection could be persisted indefinitely and prevent the channel from being recreated?\r\n\r\n> Please also note that when a node is promoted from replica to master for the previously assigned slots, then the commands still remain with the connection that is disconnected.\r\n\r\nAn interesting symptom of our failure scenario is that even when nodes recover, commands continue to be rejected until failover to a replica occurs. Healthy activity will then resume, but if the former master is later selected for promotion, commands once again become rejected and failure recurs. I don't fully understand what 'remain with the connection is disconnected' means; does this only apply to queued commands, or does it suggest that application logic is required to correct the connection after failover?",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781204786/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T14:07:22Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32869656619",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2345",
                "id": 1607801988,
                "node_id": "I_kwDOASu1Js5f1RyE",
                "number": 2345,
                "title": "One of the futures returned by an async API gets stuck forever when auto flush is disabled",
                "user": {
                    "login": "dbarvitsky",
                    "id": 6224214,
                    "node_id": "MDQ6VXNlcjYyMjQyMTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6224214?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dbarvitsky",
                    "html_url": "https://github.com/dbarvitsky",
                    "followers_url": "https://api.github.com/users/dbarvitsky/followers",
                    "following_url": "https://api.github.com/users/dbarvitsky/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dbarvitsky/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dbarvitsky/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dbarvitsky/subscriptions",
                    "organizations_url": "https://api.github.com/users/dbarvitsky/orgs",
                    "repos_url": "https://api.github.com/users/dbarvitsky/repos",
                    "events_url": "https://api.github.com/users/dbarvitsky/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dbarvitsky/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544795,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5NQ==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20duplicate",
                        "name": "status: duplicate",
                        "color": "fef2c0",
                        "default": false,
                        "description": "A duplicate of another issue"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-03-03T01:37:57Z",
                "updated_at": "2023-10-26T13:30:25Z",
                "closed_at": "2023-10-26T13:30:25Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\nThe `connection.setAutoFlushCommands(false)` and `connection.flushCommands()` cause *one* (!) out of many futures returned by async commands to never (?) resolve, while all commands are executed by Redis successfully.\r\n\r\nThere are several similar issues concerned infinite (probably) waits on futures returned by async():\r\n- https://github.com/lettuce-io/lettuce-core/issues/2261\r\n- https://github.com/lettuce-io/lettuce-core/issues/542\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNo stack trace, code doesn't complete in a reasonable time.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\nPlease see the full unit test in details. The test creates arbitrary large number of asynchronous commands and polls for completion, while printing counters (updated by futures' listeners). When the number is small (i.e. 100K) everything seems to be working OK. When a number is large (500K for me), all futures complete except for one, that is stuck indefinitely.\r\n\r\nNote that all commands actually execute in Redis (`hlen test` gives the expected count, it is just 1 future that doesn't get resolved for some reason).\r\n\r\nPlaying with the client resources configuration didn't change the behavior. However `connection.setAutoFlushCommands(true)` seemed to fix the issue (although test is running ~5-7 times slower). \r\n\r\nThe test is designed to reproduce a real problem we see under load periodically, when cache seed jobs all of sudden begin to wait excessively after each batch (10K).\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\n @Test\r\n  public void testAsyncCommands() throws InterruptedException {\r\n    // The scenario is sensitive to this number, 500K reproduces it 100% for me, something like\r\n    // 163K does 7 out of 10.\r\n    final var bigNumber = 500_000;\r\n    // Default client resources:\r\n    final var resources = DefaultClientResources.builder().build();\r\n    try {\r\n      final var redis = RedisClient.create(resources, this.onlineStoreUri);\r\n      final var connection = redis.connect();\r\n      // Manually flush commands in batch mode, as suggested by wiki.\r\n      connection.setAutoFlushCommands(false);\r\n      // Time out the connection aggressively. I would expect each command not to run longer than\r\n      // 1 second with this setting.\r\n      connection.setTimeout(1000, TimeUnit.MILLISECONDS);  \r\n      // The list of futures we will be monitoring, plus some additional counters we will be calling\r\n      // from the futures' handlers.    \r\n      final var futures = new ArrayList<Future<?>>();      \r\n      final var errorCounter = new AtomicInteger(0);\r\n      final var successCounter = new AtomicInteger(0);\r\n      final var remainingCounter = new AtomicInteger(0);\r\n      try {\r\n        final var commands = connection.async();\r\n        for (int i = 0; i < bigNumber; i++) {\r\n          final var k = String.valueOf(i);\r\n          remainingCounter.incrementAndGet();\r\n          final var future = commands.hmset(\"test\", Map.of(k,k));\r\n          futures.add(future);\r\n          // Add a a handler to see when commands complete.\r\n          future.whenComplete((response, error) -> {\r\n              if (error != null) {\r\n                errorCounter.incrementAndGet();\r\n              } else {\r\n                successCounter.incrementAndGet();\r\n              }\r\n              remainingCounter.decrementAndGet();\r\n            });\r\n        }\r\n        // Flush commands as per wiki.\r\n        connection.flushCommands();\r\n\r\n        // waitAll(futures) just hangs, so we are iterating over them instead and printing counters\r\n        // every second.\r\n        while (remainingCounter.get() > 0) {\r\n          System.out.println(\"%d remaining, %d succeeded, %d failed, %d futures remaining\"\r\n              .formatted(\r\n                remainingCounter.get(),\r\n                successCounter.get(),\r\n                errorCounter.get(),\r\n                futures.stream().filter(f -> !f.isDone()).count()\r\n              )\r\n          );\r\n          Thread.sleep(1000);       \r\n        }\r\n      } finally {\r\n        connection.close();\r\n      }\r\n    } finally {\r\n      resources.shutdown(10000, 20000, TimeUnit.MILLISECONDS);\r\n    }\r\n  }\r\n```\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\nI would expect the returned futures to either succeed or fail as soon as Redis commands have been carried out. I would prefer async APIs to fail fast if the async operation cannot be scheduled.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 4.5.0.Final\r\n- Redis version: 7.0.7 (AWS ElastiCache)\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\n#### Additional context\r\n\r\nThis is used for batch-seeding the cache with key space ~ 250M. While it is sustainable to do so with `setAutoFlushCommands(true)`, the load times are significantly higher. ",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/timeline",
                "performed_via_github_app": null,
                "state_reason": "not_planned"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781131226",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2345#issuecomment-1781131226",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345",
                "id": 1781131226,
                "node_id": "IC_kwDOASu1Js5qKefa",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T13:30:25Z",
                "updated_at": "2023-10-26T13:30:25Z",
                "author_association": "MEMBER",
                "body": "I just saw your comment here. I removed the label and marked the ticket as duplicate as your issue is resolved. Let me know if you require any further assistance.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781131226/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:30:26Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32869656788",
        "type": "IssuesEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2345",
                "id": 1607801988,
                "node_id": "I_kwDOASu1Js5f1RyE",
                "number": 2345,
                "title": "One of the futures returned by an async API gets stuck forever when auto flush is disabled",
                "user": {
                    "login": "dbarvitsky",
                    "id": 6224214,
                    "node_id": "MDQ6VXNlcjYyMjQyMTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6224214?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dbarvitsky",
                    "html_url": "https://github.com/dbarvitsky",
                    "followers_url": "https://api.github.com/users/dbarvitsky/followers",
                    "following_url": "https://api.github.com/users/dbarvitsky/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dbarvitsky/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dbarvitsky/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dbarvitsky/subscriptions",
                    "organizations_url": "https://api.github.com/users/dbarvitsky/orgs",
                    "repos_url": "https://api.github.com/users/dbarvitsky/repos",
                    "events_url": "https://api.github.com/users/dbarvitsky/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dbarvitsky/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544795,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5NQ==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20duplicate",
                        "name": "status: duplicate",
                        "color": "fef2c0",
                        "default": false,
                        "description": "A duplicate of another issue"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-03-03T01:37:57Z",
                "updated_at": "2023-10-26T13:30:25Z",
                "closed_at": "2023-10-26T13:30:25Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\nThe `connection.setAutoFlushCommands(false)` and `connection.flushCommands()` cause *one* (!) out of many futures returned by async commands to never (?) resolve, while all commands are executed by Redis successfully.\r\n\r\nThere are several similar issues concerned infinite (probably) waits on futures returned by async():\r\n- https://github.com/lettuce-io/lettuce-core/issues/2261\r\n- https://github.com/lettuce-io/lettuce-core/issues/542\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNo stack trace, code doesn't complete in a reasonable time.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\nPlease see the full unit test in details. The test creates arbitrary large number of asynchronous commands and polls for completion, while printing counters (updated by futures' listeners). When the number is small (i.e. 100K) everything seems to be working OK. When a number is large (500K for me), all futures complete except for one, that is stuck indefinitely.\r\n\r\nNote that all commands actually execute in Redis (`hlen test` gives the expected count, it is just 1 future that doesn't get resolved for some reason).\r\n\r\nPlaying with the client resources configuration didn't change the behavior. However `connection.setAutoFlushCommands(true)` seemed to fix the issue (although test is running ~5-7 times slower). \r\n\r\nThe test is designed to reproduce a real problem we see under load periodically, when cache seed jobs all of sudden begin to wait excessively after each batch (10K).\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\n @Test\r\n  public void testAsyncCommands() throws InterruptedException {\r\n    // The scenario is sensitive to this number, 500K reproduces it 100% for me, something like\r\n    // 163K does 7 out of 10.\r\n    final var bigNumber = 500_000;\r\n    // Default client resources:\r\n    final var resources = DefaultClientResources.builder().build();\r\n    try {\r\n      final var redis = RedisClient.create(resources, this.onlineStoreUri);\r\n      final var connection = redis.connect();\r\n      // Manually flush commands in batch mode, as suggested by wiki.\r\n      connection.setAutoFlushCommands(false);\r\n      // Time out the connection aggressively. I would expect each command not to run longer than\r\n      // 1 second with this setting.\r\n      connection.setTimeout(1000, TimeUnit.MILLISECONDS);  \r\n      // The list of futures we will be monitoring, plus some additional counters we will be calling\r\n      // from the futures' handlers.    \r\n      final var futures = new ArrayList<Future<?>>();      \r\n      final var errorCounter = new AtomicInteger(0);\r\n      final var successCounter = new AtomicInteger(0);\r\n      final var remainingCounter = new AtomicInteger(0);\r\n      try {\r\n        final var commands = connection.async();\r\n        for (int i = 0; i < bigNumber; i++) {\r\n          final var k = String.valueOf(i);\r\n          remainingCounter.incrementAndGet();\r\n          final var future = commands.hmset(\"test\", Map.of(k,k));\r\n          futures.add(future);\r\n          // Add a a handler to see when commands complete.\r\n          future.whenComplete((response, error) -> {\r\n              if (error != null) {\r\n                errorCounter.incrementAndGet();\r\n              } else {\r\n                successCounter.incrementAndGet();\r\n              }\r\n              remainingCounter.decrementAndGet();\r\n            });\r\n        }\r\n        // Flush commands as per wiki.\r\n        connection.flushCommands();\r\n\r\n        // waitAll(futures) just hangs, so we are iterating over them instead and printing counters\r\n        // every second.\r\n        while (remainingCounter.get() > 0) {\r\n          System.out.println(\"%d remaining, %d succeeded, %d failed, %d futures remaining\"\r\n              .formatted(\r\n                remainingCounter.get(),\r\n                successCounter.get(),\r\n                errorCounter.get(),\r\n                futures.stream().filter(f -> !f.isDone()).count()\r\n              )\r\n          );\r\n          Thread.sleep(1000);       \r\n        }\r\n      } finally {\r\n        connection.close();\r\n      }\r\n    } finally {\r\n      resources.shutdown(10000, 20000, TimeUnit.MILLISECONDS);\r\n    }\r\n  }\r\n```\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\nI would expect the returned futures to either succeed or fail as soon as Redis commands have been carried out. I would prefer async APIs to fail fast if the async operation cannot be scheduled.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 4.5.0.Final\r\n- Redis version: 7.0.7 (AWS ElastiCache)\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\n#### Additional context\r\n\r\nThis is used for batch-seeding the cache with key space ~ 250M. While it is sustainable to do so with `setAutoFlushCommands(true)`, the load times are significantly higher. ",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2345/timeline",
                "performed_via_github_app": null,
                "state_reason": "not_planned"
            }
        },
        "public": true,
        "created_at": "2023-10-26T13:30:26Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32868529020",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530",
                "id": 1952964530,
                "node_id": "I_kwDOASu1Js50Z9-y",
                "number": 2530,
                "title": "Lettuce writing to closed channels, results in persistent failure",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 448480068,
                        "node_id": "MDU6TGFiZWw0NDg0ODAwNjg=",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20waiting-for-feedback",
                        "name": "status: waiting-for-feedback",
                        "color": "fbca04",
                        "default": false,
                        "description": "We need additional information before we can continue"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-19T19:58:18Z",
                "updated_at": "2023-10-26T12:56:45Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\nPreface: I expect that this is client configuration issue but I have been unable to find similar issues, similar documented scenarios or relevant networking details.\r\n\r\nThis is using cluster mode with ElastiCache.\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\nWhen a connection becomes unhealthy (e.g. failover or network disruption) there is no cache activity until a new node becomes primary. When all nodes are exhausted of primary, cache activity within the shard halts indefinitely.\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNote that this will continue indefinitely. Healthy periodic refresh, cluster topology and close stale connections activity is still evident on the scheduled cadence.\r\n\r\n```java\r\n// Healthy access\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] write(ctx, ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5], promise)\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandEncoder: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379] writing command ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Received: 1341 bytes, 1 commands in the stack\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Stack contains: 1 commands\r\n\r\n// Channel is closed - this was time of network failure\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive()\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x9] deactivating endpoint handler\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive() done\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelUnregistered()\r\n\r\n// Failure behavior with auto-reconnect disabled (io.lettuce.core.RedisException: Currently not connected. Commands are rejected)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 16140)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0xc] write() done\r\n[DEBUG] (<Server Thread>-141) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n\r\n// Failure behavior with auto-reconnect enabled (io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 second(s))\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 7732)\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] writeToDisconnectedBuffer() buffering (disconnected) command ClusterCommand [command=AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] write() done\r\n```\r\n\r\nRead/write activity never reaches the socket.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\n<!-- Java/Kotlin/Scala/Groovy/\u2026 or Repo link if applicable: -->\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\nclientResources = DefaultClientResources.builder()\r\n    .reconnectDelay(\r\n        Delay.fullJitter(\r\n            MIN_RECONNECT_DELAY,\r\n            MAX_RECONNECT_DELAY,\r\n            FULL_JITTER_BASE, TimeUnit.MILLISECONDS)\r\n).build();\r\n\r\nRedisClusterClient clusterClient = RedisClusterClient.create(clientResources, <RedisURIBuilder>.build());\r\n\r\nClusterTopologyRefreshOptions clusterTopologyRefreshOptions = ClusterTopologyRefreshOptions.builder()\r\n    .enableAllAdaptiveRefreshTriggers()\r\n    .enablePeriodicRefresh(<1 minute>)\r\n    .closeStaleConnections(true)\r\n    .dynamicRefreshSources(true)\r\n    .build();\r\n\r\nSocketOptions socketOptions = SocketOptions.builder()\r\n    .connectTimeout(<100 ms>)\r\n    .keepAlive(false)\r\n    .tcpNoDelay(true)\r\n    .build();\r\n\r\nclusterClient.setOptions(ClusterClientOptions.builder()\r\n    .autoReconnect(<true/false>)\r\n    .topologyRefreshOptions(clusterTopologyRefreshOptions)\r\n    .socketOptions(socketOptions)\r\n    .build());\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecSync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecSync.setReadFrom(ReadFrom.NEAREST);\r\n    connByteCodecSync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecAsync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecAsync.setReadFrom(ReadFrom.MASTER);\r\n    connByteCodecAsync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<String, String> connStringCodec = clusterClient.connect(StringCodec.UTF8);\r\n    connStringCodec.setReadFrom(ReadFrom.MASTER);\r\n    connStringCodec.setTimeout(<1 second>);\r\n```\r\n\r\nIt then appears `.sync()` is used on these connections each access as the primitive for our cache interaction.\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\n<!-- A clear and concise description of what you expected to happen (or code). -->\r\n\r\nI would expect `closeStaleConnections()` (or some other health check) to stop writing to these channels and instead create new channels.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 5.3.x\r\n- Redis version: 7.0.x\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\nMitigations are restarting host, adding shards/nodes, failing over to node that wasn't hasn't been primary since boot.\r\n\r\n#### Additional context\r\n\r\n<!-- Add any other context about the problem here. Do not add code as screenshots. -->\r\n\r\nOne quick way I've reproduced this is by using `sudo ss -K dport = 6379` to terminate connections on the socket. It will not recover until I fail over primary.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781070473",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530#issuecomment-1781070473",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "id": 1781070473,
                "node_id": "IC_kwDOASu1Js5qKPqJ",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:56:45Z",
                "updated_at": "2023-10-26T12:56:45Z",
                "author_association": "MEMBER",
                "body": "> The behavior I would expect would be for Lettuce to automatically establish a connection with the recovered node and send commands over the new healthy connection rather than the closed connection.\r\n\r\nPlease pay attention to the endpoint id `epid=0xc` which remains stable as identifier of the logical connection. `Channel` is the physical one that gets recreated upon reconnect.\r\n\r\nEach endpoint is tied to an endpoint defined by hostname and port. \r\n\r\n> After node recovery,\r\n\r\nThis translates to: When the failed node is back again at the previous hostname and port.\r\n\r\nPlease also note that when a node is promoted from replica to master for the previously assigned slots, then the commands still remain with the connection that is disconnected.\r\n\r\nConceptually, after sending a command to a particular connection (node), we do not know why the command was routed there (by intent, by ASK/MOVED redirection, by routing rules).",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781070473/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:56:45Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32868036567",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 148489015,
            "login": "greeaida",
            "display_login": "greeaida",
            "gravatar_id": "",
            "url": "https://api.github.com/users/greeaida",
            "avatar_url": "https://avatars.githubusercontent.com/u/148489015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530",
                "id": 1952964530,
                "node_id": "I_kwDOASu1Js50Z9-y",
                "number": 2530,
                "title": "Lettuce writing to closed channels, results in persistent failure",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 448480068,
                        "node_id": "MDU6TGFiZWw0NDg0ODAwNjg=",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20waiting-for-feedback",
                        "name": "status: waiting-for-feedback",
                        "color": "fbca04",
                        "default": false,
                        "description": "We need additional information before we can continue"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-19T19:58:18Z",
                "updated_at": "2023-10-26T12:41:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\nPreface: I expect that this is client configuration issue but I have been unable to find similar issues, similar documented scenarios or relevant networking details.\r\n\r\nThis is using cluster mode with ElastiCache.\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\nWhen a connection becomes unhealthy (e.g. failover or network disruption) there is no cache activity until a new node becomes primary. When all nodes are exhausted of primary, cache activity within the shard halts indefinitely.\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNote that this will continue indefinitely. Healthy periodic refresh, cluster topology and close stale connections activity is still evident on the scheduled cadence.\r\n\r\n```java\r\n// Healthy access\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] write(ctx, ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5], promise)\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandEncoder: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379] writing command ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Received: 1341 bytes, 1 commands in the stack\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Stack contains: 1 commands\r\n\r\n// Channel is closed - this was time of network failure\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive()\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x9] deactivating endpoint handler\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive() done\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelUnregistered()\r\n\r\n// Failure behavior with auto-reconnect disabled (io.lettuce.core.RedisException: Currently not connected. Commands are rejected)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 16140)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0xc] write() done\r\n[DEBUG] (<Server Thread>-141) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n\r\n// Failure behavior with auto-reconnect enabled (io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 second(s))\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 7732)\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] writeToDisconnectedBuffer() buffering (disconnected) command ClusterCommand [command=AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] write() done\r\n```\r\n\r\nRead/write activity never reaches the socket.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\n<!-- Java/Kotlin/Scala/Groovy/\u2026 or Repo link if applicable: -->\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\nclientResources = DefaultClientResources.builder()\r\n    .reconnectDelay(\r\n        Delay.fullJitter(\r\n            MIN_RECONNECT_DELAY,\r\n            MAX_RECONNECT_DELAY,\r\n            FULL_JITTER_BASE, TimeUnit.MILLISECONDS)\r\n).build();\r\n\r\nRedisClusterClient clusterClient = RedisClusterClient.create(clientResources, <RedisURIBuilder>.build());\r\n\r\nClusterTopologyRefreshOptions clusterTopologyRefreshOptions = ClusterTopologyRefreshOptions.builder()\r\n    .enableAllAdaptiveRefreshTriggers()\r\n    .enablePeriodicRefresh(<1 minute>)\r\n    .closeStaleConnections(true)\r\n    .dynamicRefreshSources(true)\r\n    .build();\r\n\r\nSocketOptions socketOptions = SocketOptions.builder()\r\n    .connectTimeout(<100 ms>)\r\n    .keepAlive(false)\r\n    .tcpNoDelay(true)\r\n    .build();\r\n\r\nclusterClient.setOptions(ClusterClientOptions.builder()\r\n    .autoReconnect(<true/false>)\r\n    .topologyRefreshOptions(clusterTopologyRefreshOptions)\r\n    .socketOptions(socketOptions)\r\n    .build());\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecSync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecSync.setReadFrom(ReadFrom.NEAREST);\r\n    connByteCodecSync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecAsync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecAsync.setReadFrom(ReadFrom.MASTER);\r\n    connByteCodecAsync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<String, String> connStringCodec = clusterClient.connect(StringCodec.UTF8);\r\n    connStringCodec.setReadFrom(ReadFrom.MASTER);\r\n    connStringCodec.setTimeout(<1 second>);\r\n```\r\n\r\nIt then appears `.sync()` is used on these connections each access as the primitive for our cache interaction.\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\n<!-- A clear and concise description of what you expected to happen (or code). -->\r\n\r\nI would expect `closeStaleConnections()` (or some other health check) to stop writing to these channels and instead create new channels.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 5.3.x\r\n- Redis version: 7.0.x\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\nMitigations are restarting host, adding shards/nodes, failing over to node that wasn't hasn't been primary since boot.\r\n\r\n#### Additional context\r\n\r\n<!-- Add any other context about the problem here. Do not add code as screenshots. -->\r\n\r\nOne quick way I've reproduced this is by using `sudo ss -K dport = 6379` to terminate connections on the socket. It will not recover until I fail over primary.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781045599",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530#issuecomment-1781045599",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "id": 1781045599,
                "node_id": "IC_kwDOASu1Js5qKJlf",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:41:33Z",
                "updated_at": "2023-10-26T12:41:33Z",
                "author_association": "NONE",
                "body": "Using the debug logs and your verbiage to convery how I understand this error:\r\n1. Commands sent over channel `0x0b2a62a5` (which is tied to a particular node apparent from the Node CNAME) execute successfully.\r\n```java\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] write(ctx, ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5], promise)\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandEncoder: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379] writing command ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Received: 1341 bytes, 1 commands in the stack\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Stack contains: 1 commands\r\n```\r\n2. The connection to this node is interrupted. I simulated this by closing configured Redis socket with `sudo ss -K dport = 6379`. Channel `0x0b2a62a5` is deactivated and deregistered.\r\n```java\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive()\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x9] deactivating endpoint handler\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive() done\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelUnregistered()\r\n```\r\n3. With auto-reconnect disabled and implicit reject command queue behavior, commands begin failing. They continue to attempt to send commands to channel `0x0b2a62a5`, despite it being closed.\r\n```java\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 16140)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0xc] write() done\r\n[DEBUG] (<Server Thread>-141) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n[INFO] (<Application>) io.lettuce.core.RedisException: Currently not connected. Commands are rejected\r\n```\r\n4. The node comes back online. Periodic refresh observes the recovered Node CNAME and establishes a connection over a new channel to exchange cluster information.\r\n5. After node recovery, commands continue to be sent to the closed channel `0x0b2a62a5` where connections are rejected.\r\n\r\nThe behavior I would expect would be for Lettuce to automatically establish a connection with the recovered node and send commands over the new healthy connection rather than the closed connection.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781045599/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:41:33Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32868000084",
        "type": "IssuesEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2515",
                "id": 1931499566,
                "node_id": "I_kwDOASu1Js5zIFgu",
                "number": 2515,
                "title": "Publisher stop working after a period of time",
                "user": {
                    "login": "EURedBoy",
                    "id": 69308679,
                    "node_id": "MDQ6VXNlcjY5MzA4Njc5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/69308679?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/EURedBoy",
                    "html_url": "https://github.com/EURedBoy",
                    "followers_url": "https://api.github.com/users/EURedBoy/followers",
                    "following_url": "https://api.github.com/users/EURedBoy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/EURedBoy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/EURedBoy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/EURedBoy/subscriptions",
                    "organizations_url": "https://api.github.com/users/EURedBoy/orgs",
                    "repos_url": "https://api.github.com/users/EURedBoy/repos",
                    "events_url": "https://api.github.com/users/EURedBoy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/EURedBoy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-07T20:50:24Z",
                "updated_at": "2023-10-26T12:40:22Z",
                "closed_at": "2023-10-26T12:40:22Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\nAfter a period of time my publisher disconnect\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\n```java\r\nNo stack trace\r\n```\r\n\r\n</details>\r\n\r\n#### Input Code\r\n![aaa](https://github.com/lettuce-io/lettuce-core/assets/69308679/ddbbea9f-880b-4e30-8a05-7a01e8814d12)\r\n![image](https://github.com/lettuce-io/lettuce-core/assets/69308679/79e62cb7-925f-41ff-89a0-0274da6a180f)\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\nI expect that the publisher doesn't disconnect or at least it reconnects automatically\r\n#### Environment\r\n\r\n- Lettuce version(s):  6.2.5\r\n- Redis version: 6.0.16",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/timeline",
                "performed_via_github_app": null,
                "state_reason": "not_planned"
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:40:23Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32867999897",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2515",
                "id": 1931499566,
                "node_id": "I_kwDOASu1Js5zIFgu",
                "number": 2515,
                "title": "Publisher stop working after a period of time",
                "user": {
                    "login": "EURedBoy",
                    "id": 69308679,
                    "node_id": "MDQ6VXNlcjY5MzA4Njc5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/69308679?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/EURedBoy",
                    "html_url": "https://github.com/EURedBoy",
                    "followers_url": "https://api.github.com/users/EURedBoy/followers",
                    "following_url": "https://api.github.com/users/EURedBoy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/EURedBoy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/EURedBoy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/EURedBoy/subscriptions",
                    "organizations_url": "https://api.github.com/users/EURedBoy/orgs",
                    "repos_url": "https://api.github.com/users/EURedBoy/repos",
                    "events_url": "https://api.github.com/users/EURedBoy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/EURedBoy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-07T20:50:24Z",
                "updated_at": "2023-10-26T12:40:22Z",
                "closed_at": "2023-10-26T12:40:22Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\nAfter a period of time my publisher disconnect\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\n```java\r\nNo stack trace\r\n```\r\n\r\n</details>\r\n\r\n#### Input Code\r\n![aaa](https://github.com/lettuce-io/lettuce-core/assets/69308679/ddbbea9f-880b-4e30-8a05-7a01e8814d12)\r\n![image](https://github.com/lettuce-io/lettuce-core/assets/69308679/79e62cb7-925f-41ff-89a0-0274da6a180f)\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\nI expect that the publisher doesn't disconnect or at least it reconnects automatically\r\n#### Environment\r\n\r\n- Lettuce version(s):  6.2.5\r\n- Redis version: 6.0.16",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515/timeline",
                "performed_via_github_app": null,
                "state_reason": "not_planned"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781043635",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2515#issuecomment-1781043635",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2515",
                "id": 1781043635,
                "node_id": "IC_kwDOASu1Js5qKJGz",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:40:22Z",
                "updated_at": "2023-10-26T12:40:22Z",
                "author_association": "MEMBER",
                "body": "Closing due to lack of requested feedback. If you would like us to look at this issue, please provide the requested information and we will re-open the issue.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781043635/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:40:23Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32867981563",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2528",
                "id": 1949766707,
                "node_id": "I_kwDOASu1Js50NxQz",
                "number": 2528,
                "title": "Exception during serialization may lead to receiving a response for a key other than was requested",
                "user": {
                    "login": "serejja",
                    "id": 1804417,
                    "node_id": "MDQ6VXNlcjE4MDQ0MTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1804417?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/serejja",
                    "html_url": "https://github.com/serejja",
                    "followers_url": "https://api.github.com/users/serejja/followers",
                    "following_url": "https://api.github.com/users/serejja/following{/other_user}",
                    "gists_url": "https://api.github.com/users/serejja/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/serejja/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/serejja/subscriptions",
                    "organizations_url": "https://api.github.com/users/serejja/orgs",
                    "repos_url": "https://api.github.com/users/serejja/repos",
                    "events_url": "https://api.github.com/users/serejja/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/serejja/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-18T13:31:02Z",
                "updated_at": "2023-10-26T12:39:46Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\n#### Current Behavior\r\n\r\nHello maintainers. We've been trying to figure out one bug for a long time, but now I can reproduce it reliably.\r\nWhen using an async client (happens both in Redis Cluster and standalone modes), it is possible to start receiving responses for different keys that were requested. This happens when `encodeValue` throws an exception in a concurrent environment.\r\n\r\nThe sequence is as follows:\r\n1. The application writes items to cache. At some point an exception is thrown during serialization which leads to a stack trace below\r\n2. After this happens, concurrent reads are messed up now. You start getting responses for other keys than were requested. For example, thread 1 requests cache key X, thread 2 requests cache key Y, but then thread 1 receives the response for cache key Y instead of X\r\n3. This doesn't happen when you read sequentially\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\n```scala\r\nio.netty.handler.codec.EncoderException: Cannot encode command. Please close the connection as the connection state may be out of sync.\r\n\tat io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:96)\r\n\tat io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:78)\r\n\tat io.netty.handler.codec.MessageToByteEncoder.write(MessageToByteEncoder.java:107)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:881)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:863)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:968)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:856)\r\n\tat io.lettuce.core.protocol.CommandHandler.writeSingleCommand(CommandHandler.java:421)\r\n\tat io.lettuce.core.protocol.CommandHandler.write(CommandHandler.java:387)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:879)\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:940)\r\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteTask.run(AbstractChannelHandlerContext.java:1247)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\r\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569)\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.NullPointerException: boom!\r\n\tat reproducer.BrokenCodec$.encodeValue(BrokenCodec.scala:19)\r\n\tat reproducer.BrokenCodec$.encodeValue(BrokenCodec.scala:8)\r\n\tat io.lettuce.core.protocol.CommandArgs$ValueArgument.encode(CommandArgs.java:742)\r\n\tat io.lettuce.core.protocol.CommandArgs.encode(CommandArgs.java:362)\r\n\tat io.lettuce.core.protocol.Command.encode(Command.java:126)\r\n\tat io.lettuce.core.protocol.AsyncCommand.encode(AsyncCommand.java:185)\r\n\tat io.lettuce.core.protocol.CommandEncoder.encode(CommandEncoder.java:93)\r\n\t... 19 more\r\n```\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\n<!-- Java/Kotlin/Scala/Groovy/\u2026 or Repo link if applicable: -->\r\n\r\nI have a reproducer project (in Scala) here - https://github.com/serejja/lettuce-reproducer. You would need Scala SBT (https://www.scala-sbt.org/) to run it via `sbt run`\r\n\r\n#### Expected behavior/code\r\n\r\n<!-- A clear and concise description of what you expected to happen (or code). -->\r\n\r\nEven though the exception says the connection may be out of sync, my understanding is that you should never get the response for another key. Another question is why Lettuce doesn't close the connection on its own and just logs this message\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 6.2.6.RELEASE\r\n- Redis version: `redis:6-alpine` docker image. Also AWS ElastiCache Redis 7.0.7\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\n#### Additional context\r\n\r\n<!-- Add any other context about the problem here. Do not add code as screenshots. -->\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528/reactions",
                    "total_count": 3,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 3
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781042688",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2528#issuecomment-1781042688",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2528",
                "id": 1781042688,
                "node_id": "IC_kwDOASu1Js5qKI4A",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:39:46Z",
                "updated_at": "2023-10-26T12:39:46Z",
                "author_association": "MEMBER",
                "body": "This is correct and a valid observation. We enqueue a command to be sent, then the encoder (within the channel pipeline) encodes the command to be sent to the Redis server. Any failure in the codec lead to exceptional completion of the command with the message:\r\n\r\n`Cannot encode command. Please close the connection as the connection state may be out of sync.`.\r\n\r\nEncoding happens very late in the process and without a rewrite of the entire processing mechanism, we do not have a chance to remove the command from the protocol queue.\r\n\r\nCustom codecs can be very handy, however they always run on the event loop thread and with a chance of exceptions, the protocol synchronization is going to be broken.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781042688/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:39:46Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32867799236",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373",
                "id": 1647159119,
                "node_id": "I_kwDOASu1Js5iLadP",
                "number": 2373,
                "title": "Add option to disable tracing for individual commands",
                "user": {
                    "login": "huangmiao",
                    "id": 5791417,
                    "node_id": "MDQ6VXNlcjU3OTE0MTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5791417?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/huangmiao",
                    "html_url": "https://github.com/huangmiao",
                    "followers_url": "https://api.github.com/users/huangmiao/followers",
                    "following_url": "https://api.github.com/users/huangmiao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/huangmiao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/huangmiao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/huangmiao/subscriptions",
                    "organizations_url": "https://api.github.com/users/huangmiao/orgs",
                    "repos_url": "https://api.github.com/users/huangmiao/repos",
                    "events_url": "https://api.github.com/users/huangmiao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/huangmiao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544796,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5Ng==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20enhancement",
                        "name": "type: enhancement",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general enhancement"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99",
                    "html_url": "https://github.com/lettuce-io/lettuce-core/milestone/99",
                    "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99/labels",
                    "id": 8682942,
                    "node_id": "MI_kwDOASu1Js4AhH2-",
                    "number": 99,
                    "title": "6.3",
                    "description": "",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 2,
                    "closed_issues": 18,
                    "state": "open",
                    "created_at": "2022-11-23T07:40:23Z",
                    "updated_at": "2023-10-26T12:33:41Z",
                    "due_on": "2023-11-14T08:00:00Z",
                    "closed_at": null
                },
                "comments": 19,
                "created_at": "2023-03-30T08:31:46Z",
                "updated_at": "2023-10-26T12:33:41Z",
                "closed_at": "2023-10-26T12:33:41Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "l dont show ping hello command . set observationPredicate\r\n![image](https://user-images.githubusercontent.com/5791417/228777361-2acd777e-1dfe-4dd9-89f2-1dedf46c58c5.png)\r\nl use zipkin \r\n![image](https://user-images.githubusercontent.com/5791417/228777414-245ea4f2-3de9-478c-9b16-0c4e4188078a.png)\r\nonly change or add tag don`t remove ping and hello .. command \r\nCould you tell me where I can filter",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781032955",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373#issuecomment-1781032955",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "id": 1781032955,
                "node_id": "IC_kwDOASu1Js5qKGf7",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:33:41Z",
                "updated_at": "2023-10-26T12:33:41Z",
                "author_association": "MEMBER",
                "body": "That change is in place now.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1781032955/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:33:42Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32867799376",
        "type": "IssuesEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373",
                "id": 1647159119,
                "node_id": "I_kwDOASu1Js5iLadP",
                "number": 2373,
                "title": "Add option to disable tracing for individual commands",
                "user": {
                    "login": "huangmiao",
                    "id": 5791417,
                    "node_id": "MDQ6VXNlcjU3OTE0MTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5791417?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/huangmiao",
                    "html_url": "https://github.com/huangmiao",
                    "followers_url": "https://api.github.com/users/huangmiao/followers",
                    "following_url": "https://api.github.com/users/huangmiao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/huangmiao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/huangmiao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/huangmiao/subscriptions",
                    "organizations_url": "https://api.github.com/users/huangmiao/orgs",
                    "repos_url": "https://api.github.com/users/huangmiao/repos",
                    "events_url": "https://api.github.com/users/huangmiao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/huangmiao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544796,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5Ng==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20enhancement",
                        "name": "type: enhancement",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general enhancement"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99",
                    "html_url": "https://github.com/lettuce-io/lettuce-core/milestone/99",
                    "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99/labels",
                    "id": 8682942,
                    "node_id": "MI_kwDOASu1Js4AhH2-",
                    "number": 99,
                    "title": "6.3",
                    "description": "",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 2,
                    "closed_issues": 18,
                    "state": "open",
                    "created_at": "2022-11-23T07:40:23Z",
                    "updated_at": "2023-10-26T12:33:41Z",
                    "due_on": "2023-11-14T08:00:00Z",
                    "closed_at": null
                },
                "comments": 19,
                "created_at": "2023-03-30T08:31:46Z",
                "updated_at": "2023-10-26T12:33:41Z",
                "closed_at": "2023-10-26T12:33:41Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "l dont show ping hello command . set observationPredicate\r\n![image](https://user-images.githubusercontent.com/5791417/228777361-2acd777e-1dfe-4dd9-89f2-1dedf46c58c5.png)\r\nl use zipkin \r\n![image](https://user-images.githubusercontent.com/5791417/228777414-245ea4f2-3de9-478c-9b16-0c4e4188078a.png)\r\nonly change or add tag don`t remove ping and hello .. command \r\nCould you tell me where I can filter",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:33:42Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32866928485",
        "type": "PushEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "repository_id": 19641638,
            "push_id": 15575863592,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "8f43ee1cf49ce2990c1825f18013799a5e22fe52",
            "before": "9055a6905e8f5e07e7f77ad129d37e80754f0fae",
            "commits": [
                {
                    "sha": "8f43ee1cf49ce2990c1825f18013799a5e22fe52",
                    "author": {
                        "email": "mpaluch@paluch.biz",
                        "name": "Mark Paluch"
                    },
                    "message": "Add option to disable tracing for individual commands #2373\n\nObservationPredicate can now be used to filter unwanted commands.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/commits/8f43ee1cf49ce2990c1825f18013799a5e22fe52"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T12:04:41Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32866801826",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373",
                "id": 1647159119,
                "node_id": "I_kwDOASu1Js5iLadP",
                "number": 2373,
                "title": "Add option to disable tracing for individual commands",
                "user": {
                    "login": "huangmiao",
                    "id": 5791417,
                    "node_id": "MDQ6VXNlcjU3OTE0MTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5791417?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/huangmiao",
                    "html_url": "https://github.com/huangmiao",
                    "followers_url": "https://api.github.com/users/huangmiao/followers",
                    "following_url": "https://api.github.com/users/huangmiao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/huangmiao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/huangmiao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/huangmiao/subscriptions",
                    "organizations_url": "https://api.github.com/users/huangmiao/orgs",
                    "repos_url": "https://api.github.com/users/huangmiao/repos",
                    "events_url": "https://api.github.com/users/huangmiao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/huangmiao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544796,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5Ng==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20enhancement",
                        "name": "type: enhancement",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general enhancement"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99",
                    "html_url": "https://github.com/lettuce-io/lettuce-core/milestone/99",
                    "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/milestones/99/labels",
                    "id": 8682942,
                    "node_id": "MI_kwDOASu1Js4AhH2-",
                    "number": 99,
                    "title": "6.3",
                    "description": "",
                    "creator": {
                        "login": "mp911de",
                        "id": 1035015,
                        "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mp911de",
                        "html_url": "https://github.com/mp911de",
                        "followers_url": "https://api.github.com/users/mp911de/followers",
                        "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                        "organizations_url": "https://api.github.com/users/mp911de/orgs",
                        "repos_url": "https://api.github.com/users/mp911de/repos",
                        "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mp911de/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 3,
                    "closed_issues": 17,
                    "state": "open",
                    "created_at": "2022-11-23T07:40:23Z",
                    "updated_at": "2023-10-26T10:20:37Z",
                    "due_on": "2023-11-14T08:00:00Z",
                    "closed_at": null
                },
                "comments": 18,
                "created_at": "2023-03-30T08:31:46Z",
                "updated_at": "2023-10-26T12:00:10Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "l dont show ping hello command . set observationPredicate\r\n![image](https://user-images.githubusercontent.com/5791417/228777361-2acd777e-1dfe-4dd9-89f2-1dedf46c58c5.png)\r\nl use zipkin \r\n![image](https://user-images.githubusercontent.com/5791417/228777414-245ea4f2-3de9-478c-9b16-0c4e4188078a.png)\r\nonly change or add tag don`t remove ping and hello .. command \r\nCould you tell me where I can filter",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780972780",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373#issuecomment-1780972780",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "id": 1780972780,
                "node_id": "IC_kwDOASu1Js5qJ3zs",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:00:10Z",
                "updated_at": "2023-10-26T12:00:10Z",
                "author_association": "MEMBER",
                "body": "Deferring `Observation` creation works well. We collect all details and populate `LettuceObservationContext` before we create the `Observation`. That allows a registered `ObservationPredicate` to react to `RedisCommand`.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780972780/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:00:10Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32863902113",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2537",
                "id": 1961798118,
                "node_id": "I_kwDOASu1Js507qnm",
                "number": 2537,
                "title": "Lettuce - Automatic connection retry on startup",
                "user": {
                    "login": "decoursin",
                    "id": 5356434,
                    "node_id": "MDQ6VXNlcjUzNTY0MzQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5356434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/decoursin",
                    "html_url": "https://github.com/decoursin",
                    "followers_url": "https://api.github.com/users/decoursin/followers",
                    "following_url": "https://api.github.com/users/decoursin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/decoursin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/decoursin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/decoursin/subscriptions",
                    "organizations_url": "https://api.github.com/users/decoursin/orgs",
                    "repos_url": "https://api.github.com/users/decoursin/repos",
                    "events_url": "https://api.github.com/users/decoursin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/decoursin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T16:23:05Z",
                "updated_at": "2023-10-26T10:11:47Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "`lettuce` has fantastic functionality for handling any Redis disconnections once everything is up and running. If the Redis instance becomes unavailable, use of an appropriate retry_strategy means the client can be set up to try to reconnect until Redis is available again.\r\n\r\nIs it possible to get the client to enter this state at start-up, even if Redis is down?\r\n\r\nMy scenario is this: I am using Redis as a primary data-store, with a fallback secondary data-store which is not Redis-based. When my application starts, if Redis is not available, attempts to retrieve data will use the secondary data-store instead.\r\n\r\nHowever, when Redis does become available, I'd like my application to start using the Redis primary data-store instead. As the Redis connection did not succeed on start-up, the retry_strategy, which would handle this for a previously established connection, does not work.\r\n\r\nI could write code which will retry the initial Redis connection until it is successful, but it strikes me that the functionality available out-of-the-box is already very close to what I need, if I can persuade it to come into play from start-up even though Redis is down.\r\n\r\nPretty much copied from here: https://stackoverflow.com/questions/45836875/establish-connection-retry-behaviour-on-start-up-even-when-redis-is-not-availa",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780818047",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2537#issuecomment-1780818047",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2537",
                "id": 1780818047,
                "node_id": "IC_kwDOASu1Js5qJSB_",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T10:11:47Z",
                "updated_at": "2023-10-26T10:11:47Z",
                "author_association": "MEMBER",
                "body": "That isn't something we can really do. We have several assumptions that we need to fulfill at startup. For instance, with Redis Cluster, we must have the topology to be able to route commands to appropriate nodes.\r\n\r\nI rather suggest using a connection pool to introduce fail safety. Asking the pool for a resource and if it succeeds, then perform Redis activity, otherwise, back off and follow the recovery code path.\r\n\r\nWe once had a similar ticked but I wasn't able to find it amongst our tickets.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780818047/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T10:11:48Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32863776075",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530",
                "id": 1952964530,
                "node_id": "I_kwDOASu1Js50Z9-y",
                "number": 2530,
                "title": "Lettuce writing to closed channels, results in persistent failure",
                "user": {
                    "login": "greeaida",
                    "id": 148489015,
                    "node_id": "U_kgDOCNnDNw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/148489015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/greeaida",
                    "html_url": "https://github.com/greeaida",
                    "followers_url": "https://api.github.com/users/greeaida/followers",
                    "following_url": "https://api.github.com/users/greeaida/following{/other_user}",
                    "gists_url": "https://api.github.com/users/greeaida/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/greeaida/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/greeaida/subscriptions",
                    "organizations_url": "https://api.github.com/users/greeaida/orgs",
                    "repos_url": "https://api.github.com/users/greeaida/repos",
                    "events_url": "https://api.github.com/users/greeaida/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/greeaida/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-19T19:58:18Z",
                "updated_at": "2023-10-26T10:07:24Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "## Bug Report\r\n\r\n<!-- First of all: Have you checked the docs https://github.com/lettuce-io/lettuce-core/wiki, GitHub issues, or Stack Overflow whether someone else has already reported your issue? -->\r\n\r\nPreface: I expect that this is client configuration issue but I have been unable to find similar issues, similar documented scenarios or relevant networking details.\r\n\r\nThis is using cluster mode with ElastiCache.\r\n\r\n#### Current Behavior\r\n\r\n<!-- A clear and concise description of the behavior.-->\r\n\r\nWhen a connection becomes unhealthy (e.g. failover or network disruption) there is no cache activity until a new node becomes primary. When all nodes are exhausted of primary, cache activity within the shard halts indefinitely.\r\n\r\n<details>\r\n<summary>Stack trace</summary>\r\n\r\nNote that this will continue indefinitely. Healthy periodic refresh, cluster topology and close stale connections activity is still evident on the scheduled cadence.\r\n\r\n```java\r\n// Healthy access\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] write(ctx, ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5], promise)\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandEncoder: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379] writing command ClusterCommand [command=AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Received: 1341 bytes, 1 commands in the stack\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] Stack contains: 1 commands\r\n\r\n// Channel is closed - this was time of network failure\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive()\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x9] deactivating endpoint handler\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelInactive() done\r\n[DEBUG]  (lettuce-epollEventLoop-4-9) io.lettuce.core.protocol.CommandHandler: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, chid=0x9] channelUnregistered()\r\n\r\n// Failure behavior with auto-reconnect disabled (io.lettuce.core.RedisException: Currently not connected. Commands are rejected)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 16140)\r\n[DEBUG] (<Server Thread>-144) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0xc] write() done\r\n[DEBUG] (<Server Thread>-141) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n\r\n// Failure behavior with auto-reconnect enabled (io.lettuce.core.RedisCommandTimeoutException: Command timed out after 1 second(s))\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.RedisChannelHandler: dispatching command AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.cluster.PooledClusterConnectionProvider: getConnection(READ, 7732)\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] writeToDisconnectedBuffer() buffering (disconnected) command ClusterCommand [command=AsyncCommand [type=EVALSHA, output=IntegerOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], redirections=0, maxRedirections=5]\r\n[DEBUG] (<Server Thread>-287) io.lettuce.core.protocol.DefaultEndpoint: [channel=0x0b2a62a5, /<Server IP>:<Server Port> -> <Node CNAME>/<Node IP>:6379, epid=0x49] write() done\r\n```\r\n\r\nRead/write activity never reaches the socket.\r\n\r\n</details>\r\n\r\n#### Input Code\r\n\r\n<!-- Java/Kotlin/Scala/Groovy/\u2026 or Repo link if applicable: -->\r\n\r\n<details>\r\n<summary>Input Code</summary>\r\n\r\n```java\r\nclientResources = DefaultClientResources.builder()\r\n    .reconnectDelay(\r\n        Delay.fullJitter(\r\n            MIN_RECONNECT_DELAY,\r\n            MAX_RECONNECT_DELAY,\r\n            FULL_JITTER_BASE, TimeUnit.MILLISECONDS)\r\n).build();\r\n\r\nRedisClusterClient clusterClient = RedisClusterClient.create(clientResources, <RedisURIBuilder>.build());\r\n\r\nClusterTopologyRefreshOptions clusterTopologyRefreshOptions = ClusterTopologyRefreshOptions.builder()\r\n    .enableAllAdaptiveRefreshTriggers()\r\n    .enablePeriodicRefresh(<1 minute>)\r\n    .closeStaleConnections(true)\r\n    .dynamicRefreshSources(true)\r\n    .build();\r\n\r\nSocketOptions socketOptions = SocketOptions.builder()\r\n    .connectTimeout(<100 ms>)\r\n    .keepAlive(false)\r\n    .tcpNoDelay(true)\r\n    .build();\r\n\r\nclusterClient.setOptions(ClusterClientOptions.builder()\r\n    .autoReconnect(<true/false>)\r\n    .topologyRefreshOptions(clusterTopologyRefreshOptions)\r\n    .socketOptions(socketOptions)\r\n    .build());\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecSync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecSync.setReadFrom(ReadFrom.NEAREST);\r\n    connByteCodecSync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<byte[], byte[]> connByteCodecAsync = clusterClient.connect(ByteArrayCodec.INSTANCE);\r\n    connByteCodecAsync.setReadFrom(ReadFrom.MASTER);\r\n    connByteCodecAsync.setTimeout(<1 second>);\r\n\r\nStatefulRedisClusterConnection<String, String> connStringCodec = clusterClient.connect(StringCodec.UTF8);\r\n    connStringCodec.setReadFrom(ReadFrom.MASTER);\r\n    connStringCodec.setTimeout(<1 second>);\r\n```\r\n\r\nIt then appears `.sync()` is used on these connections each access as the primitive for our cache interaction.\r\n\r\n</details>\r\n\r\n#### Expected behavior/code\r\n\r\n<!-- A clear and concise description of what you expected to happen (or code). -->\r\n\r\nI would expect `closeStaleConnections()` (or some other health check) to stop writing to these channels and instead create new channels.\r\n\r\n#### Environment\r\n\r\n- Lettuce version(s): 5.3.x\r\n- Redis version: 7.0.x\r\n\r\n#### Possible Solution\r\n\r\n<!-- Only if you have suggestions on a fix for the bug -->\r\n\r\nMitigations are restarting host, adding shards/nodes, failing over to node that wasn't hasn't been primary since boot.\r\n\r\n#### Additional context\r\n\r\n<!-- Add any other context about the problem here. Do not add code as screenshots. -->\r\n\r\nOne quick way I've reproduced this is by using `sudo ss -K dport = 6379` to terminate connections on the socket. It will not recover until I fail over primary.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780811519",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2530#issuecomment-1780811519",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2530",
                "id": 1780811519,
                "node_id": "IC_kwDOASu1Js5qJQb_",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T10:07:24Z",
                "updated_at": "2023-10-26T10:07:24Z",
                "author_association": "MEMBER",
                "body": "I'm not exactly sure what you're asking for. Let me explain how things work, then we might get to a common understanding.\r\n\r\nCommands in Cluster operations are sent to a particular node. If the node goes down (network partition, process dies), then commands targeting that node remain queued and are sent to the node once the node comes back online.\r\n\r\nOnce commands are queued for a particular node, they reside in the queue until the connection is closed (i.e. because the node is no longer part of the cluster).\r\n\r\nIf you want a different behavior, then rejecting commands on disconnect is the way to go.\r\n\r\nI'd be also interested to hear what other behavior you would expect.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780811519/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T10:07:24Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32858967167",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1035015,
            "login": "mp911de",
            "display_login": "mp911de",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mp911de",
            "avatar_url": "https://avatars.githubusercontent.com/u/1035015?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "repository_url": "https://api.github.com/repos/lettuce-io/lettuce-core",
                "labels_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/labels{/name}",
                "comments_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/comments",
                "events_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/events",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373",
                "id": 1647159119,
                "node_id": "I_kwDOASu1Js5iLadP",
                "number": 2373,
                "title": "Add option to disable tracing for individual commands",
                "user": {
                    "login": "huangmiao",
                    "id": 5791417,
                    "node_id": "MDQ6VXNlcjU3OTE0MTc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5791417?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/huangmiao",
                    "html_url": "https://github.com/huangmiao",
                    "followers_url": "https://api.github.com/users/huangmiao/followers",
                    "following_url": "https://api.github.com/users/huangmiao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/huangmiao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/huangmiao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/huangmiao/subscriptions",
                    "organizations_url": "https://api.github.com/users/huangmiao/orgs",
                    "repos_url": "https://api.github.com/users/huangmiao/repos",
                    "events_url": "https://api.github.com/users/huangmiao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/huangmiao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 98544796,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5Ng==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/type:%20enhancement",
                        "name": "type: enhancement",
                        "color": "e3d9fc",
                        "default": false,
                        "description": "A general enhancement"
                    },
                    {
                        "id": 98544797,
                        "node_id": "MDU6TGFiZWw5ODU0NDc5Nw==",
                        "url": "https://api.github.com/repos/lettuce-io/lettuce-core/labels/status:%20help-wanted",
                        "name": "status: help-wanted",
                        "color": "1d76db",
                        "default": false,
                        "description": "An issue that a contributor can help us with"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 17,
                "created_at": "2023-03-30T08:31:46Z",
                "updated_at": "2023-10-26T07:18:44Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "l dont show ping hello command . set observationPredicate\r\n![image](https://user-images.githubusercontent.com/5791417/228777361-2acd777e-1dfe-4dd9-89f2-1dedf46c58c5.png)\r\nl use zipkin \r\n![image](https://user-images.githubusercontent.com/5791417/228777414-245ea4f2-3de9-478c-9b16-0c4e4188078a.png)\r\nonly change or add tag don`t remove ping and hello .. command \r\nCould you tell me where I can filter",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780549024",
                "html_url": "https://github.com/lettuce-io/lettuce-core/issues/2373#issuecomment-1780549024",
                "issue_url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/2373",
                "id": 1780549024,
                "node_id": "IC_kwDOASu1Js5qIQWg",
                "user": {
                    "login": "mp911de",
                    "id": 1035015,
                    "node_id": "MDQ6VXNlcjEwMzUwMTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1035015?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mp911de",
                    "html_url": "https://github.com/mp911de",
                    "followers_url": "https://api.github.com/users/mp911de/followers",
                    "following_url": "https://api.github.com/users/mp911de/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mp911de/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mp911de/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mp911de/subscriptions",
                    "organizations_url": "https://api.github.com/users/mp911de/orgs",
                    "repos_url": "https://api.github.com/users/mp911de/repos",
                    "events_url": "https://api.github.com/users/mp911de/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mp911de/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T07:18:44Z",
                "updated_at": "2023-10-26T07:18:44Z",
                "author_association": "MEMBER",
                "body": "`ObservationPredicate` is applied pretty early in the process when we create an `Observation` object. All the interesting data is being set after we created the `Observation` (command name, endpoint, command details).\r\n\r\nPaging @marcingrzejszczak on how to suppress sending/handling an `Observation` on `Observation.stop()` by providing bits of configuration.",
                "reactions": {
                    "url": "https://api.github.com/repos/lettuce-io/lettuce-core/issues/comments/1780549024/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T07:18:45Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32857661717",
        "type": "WatchEvent",
        "actor": {
            "id": 25506584,
            "login": "realpacific",
            "display_login": "realpacific",
            "gravatar_id": "",
            "url": "https://api.github.com/users/realpacific",
            "avatar_url": "https://avatars.githubusercontent.com/u/25506584?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T06:19:20Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    },
    {
        "id": "32854282832",
        "type": "WatchEvent",
        "actor": {
            "id": 111279966,
            "login": "weayer0102",
            "display_login": "weayer0102",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weayer0102",
            "avatar_url": "https://avatars.githubusercontent.com/u/111279966?"
        },
        "repo": {
            "id": 19641638,
            "name": "lettuce-io/lettuce-core",
            "url": "https://api.github.com/repos/lettuce-io/lettuce-core"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T02:24:21Z",
        "org": {
            "id": 25752188,
            "login": "lettuce-io",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/lettuce-io",
            "avatar_url": "https://avatars.githubusercontent.com/u/25752188?"
        }
    }
]