[
    {
        "id": "32897423195",
        "type": "PullRequestEvent",
        "actor": {
            "id": 5889052,
            "login": "clawgrip",
            "display_login": "clawgrip",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clawgrip",
            "avatar_url": "https://avatars.githubusercontent.com/u/5889052?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "opened",
            "number": 11666,
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11666",
                "id": 1576443155,
                "node_id": "PR_kwDOANo_SM5d9p0T",
                "html_url": "https://github.com/mamedev/mame/pull/11666",
                "diff_url": "https://github.com/mamedev/mame/pull/11666.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11666.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11666",
                "number": 11666,
                "state": "open",
                "locked": false,
                "title": "igs/goldstar.cpp: Dumped and added a \"Cherry Master\" clone named \"Hamburger House\"",
                "user": {
                    "login": "clawgrip",
                    "id": 5889052,
                    "node_id": "MDQ6VXNlcjU4ODkwNTI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5889052?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/clawgrip",
                    "html_url": "https://github.com/clawgrip",
                    "followers_url": "https://api.github.com/users/clawgrip/followers",
                    "following_url": "https://api.github.com/users/clawgrip/following{/other_user}",
                    "gists_url": "https://api.github.com/users/clawgrip/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/clawgrip/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/clawgrip/subscriptions",
                    "organizations_url": "https://api.github.com/users/clawgrip/orgs",
                    "repos_url": "https://api.github.com/users/clawgrip/repos",
                    "events_url": "https://api.github.com/users/clawgrip/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/clawgrip/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "New NOT_WORKING clone\r\n------------------------------\r\nHamburger House [Taksangs]",
                "created_at": "2023-10-27T11:41:37Z",
                "updated_at": "2023-10-27T11:41:37Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11666/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11666/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11666/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/0164abef34f0e53de610247ad1f4d3f62ff735b9",
                "head": {
                    "label": "clawgrip:patch-8",
                    "ref": "patch-8",
                    "sha": "0164abef34f0e53de610247ad1f4d3f62ff735b9",
                    "user": {
                        "login": "clawgrip",
                        "id": 5889052,
                        "node_id": "MDQ6VXNlcjU4ODkwNTI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5889052?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/clawgrip",
                        "html_url": "https://github.com/clawgrip",
                        "followers_url": "https://api.github.com/users/clawgrip/followers",
                        "following_url": "https://api.github.com/users/clawgrip/following{/other_user}",
                        "gists_url": "https://api.github.com/users/clawgrip/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/clawgrip/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/clawgrip/subscriptions",
                        "organizations_url": "https://api.github.com/users/clawgrip/orgs",
                        "repos_url": "https://api.github.com/users/clawgrip/repos",
                        "events_url": "https://api.github.com/users/clawgrip/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/clawgrip/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 304118240,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzMDQxMTgyNDA=",
                        "name": "mame",
                        "full_name": "clawgrip/mame",
                        "private": false,
                        "owner": {
                            "login": "clawgrip",
                            "id": 5889052,
                            "node_id": "MDQ6VXNlcjU4ODkwNTI=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5889052?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/clawgrip",
                            "html_url": "https://github.com/clawgrip",
                            "followers_url": "https://api.github.com/users/clawgrip/followers",
                            "following_url": "https://api.github.com/users/clawgrip/following{/other_user}",
                            "gists_url": "https://api.github.com/users/clawgrip/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/clawgrip/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/clawgrip/subscriptions",
                            "organizations_url": "https://api.github.com/users/clawgrip/orgs",
                            "repos_url": "https://api.github.com/users/clawgrip/repos",
                            "events_url": "https://api.github.com/users/clawgrip/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/clawgrip/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/clawgrip/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/clawgrip/mame",
                        "forks_url": "https://api.github.com/repos/clawgrip/mame/forks",
                        "keys_url": "https://api.github.com/repos/clawgrip/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/clawgrip/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/clawgrip/mame/teams",
                        "hooks_url": "https://api.github.com/repos/clawgrip/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/clawgrip/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/clawgrip/mame/events",
                        "assignees_url": "https://api.github.com/repos/clawgrip/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/clawgrip/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/clawgrip/mame/tags",
                        "blobs_url": "https://api.github.com/repos/clawgrip/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/clawgrip/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/clawgrip/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/clawgrip/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/clawgrip/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/clawgrip/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/clawgrip/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/clawgrip/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/clawgrip/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/clawgrip/mame/subscription",
                        "commits_url": "https://api.github.com/repos/clawgrip/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/clawgrip/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/clawgrip/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/clawgrip/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/clawgrip/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/clawgrip/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/clawgrip/mame/merges",
                        "archive_url": "https://api.github.com/repos/clawgrip/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/clawgrip/mame/downloads",
                        "issues_url": "https://api.github.com/repos/clawgrip/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/clawgrip/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/clawgrip/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/clawgrip/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/clawgrip/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/clawgrip/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/clawgrip/mame/deployments",
                        "created_at": "2020-10-14T19:41:26Z",
                        "updated_at": "2023-02-25T18:35:54Z",
                        "pushed_at": "2023-10-27T11:38:24Z",
                        "git_url": "git://github.com/clawgrip/mame.git",
                        "ssh_url": "git@github.com:clawgrip/mame.git",
                        "clone_url": "https://github.com/clawgrip/mame.git",
                        "svn_url": "https://github.com/clawgrip/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1563148,
                        "stargazers_count": 1,
                        "watchers_count": 1,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 1,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "7e572705cc82583093e2b51eb6756c7390d04d6e",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-27T08:09:32Z",
                        "pushed_at": "2023-10-27T11:41:38Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591721,
                        "stargazers_count": 6990,
                        "watchers_count": 6990,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1808,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 594,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1808,
                        "open_issues": 594,
                        "watchers": 6990,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11666"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11666"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11666"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11666/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11666/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11666/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/0164abef34f0e53de610247ad1f4d3f62ff735b9"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 2,
                "additions": 39,
                "deletions": 0,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:41:39Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32890109053",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 91895,
            "login": "plaes",
            "display_login": "plaes",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plaes",
            "avatar_url": "https://avatars.githubusercontent.com/u/91895?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1374138559",
                "pull_request_review_id": 1701096973,
                "id": 1374138559,
                "node_id": "PRRC_kwDOANo_SM5R57C_",
                "diff_hunk": "@@ -1,9 +1,72 @@\n // license:BSD-3-Clause\n // copyright-holders:David Haywood\n-/* Atronic Russian Video Fruit Machines */\n+/* Atronic Video Fruit Machines */\n /*\n  From 1999? (documentation is dated August 99)\n \n+Atronic was a Austrian/German slot machine manufacturer. It later\n+merged with Spielo.\n+\n+Atronic CashLine platform (~199x-2004?) - z80-based\n+\n+Atronic CashLine platform () is used in multiple cabinet form-factors:\n+* Regular/Upright (?)\n+* WBC - Wide Body Cabinet\n+* AST - Atronic Slant Top\n+* Titan (?)\n+\n+* CashLine hardware description:\n+\n+Backplane has room for 4 boards:\n+1. Master board [z80]\n+2. Graphic Board [TMS34020]\n+3. Sound Board (optional?) [YMZ280B?]\n+4. Communications board (optional) [m68k]\n+\n+CashLine PCB boards have EEPROM/EPROM slots for software installation:\n+* Main software         - Master board, socket U2\n+* Paytable software     - Master board, socket U6\n+* Security device (PLA) - Master board, socket U35 (PLA)\n+* Graphic software      - Graphic board, sockets U8 .. U15\n+* Sound software        - Sound board, sockets U18 .. U21\n+* Comm software         - Comm board, sockets U34 and U35\n+\n+Atronic platforms following z80-based CashLine:\n+* \"Hi(!)bility\" platform (2001) - two 68k-based circuit boards for game control and external\n+  communications running OSE (Enea?) operating system, and a customized PC mainboard\n+  with Intel Celeron 566MHz running Windows CE and ATI Radeon Mobility M6 AGP graphics\n+  card with dual outputs.",
                "path": "src/mame/misc/atronic.cpp",
                "commit_id": "ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                "original_commit_id": "ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                "user": {
                    "login": "plaes",
                    "id": 91895,
                    "node_id": "MDQ6VXNlcjkxODk1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/plaes",
                    "html_url": "https://github.com/plaes",
                    "followers_url": "https://api.github.com/users/plaes/followers",
                    "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                    "organizations_url": "https://api.github.com/users/plaes/orgs",
                    "repos_url": "https://api.github.com/users/plaes/repos",
                    "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/plaes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Possibly Intel 815, based on this auction: https://www.ebay.com/itm/266108902344.\r\n\r\nOther chipsets I picked up from Dissauer's Masters thesis: [Real-Time 3D Rendering for the Atronic EGD Framework](https://diglib.tugraz.at/download.php?id=577a020e7338b&location=browse)",
                "created_at": "2023-10-27T06:46:42Z",
                "updated_at": "2023-10-27T06:46:42Z",
                "html_url": "https://github.com/mamedev/mame/pull/11662#discussion_r1374138559",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11662",
                "author_association": "CONTRIBUTOR",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1374138559"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11662#discussion_r1374138559"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1374138559/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 35,
                "original_start_line": 35,
                "start_side": "RIGHT",
                "line": 38,
                "original_line": 38,
                "side": "RIGHT",
                "in_reply_to_id": 1373767579,
                "original_position": 39,
                "position": 39,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11662",
                "id": 1575409732,
                "node_id": "PR_kwDOANo_SM5d5thE",
                "html_url": "https://github.com/mamedev/mame/pull/11662",
                "diff_url": "https://github.com/mamedev/mame/pull/11662.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11662.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11662",
                "number": 11662,
                "state": "open",
                "locked": false,
                "title": "atronic: Add some basic notes about the system (Atronic CashLine)",
                "user": {
                    "login": "plaes",
                    "id": 91895,
                    "node_id": "MDQ6VXNlcjkxODk1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/plaes",
                    "html_url": "https://github.com/plaes",
                    "followers_url": "https://api.github.com/users/plaes/followers",
                    "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                    "organizations_url": "https://api.github.com/users/plaes/orgs",
                    "repos_url": "https://api.github.com/users/plaes/repos",
                    "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/plaes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "While at it.. also add some notes about sucessors to CashLine as well...",
                "created_at": "2023-10-26T18:52:51Z",
                "updated_at": "2023-10-27T06:46:42Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "f5cd666966968c157b6421888492e5ec38bf65c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11662/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11662/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11662/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                "head": {
                    "label": "plaes:atronic-cashline",
                    "ref": "atronic-cashline",
                    "sha": "ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                    "user": {
                        "login": "plaes",
                        "id": 91895,
                        "node_id": "MDQ6VXNlcjkxODk1",
                        "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/plaes",
                        "html_url": "https://github.com/plaes",
                        "followers_url": "https://api.github.com/users/plaes/followers",
                        "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                        "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                        "organizations_url": "https://api.github.com/users/plaes/orgs",
                        "repos_url": "https://api.github.com/users/plaes/repos",
                        "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/plaes/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 191960305,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxOTE5NjAzMDU=",
                        "name": "mame",
                        "full_name": "plaes/mame",
                        "private": false,
                        "owner": {
                            "login": "plaes",
                            "id": 91895,
                            "node_id": "MDQ6VXNlcjkxODk1",
                            "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/plaes",
                            "html_url": "https://github.com/plaes",
                            "followers_url": "https://api.github.com/users/plaes/followers",
                            "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                            "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                            "organizations_url": "https://api.github.com/users/plaes/orgs",
                            "repos_url": "https://api.github.com/users/plaes/repos",
                            "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/plaes/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/plaes/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/plaes/mame",
                        "forks_url": "https://api.github.com/repos/plaes/mame/forks",
                        "keys_url": "https://api.github.com/repos/plaes/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/plaes/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/plaes/mame/teams",
                        "hooks_url": "https://api.github.com/repos/plaes/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/plaes/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/plaes/mame/events",
                        "assignees_url": "https://api.github.com/repos/plaes/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/plaes/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/plaes/mame/tags",
                        "blobs_url": "https://api.github.com/repos/plaes/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/plaes/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/plaes/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/plaes/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/plaes/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/plaes/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/plaes/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/plaes/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/plaes/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/plaes/mame/subscription",
                        "commits_url": "https://api.github.com/repos/plaes/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/plaes/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/plaes/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/plaes/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/plaes/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/plaes/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/plaes/mame/merges",
                        "archive_url": "https://api.github.com/repos/plaes/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/plaes/mame/downloads",
                        "issues_url": "https://api.github.com/repos/plaes/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/plaes/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/plaes/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/plaes/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/plaes/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/plaes/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/plaes/mame/deployments",
                        "created_at": "2019-06-14T14:50:37Z",
                        "updated_at": "2023-10-26T18:54:03Z",
                        "pushed_at": "2023-10-26T18:57:20Z",
                        "git_url": "git://github.com/plaes/mame.git",
                        "ssh_url": "git@github.com:plaes/mame.git",
                        "clone_url": "https://github.com/plaes/mame.git",
                        "svn_url": "https://github.com/plaes/mame",
                        "homepage": "",
                        "size": 1558469,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "945b92a36007d3209578b4533ecc28c77cd2e70b",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-27T06:37:42Z",
                        "pushed_at": "2023-10-27T02:36:55Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591721,
                        "stargazers_count": 6991,
                        "watchers_count": 6991,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1808,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 593,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1808,
                        "open_issues": 593,
                        "watchers": 6991,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11662"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11662"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11662/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/ec47dd8c82247c7b608c2756fb8cd73df8f840ac"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:46:42Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32890108988",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 91895,
            "login": "plaes",
            "display_login": "plaes",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plaes",
            "avatar_url": "https://avatars.githubusercontent.com/u/91895?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1701096973,
                "node_id": "PRR_kwDOANo_SM5lZK4N",
                "user": {
                    "login": "plaes",
                    "id": 91895,
                    "node_id": "MDQ6VXNlcjkxODk1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/plaes",
                    "html_url": "https://github.com/plaes",
                    "followers_url": "https://api.github.com/users/plaes/followers",
                    "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                    "organizations_url": "https://api.github.com/users/plaes/orgs",
                    "repos_url": "https://api.github.com/users/plaes/repos",
                    "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/plaes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                "submitted_at": "2023-10-27T06:46:42Z",
                "state": "commented",
                "html_url": "https://github.com/mamedev/mame/pull/11662#pullrequestreview-1701096973",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11662",
                "author_association": "CONTRIBUTOR",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11662#pullrequestreview-1701096973"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11662",
                "id": 1575409732,
                "node_id": "PR_kwDOANo_SM5d5thE",
                "html_url": "https://github.com/mamedev/mame/pull/11662",
                "diff_url": "https://github.com/mamedev/mame/pull/11662.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11662.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11662",
                "number": 11662,
                "state": "open",
                "locked": false,
                "title": "atronic: Add some basic notes about the system (Atronic CashLine)",
                "user": {
                    "login": "plaes",
                    "id": 91895,
                    "node_id": "MDQ6VXNlcjkxODk1",
                    "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/plaes",
                    "html_url": "https://github.com/plaes",
                    "followers_url": "https://api.github.com/users/plaes/followers",
                    "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                    "organizations_url": "https://api.github.com/users/plaes/orgs",
                    "repos_url": "https://api.github.com/users/plaes/repos",
                    "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/plaes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "While at it.. also add some notes about sucessors to CashLine as well...",
                "created_at": "2023-10-26T18:52:51Z",
                "updated_at": "2023-10-27T06:46:42Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "f5cd666966968c157b6421888492e5ec38bf65c7",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11662/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11662/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11662/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                "head": {
                    "label": "plaes:atronic-cashline",
                    "ref": "atronic-cashline",
                    "sha": "ec47dd8c82247c7b608c2756fb8cd73df8f840ac",
                    "user": {
                        "login": "plaes",
                        "id": 91895,
                        "node_id": "MDQ6VXNlcjkxODk1",
                        "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/plaes",
                        "html_url": "https://github.com/plaes",
                        "followers_url": "https://api.github.com/users/plaes/followers",
                        "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                        "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                        "organizations_url": "https://api.github.com/users/plaes/orgs",
                        "repos_url": "https://api.github.com/users/plaes/repos",
                        "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/plaes/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 191960305,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxOTE5NjAzMDU=",
                        "name": "mame",
                        "full_name": "plaes/mame",
                        "private": false,
                        "owner": {
                            "login": "plaes",
                            "id": 91895,
                            "node_id": "MDQ6VXNlcjkxODk1",
                            "avatar_url": "https://avatars.githubusercontent.com/u/91895?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/plaes",
                            "html_url": "https://github.com/plaes",
                            "followers_url": "https://api.github.com/users/plaes/followers",
                            "following_url": "https://api.github.com/users/plaes/following{/other_user}",
                            "gists_url": "https://api.github.com/users/plaes/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/plaes/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/plaes/subscriptions",
                            "organizations_url": "https://api.github.com/users/plaes/orgs",
                            "repos_url": "https://api.github.com/users/plaes/repos",
                            "events_url": "https://api.github.com/users/plaes/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/plaes/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/plaes/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/plaes/mame",
                        "forks_url": "https://api.github.com/repos/plaes/mame/forks",
                        "keys_url": "https://api.github.com/repos/plaes/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/plaes/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/plaes/mame/teams",
                        "hooks_url": "https://api.github.com/repos/plaes/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/plaes/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/plaes/mame/events",
                        "assignees_url": "https://api.github.com/repos/plaes/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/plaes/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/plaes/mame/tags",
                        "blobs_url": "https://api.github.com/repos/plaes/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/plaes/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/plaes/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/plaes/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/plaes/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/plaes/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/plaes/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/plaes/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/plaes/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/plaes/mame/subscription",
                        "commits_url": "https://api.github.com/repos/plaes/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/plaes/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/plaes/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/plaes/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/plaes/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/plaes/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/plaes/mame/merges",
                        "archive_url": "https://api.github.com/repos/plaes/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/plaes/mame/downloads",
                        "issues_url": "https://api.github.com/repos/plaes/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/plaes/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/plaes/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/plaes/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/plaes/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/plaes/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/plaes/mame/deployments",
                        "created_at": "2019-06-14T14:50:37Z",
                        "updated_at": "2023-10-26T18:54:03Z",
                        "pushed_at": "2023-10-26T18:57:20Z",
                        "git_url": "git://github.com/plaes/mame.git",
                        "ssh_url": "git@github.com:plaes/mame.git",
                        "clone_url": "https://github.com/plaes/mame.git",
                        "svn_url": "https://github.com/plaes/mame",
                        "homepage": "",
                        "size": 1558469,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "945b92a36007d3209578b4533ecc28c77cd2e70b",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-27T06:37:42Z",
                        "pushed_at": "2023-10-27T02:36:55Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591721,
                        "stargazers_count": 6991,
                        "watchers_count": 6991,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1808,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 593,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1808,
                        "open_issues": 593,
                        "watchers": 6991,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11662"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11662"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11662/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11662/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/ec47dd8c82247c7b608c2756fb8cd73df8f840ac"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:46:43Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32889927658",
        "type": "WatchEvent",
        "actor": {
            "id": 53804516,
            "login": "FrankySuSuper",
            "display_login": "FrankySuSuper",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FrankySuSuper",
            "avatar_url": "https://avatars.githubusercontent.com/u/53804516?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T06:37:42Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32888978258",
        "type": "WatchEvent",
        "actor": {
            "id": 5955179,
            "login": "owllyi",
            "display_login": "owllyi",
            "gravatar_id": "",
            "url": "https://api.github.com/users/owllyi",
            "avatar_url": "https://avatars.githubusercontent.com/u/5955179?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T05:42:18Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32886980721",
        "type": "WatchEvent",
        "actor": {
            "id": 56267144,
            "login": "Dude20121",
            "display_login": "Dude20121",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dude20121",
            "avatar_url": "https://avatars.githubusercontent.com/u/56267144?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T03:09:17Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32886581650",
        "type": "PullRequestEvent",
        "actor": {
            "id": 8291090,
            "login": "mgarlanger",
            "display_login": "mgarlanger",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgarlanger",
            "avatar_url": "https://avatars.githubusercontent.com/u/8291090?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "opened",
            "number": 11665,
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11665",
                "id": 1575838402,
                "node_id": "PR_kwDOANo_SM5d7WLC",
                "html_url": "https://github.com/mamedev/mame/pull/11665",
                "diff_url": "https://github.com/mamedev/mame/pull/11665.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11665.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11665",
                "number": 11665,
                "state": "open",
                "locked": false,
                "title": "ins8250.cpp: Implement Break functionality",
                "user": {
                    "login": "mgarlanger",
                    "id": 8291090,
                    "node_id": "MDQ6VXNlcjgyOTEwOTA=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8291090?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mgarlanger",
                    "html_url": "https://github.com/mgarlanger",
                    "followers_url": "https://api.github.com/users/mgarlanger/followers",
                    "following_url": "https://api.github.com/users/mgarlanger/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mgarlanger/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mgarlanger/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mgarlanger/subscriptions",
                    "organizations_url": "https://api.github.com/users/mgarlanger/orgs",
                    "repos_url": "https://api.github.com/users/mgarlanger/repos",
                    "events_url": "https://api.github.com/users/mgarlanger/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mgarlanger/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Compared behavior between a real H19 and the emulated H19, while holding down the break key. Both behaved identically, other keys pressed while the break key was pressed queued up and processed after the break key was released.",
                "created_at": "2023-10-27T02:36:54Z",
                "updated_at": "2023-10-27T02:36:54Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11665/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11665/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11665/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/4dfa8358bf6242dd4e0af961c0d593d790be6f5e",
                "head": {
                    "label": "mgarlanger:8250_break",
                    "ref": "8250_break",
                    "sha": "4dfa8358bf6242dd4e0af961c0d593d790be6f5e",
                    "user": {
                        "login": "mgarlanger",
                        "id": 8291090,
                        "node_id": "MDQ6VXNlcjgyOTEwOTA=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/8291090?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mgarlanger",
                        "html_url": "https://github.com/mgarlanger",
                        "followers_url": "https://api.github.com/users/mgarlanger/followers",
                        "following_url": "https://api.github.com/users/mgarlanger/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mgarlanger/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mgarlanger/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mgarlanger/subscriptions",
                        "organizations_url": "https://api.github.com/users/mgarlanger/orgs",
                        "repos_url": "https://api.github.com/users/mgarlanger/repos",
                        "events_url": "https://api.github.com/users/mgarlanger/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mgarlanger/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 77410480,
                        "node_id": "MDEwOlJlcG9zaXRvcnk3NzQxMDQ4MA==",
                        "name": "mame",
                        "full_name": "mgarlanger/mame",
                        "private": false,
                        "owner": {
                            "login": "mgarlanger",
                            "id": 8291090,
                            "node_id": "MDQ6VXNlcjgyOTEwOTA=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/8291090?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mgarlanger",
                            "html_url": "https://github.com/mgarlanger",
                            "followers_url": "https://api.github.com/users/mgarlanger/followers",
                            "following_url": "https://api.github.com/users/mgarlanger/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mgarlanger/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mgarlanger/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mgarlanger/subscriptions",
                            "organizations_url": "https://api.github.com/users/mgarlanger/orgs",
                            "repos_url": "https://api.github.com/users/mgarlanger/repos",
                            "events_url": "https://api.github.com/users/mgarlanger/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mgarlanger/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mgarlanger/mame",
                        "description": "MAME - Multiple Arcade Machine Emulator",
                        "fork": true,
                        "url": "https://api.github.com/repos/mgarlanger/mame",
                        "forks_url": "https://api.github.com/repos/mgarlanger/mame/forks",
                        "keys_url": "https://api.github.com/repos/mgarlanger/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mgarlanger/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mgarlanger/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mgarlanger/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mgarlanger/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mgarlanger/mame/events",
                        "assignees_url": "https://api.github.com/repos/mgarlanger/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mgarlanger/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mgarlanger/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mgarlanger/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mgarlanger/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mgarlanger/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mgarlanger/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mgarlanger/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mgarlanger/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mgarlanger/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mgarlanger/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mgarlanger/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mgarlanger/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mgarlanger/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mgarlanger/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mgarlanger/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mgarlanger/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mgarlanger/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mgarlanger/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mgarlanger/mame/merges",
                        "archive_url": "https://api.github.com/repos/mgarlanger/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mgarlanger/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mgarlanger/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mgarlanger/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mgarlanger/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mgarlanger/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mgarlanger/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mgarlanger/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mgarlanger/mame/deployments",
                        "created_at": "2016-12-26T22:44:36Z",
                        "updated_at": "2023-03-03T05:41:39Z",
                        "pushed_at": "2023-10-27T02:31:31Z",
                        "git_url": "git://github.com/mgarlanger/mame.git",
                        "ssh_url": "git@github.com:mgarlanger/mame.git",
                        "clone_url": "https://github.com/mgarlanger/mame.git",
                        "svn_url": "https://github.com/mgarlanger/mame",
                        "homepage": null,
                        "size": 1558740,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "7e572705cc82583093e2b51eb6756c7390d04d6e",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-27T00:59:25Z",
                        "pushed_at": "2023-10-27T02:36:55Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591721,
                        "stargazers_count": 6988,
                        "watchers_count": 6988,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1808,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 593,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1808,
                        "open_issues": 593,
                        "watchers": 6988,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11665"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11665"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11665"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11665/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11665/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11665/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/4dfa8358bf6242dd4e0af961c0d593d790be6f5e"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 9,
                "deletions": 3,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T02:36:55Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32885321590",
        "type": "WatchEvent",
        "actor": {
            "id": 34069408,
            "login": "tahnous",
            "display_login": "tahnous",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tahnous",
            "avatar_url": "https://avatars.githubusercontent.com/u/34069408?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T00:59:25Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32884687031",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 71686027,
            "login": "FoxhackDN",
            "display_login": "FoxhackDN",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FoxhackDN",
            "avatar_url": "https://avatars.githubusercontent.com/u/71686027?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/mamedev/mame/issues/11664",
                "repository_url": "https://api.github.com/repos/mamedev/mame",
                "labels_url": "https://api.github.com/repos/mamedev/mame/issues/11664/labels{/name}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11664/comments",
                "events_url": "https://api.github.com/repos/mamedev/mame/issues/11664/events",
                "html_url": "https://github.com/mamedev/mame/pull/11664",
                "id": 1964544915,
                "node_id": "PR_kwDOANo_SM5d698K",
                "number": 11664,
                "title": "nuon.xml: Added 1 item (non working), updated metadata, dumps to DVD \u2026",
                "user": {
                    "login": "FoxhackDN",
                    "id": 71686027,
                    "node_id": "MDQ6VXNlcjcxNjg2MDI3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/71686027?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/FoxhackDN",
                    "html_url": "https://github.com/FoxhackDN",
                    "followers_url": "https://api.github.com/users/FoxhackDN/followers",
                    "following_url": "https://api.github.com/users/FoxhackDN/following{/other_user}",
                    "gists_url": "https://api.github.com/users/FoxhackDN/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/FoxhackDN/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/FoxhackDN/subscriptions",
                    "organizations_url": "https://api.github.com/users/FoxhackDN/orgs",
                    "repos_url": "https://api.github.com/users/FoxhackDN/repos",
                    "events_url": "https://api.github.com/users/FoxhackDN/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/FoxhackDN/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T00:03:56Z",
                "updated_at": "2023-10-27T00:09:32Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/11664",
                    "html_url": "https://github.com/mamedev/mame/pull/11664",
                    "diff_url": "https://github.com/mamedev/mame/pull/11664.diff",
                    "patch_url": "https://github.com/mamedev/mame/pull/11664.patch",
                    "merged_at": null
                },
                "body": "\u2026CHD format\r\n\r\nNew NOT_WORKING software list additions\r\n------------------------------------------\r\nJjangguneun Monmallyeo 3: Doraon Jjanggu (Korea) [emceebois]",
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/issues/11664/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/mamedev/mame/issues/11664/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/issues/comments/1782098347",
                "html_url": "https://github.com/mamedev/mame/pull/11664#issuecomment-1782098347",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11664",
                "id": 1782098347,
                "node_id": "IC_kwDOANo_SM5qOKmr",
                "user": {
                    "login": "FoxhackDN",
                    "id": 71686027,
                    "node_id": "MDQ6VXNlcjcxNjg2MDI3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/71686027?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/FoxhackDN",
                    "html_url": "https://github.com/FoxhackDN",
                    "followers_url": "https://api.github.com/users/FoxhackDN/followers",
                    "following_url": "https://api.github.com/users/FoxhackDN/following{/other_user}",
                    "gists_url": "https://api.github.com/users/FoxhackDN/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/FoxhackDN/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/FoxhackDN/subscriptions",
                    "organizations_url": "https://api.github.com/users/FoxhackDN/orgs",
                    "repos_url": "https://api.github.com/users/FoxhackDN/repos",
                    "events_url": "https://api.github.com/users/FoxhackDN/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/FoxhackDN/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T00:09:32Z",
                "updated_at": "2023-10-27T00:09:32Z",
                "author_association": "CONTRIBUTOR",
                "body": "Software list metadata (region and names) has been updated based on Redump's entries and my own research. All existing CHDs were updated to the DVD CHD format by extracting them with `chdman extractcd`, then recompressing them with `chdman createdvd`; no data was lost, the old extracted dumps matched the verified Redump dumps. So, old dumps can be updated with those two commands.\r\n\r\nI also went ahead and renamed the files to something that was more readable, but kept the old folder / set names intact.",
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/issues/comments/1782098347/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:09:33Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32884611460",
        "type": "PullRequestEvent",
        "actor": {
            "id": 71686027,
            "login": "FoxhackDN",
            "display_login": "FoxhackDN",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FoxhackDN",
            "avatar_url": "https://avatars.githubusercontent.com/u/71686027?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "opened",
            "number": 11664,
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11664",
                "id": 1575739146,
                "node_id": "PR_kwDOANo_SM5d698K",
                "html_url": "https://github.com/mamedev/mame/pull/11664",
                "diff_url": "https://github.com/mamedev/mame/pull/11664.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11664.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11664",
                "number": 11664,
                "state": "open",
                "locked": false,
                "title": "nuon.xml: Added 1 item (non working), updated metadata, dumps to DVD \u2026",
                "user": {
                    "login": "FoxhackDN",
                    "id": 71686027,
                    "node_id": "MDQ6VXNlcjcxNjg2MDI3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/71686027?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/FoxhackDN",
                    "html_url": "https://github.com/FoxhackDN",
                    "followers_url": "https://api.github.com/users/FoxhackDN/followers",
                    "following_url": "https://api.github.com/users/FoxhackDN/following{/other_user}",
                    "gists_url": "https://api.github.com/users/FoxhackDN/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/FoxhackDN/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/FoxhackDN/subscriptions",
                    "organizations_url": "https://api.github.com/users/FoxhackDN/orgs",
                    "repos_url": "https://api.github.com/users/FoxhackDN/repos",
                    "events_url": "https://api.github.com/users/FoxhackDN/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/FoxhackDN/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\u2026CHD format\r\n\r\nNew NOT_WORKING software list additions\r\n------------------------------------------\r\nJjangguneun Monmallyeo 3: Doraon Jjanggu (Korea) [emceebois]",
                "created_at": "2023-10-27T00:03:56Z",
                "updated_at": "2023-10-27T00:03:56Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11664/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11664/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11664/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/7cf4c31a7da2458e9fb13f17fefe9c95e36f034a",
                "head": {
                    "label": "FoxhackDN:2023-10-26-nuon",
                    "ref": "2023-10-26-nuon",
                    "sha": "7cf4c31a7da2458e9fb13f17fefe9c95e36f034a",
                    "user": {
                        "login": "FoxhackDN",
                        "id": 71686027,
                        "node_id": "MDQ6VXNlcjcxNjg2MDI3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/71686027?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/FoxhackDN",
                        "html_url": "https://github.com/FoxhackDN",
                        "followers_url": "https://api.github.com/users/FoxhackDN/followers",
                        "following_url": "https://api.github.com/users/FoxhackDN/following{/other_user}",
                        "gists_url": "https://api.github.com/users/FoxhackDN/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/FoxhackDN/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/FoxhackDN/subscriptions",
                        "organizations_url": "https://api.github.com/users/FoxhackDN/orgs",
                        "repos_url": "https://api.github.com/users/FoxhackDN/repos",
                        "events_url": "https://api.github.com/users/FoxhackDN/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/FoxhackDN/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 625100931,
                        "node_id": "R_kgDOJUJIgw",
                        "name": "mame",
                        "full_name": "FoxhackDN/mame",
                        "private": false,
                        "owner": {
                            "login": "FoxhackDN",
                            "id": 71686027,
                            "node_id": "MDQ6VXNlcjcxNjg2MDI3",
                            "avatar_url": "https://avatars.githubusercontent.com/u/71686027?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/FoxhackDN",
                            "html_url": "https://github.com/FoxhackDN",
                            "followers_url": "https://api.github.com/users/FoxhackDN/followers",
                            "following_url": "https://api.github.com/users/FoxhackDN/following{/other_user}",
                            "gists_url": "https://api.github.com/users/FoxhackDN/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/FoxhackDN/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/FoxhackDN/subscriptions",
                            "organizations_url": "https://api.github.com/users/FoxhackDN/orgs",
                            "repos_url": "https://api.github.com/users/FoxhackDN/repos",
                            "events_url": "https://api.github.com/users/FoxhackDN/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/FoxhackDN/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/FoxhackDN/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/FoxhackDN/mame",
                        "forks_url": "https://api.github.com/repos/FoxhackDN/mame/forks",
                        "keys_url": "https://api.github.com/repos/FoxhackDN/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/FoxhackDN/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/FoxhackDN/mame/teams",
                        "hooks_url": "https://api.github.com/repos/FoxhackDN/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/FoxhackDN/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/FoxhackDN/mame/events",
                        "assignees_url": "https://api.github.com/repos/FoxhackDN/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/FoxhackDN/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/FoxhackDN/mame/tags",
                        "blobs_url": "https://api.github.com/repos/FoxhackDN/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/FoxhackDN/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/FoxhackDN/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/FoxhackDN/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/FoxhackDN/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/FoxhackDN/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/FoxhackDN/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/FoxhackDN/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/FoxhackDN/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/FoxhackDN/mame/subscription",
                        "commits_url": "https://api.github.com/repos/FoxhackDN/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/FoxhackDN/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/FoxhackDN/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/FoxhackDN/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/FoxhackDN/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/FoxhackDN/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/FoxhackDN/mame/merges",
                        "archive_url": "https://api.github.com/repos/FoxhackDN/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/FoxhackDN/mame/downloads",
                        "issues_url": "https://api.github.com/repos/FoxhackDN/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/FoxhackDN/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/FoxhackDN/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/FoxhackDN/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/FoxhackDN/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/FoxhackDN/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/FoxhackDN/mame/deployments",
                        "created_at": "2023-04-08T04:26:42Z",
                        "updated_at": "2023-05-04T01:05:17Z",
                        "pushed_at": "2023-10-27T00:02:18Z",
                        "git_url": "git://github.com/FoxhackDN/mame.git",
                        "ssh_url": "git@github.com:FoxhackDN/mame.git",
                        "clone_url": "https://github.com/FoxhackDN/mame.git",
                        "svn_url": "https://github.com/FoxhackDN/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558808,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "7e572705cc82583093e2b51eb6756c7390d04d6e",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-27T00:03:43Z",
                        "pushed_at": "2023-10-27T00:03:57Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591721,
                        "stargazers_count": 6987,
                        "watchers_count": 6987,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1808,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 592,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1808,
                        "open_issues": 592,
                        "watchers": 6987,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11664"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11664"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11664"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11664/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11664/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11664/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/7cf4c31a7da2458e9fb13f17fefe9c95e36f034a"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 39,
                "deletions": 21,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:03:58Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32884608336",
        "type": "WatchEvent",
        "actor": {
            "id": 9814309,
            "login": "kampman99",
            "display_login": "kampman99",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kampman99",
            "avatar_url": "https://avatars.githubusercontent.com/u/9814309?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T00:03:43Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32883270597",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373877833",
                "pull_request_review_id": 1700725172,
                "id": 1373877833,
                "node_id": "PRRC_kwDOANo_SM5R47ZJ",
                "diff_hunk": "@@ -71,131 +102,2109 @@\n         B18 A8\n         B19 A19\n         B20 A20\n-        B21 N/C\n+        B21 WE (for Flashrom)\n         B22 A21\n         B23 VCC\n         B24 N/C\n         B25 GND\n \n+    Storyware\n+    ---------\n+\n+    Although no booklet artwork is rendered, toggling input port 'Pen Target'\n+    switches between mapping pen coordinates to the tablet or the Storyware.\n+\n+    Test Mode\n+    ---------\n+\n+    Most games contain a hidden test mode that can be activated by the same inputs:\n+\n+        Pages 1, 3, and 5 covered, the others exposed;\n+        Left red button held down;\n+\n+    If the machine configuration 'Test Mode Pages' is enabled, the driver forces this page setup,\n+    so that the player only needs to hold the left red button at reset to activate this mode.\n+\n+    Toggling 'Memory Cache' allows the player to observe differences between test failure and success.\n+\n *******************************************************************************/\n \n #include \"emu.h\"\n \n #include \"bus/generic/slot.h\"\n #include \"bus/generic/carts.h\"\n-#include \"cpu/arm7/arm7.h\"\n+#include \"cpu/arm7/ap2010cpu.h\"\n+#include \"machine/clock.h\"\n+#include \"machine/timer.h\"\n+#include \"sound/ap2010pcm.h\"\n \n+#include \"crsshair.h\"\n+#include \"emupal.h\"\n+#include \"render.h\"\n #include \"softlist_dev.h\"\n+#include \"schedule.h\"\n #include \"speaker.h\"\n #include \"screen.h\"\n \n+#include \"beena.lh\"\n+\n+#define VERBOSE (0)\n+#include \"logmacro.h\"\n \n namespace {\n \n-class sega_beena_state : public driver_device\n+#define SCREEN_W 704\n+#define SCREEN_H 480\n+\n+#define ROM_MASK_BASE 0x80000000\n+#define ROM_FLASH_BASE 0xa0000000\n+#define UNKNOWN_ADDR 0xffffffff\n+\n+#define MEMCACHE_FIFO_MAX_SIZE 0x100\n+\n+class sega_9h0_0008_state : public driver_device\n {\n public:\n-\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\tsega_9h0_0008_state(const machine_config &mconfig, device_type type, const char *tag)\n \t\t: driver_device(mconfig, type, tag)\n-\t\t, m_maincpu(*this, \"arm7\")\n+\t\t, m_maincpu(*this, \"maincpu\")\n+\t\t, m_workram(*this, \"workram\")\n+\t\t, m_pcm(*this, \"pcm\")\n \t\t, m_cart(*this, \"cartslot\")\n \t\t, m_cart_region(nullptr)\n-\t\t, m_bank(*this, \"cartbank\")\n+\t\t, m_screen_main(*this, \"screen\")\n+\t\t, m_gfxdecode(*this, \"gfxdecode\")\n+\t\t, m_palette(*this, \"palette\")\n+\t\t, m_paletteram(*this, \"paletteram\")\n+\t\t, m_tilemap_bg(*this, \"tilemap_bg\")\n+\t\t, m_tilemap_fg(*this, \"tilemap_fg\")\n+\t\t, m_tilemap_scroll_x(*this, \"tilemap_scroll_x\")\n+\t\t, m_tilemap_scroll_y(*this, \"tilemap_scroll_y\")\n+\t\t, m_tilemap_sprites(*this, \"tilemap_sprites\")\n+\t\t, m_bitmap(*this, \"bitmap\")\n+\t\t, m_io_sensor_regs(*this, \"io_sensor_regs\")\n+\t\t, m_io_auxiliary_regs(*this, \"io_auxiliary_regs\")\n+\t\t, m_io_cpu_config(*this, \"CPU_CONFIG\")\n+\t\t, m_io_video_config(*this, \"VIDEO_CONFIG\")\n \t{ }\n \n-\tvoid sega_beena(machine_config &config);\n+\tvoid sega_9h0_0008(machine_config &config);\n \n-private:\n+protected:\n+\tvirtual void device_post_load() override;\n \tvirtual void machine_start() override;\n \tvirtual void machine_reset() override;\n+\tvirtual void video_start() override;\n+\n+\tvirtual void install_game_rom();\n+\tvirtual void update_sensors(offs_t offset);\n \n+\tvoid beena_arm7_map(address_map &map);\n+\n+\tvoid request_irq();\n+\tvoid request_fiq();\n+\n+\tTIMER_DEVICE_CALLBACK_MEMBER(scanline);\n+\tvirtual void update_crosshair(screen_device &screen);\n+\tvoid irq_wait_speedup();\n \tuint32_t screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tuint32_t video_reg_r(offs_t offset);\n+\tvoid video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid pal_w(offs_t offset, uint16_t data, uint16_t mem_mask = ~0);\n+\tuint8_t tiles_layers_r(offs_t offset);\n+\tuint8_t tiles_sprites_r(offs_t offset);\n+\tvoid tiles_layers_w(offs_t offset, uint8_t data);\n+\tvoid tiles_sprites_w(offs_t offset, uint8_t data);\n+\tint32_t scroll_x(int32_t x, uint16_t i);\n+\tint32_t scroll_y(int32_t y, uint16_t i);\n+\tvoid draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered);\n+\tvoid draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered);\n+\tvoid draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tvoid screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tint32_t rescale_alpha_step(uint8_t step);\n+\tconstexpr uint32_t alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r);",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "It can, I'll update it.",
                "created_at": "2023-10-26T22:22:54Z",
                "updated_at": "2023-10-26T22:22:54Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373877833",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373877833"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373877833"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373877833/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 227,
                "original_line": 227,
                "side": "RIGHT",
                "in_reply_to_id": 1373837220,
                "original_position": 215,
                "position": 215,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T22:22:54Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "4e0b9a6426f333bf3a7a9ba4baf40f9abcace08c",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558412,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T22:11:04Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:22:54Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32883270527",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700725172,
                "node_id": "PRR_kwDOANo_SM5lXwG0",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "submitted_at": "2023-10-26T22:22:54Z",
                "state": "commented",
                "html_url": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700725172",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700725172"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T22:22:54Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "4e0b9a6426f333bf3a7a9ba4baf40f9abcace08c",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558412,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T22:11:04Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:22:55Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32883262723",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373877575",
                "pull_request_review_id": 1700724851,
                "id": 1373877575,
                "node_id": "PRRC_kwDOANo_SM5R47VH",
                "diff_hunk": "@@ -120,60 +121,94 @@ void ap2010pcm_device::reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n \n \tm_stream->update();\n \n-\tuint16_t sample = 0;\n \tswitch (offset) {\n \t\tcase 0x4/4:\n \t\t\tif ((data & 0x78) == 0x78) {\n-\t\t\t\tm_sample_rate = 8000 * (1 + ((data & 2) >> 1));\n+\t\t\t\tm_sample_rate = 8000 * (1 + BIT(data, 1));\n \t\t\t\tm_stream->set_sample_rate(m_sample_rate);\n \n \t\t\t\t// When a new stream starts, stop playback of previous stream\n-\t\t\t\tm_fifo = {};\n+\t\t\t\tm_fifo_size = 0;\n+\t\t\t\tm_fifo_head = 0;\n+\t\t\t\tm_fifo_tail = 0;\n \n \t\t\t\tLOG(\"pcm stream start, rate = %d\\n\", m_sample_rate);\n \t\t\t}\n \t\t\tbreak;\n \t\tcase 0xc/4:\n \t\t\tif (ACCESSING_BITS_16_31) {\n-\t\t\t\tsample = (data & 0xffff0000U) >> 16;\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_push((data & 0xffff0000U) >> 16);\n \t\t\t}\n \t\t\tif (ACCESSING_BITS_0_15) {\n-\t\t\t\tsample = (data & 0x0000ffffU);\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_push(data & 0x0000ffffU);\n \t\t\t}\n \t\t\tbreak;\n \t\t// These samples are always played first\n \t\tcase 0x10/4:\n \t\t\tif (ACCESSING_BITS_16_31) {\n-\t\t\t\tsample = (data & 0xffff0000U) >> 16;\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo_fast.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_fast_push((data & 0xffff0000U) >> 16);\n \t\t\t}\n \t\t\tif (ACCESSING_BITS_0_15) {\n-\t\t\t\tsample = (data & 0x0000ffffU);\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo_fast.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_fast_push(data & 0x0000ffffU);\n \t\t\t}\n \t\t\tbreak;\n-\t\t// Panning. FIXME: Identify bits for each channel\n+\t\t// Panning. TODO: Identify bits for each channel\n \t\tcase 0x14/4:\n-\t\t\tLOG(\"pcm pan = %08x\", data);\n+\t\t\tLOG(\"pcm pan = %08x\\n\", data);\n \t\t\tbreak;\n \t\t// Volume control. When video output is disabled, it's possible to adjust volume\n \t\t// using the 2 touch areas on the bottom-left of the Storyware. Range 0..345\n \t\tcase 0x18/4:\n-\t\t\tm_volume = ((data & 0x1ff00000U) >> 20) / 345.0f;\n-\t\t\tif (m_volume > 1.0f) {\n-\t\t\t\tm_volume = 1.0f;\n-\t\t\t}\n-\t\t\tLOG(\"pcm vol = %08x -> %d\", data, m_volume);\n+\t\t\tm_volume = std::max(((data & 0x1ff00000U) >> 20) / 345.0f, 1.0f);\n+\t\t\tLOG(\"pcm vol = %08x -> %d\\n\", data, m_volume);",
                "path": "src/devices/sound/ap2010pcm.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "No problem. Yeah I was getting some louder samples.",
                "created_at": "2023-10-26T22:22:30Z",
                "updated_at": "2023-10-26T22:22:30Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373877575",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373877575"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373877575"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373877575/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": 172,
                "start_side": "LEFT",
                "line": 163,
                "original_line": 163,
                "side": "RIGHT",
                "in_reply_to_id": 1373825251,
                "original_position": 156,
                "position": 156,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T22:22:30Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "4e0b9a6426f333bf3a7a9ba4baf40f9abcace08c",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558412,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T22:11:04Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:22:30Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32883262645",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700724851,
                "node_id": "PRR_kwDOANo_SM5lXwBz",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "submitted_at": "2023-10-26T22:22:30Z",
                "state": "commented",
                "html_url": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700724851",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700724851"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T22:22:30Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "4e0b9a6426f333bf3a7a9ba4baf40f9abcace08c",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558412,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T22:11:04Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:22:31Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32883060031",
        "type": "PushEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "repository_id": 14303048,
            "push_id": 15583764120,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "7e572705cc82583093e2b51eb6756c7390d04d6e",
            "before": "de955af966f72cf39568589220680f3ad6b4b092",
            "commits": [
                {
                    "sha": "7e572705cc82583093e2b51eb6756c7390d04d6e",
                    "author": {
                        "email": "140764005+mamehaze@users.noreply.github.com",
                        "name": "mamehaze"
                    },
                    "message": "jaleco/ms1_gatearray.cpp: Cleaned up code. (#11663)",
                    "distinct": true,
                    "url": "https://api.github.com/repos/mamedev/mame/commits/7e572705cc82583093e2b51eb6756c7390d04d6e"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T22:11:06Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32883059856",
        "type": "PullRequestEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "closed",
            "number": 11663,
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11663",
                "id": 1575629449,
                "node_id": "PR_kwDOANo_SM5d6jKJ",
                "html_url": "https://github.com/mamedev/mame/pull/11663",
                "diff_url": "https://github.com/mamedev/mame/pull/11663.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11663.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11663",
                "number": 11663,
                "state": "closed",
                "locked": false,
                "title": "ms1_gatearray.cpp - minor cleanup of a no longer needed member",
                "user": {
                    "login": "mamehaze",
                    "id": 140764005,
                    "node_id": "U_kgDOCGPjZQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/140764005?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mamehaze",
                    "html_url": "https://github.com/mamehaze",
                    "followers_url": "https://api.github.com/users/mamehaze/followers",
                    "following_url": "https://api.github.com/users/mamehaze/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mamehaze/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mamehaze/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mamehaze/subscriptions",
                    "organizations_url": "https://api.github.com/users/mamehaze/orgs",
                    "repos_url": "https://api.github.com/users/mamehaze/repos",
                    "events_url": "https://api.github.com/users/mamehaze/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mamehaze/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2023-10-26T21:52:59Z",
                "updated_at": "2023-10-26T22:11:04Z",
                "closed_at": "2023-10-26T22:11:04Z",
                "merged_at": "2023-10-26T22:11:04Z",
                "merge_commit_sha": "7e572705cc82583093e2b51eb6756c7390d04d6e",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11663/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11663/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11663/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/29a16769f4520e540e4698ade7fa016ce9d9c5c3",
                "head": {
                    "label": "mamehaze:261023",
                    "ref": "261023",
                    "sha": "29a16769f4520e540e4698ade7fa016ce9d9c5c3",
                    "user": {
                        "login": "mamehaze",
                        "id": 140764005,
                        "node_id": "U_kgDOCGPjZQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/140764005?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamehaze",
                        "html_url": "https://github.com/mamehaze",
                        "followers_url": "https://api.github.com/users/mamehaze/followers",
                        "following_url": "https://api.github.com/users/mamehaze/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamehaze/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamehaze/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamehaze/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamehaze/orgs",
                        "repos_url": "https://api.github.com/users/mamehaze/repos",
                        "events_url": "https://api.github.com/users/mamehaze/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamehaze/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 671687561,
                        "node_id": "R_kgDOKAkjiQ",
                        "name": "mame",
                        "full_name": "mamehaze/mame",
                        "private": false,
                        "owner": {
                            "login": "mamehaze",
                            "id": 140764005,
                            "node_id": "U_kgDOCGPjZQ",
                            "avatar_url": "https://avatars.githubusercontent.com/u/140764005?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamehaze",
                            "html_url": "https://github.com/mamehaze",
                            "followers_url": "https://api.github.com/users/mamehaze/followers",
                            "following_url": "https://api.github.com/users/mamehaze/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamehaze/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamehaze/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamehaze/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamehaze/orgs",
                            "repos_url": "https://api.github.com/users/mamehaze/repos",
                            "events_url": "https://api.github.com/users/mamehaze/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamehaze/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamehaze/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/mamehaze/mame",
                        "forks_url": "https://api.github.com/repos/mamehaze/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamehaze/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamehaze/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamehaze/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamehaze/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamehaze/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamehaze/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamehaze/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamehaze/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamehaze/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamehaze/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamehaze/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamehaze/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamehaze/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamehaze/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamehaze/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamehaze/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamehaze/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamehaze/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamehaze/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamehaze/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamehaze/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamehaze/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamehaze/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamehaze/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamehaze/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamehaze/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamehaze/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamehaze/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamehaze/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamehaze/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamehaze/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamehaze/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamehaze/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamehaze/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamehaze/mame/deployments",
                        "created_at": "2023-07-27T22:58:56Z",
                        "updated_at": "2023-07-28T13:20:37Z",
                        "pushed_at": "2023-10-26T22:09:05Z",
                        "git_url": "git://github.com/mamehaze/mame.git",
                        "ssh_url": "git@github.com:mamehaze/mame.git",
                        "clone_url": "https://github.com/mamehaze/mame.git",
                        "svn_url": "https://github.com/mamehaze/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558266,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "de955af966f72cf39568589220680f3ad6b4b092",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T22:11:04Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11663"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11663"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11663"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11663/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11663/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11663/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/29a16769f4520e540e4698ade7fa016ce9d9c5c3"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 4,
                "additions": 46,
                "deletions": 50,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:11:05Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882755677",
        "type": "PullRequestEvent",
        "actor": {
            "id": 140764005,
            "login": "mamehaze",
            "display_login": "mamehaze",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mamehaze",
            "avatar_url": "https://avatars.githubusercontent.com/u/140764005?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "opened",
            "number": 11663,
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11663",
                "id": 1575629449,
                "node_id": "PR_kwDOANo_SM5d6jKJ",
                "html_url": "https://github.com/mamedev/mame/pull/11663",
                "diff_url": "https://github.com/mamedev/mame/pull/11663.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11663.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11663",
                "number": 11663,
                "state": "open",
                "locked": false,
                "title": "ms1_gatearray.cpp - minor cleanup of a no longer needed member",
                "user": {
                    "login": "mamehaze",
                    "id": 140764005,
                    "node_id": "U_kgDOCGPjZQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/140764005?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mamehaze",
                    "html_url": "https://github.com/mamehaze",
                    "followers_url": "https://api.github.com/users/mamehaze/followers",
                    "following_url": "https://api.github.com/users/mamehaze/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mamehaze/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mamehaze/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mamehaze/subscriptions",
                    "organizations_url": "https://api.github.com/users/mamehaze/orgs",
                    "repos_url": "https://api.github.com/users/mamehaze/repos",
                    "events_url": "https://api.github.com/users/mamehaze/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mamehaze/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2023-10-26T21:52:59Z",
                "updated_at": "2023-10-26T21:52:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11663/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11663/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11663/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/89e98f4c089ebf457588b284a8256a91248f9e65",
                "head": {
                    "label": "mamehaze:261023",
                    "ref": "261023",
                    "sha": "89e98f4c089ebf457588b284a8256a91248f9e65",
                    "user": {
                        "login": "mamehaze",
                        "id": 140764005,
                        "node_id": "U_kgDOCGPjZQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/140764005?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamehaze",
                        "html_url": "https://github.com/mamehaze",
                        "followers_url": "https://api.github.com/users/mamehaze/followers",
                        "following_url": "https://api.github.com/users/mamehaze/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamehaze/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamehaze/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamehaze/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamehaze/orgs",
                        "repos_url": "https://api.github.com/users/mamehaze/repos",
                        "events_url": "https://api.github.com/users/mamehaze/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamehaze/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 671687561,
                        "node_id": "R_kgDOKAkjiQ",
                        "name": "mame",
                        "full_name": "mamehaze/mame",
                        "private": false,
                        "owner": {
                            "login": "mamehaze",
                            "id": 140764005,
                            "node_id": "U_kgDOCGPjZQ",
                            "avatar_url": "https://avatars.githubusercontent.com/u/140764005?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamehaze",
                            "html_url": "https://github.com/mamehaze",
                            "followers_url": "https://api.github.com/users/mamehaze/followers",
                            "following_url": "https://api.github.com/users/mamehaze/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamehaze/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamehaze/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamehaze/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamehaze/orgs",
                            "repos_url": "https://api.github.com/users/mamehaze/repos",
                            "events_url": "https://api.github.com/users/mamehaze/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamehaze/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamehaze/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/mamehaze/mame",
                        "forks_url": "https://api.github.com/repos/mamehaze/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamehaze/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamehaze/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamehaze/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamehaze/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamehaze/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamehaze/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamehaze/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamehaze/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamehaze/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamehaze/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamehaze/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamehaze/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamehaze/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamehaze/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamehaze/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamehaze/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamehaze/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamehaze/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamehaze/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamehaze/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamehaze/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamehaze/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamehaze/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamehaze/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamehaze/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamehaze/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamehaze/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamehaze/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamehaze/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamehaze/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamehaze/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamehaze/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamehaze/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamehaze/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamehaze/mame/deployments",
                        "created_at": "2023-07-27T22:58:56Z",
                        "updated_at": "2023-07-28T13:20:37Z",
                        "pushed_at": "2023-10-26T21:52:12Z",
                        "git_url": "git://github.com/mamehaze/mame.git",
                        "ssh_url": "git@github.com:mamehaze/mame.git",
                        "clone_url": "https://github.com/mamehaze/mame.git",
                        "svn_url": "https://github.com/mamehaze/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558266,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "de955af966f72cf39568589220680f3ad6b4b092",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:52:59Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 592,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 592,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11663"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11663"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11663"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11663/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11663/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11663/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/89e98f4c089ebf457588b284a8256a91248f9e65"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 0,
                "deletions": 2,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:53:00Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471581",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700658148,
                "node_id": "PRR_kwDOANo_SM5lXfvk",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Thanks for addressing the issues so quickly.  I just noticed a few small things after another read of the code.\r\n\r\nI\u2019m actually looking forward to having this ready so I\u2019ve got a concrete use case for the scripting features needed to support the book display.",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "submitted_at": "2023-10-26T21:36:09Z",
                "state": "changes_requested",
                "html_url": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700658148",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700658148"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:36:09Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471716",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373835078",
                "pull_request_review_id": 1700658148,
                "id": 1373835078,
                "node_id": "PRRC_kwDOANo_SM5R4w9G",
                "diff_hunk": "@@ -71,131 +102,2109 @@\n         B18 A8\n         B19 A19\n         B20 A20\n-        B21 N/C\n+        B21 WE (for Flashrom)\n         B22 A21\n         B23 VCC\n         B24 N/C\n         B25 GND\n \n+    Storyware\n+    ---------\n+\n+    Although no booklet artwork is rendered, toggling input port 'Pen Target'\n+    switches between mapping pen coordinates to the tablet or the Storyware.\n+\n+    Test Mode\n+    ---------\n+\n+    Most games contain a hidden test mode that can be activated by the same inputs:\n+\n+        Pages 1, 3, and 5 covered, the others exposed;\n+        Left red button held down;\n+\n+    If the machine configuration 'Test Mode Pages' is enabled, the driver forces this page setup,\n+    so that the player only needs to hold the left red button at reset to activate this mode.\n+\n+    Toggling 'Memory Cache' allows the player to observe differences between test failure and success.\n+\n *******************************************************************************/\n \n #include \"emu.h\"\n \n #include \"bus/generic/slot.h\"\n #include \"bus/generic/carts.h\"\n-#include \"cpu/arm7/arm7.h\"\n+#include \"cpu/arm7/ap2010cpu.h\"\n+#include \"machine/clock.h\"\n+#include \"machine/timer.h\"\n+#include \"sound/ap2010pcm.h\"\n \n+#include \"crsshair.h\"\n+#include \"emupal.h\"\n+#include \"render.h\"\n #include \"softlist_dev.h\"\n+#include \"schedule.h\"\n #include \"speaker.h\"\n #include \"screen.h\"\n \n+#include \"beena.lh\"\n+\n+#define VERBOSE (0)\n+#include \"logmacro.h\"\n \n namespace {\n \n-class sega_beena_state : public driver_device\n+#define SCREEN_W 704\n+#define SCREEN_H 480\n+\n+#define ROM_MASK_BASE 0x80000000\n+#define ROM_FLASH_BASE 0xa0000000\n+#define UNKNOWN_ADDR 0xffffffff\n+\n+#define MEMCACHE_FIFO_MAX_SIZE 0x100\n+\n+class sega_9h0_0008_state : public driver_device\n {\n public:\n-\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\tsega_9h0_0008_state(const machine_config &mconfig, device_type type, const char *tag)\n \t\t: driver_device(mconfig, type, tag)\n-\t\t, m_maincpu(*this, \"arm7\")\n+\t\t, m_maincpu(*this, \"maincpu\")\n+\t\t, m_workram(*this, \"workram\")\n+\t\t, m_pcm(*this, \"pcm\")\n \t\t, m_cart(*this, \"cartslot\")\n \t\t, m_cart_region(nullptr)\n-\t\t, m_bank(*this, \"cartbank\")\n+\t\t, m_screen_main(*this, \"screen\")\n+\t\t, m_gfxdecode(*this, \"gfxdecode\")\n+\t\t, m_palette(*this, \"palette\")\n+\t\t, m_paletteram(*this, \"paletteram\")\n+\t\t, m_tilemap_bg(*this, \"tilemap_bg\")\n+\t\t, m_tilemap_fg(*this, \"tilemap_fg\")\n+\t\t, m_tilemap_scroll_x(*this, \"tilemap_scroll_x\")\n+\t\t, m_tilemap_scroll_y(*this, \"tilemap_scroll_y\")\n+\t\t, m_tilemap_sprites(*this, \"tilemap_sprites\")\n+\t\t, m_bitmap(*this, \"bitmap\")\n+\t\t, m_io_sensor_regs(*this, \"io_sensor_regs\")\n+\t\t, m_io_auxiliary_regs(*this, \"io_auxiliary_regs\")\n+\t\t, m_io_cpu_config(*this, \"CPU_CONFIG\")\n+\t\t, m_io_video_config(*this, \"VIDEO_CONFIG\")\n \t{ }\n \n-\tvoid sega_beena(machine_config &config);\n+\tvoid sega_9h0_0008(machine_config &config);\n \n-private:\n+protected:\n+\tvirtual void device_post_load() override;\n \tvirtual void machine_start() override;\n \tvirtual void machine_reset() override;\n+\tvirtual void video_start() override;\n+\n+\tvirtual void install_game_rom();\n+\tvirtual void update_sensors(offs_t offset);\n \n+\tvoid beena_arm7_map(address_map &map);\n+\n+\tvoid request_irq();\n+\tvoid request_fiq();\n+\n+\tTIMER_DEVICE_CALLBACK_MEMBER(scanline);\n+\tvirtual void update_crosshair(screen_device &screen);\n+\tvoid irq_wait_speedup();\n \tuint32_t screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tuint32_t video_reg_r(offs_t offset);\n+\tvoid video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid pal_w(offs_t offset, uint16_t data, uint16_t mem_mask = ~0);\n+\tuint8_t tiles_layers_r(offs_t offset);\n+\tuint8_t tiles_sprites_r(offs_t offset);\n+\tvoid tiles_layers_w(offs_t offset, uint8_t data);\n+\tvoid tiles_sprites_w(offs_t offset, uint8_t data);\n+\tint32_t scroll_x(int32_t x, uint16_t i);\n+\tint32_t scroll_y(int32_t y, uint16_t i);\n+\tvoid draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered);\n+\tvoid draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered);\n+\tvoid draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tvoid screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tint32_t rescale_alpha_step(uint8_t step);\n+\tconstexpr uint32_t alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r);\n+\ttemplate <typename BitmapType, typename FunctionClass> void drawgfxzoom_with_pixel_op(gfx_element *gfx, BitmapType &dest, const rectangle &cliprect, uint32_t code, int flipx, int flipy, int32_t destx, int32_t desty, uint32_t scalex, uint32_t scaley, FunctionClass pixel_op);\n \n-\tDECLARE_DEVICE_IMAGE_LOAD_MEMBER(cart_load);\n+\tuint32_t io_sensors_r(offs_t offset);\n \n-\tvoid beena_arm7_map(address_map &map);\n+\tuint32_t io_memcache_r();\n+\tvirtual uint32_t io_expansion_r();\n+\tvoid memcache_advance(uint32_t &status);\n+\tvoid memcache_parse_data_bit(uint32_t &status);\n+\n+\tuint32_t rtc_r(offs_t offset);\n+\tvoid rtc_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid update_rtc();\n+\n+\tuint32_t midi_reg_r(offs_t offset);\n+\tvoid midi_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\n+\tstatic constexpr int16_t signed10(uint32_t number)\n+\t{\n+\t\treturn util::sext(number, 10);\n+\t}\n+\tstatic constexpr int32_t rescale(int32_t x, int32_t min_x, int32_t max_x, int32_t a, int32_t b)\n+\t{\n+\t\t// Rescaling (min-max normalization) from [min_x..max_x] to [a..b].\n+\t\treturn a + (((x - min_x) * (b - a)) / (max_x - min_x));\n+\t}\n+\n+\trequired_device<ap2010cpu_device> m_maincpu;\n+\trequired_shared_ptr<uint32_t> m_workram;\n+\trequired_device<ap2010pcm_device> m_pcm;\n+\tbool m_requested_fiq;\n+\tuint32_t m_irq_wait_start_addr;\n \n-\trequired_device<arm7_cpu_device> m_maincpu;\n \toptional_device<generic_slot_device> m_cart;\n \tmemory_region *m_cart_region;\n-\toptional_memory_bank m_bank;\n+\n+\trequired_device<screen_device> m_screen_main;\n+\trequired_device<gfxdecode_device> m_gfxdecode;\n+\trequired_device<palette_device> m_palette;\n+\tstd::unique_ptr<rgb_t[]> m_cache_palette;\n+\trequired_shared_ptr<uint32_t> m_paletteram;\n+\trequired_shared_ptr<uint32_t> m_tilemap_bg;\n+\trequired_shared_ptr<uint32_t> m_tilemap_fg;\n+\trequired_shared_ptr<uint32_t> m_tilemap_scroll_x;\n+\trequired_shared_ptr<uint32_t> m_tilemap_scroll_y;\n+\trequired_shared_ptr<uint32_t> m_tilemap_sprites;\n+\trequired_shared_ptr<uint32_t> m_bitmap;\n+\tstd::unique_ptr<uint8_t[]> m_tiles_layers;\n+\tstd::unique_ptr<uint8_t[]> m_tiles_sprites;\n+\tstd::unique_ptr<uint32_t[]> m_video_regs;\n+\tbitmap_rgb32 m_cache_layer; // Used for x-scrolling scanlines, same size as bitplane\n+\tuint8_t m_scale;\n+\tuint16_t m_scanline;\n+\n+\trequired_shared_ptr<uint32_t> m_io_sensor_regs;\n+\trequired_shared_ptr<uint32_t> m_io_auxiliary_regs;\n+\tuint32_t m_pen_previous_input;\n+\tuint32_t m_pen_target;\n+\tuint32_t m_effective_page;\n+\n+\tuint16_t m_rtc[0x100/2]{};\n+\n+\tstd::unique_ptr<uint32_t[]> m_midi_regs;\n+\tuint32_t m_midi_busy_count;\n+\n+\trequired_ioport m_io_cpu_config;\n+\trequired_ioport m_io_video_config;\n+\n+private:\n+\tuint8_t fifo_state_after_pop();\n+\tuint8_t fifo_events_pop();\n+\tvoid fifo_state_after_push(uint8_t state);\n+\tvoid fifo_events_push(uint8_t event);\n+\n+\tuint8_t m_memcache[0x800]{};\n+\n+\tenum memcache_seq : uint32_t\n+\t{\n+\t\tBITS_EMPTY = 0,\n+\t\tBITS_0     = 0x0000ff00,\n+\t\tBITS_0_1   = 0x00ff0001, // Command 0xa0 store bit 0\n+\t\t\t\t\t\t\t\t // Command 0xa1 move to next bit?\n+\t\tBITS_0_1_7 = 0xff000107, // Reset\n+\t\tBITS_6     = 0x0000ff06, // Query (1 if ready for next events)\n+\t\tBITS_6_7   = 0x00ff0607, // Query (0 if events parsed successfully)\n+\t\t\t\t\t\t\t\t // Command 0xa0 store bit 1\n+\t\t\t\t\t\t\t\t // Command 0xa1 load bit\n+\t\tBITS_7     = 0x0000ff07,\n+\t\tBITS_7_1   = 0x00ff0701, // Start command\n+\t\tBITS_ERR   = 0xffffffff,\n+\t};\n+\tuint32_t m_memcache_seq;\n+\n+\tenum memcache_state : uint8_t\n+\t{\n+\t\tIDLE = 0,\n+\t\tREAD_COMMAND,\n+\t\tREAD_ADDRESS_BYTE,\n+\t\tREAD_ACK,\n+\t\tREAD_RAM_BYTE,\n+\t\tWRITE_RAM_BYTE,\n+\t\tCONSUME_UNTIL_IDLE,\n+\t};\n+\tuint32_t m_memcache_addr;\n+\tuint8_t m_memcache_data;\n+\tuint8_t m_memcache_i;\n+\tuint8_t m_memcache_state;\n+\n+\tuint8_t m_fifo_state_after_data[MEMCACHE_FIFO_MAX_SIZE]{};\n+\tuint16_t m_fifo_state_after_size = 0;\n+\tuint16_t m_fifo_state_after_head = 0;\n+\tuint16_t m_fifo_state_after_tail = 0;\n+\n+\tuint8_t m_fifo_events_data[MEMCACHE_FIFO_MAX_SIZE]{};\n+\tuint16_t m_fifo_events_size = 0;\n+\tuint16_t m_fifo_events_head = 0;\n+\tuint16_t m_fifo_events_tail = 0;\n };\n \n-void sega_beena_state::beena_arm7_map(address_map &map)\n+/*\n+    FIXME: All of these have guessed timing.\n+\n+    Animation durations in hardware captures suggest that an IRQ is raised every VBLANK.\n+    Palette changes can occur for each scanline via FIQ callback set by games.\n+\n+    These variables in BIOS RAM may be worth following:\n+    - 0x20003ee0: FIQ enabled;\n+    - 0x20003ee1: IRQ enabled;\n+    Along with pairs used by interrupt callbacks:\n+    - 0x20003ed1..0x20003ed4: status;\n+    - 0x20003ee2..0x20003ee5: 1 if busy?\n+*/\n+TIMER_DEVICE_CALLBACK_MEMBER(sega_9h0_0008_state::scanline)\n {\n-\tmap(0x00000000, 0x000001ff).rom().bankr(\"cartbank\");\n-\tmap(0x80000000, 0x807fffff).rom().bankr(\"cartbank\");\n+\tirq_wait_speedup();\n+\n+\t// Pixel clock approximation derived from palette lookup tables applied per scanline,\n+\t// used for gradient backgrounds in \"Partner In TV\".\n+\t//\n+\t// FIXME:\n+\t// - Rainbow arc in \"Cars 2\" before bridge section is not rendered;\n+\t// - Foreground drop animation in \"Cooking Beena\" title screen is skipped;\n+\tm_scanline = param / m_scale;\n+\tm_video_regs[0x4/4] = 0x10000 * (20 + m_scanline);\n+\n+\tuint8_t irq_frequency = m_io_cpu_config->read() & 0xf;\n+\tif ((m_scanline % (SCREEN_H / irq_frequency)) == 0) {\n+\t\tuint8_t video_status = (m_video_regs[0] & 0x10) ^ 0x10;\n+\t\tm_video_regs[0] = (m_video_regs[0] & 0xffffffef) | video_status;\n+\n+\t\tupdate_rtc();\n+\n+\t\trequest_irq();\n+\n+\t\t// FIXME: Needed for .au data processing in \"Kazoku Minna no Nouryoku Trainer\"\n+\t\tm_requested_fiq = true;\n+\t}\n+\n+\trequest_fiq();\n }\n \n-void sega_beena_state::machine_start()\n+void sega_9h0_0008_state::irq_wait_speedup()\n {\n-\t// if there's a cart, override the standard mapping\n-\tif (m_cart && m_cart->exists())\n-\t{\n+\tif ((m_io_cpu_config->read() & 0x10) == 0x10) {\n+\t\treturn;\n+\t}\n+\n+\t/*\n+\t    All games execute a busy wait until the next IRQ request is served.\n+\t    This can lead to significant downgrade of emulation speed.\n+\n+\t    The busy wait subroutine is copied to a dynamic location in work RAM,\n+\t    somewhere after 0xc00cc000, but before the stack pointer. r0 stores\n+\t    an address to a variable that is updated by the game's IRQ callback\n+\t    when video data has been processed:\n+\n+\t        e3 a0 30 01   mov     r3,#0x1\n+\t        e5 c0 30 00   strb    r3,[r0,#0x0]\n+\t        e5 d0 30 00   ldrb    r3,[r0,#0x0]\n+\t        e3 53 00 00   cmp     r3,#0x0\n+\t        1a ff ff fc   bne     LAB_c00ce8bc\n+\n+\t    Epilogue is the following for most games:\n+\n+\t        e5 9f 30 00   ldr     r3,[DAT_c00ce8d0] = 80000000h\n+\t        e5 93 f0 08   ldr     pc=>LAB_c00fff80,[r3,#offset ->SP]\n+\n+\t    But slightly different in early games:\n+\n+\t        e1 2f ff 1e   bx      lr\n+\n+\t    Since this code has a predictable byte signature, we can search\n+\t    in memory to find its exact start address, then consume enough cycles to\n+\t    reduce the number of instructions executed until the next IRQ is asserted.\n+\t*/\n+\tif (m_irq_wait_start_addr == UNKNOWN_ADDR) {\n+\t\tif (m_maincpu->pc() > 0xc00cc000 && m_maincpu->pc() < 0xc00fff80) {\n+\t\t\tconst uint32_t IRQ_WAIT_SIGNATURE[] = {\n+\t\t\t\t0xe3a03001,\n+\t\t\t\t0xe5c03000,\n+\t\t\t\t0xe5d03000,\n+\t\t\t\t0xe3530000,\n+\t\t\t\t0x1afffffc\n+\t\t\t};\n+\t\t\tint8_t addr_delta = 8;\n+\t\t\tuint32_t *shared32 = reinterpret_cast<uint32_t *>(m_workram.target());\n+\t\t\tuint32_t candidate_start_addr = m_maincpu->pc() - addr_delta;\n+\t\t\tuint32_t candidate_offset = (candidate_start_addr - 0xc00cc000) / 4;\n+\t\t\tfor (size_t i = 0; i < addr_delta; i++) {\n+\t\t\t\tbool matched = true;\n+\t\t\t\tfor (size_t sig_i = 0; sig_i < 5; sig_i++) {\n+\t\t\t\t\tif (IRQ_WAIT_SIGNATURE[sig_i] != shared32[candidate_offset + i + sig_i]) {\n+\t\t\t\t\t\tmatched = false;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (matched) {\n+\t\t\t\t\tm_irq_wait_start_addr = candidate_start_addr + i;\n+\n+\t\t\t\t\tfor (size_t sig_i = 0; sig_i < 5; sig_i++) {\n+\t\t\t\t\t\tm_maincpu->add_hotspot(candidate_start_addr + i + sig_i * 4);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+static const gfx_layout sega_beena_8bpp_layout =\n+{\n+\t16,16,\n+\t0x800, // 0x800 * 0x10 * 0x10 = 0x80000 (tile data mapping size)\n+\t8,\n+\t{ STEP8(0, 1) },\n+\t{ STEP16(0, 8) },\n+\t{ STEP16(0, 8*16) },\n+\t8*16*16\n+};\n+\n+void sega_9h0_0008_state::beena_arm7_map(address_map &map)\n+{\n+\t// BIOS internal ROM\n+\tmap(0x00000000, 0x0001ffff).rom();\n+\t// BIOS internal RAM\n+\tmap(0x20000000, 0x20003fff).ram();\n+\n+\t// FIXME: Need to confirm upper bounds / mirrored ranges on hardware, some return inconsistent reads\n+\t// Video (registers, palette, sprite data...)\n+\tmap(0x40000000, 0x400000ff).mirror(0xff00).rw(FUNC(sega_9h0_0008_state::video_reg_r), FUNC(sega_9h0_0008_state::video_reg_w));\n+\tmap(0x40010000, 0x400103ff).ram().share(\"tilemap_sprites\");\n+\tmap(0x40010400, 0x4001ffff).ram();\n+\tmap(0x40020000, 0x400201ff).w(FUNC(sega_9h0_0008_state::pal_w)).share(\"paletteram\");\n+\tmap(0x40020200, 0x4002ffff).ram();\n+\tmap(0x40030000, 0x400302ff).ram().share(\"tilemap_scroll_y\");\n+\tmap(0x40030300, 0x4003ffff).ram();\n+\n+\t// I/O (registers, pages, pads, pen...)\n+\tmap(0x50000000, 0x5000000f).mirror(0xfff0).ram(); // Unknown\n+\tmap(0x50010000, 0x5001003f).mirror(0xffc0).lrw32(\n+\t\tNAME([this](offs_t offset) {\n+\t\t\tLOG(\"audio_pcm_reg_r @ %08x: addr=%08x data=%08x\\n\", m_maincpu->pc(), offset * 4, m_pcm->reg_r(offset));\n+\n+\t\t\treturn m_pcm->reg_r(offset);\n+\t\t}),\n+\t\tNAME([this](offs_t offset, uint32_t data, uint32_t mem_mask) {\n+\t\t\tLOG(\"audio_pcm_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t\t\t// FIXME: Games hang during .au data processing unless FIQ requests are served,\n+\t\t\t// review this after playback is implemented\n+\t\t\tif (offset == 0x10/4) {\n+\t\t\t\tif (data != 0) {\n+\t\t\t\t\tm_requested_fiq = true;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tm_pcm->reg_w(offset, data, mem_mask);\n+\t\t}));\n+\tmap(0x50020000, 0x5002007f).mirror(0xff80).r(FUNC(sega_9h0_0008_state::io_sensors_r)).share(\"io_sensor_regs\");\n+\tmap(0x50030000, 0x500300ff).mirror(0xff00).lrw32(\n+\t\tNAME([this](offs_t offset) {\n+\t\t\tLOG(\"m_io_auxiliary_regs_r @ %08x: addr=%08x\\n\", m_maincpu->pc(), offset * 4);\n+\n+\t\t\tif (offset == 0x0c/4) {\n+\t\t\t\treturn io_expansion_r();\n+\t\t\t}\n+\t\t\treturn offset == 0xbc/4 ? io_memcache_r() : m_io_auxiliary_regs[offset];\n+\t\t}),\n+\t\tNAME([this](offs_t offset, uint32_t data, uint32_t mem_mask) {\n+\t\t\tLOG(\"m_io_auxiliary_regs_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t\t\tCOMBINE_DATA(&m_io_auxiliary_regs[offset]);\n+\t\t\tif (offset == 0xc0/4) {\n+\t\t\t\tfifo_events_push(data);\n+\t\t\t}\n+\t\t})).share(\"io_auxiliary_regs\");\n+\n+\t// Realtime clock\n+\tmap(0x60000000, 0x600000ff).mirror(0xff00).rw(FUNC(sega_9h0_0008_state::rtc_r), FUNC(sega_9h0_0008_state::rtc_w));\n+\tmap(0x60010000, 0x6003ffff).ram(); // Unknown\n+\n+\t// MIDI\n+\tmap(0x70000000, 0x7000001f).mirror(0xffe0).rw(FUNC(sega_9h0_0008_state::midi_reg_r), FUNC(sega_9h0_0008_state::midi_reg_w));\n+\tmap(0x70010000, 0x7003ffff).ram(); // Unknown\n+\n+\t// Game Mask ROM\n+\tmap(ROM_MASK_BASE, ROM_MASK_BASE + 0x7fffff).mirror(0x800000).lr8(NAME([]() { return 0xff; }));\n+\n+\t// Game NOR Flash ROM\n+\t// Some games have an unreferenced handler that jumps to 0xa0ffc000;\n+\tmap(ROM_FLASH_BASE, ROM_FLASH_BASE + 0x7fffff).mirror(0x800000).lr8(NAME([]() { return 0xff; }));\n+\n+\t// Direct bitmap with 2-byte BGR555 colors per pixel, same as tile palettes. Scaling also applied.\n+\t// The bitmap size is checked by games to be `w * h <= 0x63000`, so we allocate `0x63000 * 2 = 0xc6000`.\n+\tmap(0xc0000000, 0xc00c5fff).ram().share(\"bitmap\");\n+\t// Tilemap data for 2 layers (background and foreground).\n+\tmap(0xc00c6000, 0xc00c68ff).ram().share(\"tilemap_scroll_x\");\n+\t// Work RAM for tilemap data\n+\tmap(0xc00c6900, 0xc00c7fff).ram();\n+\tmap(0xc00c8000, 0xc00c9fff).ram().share(\"tilemap_fg\");\n+\tmap(0xc00ca000, 0xc00cbfff).ram().share(\"tilemap_bg\");\n+\t// Work RAM for general use + stack (usually starts at 0xc00fff80)\n+\tmap(0xc00cc000, 0xc00fffff).ram().share(\"workram\");\n+\t// Tile data for 2 layers (background and foreground) + sprites\n+\tmap(0xc0100000, 0xc017ffff).ram().rw(FUNC(sega_9h0_0008_state::tiles_layers_r), FUNC(sega_9h0_0008_state::tiles_layers_w));\n+\tmap(0xc0180000, 0xc01fffff).ram().rw(FUNC(sega_9h0_0008_state::tiles_sprites_r), FUNC(sega_9h0_0008_state::tiles_sprites_w));\n+}\n+\n+void sega_9h0_0008_state::update_sensors(offs_t offset)\n+{\n+\t// Power status\n+\t// - bit 1 = 0: a \"low battery\" screen shows up;\n+\t// - bit 2 = 0: game code goes into infinite loop, maybe power button pressed?\n+\tif (offset == 0x38/4) {\n+\t\tm_io_sensor_regs[offset] = 3;\n+\t}\n+}\n+\n+uint32_t sega_9h0_0008_state::io_sensors_r(offs_t offset)\n+{\n+\tif (!machine().side_effects_disabled()) {\n+\t\tupdate_sensors(offset);\n+\t}\n+\n+\treturn m_io_sensor_regs[offset];\n+}\n+\n+uint32_t sega_9h0_0008_state::video_reg_r(offs_t offset)\n+{\n+\treturn m_video_regs[offset];\n+}\n+\n+void sega_9h0_0008_state::video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tLOG(\"video_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t/*\n+\t   Video control\n+\t   - bit 1..4: rendering toggles\n+\t     - 0x1: enable rendering\n+\t     - 0x2: enable fg layer\n+\t     - 0x4: enable bg layer\n+\t   - bit 5..8: scroll data entries\n+\t     - 0x10: 0x900 for x-axis scanlines\n+\t     - 0x20:  0x90 for x-axis tiles\n+\t     - 0x40:  0xb4 for y-axis tiles\n+\t   - bit 9..12: video format\n+\t     - 0x100: vertical frequency: 60Hz (NTSC) if 0, 50Hz (PAL) if 1\n+\t     - 0x200: mode: 352x240 (scales 2x from top-left corner) if 0, 704x480 if 1\n+\t   - bit 13..16: direct bitmap render priority\n+\t     - 0x0000: before overlay sprites\n+\t     - 0x1000: before all sprites\n+\t     - 0x2000: before fg layer\n+\t     - 0x3000: before bg and fg layers\n+\t*/\n+\tif (offset == 0x10/4) {\n+\t\tm_scale = ((data & 0x200) == 0) ? 2 : 1;\n+\t}\n+\n+\tCOMBINE_DATA(&m_video_regs[offset]);\n+}\n+\n+uint32_t sega_9h0_0008_state::midi_reg_r(offs_t offset)\n+{\n+\tif (!machine().side_effects_disabled() && offset == 0 && m_midi_busy_count > 0) {\n+\t\tm_midi_busy_count--;\n+\t\treturn 0x2;\n+\t}\n+\n+\treturn m_midi_regs[offset];\n+}\n+\n+void sega_9h0_0008_state::midi_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tLOG(\"midi_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\tswitch (offset) {\n+\t\tcase 0x4/4:\n+\t\t\tif ((data & 5) == 5) {\n+\t\t\t\t// TODO: MIDI all notes off\n+\t\t\t}\n+\t\t\tbreak;\n+\t\tcase 0x8/4:\n+\t\t\t// TODO: MIDI buffered event\n+\t\t\t// Games wait before sending additional notes,\n+\t\t\t// checking if audio status is busy then ready.\n+\t\t\tm_midi_busy_count = 1;\n+\t\t\tbreak;\n+\t\tcase 0xc/4:\n+\t\t\t// TODO: MIDI passthrough event\n+\t\t\tbreak;\n+\t\tcase 0x18/4:\n+\t\t\t// TODO: MIDI update_divisor\n+\t\t\tbreak;\n+\t}\n+\n+\tCOMBINE_DATA(&m_midi_regs[offset]);\n+}\n+\n+void sega_9h0_0008_state::install_game_rom()\n+{\n+\t// Nothing (overriden by each system)\n+}\n+\n+void sega_9h0_0008_state::machine_start()\n+{\n+\tinstall_game_rom();\n+\n+\tsave_item(NAME(m_requested_fiq));\n+\tsave_item(NAME(m_irq_wait_start_addr));\n+\n+\tsave_item(NAME(m_fifo_state_after_data));\n+\tsave_item(NAME(m_fifo_state_after_size));\n+\tsave_item(NAME(m_fifo_state_after_head));\n+\tsave_item(NAME(m_fifo_state_after_tail));\n+\n+\tsave_item(NAME(m_fifo_events_data));\n+\tsave_item(NAME(m_fifo_events_size));\n+\tsave_item(NAME(m_fifo_events_head));\n+\tsave_item(NAME(m_fifo_events_tail));\n+\n+\tm_video_regs = make_unique_clear<uint32_t[]>(0x100/4);\n+\tsave_pointer(NAME(m_video_regs), 0x100/4);\n+\tsave_item(NAME(m_scale));\n+\n+\tm_midi_regs = make_unique_clear<uint32_t[]>(0x20/4);\n+\tsave_pointer(NAME(m_midi_regs), 0x20/4);\n+\tsave_item(NAME(m_midi_busy_count));\n+\n+\tsave_item(NAME(m_pen_previous_input));\n+\tsave_item(NAME(m_pen_target));\n+\tsave_item(NAME(m_effective_page));\n+\n+\tm_cache_layer.allocate(1024, 512);\n+}\n+\n+void sega_9h0_0008_state::video_start()\n+{\n+\tm_cache_palette = std::make_unique<rgb_t[]>(0x100*SCREEN_H);\n+\tfor (int i = 0; i < 0x100 * SCREEN_H; i++) {\n+\t\tm_cache_palette[i] = 0;\n+\t}\n+\tsave_pointer(NAME(m_cache_palette.get()), 0x100*SCREEN_H);\n+\n+\tm_tiles_layers = make_unique_clear<uint8_t[]>(0x80000);\n+\tm_tiles_sprites = make_unique_clear<uint8_t[]>(0x80000);\n+\tsave_pointer(NAME(m_tiles_layers.get()), 0x80000);\n+\tsave_pointer(NAME(m_tiles_sprites.get()), 0x80000);\n+\n+\tm_gfxdecode->set_gfx(0, std::make_unique<gfx_element>(\n+\t\tm_palette, sega_beena_8bpp_layout, m_tiles_layers.get(), 0, 1, 0));\n+\tm_gfxdecode->set_gfx(1, std::make_unique<gfx_element>(\n+\t\tm_palette, sega_beena_8bpp_layout, m_tiles_sprites.get(), 0, 1, 0));\n+}\n+\n+void sega_9h0_0008_state::machine_reset()\n+{\n+\tm_requested_fiq = false;\n+\tm_irq_wait_start_addr = UNKNOWN_ADDR;\n+\n+\tmemset(m_video_regs.get(), 0, 0x100);\n+\tm_video_regs[0x10/4] = 0x200; // Tiles are 1x scaled by default.\n+\tm_scale = 1;\n+\tm_scanline = 0;\n+\n+\tbool is_video_connected = m_io_video_config->read() == 0;\n+\tif (!is_video_connected) {\n+\t\tm_video_regs[0] |= 0x00000200;\n+\t}\n+\n+\tmemset(m_midi_regs.get(), 0, 0x20);\n+\tm_midi_busy_count = 0;\n+\n+\tm_io_sensor_regs[0] = 7; // Pen is making contact with the target surface.\n+\tm_io_sensor_regs[0x2c/4] = 0xffffffff; // Pages 1 to 4 are closed.\n+\tm_io_sensor_regs[0x30/4] = 0x00ffffff; // Pages 5 to 6 are closed.\n+\tm_pen_previous_input = 0;\n+\tm_pen_target = 0;\n+\tm_effective_page = 0;\n+\n+\tm_memcache_addr = 0;\n+\tm_memcache_data = 0;\n+\tm_memcache_i = 0;\n+\tm_memcache_seq = BITS_EMPTY;\n+\tm_memcache_state = IDLE;\n+\n+\tm_fifo_state_after_size = 0;\n+\tm_fifo_state_after_head = 0;\n+\tm_fifo_state_after_tail = 0;\n+\n+\tupdate_rtc();\n+}\n+\n+void sega_9h0_0008_state::device_post_load()\n+{\n+\tm_gfxdecode->gfx(0)->mark_all_dirty();\n+\tm_gfxdecode->gfx(1)->mark_all_dirty();\n+}\n+\n+uint8_t sega_9h0_0008_state::fifo_state_after_pop()\n+{\n+\tuint8_t state = m_fifo_state_after_data[m_fifo_state_after_head];\n+\tm_fifo_state_after_head = (m_fifo_state_after_head + 1) & (MEMCACHE_FIFO_MAX_SIZE - 1);\n+\tm_fifo_state_after_size--;\n+\treturn state;\n+}\n+\n+uint8_t sega_9h0_0008_state::fifo_events_pop()\n+{\n+\tuint8_t event = m_fifo_events_data[m_fifo_events_head];\n+\tm_fifo_events_head = (m_fifo_events_head + 1) & (MEMCACHE_FIFO_MAX_SIZE - 1);\n+\tm_fifo_events_size--;\n+\treturn event;\n+}\n+\n+void sega_9h0_0008_state::fifo_state_after_push(uint8_t state)\n+{\n+\t// trash old data\n+\tif (m_fifo_state_after_size > MEMCACHE_FIFO_MAX_SIZE - 1) {\n+\t\tfifo_state_after_pop();\n+\t}\n+\n+\tm_fifo_state_after_data[m_fifo_state_after_tail] = state;\n+\tm_fifo_state_after_tail = (m_fifo_state_after_tail + 1) & (MEMCACHE_FIFO_MAX_SIZE - 1);\n+\tm_fifo_state_after_size++;\n+}\n+\n+void sega_9h0_0008_state::fifo_events_push(uint8_t event)\n+{\n+\t// trash old data\n+\tif (m_fifo_events_size > MEMCACHE_FIFO_MAX_SIZE - 1) {\n+\t\tfifo_events_pop();\n+\t}\n+\n+\tm_fifo_events_data[m_fifo_events_tail] = event;\n+\tm_fifo_events_tail = (m_fifo_events_tail + 1) & (MEMCACHE_FIFO_MAX_SIZE - 1);\n+\tm_fifo_events_size++;\n+}\n+\n+void sega_9h0_0008_state::memcache_advance(uint32_t &status)\n+{\n+\tuint8_t event = fifo_events_pop();\n+\n+\tstatus = event == 6 ? 1 : 0;\n+\n+\tswitch (m_memcache_seq) {\n+\t\tcase BITS_0:\n+\t\t\tm_memcache_seq = event == 1 ? BITS_0_1 : BITS_ERR;\n+\t\t\tbreak;\n+\t\tcase BITS_0_1:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_0_1_7 : (event == 6 ? BITS_6 : BITS_ERR);\n+\t\t\tbreak;\n+\t\tcase BITS_6:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_6_7 : (event == 0 ? BITS_0 : BITS_ERR);\n+\t\t\tbreak;\n+\t\tcase BITS_7:\n+\t\t\tm_memcache_seq = event == 1 ? BITS_7_1 : BITS_ERR;\n+\t\t\tbreak;\n+\t\tcase BITS_EMPTY:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_7 : (event == 6 ? BITS_6 : (event == 0 ? BITS_0 : BITS_ERR));\n+\t\t\tbreak;\n+\t\tdefault:\n+\t\t\tm_memcache_seq = BITS_ERR;\n+\t}\n+\n+\tLOG(\"memcache seq = %08x\\n\", m_memcache_seq);\n+}\n+\n+void sega_9h0_0008_state::memcache_parse_data_bit(uint32_t &status)\n+{\n+\tif (m_memcache_seq == BITS_0_1) {\n+\t\t// After a command has been ack'd, we might reset instead of parse the command's data bits.\n+\t\t// Due to both sequences starting with the same prefix, we have to bailout on the shorter\n+\t\t// sequence if the lookahead matches the longer sequence.\n+\t\tif (m_fifo_events_size && m_fifo_events_data[m_fifo_events_head] == 7) {\n+\t\t\tLOG(\"memcache READ_COMMAND 0 1 skipped\\n\");\n+\t\t\treturn;\n+\t\t}\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_data = (m_memcache_data << 1) | 0;\n+\t\tm_memcache_i++;\n+\t} else if (m_memcache_seq == BITS_6_7) {\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_data = (m_memcache_data << 1) | 1;\n+\t\tm_memcache_i++;\n+\t} else if (m_memcache_seq == BITS_0_1_7) {\n+\t\tstatus = 1;\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_state = IDLE;\n+\t\tm_fifo_state_after_size = 0;\n+\t\tm_fifo_state_after_head = 0;\n+\t\tm_fifo_state_after_tail = 0;\n+\t\tLOG(\"memcache READ_COMMAND 0 1 7 -> IDLE\\n\");\n+\t}\n+}\n+\n+uint32_t sega_9h0_0008_state::io_expansion_r()\n+{\n+\treturn 0; // TODO\n+}\n+\n+uint32_t sega_9h0_0008_state::io_memcache_r()\n+{\n+\t/*\n+\t    A non-memory mapped cache can be interfaced with data address 0x500300c0,\n+\t    while the status after parsing this data (events) can be read at 0x500300bc.\n+\n+\t    The cache stores RAM values in range 0xc00c6400..0xc00c6fff.\n+\n+\t    During I/O init, this cache is cleared.\n+\n+\t    During Test Mode, some memory integrity checks are carried out,\n+\t    consisting of reading RAM to the cache, then writing those cached bytes\n+\t    at the same RAM address, which is then compared with the expected values.\n+\n+\t    The communication protocol consists of sending sequences of events,\n+\t    contextual to the command that is currently being parsed (which in turn\n+\t    is initiated with a sequence of events).\n+\n+\t    Simplified flow:\n+\n+\t        IDLE\n+\t        READ_COMMAND (includes RAM address bits 8..12)\n+\t            if 0xa0:\n+\t                READ_ADDRESS_BYTE (RAM address bits 0..7)\n+\t                READ_RAM_BYTE (RAM value bits 0..7)\n+\t            if 0xa1:\n+\t                WRITE_RAM_BYTE (assumed to be at previous read RAM address)\n+\n+\t    Some of these sequences can be followed by acknowledgements (READ_ACK), to\n+\t    ensure sent events were parsed as expected, otherwise games bailout from the\n+\t    session. Always ends with the same sequence (BITS_0_1_7).\n+\t*/\n+\tuint32_t status = 0;\n+\n+\tif (machine().side_effects_disabled()) {\n+\t\treturn status;\n+\t}\n+\n+\twhile (m_fifo_events_size) {\n+\t\tmemcache_advance(status);\n+\n+\t\tbool is_memcache_disabled = (m_io_cpu_config->read() & 0x40) == 0x40;\n+\t\tif (is_memcache_disabled) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tswitch (m_memcache_state) {\n+\t\t\tcase IDLE:\n+\t\t\t\tif (m_memcache_seq == BITS_6) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\t\t\tLOG(\"memcache IDLE stat\\n\");\n+\t\t\t\t} else if (m_memcache_seq == BITS_7_1) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = READ_COMMAND;\n+\t\t\t\t\tLOG(\"memcache IDLE -> READ_COMMAND\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_COMMAND:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tLOG(\"memcache READ_COMMAND byte data = %08x\\n\", m_memcache_data);\n+\t\t\t\t\tm_memcache_state = READ_ACK;\n+\t\t\t\t\tm_memcache_addr = (((m_memcache_data & 0xe) >> 1) << 8) | (m_memcache_addr & 0xff);\n+\t\t\t\t\tLOG(\"memcache READ_COMMAND addr & 0xf00 = %08x\\n\", m_memcache_addr);\n+\t\t\t\t\tif ((m_memcache_data & 0xa1) == 0xa0) {\n+\t\t\t\t\t\tfifo_state_after_push(READ_ADDRESS_BYTE);\n+\t\t\t\t\t\tfifo_state_after_push(READ_ACK);\n+\t\t\t\t\t\tfifo_state_after_push(READ_RAM_BYTE);\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND 0xa0 -> READ_ACK\\n\");\n+\t\t\t\t\t} else if ((m_memcache_data & 0xa1) == 0xa1) {\n+\t\t\t\t\t\tfifo_state_after_push(WRITE_RAM_BYTE);\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND 0xa1 -> READ_ACK\\n\");\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\t\t\t\tm_fifo_state_after_size = 0;\n+\t\t\t\t\t\tm_fifo_state_after_head = 0;\n+\t\t\t\t\t\tm_fifo_state_after_tail = 0;\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND -> CONSUME_UNTIL_IDLE (unknown command?)\\n\");\n+\t\t\t\t\t}\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_ACK:\n+\t\t\t\tif (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = fifo_state_after_pop();\n+\t\t\t\t\tLOG(\"memcache READ_ACK\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_ADDRESS_BYTE:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tm_memcache_addr |= m_memcache_data;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_state = fifo_state_after_pop();\n+\t\t\t\t\tLOG(\"memcache READ_ADDRESS_BYTE addr = %08x\\n\", m_memcache_addr);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_RAM_BYTE:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_seq == BITS_7_1) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = READ_COMMAND;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE -> READ_COMMAND (interrupted?)\\n\");\n+\t\t\t\t}\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE [%08x]=>%02x\\n\", m_memcache_addr, m_memcache_data);\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE effective addr = %08x\\n\", 0xc00c6400 + 0x100 + m_memcache_addr);\n+\t\t\t\t\tm_memcache[m_memcache_addr] = m_memcache_data;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\n+\t\t\t\t\t// Later games (e.g. \"Pocket Monsters Best Wishes\") optimize reading the next RAM bytes\n+\t\t\t\t\t// and just store one after the other, skipping READ_COMMAND + READ_ADDRESS_BYTE sequences.\n+\t\t\t\t\tm_memcache_state = READ_ACK;\n+\t\t\t\t\tm_fifo_state_after_size = 0;\n+\t\t\t\t\tm_fifo_state_after_head = 0;\n+\t\t\t\t\tm_fifo_state_after_tail = 0;\n+\t\t\t\t\tfifo_state_after_push(READ_RAM_BYTE);\n+\t\t\t\t\tm_memcache_addr++;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase WRITE_RAM_BYTE:\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tif (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE ACK\\n\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (m_memcache_seq == BITS_0_1) {\n+\t\t\t\t\tif (m_fifo_events_size && m_fifo_events_data[m_fifo_events_head] == 7) {\n+\t\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE 0 1 skipped\\n\");\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_addr++;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE next addr %08x\\n\", m_memcache_addr);\n+\t\t\t\t} else if (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\tstatus = (m_memcache[m_memcache_addr] >> (7 - m_memcache_i)) & 1;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE read addr [%08x]=>(%08x >> %02x) & 1 = %02x\\n\",\n+\t\t\t\t\t\t\tm_memcache_addr,\n+\t\t\t\t\t\t\tm_memcache[m_memcache_addr],\n+\t\t\t\t\t\t\tm_memcache_i,\n+\t\t\t\t\t\t\tstatus);\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_i++;\n+\t\t\t\t} else if (m_memcache_seq == BITS_0_1_7) {\n+\t\t\t\t\tstatus = 1;\n+\t\t\t\t\tm_memcache_addr = 0;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = IDLE;\n+\t\t\t\t\tm_fifo_state_after_size = 0;\n+\t\t\t\t\tm_fifo_state_after_head = 0;\n+\t\t\t\t\tm_fifo_state_after_tail = 0;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE 0 1 7 -> IDLE\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase CONSUME_UNTIL_IDLE:\n+\t\t\t\tif (m_memcache_seq == BITS_0_1_7) {\n+\t\t\t\t\tstatus = 1;\n+\t\t\t\t\tm_memcache_addr = 0;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = IDLE;\n+\t\t\t\t\tLOG(\"memcache CONSUME_UNTIL_IDLE 0 1 7 -> IDLE\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t}\n+\n+\t\tif (m_memcache_seq == BITS_ERR) {\n+\t\t\t// Caught unexpected events, so clear all state, and try to resync at next reset bits.\n+\t\t\tm_memcache_addr = 0;\n+\t\t\tm_memcache_data = 0;\n+\t\t\tm_memcache_i = 0;\n+\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\tm_fifo_state_after_size = 0;\n+\t\t\tm_fifo_state_after_head = 0;\n+\t\t\tm_fifo_state_after_tail = 0;\n+\t\t\tLOG(\"memcache BITS_ERR -> CONSUME_UNTIL_IDLE\\n\");\n+\t\t}\n+\t}\n+\n+\treturn status;\n+}\n+\n+uint32_t sega_9h0_0008_state::rtc_r(offs_t offset)\n+{\n+\treturn m_rtc[offset];\n+}\n+\n+void sega_9h0_0008_state::rtc_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tCOMBINE_DATA(&m_rtc[offset]);\n+\tLOG(\"rtc_w @ %08x [%02x]=%08x\\n\", m_maincpu->pc(), offset, data);\n+}\n+\n+void sega_9h0_0008_state::pal_w(offs_t offset, uint16_t data, uint16_t mem_mask)\n+{\n+\tuint16_t *shared16 = reinterpret_cast<uint16_t *>(m_paletteram.target());\n+\tCOMBINE_DATA(&shared16[BYTE_XOR_BE(offset)]);\n+\n+\tuint16_t pal_entry = shared16[BYTE_XOR_BE(offset)];\n+\tuint8_t r, g, b;\n+\tr = (pal_entry & 0x001f) >> 0;\n+\tg = (pal_entry & 0x03e0) >> 5;\n+\tb = (pal_entry & 0x7c00) >> 10;\n+\trgb_t color = rgb_t(pal5bit(r), pal5bit(g), pal5bit(b));\n+\tm_cache_palette[m_scanline * 0x100 + offset] = color;\n+\tm_palette->set_pen_color(offset, color);\n+\tLOG(\"m_cache_palette[%d / m_scale * 0x100 + %04x] = %04x (%04x)\\n\", m_scanline, offset, color, pal_entry);\n+\n+\tm_requested_fiq = true;\n+}\n+\n+uint8_t sega_9h0_0008_state::tiles_layers_r(offs_t offset)\n+{\n+\treturn m_tiles_layers[offset];\n+}\n+\n+void sega_9h0_0008_state::tiles_layers_w(offs_t offset, uint8_t data)\n+{\n+\tif (m_tiles_layers[offset] != data) {\n+\t\tm_tiles_layers[offset] = data;\n+\t\tm_gfxdecode->gfx(0)->mark_dirty(offset/(16*16));\n+\t}\n+}\n+\n+uint8_t sega_9h0_0008_state::tiles_sprites_r(offs_t offset)\n+{\n+\treturn m_tiles_sprites[offset];\n+}\n+\n+void sega_9h0_0008_state::tiles_sprites_w(offs_t offset, uint8_t data)\n+{\n+\tif (m_tiles_sprites[offset] != data) {\n+\t\tm_tiles_sprites[offset] = data;\n+\t\tm_gfxdecode->gfx(1)->mark_dirty(offset/(16*16));\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered)\n+{\n+\tif (!is_active) {\n+\t\treturn; // Disabled\n+\t}\n+\n+\tif ((m_video_regs[0x10/4] & 0x30) == 0x30) {\n+\t\tdraw_layer_scanlines(bitmap, cliprect, tilemap, scroll_idx, is_overlay_rendered);\n+\t} else {\n+\t\tdraw_layer_tiles(bitmap, cliprect, tilemap, scroll_idx, is_overlay_rendered);\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered)\n+{\n+\t// Bitplane area =  1024x512 (64x32 tiles), matches tile data mapping entries (64 * 32 = 0x800).\n+\t//  Visible area =   704x480 (44x30 tiles), offset by +10 tiles in x-axis and +2 tiles in y-axis.\n+\t//  Tilemap area = 1024x1024 (64x64 tiles), all these off-screen tiles must be considered for scrolling.\n+\tfor (size_t offset = 0; offset < 0x2000/2; offset++) {\n+\t\tint32_t y = ((offset / 64) - 2) * 16;\n+\t\tint32_t x = ((offset % 64) - 10) * 16;\n+\n+\t\tuint16_t scroll_x_idx = scroll_idx;\n+\t\tuint16_t scroll_y_idx = scroll_idx;\n+\t\tuint8_t entry_size = 4; // 2 int16_t values, 1 for each tile layer\n+\t\tif (y >= 0 && y < (0x90 / entry_size) * 16) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x20) == 0x20) {\n+\t\t\t\tscroll_x_idx += y/16 * 2;\n+\t\t\t}\n+\t\t}\n+\t\tif (x >= 0 && x < (0xb4 / entry_size) * 16) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x40) == 0x40) {\n+\t\t\t\tscroll_y_idx += x/16 * 2;\n+\t\t\t}\n+\t\t}\n+\n+\t\tx = scroll_x(x, scroll_x_idx);\n+\t\ty = scroll_y(y, scroll_y_idx);\n+\n+\t\tuint16_t tile = tilemap[BYTE_XOR_BE(offset)];\n+\t\tuint16_t tile_transform = (tile & 0xf000) >> 12;\n+\t\tuint16_t flip_x = (tile_transform & 1) != 0;\n+\t\tuint16_t flip_y = (tile_transform & 2) != 0;\n+\t\tbool is_overlay = (tile_transform & 4) != 0;\n+\t\tif (is_overlay != is_overlay_rendered) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint16_t tile_idx = tile & 0x7ff;\n+\t\tbool is_sprite_tile_data_used = tile & 0x800;\n+\t\tgfx_element *gfx = m_gfxdecode->gfx(is_sprite_tile_data_used ? 1 : 0);\n+\t\tconst pen_t *paldata = m_palette->pens() + gfx->colorbase() + gfx->granularity() * (7 % gfx->colors());\n+\t\tconst uint8_t scale = m_scale;\n+\t\tdrawgfxzoom_with_pixel_op(gfx, bitmap, cliprect,\n+\t\t\ttile_idx,\n+\t\t\tflip_x,\n+\t\t\tflip_y,\n+\t\t\tx * m_scale,\n+\t\t\ty * m_scale,\n+\t\t\t0x10000 * m_scale,\n+\t\t\t0x10000 * m_scale,\n+\t\t\t[scale, paldata](int32_t y, const std::unique_ptr<rgb_t[]> &palcache, uint32_t &destp, const uint8_t &srcp) {\n+\t\t\t\tif (srcp != 0) {\n+\t\t\t\t\trgb_t color = palcache[y / scale * 0x100 + srcp];\n+\t\t\t\t\tif (color == 0) {\n+\t\t\t\t\t\tcolor = paldata[srcp];\n+\t\t\t\t\t}\n+\t\t\t\t\tdestp = color;\n+\t\t\t\t}\n+\t\t\t});\n+\t}\n+}\n+\n+/**\n+ * Similar to gfx_element::drawgfxzoom_core(), but uses a pixel_op that depends on the current y-position to render,\n+ * in order to apply dedicated palettes for each scanline. These palettes are cached and passed directly\n+ * as a parameter instead of being captured in the pixel_op lambda, to avoid degraded performance from large copies.\n+ */\n+template <typename BitmapType, typename FunctionClass>\n+inline void sega_9h0_0008_state::drawgfxzoom_with_pixel_op(gfx_element *gfx, BitmapType &dest, const rectangle &cliprect, uint32_t code, int flipx, int flipy, int32_t destx, int32_t desty, uint32_t scalex, uint32_t scaley, FunctionClass pixel_op)",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Probably better to make `pixel_op` a universal reference to make it easier for the compiler to avoid unnecessary copies, like `FunctionClass &&pixel_op`.",
                "created_at": "2023-10-26T21:29:00Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373835078",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373835078"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373835078"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373835078/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 1176,
                "original_start_line": 1176,
                "start_side": "RIGHT",
                "line": 1177,
                "original_line": 1177,
                "side": "RIGHT",
                "original_position": 1176,
                "position": 1176,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:29:00Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471729",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373837220",
                "pull_request_review_id": 1700658148,
                "id": 1373837220,
                "node_id": "PRRC_kwDOANo_SM5R4xek",
                "diff_hunk": "@@ -71,131 +102,2109 @@\n         B18 A8\n         B19 A19\n         B20 A20\n-        B21 N/C\n+        B21 WE (for Flashrom)\n         B22 A21\n         B23 VCC\n         B24 N/C\n         B25 GND\n \n+    Storyware\n+    ---------\n+\n+    Although no booklet artwork is rendered, toggling input port 'Pen Target'\n+    switches between mapping pen coordinates to the tablet or the Storyware.\n+\n+    Test Mode\n+    ---------\n+\n+    Most games contain a hidden test mode that can be activated by the same inputs:\n+\n+        Pages 1, 3, and 5 covered, the others exposed;\n+        Left red button held down;\n+\n+    If the machine configuration 'Test Mode Pages' is enabled, the driver forces this page setup,\n+    so that the player only needs to hold the left red button at reset to activate this mode.\n+\n+    Toggling 'Memory Cache' allows the player to observe differences between test failure and success.\n+\n *******************************************************************************/\n \n #include \"emu.h\"\n \n #include \"bus/generic/slot.h\"\n #include \"bus/generic/carts.h\"\n-#include \"cpu/arm7/arm7.h\"\n+#include \"cpu/arm7/ap2010cpu.h\"\n+#include \"machine/clock.h\"\n+#include \"machine/timer.h\"\n+#include \"sound/ap2010pcm.h\"\n \n+#include \"crsshair.h\"\n+#include \"emupal.h\"\n+#include \"render.h\"\n #include \"softlist_dev.h\"\n+#include \"schedule.h\"\n #include \"speaker.h\"\n #include \"screen.h\"\n \n+#include \"beena.lh\"\n+\n+#define VERBOSE (0)\n+#include \"logmacro.h\"\n \n namespace {\n \n-class sega_beena_state : public driver_device\n+#define SCREEN_W 704\n+#define SCREEN_H 480\n+\n+#define ROM_MASK_BASE 0x80000000\n+#define ROM_FLASH_BASE 0xa0000000\n+#define UNKNOWN_ADDR 0xffffffff\n+\n+#define MEMCACHE_FIFO_MAX_SIZE 0x100\n+\n+class sega_9h0_0008_state : public driver_device\n {\n public:\n-\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\tsega_9h0_0008_state(const machine_config &mconfig, device_type type, const char *tag)\n \t\t: driver_device(mconfig, type, tag)\n-\t\t, m_maincpu(*this, \"arm7\")\n+\t\t, m_maincpu(*this, \"maincpu\")\n+\t\t, m_workram(*this, \"workram\")\n+\t\t, m_pcm(*this, \"pcm\")\n \t\t, m_cart(*this, \"cartslot\")\n \t\t, m_cart_region(nullptr)\n-\t\t, m_bank(*this, \"cartbank\")\n+\t\t, m_screen_main(*this, \"screen\")\n+\t\t, m_gfxdecode(*this, \"gfxdecode\")\n+\t\t, m_palette(*this, \"palette\")\n+\t\t, m_paletteram(*this, \"paletteram\")\n+\t\t, m_tilemap_bg(*this, \"tilemap_bg\")\n+\t\t, m_tilemap_fg(*this, \"tilemap_fg\")\n+\t\t, m_tilemap_scroll_x(*this, \"tilemap_scroll_x\")\n+\t\t, m_tilemap_scroll_y(*this, \"tilemap_scroll_y\")\n+\t\t, m_tilemap_sprites(*this, \"tilemap_sprites\")\n+\t\t, m_bitmap(*this, \"bitmap\")\n+\t\t, m_io_sensor_regs(*this, \"io_sensor_regs\")\n+\t\t, m_io_auxiliary_regs(*this, \"io_auxiliary_regs\")\n+\t\t, m_io_cpu_config(*this, \"CPU_CONFIG\")\n+\t\t, m_io_video_config(*this, \"VIDEO_CONFIG\")\n \t{ }\n \n-\tvoid sega_beena(machine_config &config);\n+\tvoid sega_9h0_0008(machine_config &config);\n \n-private:\n+protected:\n+\tvirtual void device_post_load() override;\n \tvirtual void machine_start() override;\n \tvirtual void machine_reset() override;\n+\tvirtual void video_start() override;\n+\n+\tvirtual void install_game_rom();\n+\tvirtual void update_sensors(offs_t offset);\n \n+\tvoid beena_arm7_map(address_map &map);\n+\n+\tvoid request_irq();\n+\tvoid request_fiq();\n+\n+\tTIMER_DEVICE_CALLBACK_MEMBER(scanline);\n+\tvirtual void update_crosshair(screen_device &screen);\n+\tvoid irq_wait_speedup();\n \tuint32_t screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tuint32_t video_reg_r(offs_t offset);\n+\tvoid video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid pal_w(offs_t offset, uint16_t data, uint16_t mem_mask = ~0);\n+\tuint8_t tiles_layers_r(offs_t offset);\n+\tuint8_t tiles_sprites_r(offs_t offset);\n+\tvoid tiles_layers_w(offs_t offset, uint8_t data);\n+\tvoid tiles_sprites_w(offs_t offset, uint8_t data);\n+\tint32_t scroll_x(int32_t x, uint16_t i);\n+\tint32_t scroll_y(int32_t y, uint16_t i);\n+\tvoid draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered);\n+\tvoid draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered);\n+\tvoid draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tvoid screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tint32_t rescale_alpha_step(uint8_t step);\n+\tconstexpr uint32_t alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r);",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Should this be `static`?  At a glance, it didn\u2019t seem to reference any members.",
                "created_at": "2023-10-26T21:31:21Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373837220",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373837220"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373837220"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373837220/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 227,
                "original_line": 227,
                "side": "RIGHT",
                "original_position": 215,
                "position": 215,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:31:21Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471680",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373830755",
                "pull_request_review_id": 1700658148,
                "id": 1373830755,
                "node_id": "PRRC_kwDOANo_SM5R4v5j",
                "diff_hunk": "@@ -71,131 +102,2109 @@\n         B18 A8\n         B19 A19\n         B20 A20\n-        B21 N/C\n+        B21 WE (for Flashrom)\n         B22 A21\n         B23 VCC\n         B24 N/C\n         B25 GND\n \n+    Storyware\n+    ---------\n+\n+    Although no booklet artwork is rendered, toggling input port 'Pen Target'\n+    switches between mapping pen coordinates to the tablet or the Storyware.\n+\n+    Test Mode\n+    ---------\n+\n+    Most games contain a hidden test mode that can be activated by the same inputs:\n+\n+        Pages 1, 3, and 5 covered, the others exposed;\n+        Left red button held down;\n+\n+    If the machine configuration 'Test Mode Pages' is enabled, the driver forces this page setup,\n+    so that the player only needs to hold the left red button at reset to activate this mode.\n+\n+    Toggling 'Memory Cache' allows the player to observe differences between test failure and success.\n+\n *******************************************************************************/\n \n #include \"emu.h\"\n \n #include \"bus/generic/slot.h\"\n #include \"bus/generic/carts.h\"\n-#include \"cpu/arm7/arm7.h\"\n+#include \"cpu/arm7/ap2010cpu.h\"\n+#include \"machine/clock.h\"\n+#include \"machine/timer.h\"\n+#include \"sound/ap2010pcm.h\"\n \n+#include \"crsshair.h\"\n+#include \"emupal.h\"\n+#include \"render.h\"\n #include \"softlist_dev.h\"\n+#include \"schedule.h\"\n #include \"speaker.h\"\n #include \"screen.h\"\n \n+#include \"beena.lh\"\n+\n+#define VERBOSE (0)\n+#include \"logmacro.h\"\n \n namespace {\n \n-class sega_beena_state : public driver_device\n+#define SCREEN_W 704\n+#define SCREEN_H 480\n+\n+#define ROM_MASK_BASE 0x80000000\n+#define ROM_FLASH_BASE 0xa0000000\n+#define UNKNOWN_ADDR 0xffffffff\n+\n+#define MEMCACHE_FIFO_MAX_SIZE 0x100",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Please change these to `constexpr` variables \u2013 it makes for better debug symbols and less confusing errors.",
                "created_at": "2023-10-26T21:23:40Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373830755",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373830755"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373830755"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373830755/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": 156,
                "original_start_line": 156,
                "start_side": "RIGHT",
                "line": 163,
                "original_line": 163,
                "side": "RIGHT",
                "original_position": 146,
                "position": 146,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:23:40Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471655",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373826500",
                "pull_request_review_id": 1700658148,
                "id": 1373826500,
                "node_id": "PRRC_kwDOANo_SM5R4u3E",
                "diff_hunk": "@@ -10,12 +10,13 @@\n \n **********************************************************************/\n \n-#ifndef MAMESOUND_AP2010PCM_H\n-#define MAMESOUND_AP2010PCM_H\n+#ifndef MAME_SOUND_AP2010PCM_H\n+#define MAME_SOUND_AP2010PCM_H\n \n #pragma once\n \n-#include <queue>\n+// FIXME: Games check this against 0x1ff, but samples are lost with that limit\n+#define FIFO_MAX_SIZE 0x800",
                "path": "src/devices/sound/ap2010pcm.h",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Please turn this into a private class member so it doesn\u2019t pollute the global namespace, like:\r\n```c++\r\n\tstatic inline constexpr FIFO_MAX_SIZE = 0x800;\r\n```\r\ninside the private section of the class.",
                "created_at": "2023-10-26T21:18:37Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373826500",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373826500"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373826500"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373826500/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": 18,
                "start_side": "LEFT",
                "line": 19,
                "original_line": 19,
                "side": "RIGHT",
                "original_position": 13,
                "position": 13,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:18:37Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471688",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373829781",
                "pull_request_review_id": 1700658148,
                "id": 1373829781,
                "node_id": "PRRC_kwDOANo_SM5R4vqV",
                "diff_hunk": "@@ -593,7 +607,7 @@ void sega_9h0_0008_state::video_reg_w(offs_t offset, uint32_t data, uint32_t mem\n \n uint32_t sega_9h0_0008_state::midi_reg_r(offs_t offset)\n {\n-\tif (offset == 0 && m_midi_busy_count > 0) {\n+\tif (!machine().side_effects_disabled() && offset == 0 && m_midi_busy_count > 0) {\n \t\tm_midi_busy_count--;\n \t\treturn 0x2;\n \t}",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "It might be better to change this to:\r\n```c++\r\n\tif (offset == 0 && m_midi_busy_count > 0) {\r\n\t\tif (!machine().side_effects_disabled())\r\n\t\t\tm_midi_busy_count--;\r\n\t\treturn 0x2;\r\n\t}\r\n```\r\nThen it will correctly show the next value that will be read.",
                "created_at": "2023-10-26T21:22:27Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373829781",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373829781"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373829781"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373829781/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": 608,
                "start_side": "RIGHT",
                "line": 613,
                "original_line": 613,
                "side": "RIGHT",
                "original_position": 193,
                "position": 193,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:22:27Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471637",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373825251",
                "pull_request_review_id": 1700658148,
                "id": 1373825251,
                "node_id": "PRRC_kwDOANo_SM5R4ujj",
                "diff_hunk": "@@ -120,60 +121,94 @@ void ap2010pcm_device::reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n \n \tm_stream->update();\n \n-\tuint16_t sample = 0;\n \tswitch (offset) {\n \t\tcase 0x4/4:\n \t\t\tif ((data & 0x78) == 0x78) {\n-\t\t\t\tm_sample_rate = 8000 * (1 + ((data & 2) >> 1));\n+\t\t\t\tm_sample_rate = 8000 * (1 + BIT(data, 1));\n \t\t\t\tm_stream->set_sample_rate(m_sample_rate);\n \n \t\t\t\t// When a new stream starts, stop playback of previous stream\n-\t\t\t\tm_fifo = {};\n+\t\t\t\tm_fifo_size = 0;\n+\t\t\t\tm_fifo_head = 0;\n+\t\t\t\tm_fifo_tail = 0;\n \n \t\t\t\tLOG(\"pcm stream start, rate = %d\\n\", m_sample_rate);\n \t\t\t}\n \t\t\tbreak;\n \t\tcase 0xc/4:\n \t\t\tif (ACCESSING_BITS_16_31) {\n-\t\t\t\tsample = (data & 0xffff0000U) >> 16;\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_push((data & 0xffff0000U) >> 16);\n \t\t\t}\n \t\t\tif (ACCESSING_BITS_0_15) {\n-\t\t\t\tsample = (data & 0x0000ffffU);\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_push(data & 0x0000ffffU);\n \t\t\t}\n \t\t\tbreak;\n \t\t// These samples are always played first\n \t\tcase 0x10/4:\n \t\t\tif (ACCESSING_BITS_16_31) {\n-\t\t\t\tsample = (data & 0xffff0000U) >> 16;\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo_fast.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_fast_push((data & 0xffff0000U) >> 16);\n \t\t\t}\n \t\t\tif (ACCESSING_BITS_0_15) {\n-\t\t\t\tsample = (data & 0x0000ffffU);\n-\t\t\t\tif (sample != 0) {\n-\t\t\t\t\tm_fifo_fast.push(sample);\n-\t\t\t\t}\n+\t\t\t\tfifo_fast_push(data & 0x0000ffffU);\n \t\t\t}\n \t\t\tbreak;\n-\t\t// Panning. FIXME: Identify bits for each channel\n+\t\t// Panning. TODO: Identify bits for each channel\n \t\tcase 0x14/4:\n-\t\t\tLOG(\"pcm pan = %08x\", data);\n+\t\t\tLOG(\"pcm pan = %08x\\n\", data);\n \t\t\tbreak;\n \t\t// Volume control. When video output is disabled, it's possible to adjust volume\n \t\t// using the 2 touch areas on the bottom-left of the Storyware. Range 0..345\n \t\tcase 0x18/4:\n-\t\t\tm_volume = ((data & 0x1ff00000U) >> 20) / 345.0f;\n-\t\t\tif (m_volume > 1.0f) {\n-\t\t\t\tm_volume = 1.0f;\n-\t\t\t}\n-\t\t\tLOG(\"pcm vol = %08x -> %d\", data, m_volume);\n+\t\t\tm_volume = std::max(((data & 0x1ff00000U) >> 20) / 345.0f, 1.0f);\n+\t\t\tLOG(\"pcm vol = %08x -> %d\\n\", data, m_volume);",
                "path": "src/devices/sound/ap2010pcm.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Should be `std::min`, not `std::max` \u2013 sorry if I said the wrong one before, I\u2019m pretty sleep-deprived at the moment.",
                "created_at": "2023-10-26T21:17:11Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373825251",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373825251"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373825251"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373825251/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": 172,
                "start_side": "LEFT",
                "line": 163,
                "original_line": 163,
                "side": "RIGHT",
                "original_position": 156,
                "position": 156,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:17:11Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882471612",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 9678431,
            "login": "cuavas",
            "display_login": "cuavas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cuavas",
            "avatar_url": "https://avatars.githubusercontent.com/u/9678431?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700658148,
                "node_id": "PRR_kwDOANo_SM5lXfvk",
                "user": {
                    "login": "cuavas",
                    "id": 9678431,
                    "node_id": "MDQ6VXNlcjk2Nzg0MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9678431?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cuavas",
                    "html_url": "https://github.com/cuavas",
                    "followers_url": "https://api.github.com/users/cuavas/followers",
                    "following_url": "https://api.github.com/users/cuavas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cuavas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cuavas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cuavas/subscriptions",
                    "organizations_url": "https://api.github.com/users/cuavas/orgs",
                    "repos_url": "https://api.github.com/users/cuavas/repos",
                    "events_url": "https://api.github.com/users/cuavas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cuavas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Thanks for addressing the issues so quickly.  I just noticed a few small things after another read of the code.\r\n\r\nI\u2019m actually looking forward to having this ready so I\u2019ve got a concrete use case for the scripting features needed to support the book display.",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "submitted_at": "2023-10-26T21:36:09Z",
                "state": "changes_requested",
                "html_url": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700658148",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "MEMBER",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700658148"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:36:09Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:36:09Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882395334",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373837635",
                "pull_request_review_id": 1700674807,
                "id": 1373837635,
                "node_id": "PRRC_kwDOANo_SM5R4xlD",
                "diff_hunk": "@@ -71,131 +102,2074 @@\n         B18 A8\n         B19 A19\n         B20 A20\n-        B21 N/C\n+        B21 WE (for Flashrom)\n         B22 A21\n         B23 VCC\n         B24 N/C\n         B25 GND\n \n+    Storyware\n+    ---------\n+\n+    Although no booklet artwork is rendered, toggling input port 'Pen Target'\n+    switches between mapping pen coordinates to the tablet or the Storyware.\n+\n+    Test Mode\n+    ---------\n+\n+    Most games contain a hidden test mode that can be activated by the same inputs:\n+\n+        Pages 1, 3, and 5 covered, the others exposed;\n+        Left red button held down;\n+\n+    If the machine configuration 'Test Mode Pages' is enabled, the driver forces this page setup,\n+    so that the player only needs to hold the left red button at reset to activate this mode.\n+\n+    Toggling 'Memory Cache' allows the player to observe differences between test failure and success.\n+\n *******************************************************************************/\n \n #include \"emu.h\"\n \n #include \"bus/generic/slot.h\"\n #include \"bus/generic/carts.h\"\n-#include \"cpu/arm7/arm7.h\"\n+#include \"cpu/arm7/ap2010cpu.h\"\n+#include \"machine/clock.h\"\n+#include \"machine/timer.h\"\n+#include \"sound/ap2010pcm.h\"\n \n+#include \"crsshair.h\"\n+#include \"emupal.h\"\n+#include \"render.h\"\n #include \"softlist_dev.h\"\n+#include \"schedule.h\"\n #include \"speaker.h\"\n #include \"screen.h\"\n \n+#include \"beena.lh\"\n+\n+#define VERBOSE (0)\n+#include \"logmacro.h\"\n \n namespace {\n \n-class sega_beena_state : public driver_device\n+#define SCREEN_W 704\n+#define SCREEN_H 480\n+\n+#define ROM_MASK_BASE 0x80000000\n+#define ROM_FLASH_BASE 0xa0000000\n+#define UNKNOWN_ADDR 0xffffffff\n+\n+class sega_9h0_0008_state : public driver_device\n {\n public:\n-\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\tsega_9h0_0008_state(const machine_config &mconfig, device_type type, const char *tag)\n \t\t: driver_device(mconfig, type, tag)\n-\t\t, m_maincpu(*this, \"arm7\")\n+\t\t, m_maincpu(*this, \"maincpu\")\n+\t\t, m_workram(*this, \"workram\")\n+\t\t, m_pcm(*this, \"pcm\")\n \t\t, m_cart(*this, \"cartslot\")\n \t\t, m_cart_region(nullptr)\n-\t\t, m_bank(*this, \"cartbank\")\n+\t\t, m_screen_main(*this, \"screen\")\n+\t\t, m_gfxdecode(*this, \"gfxdecode\")\n+\t\t, m_palette(*this, \"palette\")\n+\t\t, m_paletteram(*this, \"paletteram\")\n+\t\t, m_tilemap_bg(*this, \"tilemap_bg\")\n+\t\t, m_tilemap_fg(*this, \"tilemap_fg\")\n+\t\t, m_tilemap_scroll_x(*this, \"tilemap_scroll_x\")\n+\t\t, m_tilemap_scroll_y(*this, \"tilemap_scroll_y\")\n+\t\t, m_tilemap_sprites(*this, \"tilemap_sprites\")\n+\t\t, m_bitmap(*this, \"bitmap\")\n+\t\t, m_io_sensor_regs(*this, \"io_sensor_regs\")\n+\t\t, m_io_auxiliary_regs(*this, \"io_auxiliary_regs\")\n+\t\t, m_io_cpu_config(*this, \"CPU_CONFIG\")\n+\t\t, m_io_page_config(*this, \"PAGE_CONFIG\")\n+\t\t, m_io_video_config(*this, \"VIDEO_CONFIG\")\n \t{ }\n \n-\tvoid sega_beena(machine_config &config);\n+\tvoid sega_9h0_0008(machine_config &config);\n \n-private:\n+protected:\n+\tvirtual void device_post_load() override;\n \tvirtual void machine_start() override;\n \tvirtual void machine_reset() override;\n+\tvirtual void video_start() override;\n \n+\tvirtual void install_game_rom();\n+\tvirtual void update_sensors(offs_t offset);\n+\n+\tvoid beena_arm7_map(address_map &map);\n+\n+\tvoid request_irq();\n+\tvoid request_fiq();\n+\n+\tTIMER_DEVICE_CALLBACK_MEMBER(scanline);\n+\tvirtual void update_crosshair(screen_device &screen);\n+\tvoid irq_wait_speedup();\n \tuint32_t screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tuint32_t video_reg_r(offs_t offset);\n+\tvoid video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid pal_w(offs_t offset, uint16_t data, uint16_t mem_mask = ~0);\n+\tuint8_t tiles_layers_r(offs_t offset);\n+\tuint8_t tiles_sprites_r(offs_t offset);\n+\tvoid tiles_layers_w(offs_t offset, uint8_t data);\n+\tvoid tiles_sprites_w(offs_t offset, uint8_t data);\n+\tint32_t scroll_x(int32_t x, uint16_t i);\n+\tint32_t scroll_y(int32_t y, uint16_t i);\n+\tvoid draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered);\n+\tvoid draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered);\n+\tvoid draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tvoid screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tint32_t rescale_alpha_step(uint8_t step);\n+\tconstexpr uint32_t alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r);\n+\ttemplate <typename BitmapType, typename FunctionClass> void drawgfxzoom_with_pixel_op(gfx_element *gfx, BitmapType &dest, const rectangle &cliprect, uint32_t code, int flipx, int flipy, int32_t destx, int32_t desty, uint32_t scalex, uint32_t scaley, FunctionClass pixel_op);\n \n-\tDECLARE_DEVICE_IMAGE_LOAD_MEMBER(cart_load);\n+\tuint32_t io_sensors_r(offs_t offset);\n \n-\tvoid beena_arm7_map(address_map &map);\n+\tuint32_t io_memcache_r();\n+\tvirtual uint32_t io_expansion_r();\n+\tvoid memcache_advance(uint32_t &status);\n+\tvoid memcache_parse_data_bit(uint32_t &status);\n+\n+\tuint32_t rtc_r(offs_t offset);\n+\tvoid rtc_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid update_rtc();\n+\n+\tuint32_t midi_reg_r(offs_t offset);\n+\tvoid midi_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\n+\tstatic constexpr int16_t signed10(uint32_t number)\n+\t{\n+\t\treturn util::sext(number, 10);\n+\t}\n+\tstatic constexpr int32_t rescale(int32_t x, int32_t min_x, int32_t max_x, int32_t a, int32_t b)\n+\t{\n+\t\t// Rescaling (min-max normalization) from [min_x..max_x] to [a..b].\n+\t\treturn a + (((x - min_x) * (b - a)) / (max_x - min_x));\n+\t}\n+\n+\trequired_device<ap2010cpu_device> m_maincpu;\n+\trequired_shared_ptr<uint32_t> m_workram;\n+\trequired_device<ap2010pcm_device> m_pcm;\n+\tbool m_requested_fiq;\n+\tuint32_t m_irq_wait_start_addr;\n \n-\trequired_device<arm7_cpu_device> m_maincpu;\n \toptional_device<generic_slot_device> m_cart;\n \tmemory_region *m_cart_region;\n-\toptional_memory_bank m_bank;\n+\n+\trequired_device<screen_device> m_screen_main;\n+\trequired_device<gfxdecode_device> m_gfxdecode;\n+\trequired_device<palette_device> m_palette;\n+\tstd::unique_ptr<rgb_t[]> m_cache_palette;\n+\trequired_shared_ptr<uint32_t> m_paletteram;\n+\trequired_shared_ptr<uint32_t> m_tilemap_bg;\n+\trequired_shared_ptr<uint32_t> m_tilemap_fg;\n+\trequired_shared_ptr<uint32_t> m_tilemap_scroll_x;\n+\trequired_shared_ptr<uint32_t> m_tilemap_scroll_y;\n+\trequired_shared_ptr<uint32_t> m_tilemap_sprites;\n+\trequired_shared_ptr<uint32_t> m_bitmap;\n+\tstd::unique_ptr<uint8_t[]> m_tiles_layers;\n+\tstd::unique_ptr<uint8_t[]> m_tiles_sprites;\n+\tstd::unique_ptr<uint32_t[]> m_video_regs;\n+\tbitmap_rgb32 m_cache_layer; // Used for x-scrolling scanlines, same size as bitplane\n+\tuint8_t m_scale;\n+\tuint16_t m_scanline;\n+\n+\trequired_shared_ptr<uint32_t> m_io_sensor_regs;\n+\trequired_shared_ptr<uint32_t> m_io_auxiliary_regs;\n+\tuint32_t m_pen_previous_input;\n+\tuint32_t m_pen_target;\n+\tuint32_t m_pages_previous_input;\n+\tuint32_t m_effective_page;\n+\n+\tuint16_t m_rtc[0x100/2]{};\n+\n+\tstd::unique_ptr<uint32_t[]> m_midi_regs;\n+\tuint32_t m_midi_busy_count;\n+\n+\trequired_ioport m_io_cpu_config;\n+\trequired_ioport m_io_page_config;\n+\trequired_ioport m_io_video_config;\n+\n+private:\n+\tuint8_t m_memcache[0x800]{};\n+\tenum memcache_seq : uint32_t\n+\t{\n+\t\tBITS_EMPTY = 0,\n+\t\tBITS_0     = 0x0000ff00,\n+\t\tBITS_0_1   = 0x00ff0001, // Command 0xa0 store bit 0\n+\t\t\t\t\t\t\t\t // Command 0xa1 move to next bit?\n+\t\tBITS_0_1_7 = 0xff000107, // Reset\n+\t\tBITS_6     = 0x0000ff06, // Query (1 if ready for next events)\n+\t\tBITS_6_7   = 0x00ff0607, // Query (0 if events parsed successfully)\n+\t\t\t\t\t\t\t\t // Command 0xa0 store bit 1\n+\t\t\t\t\t\t\t\t // Command 0xa1 load bit\n+\t\tBITS_7     = 0x0000ff07,\n+\t\tBITS_7_1   = 0x00ff0701, // Start command\n+\t\tBITS_ERR   = 0xffffffff,\n+\t};\n+\tuint32_t m_memcache_seq;\n+\tenum memcache_state : uint8_t\n+\t{\n+\t\tIDLE = 0,\n+\t\tREAD_COMMAND,\n+\t\tREAD_ADDRESS_BYTE,\n+\t\tREAD_ACK,\n+\t\tREAD_RAM_BYTE,\n+\t\tWRITE_RAM_BYTE,\n+\t\tCONSUME_UNTIL_IDLE,\n+\t};\n+\tuint32_t m_memcache_addr;\n+\tuint8_t m_memcache_data;\n+\tuint8_t m_memcache_i;\n+\tuint8_t m_memcache_state;\n+\tstd::queue<uint8_t> m_memcache_state_after;\n+\tstd::queue<uint8_t> m_memcache_events;\n };\n \n-void sega_beena_state::beena_arm7_map(address_map &map)\n+/*\n+    FIXME: All of these have guessed timing.\n+\n+    Animation durations in hardware captures suggest that an IRQ is raised every VBLANK.\n+    Palette changes can occur for each scanline via FIQ callback set by games.\n+\n+    These variables in BIOS RAM may be worth following:\n+    - 0x20003ee0: FIQ enabled;\n+    - 0x20003ee1: IRQ enabled;\n+    Along with pairs used by interrupt callbacks:\n+    - 0x20003ed1..0x20003ed4: status;\n+    - 0x20003ee2..0x20003ee5: 1 if busy?\n+*/\n+TIMER_DEVICE_CALLBACK_MEMBER(sega_9h0_0008_state::scanline)\n {\n-\tmap(0x00000000, 0x000001ff).rom().bankr(\"cartbank\");\n-\tmap(0x80000000, 0x807fffff).rom().bankr(\"cartbank\");\n+\tirq_wait_speedup();\n+\n+\t// Pixel clock approximation derived from palette lookup tables applied per scanline,\n+\t// used for gradient backgrounds in \"Partner In TV\".\n+\t//\n+\t// FIXME:\n+\t// - Rainbow arc in \"Cars 2\" before bridge section is not rendered;\n+\t// - Foreground drop animation in \"Cooking Beena\" title screen is skipped;\n+\tm_scanline = param / m_scale;\n+\tm_video_regs[0x4/4] = 0x10000 * (20 + m_scanline);\n+\n+\tuint8_t irq_frequency = m_io_cpu_config->read() & 0xf;\n+\tif ((m_scanline % (SCREEN_H / irq_frequency)) == 0) {\n+\t\tuint8_t video_status = (m_video_regs[0] & 0x10) ^ 0x10;\n+\t\tm_video_regs[0] = (m_video_regs[0] & 0xffffffef) | video_status;\n+\n+\t\tupdate_rtc();\n+\n+\t\trequest_irq();\n+\n+\t\t// FIXME: Needed for .au data processing in \"Kazoku Minna no Nouryoku Trainer\"\n+\t\tm_requested_fiq = true;\n+\t}\n+\n+\trequest_fiq();\n }\n \n+static const uint32_t irq_wait_signature[] = {\n+   0xe3a03001,\n+   0xe5c03000,\n+   0xe5d03000,\n+   0xe3530000,\n+   0x1afffffc\n+};\n+\n+void sega_9h0_0008_state::irq_wait_speedup()\n+{\n+\tif ((m_io_cpu_config->read() & 0x10) == 0x10) {\n+\t\treturn;\n+\t}\n+\n+\t/*\n+\t    All games execute a busy wait until the next IRQ request is served.\n+\t    This can lead to significant downgrade of emulation speed.\n+\n+\t    The busy wait subroutine is copied to a dynamic location in work RAM,\n+\t    somewhere after 0xc00cc000, but before the stack pointer. r0 stores\n+\t    an address to a variable that is updated by the game's IRQ callback\n+\t    when video data has been processed:\n+\n+\t        e3 a0 30 01   mov     r3,#0x1\n+\t        e5 c0 30 00   strb    r3,[r0,#0x0]\n+\t        e5 d0 30 00   ldrb    r3,[r0,#0x0]\n+\t        e3 53 00 00   cmp     r3,#0x0\n+\t        1a ff ff fc   bne     LAB_c00ce8bc\n+\n+\t    Epilogue is the following for most games:\n+\n+\t        e5 9f 30 00   ldr     r3,[DAT_c00ce8d0] = 80000000h\n+\t        e5 93 f0 08   ldr     pc=>LAB_c00fff80,[r3,#offset ->SP]\n+\n+\t    But slightly different in early games:\n+\n+\t        e1 2f ff 1e   bx      lr\n+\n+\t    Since this code has a predictable byte signature, we can search\n+\t    in memory to find its exact start address, then consume enough cycles to\n+\t    reduce the number of instructions executed until the next IRQ is asserted.\n+\t*/\n+\tif (m_irq_wait_start_addr == UNKNOWN_ADDR) {\n+\t\tif (m_maincpu->pc() > 0xc00cc000 && m_maincpu->pc() < 0xc00fff80) {\n+\t\t\tint8_t addr_delta = 8;\n+\t\t\tmemory_share *shared = machine().root_device().memshare(\"workram\");\n+\t\t\tuint32_t *shared32 = reinterpret_cast<uint32_t *>(shared->ptr());\n+\t\t\tuint32_t candidate_start_addr = m_maincpu->pc() - addr_delta;\n+\t\t\tuint32_t candidate_offset = (candidate_start_addr - 0xc00cc000) / 4;\n+\t\t\tfor (size_t i = 0; i < addr_delta; i++) {\n+\t\t\t\tbool matched = true;\n+\t\t\t\tfor (size_t sig_i = 0; sig_i < 5; sig_i++) {\n+\t\t\t\t\tif (irq_wait_signature[sig_i] != shared32[candidate_offset + i + sig_i]) {\n+\t\t\t\t\t\tmatched = false;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (matched) {\n+\t\t\t\t\tm_irq_wait_start_addr = candidate_start_addr + i;\n+\n+\t\t\t\t\tfor (size_t sig_i = 0; sig_i < 5; sig_i++) {\n+\t\t\t\t\t\tm_maincpu->add_hotspot(candidate_start_addr + i + sig_i * 4);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+static const gfx_layout sega_beena_8bpp_layout =\n+{\n+\t16,16,\n+\t0x800, // 0x800 * 0x10 * 0x10 = 0x80000 (tile data mapping size)\n+\t8,\n+\t{ STEP8(0, 1) },\n+\t{ STEP16(0, 8) },\n+\t{ STEP16(0, 8*16) },\n+\t8*16*16\n+};\n+\n+void sega_9h0_0008_state::beena_arm7_map(address_map &map)\n+{\n+\t// BIOS internal ROM\n+\tmap(0x00000000, 0x0001ffff).rom();\n+\t// BIOS internal RAM\n+\tmap(0x20000000, 0x20003fff).ram();\n+\n+\t// FIXME: Need to confirm upper bounds / mirrored ranges on hardware, some return inconsistent reads\n+\t// Video (registers, palette, sprite data...)\n+\tmap(0x40000000, 0x400000ff).rw(FUNC(sega_9h0_0008_state::video_reg_r), FUNC(sega_9h0_0008_state::video_reg_w)).mirror(0xff00);\n+\tmap(0x40010000, 0x400103ff).ram().share(\"tilemap_sprites\");\n+\tmap(0x40010400, 0x4001ffff).ram();\n+\tmap(0x40020000, 0x400201ff).w(FUNC(sega_9h0_0008_state::pal_w)).share(\"paletteram\");\n+\tmap(0x40020200, 0x4002ffff).ram();\n+\tmap(0x40030000, 0x400302ff).ram().share(\"tilemap_scroll_y\");\n+\tmap(0x40030300, 0x4003ffff).ram();\n+\n+\t// I/O (registers, pages, pads, pen...)\n+\tmap(0x50000000, 0x5000000f).ram().mirror(0xfff0); // Unknown\n+\tmap(0x50010000, 0x5001003f).lrw32(\n+\t\tNAME([this](offs_t offset) {\n+\t\t\tLOG(\"audio_pcm_reg_r @ %08x: addr=%08x data=%08x\\n\", m_maincpu->pc(), offset * 4, m_pcm->reg_r(offset));\n+\n+\t\t\treturn m_pcm->reg_r(offset);\n+\t\t}),\n+\t\tNAME([this](offs_t offset, uint32_t data, uint32_t mem_mask) {\n+\t\t\tLOG(\"audio_pcm_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t\t\t// FIXME: Games hang during .au data processing unless FIQ requests are served,\n+\t\t\t// review this after playback is implemented\n+\t\t\tif (offset == 0x10/4) {\n+\t\t\t\tif (data != 0) {\n+\t\t\t\t\tm_requested_fiq = true;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tm_pcm->reg_w(offset, data, mem_mask);\n+\t\t})).mirror(0xffc0);\n+\tmap(0x50020000, 0x5002007f).r(FUNC(sega_9h0_0008_state::io_sensors_r)).share(\"io_sensor_regs\").mirror(0xff80);\n+\tmap(0x50030000, 0x500300ff).lrw32(\n+\t\tNAME([this](offs_t offset) {\n+\t\t\tLOG(\"m_io_auxiliary_regs_r @ %08x: addr=%08x\\n\", m_maincpu->pc(), offset * 4);\n+\n+\t\t\tif (offset == 0x0c/4) {\n+\t\t\t\treturn io_expansion_r();\n+\t\t\t}\n+\t\t\treturn offset == 0xbc/4 ? io_memcache_r() : m_io_auxiliary_regs[offset];\n+\t\t}),\n+\t\tNAME([this](offs_t offset, uint32_t data, uint32_t mem_mask) {\n+\t\t\tLOG(\"m_io_auxiliary_regs_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t\t\tCOMBINE_DATA(&m_io_auxiliary_regs[offset]);\n+\t\t\tif (offset == 0xc0/4) {\n+\t\t\t\tm_memcache_events.push(data);\n+\t\t\t}\n+\t\t})).share(\"io_auxiliary_regs\").mirror(0xff00);\n+\n+\t// Realtime clock\n+\tmap(0x60000000, 0x600000ff).rw(FUNC(sega_9h0_0008_state::rtc_r), FUNC(sega_9h0_0008_state::rtc_w)).mirror(0xff00);\n+\tmap(0x60010000, 0x6003ffff).ram(); // Unknown\n+\n+\t// MIDI\n+\tmap(0x70000000, 0x7000001f).rw(FUNC(sega_9h0_0008_state::midi_reg_r), FUNC(sega_9h0_0008_state::midi_reg_w)).mirror(0xffe0);\n+\tmap(0x70010000, 0x7003ffff).ram(); // Unknown\n+\n+\t// Game Mask ROM\n+\tmap(ROM_MASK_BASE, ROM_MASK_BASE + 0x7fffff).lr8(NAME([]() { return 0xff; })).mirror(0x800000);\n+\n+\t// Game NOR Flash ROM\n+\t// Some games have an unreferenced handler that jumps to 0xa0ffc000;\n+\tmap(ROM_FLASH_BASE, ROM_FLASH_BASE + 0x7fffff).lr8(NAME([]() { return 0xff; })).mirror(0x800000);\n+\n+\t// Direct bitmap with 2-byte BGR555 colors per pixel, same as tile palettes. Scaling also applied.\n+\t// The bitmap size is checked by games to be `w * h <= 0x63000`, so we allocate `0x63000 * 2 = 0xc6000`.\n+\tmap(0xc0000000, 0xc00c5fff).ram().share(\"bitmap\");\n+\t// Tilemap data for 2 layers (background and foreground).\n+\tmap(0xc00c6000, 0xc00c68ff).ram().share(\"tilemap_scroll_x\");\n+\t// Work RAM for tilemap data\n+\tmap(0xc00c6900, 0xc00c7fff).ram();\n+\tmap(0xc00c8000, 0xc00c9fff).ram().share(\"tilemap_fg\");\n+\tmap(0xc00ca000, 0xc00cbfff).ram().share(\"tilemap_bg\");\n+\t// Work RAM for general use + stack (usually starts at 0xc00fff80)\n+\tmap(0xc00cc000, 0xc00fffff).ram().share(\"workram\");\n+\t// Tile data for 2 layers (background and foreground) + sprites\n+\tmap(0xc0100000, 0xc017ffff).ram().rw(FUNC(sega_9h0_0008_state::tiles_layers_r), FUNC(sega_9h0_0008_state::tiles_layers_w));\n+\tmap(0xc0180000, 0xc01fffff).ram().rw(FUNC(sega_9h0_0008_state::tiles_sprites_r), FUNC(sega_9h0_0008_state::tiles_sprites_w));\n+}\n+\n+void sega_9h0_0008_state::update_sensors(offs_t offset)\n+{\n+\t// Power status\n+\t// - bit 1 = 0: a \"low battery\" screen shows up;\n+\t// - bit 2 = 0: game code goes into infinite loop, maybe power button pressed?\n+\tif (offset == 0x38/4) {\n+\t\tm_io_sensor_regs[offset] = 3;\n+\t}\n+}\n+\n+uint32_t sega_9h0_0008_state::io_sensors_r(offs_t offset)\n+{\n+\tupdate_sensors(offset);\n+\n+\treturn m_io_sensor_regs[offset];\n+}\n+\n+uint32_t sega_9h0_0008_state::video_reg_r(offs_t offset)\n+{\n+\treturn m_video_regs[offset];\n+}\n+\n+void sega_9h0_0008_state::video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tLOG(\"video_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t/*\n+\t   Video control\n+\t   - bit 1..4: rendering toggles\n+\t     - 0x1: enable rendering\n+\t     - 0x2: enable fg layer\n+\t     - 0x4: enable bg layer\n+\t   - bit 5..8: scroll data entries\n+\t     - 0x10: 0x900 for x-axis scanlines\n+\t     - 0x20:  0x90 for x-axis tiles\n+\t     - 0x40:  0xb4 for y-axis tiles\n+\t   - bit 9..12: video format\n+\t     - 0x100: vertical frequency: 60Hz (NTSC) if 0, 50Hz (PAL) if 1\n+\t     - 0x200: mode: 352x240 (scales 2x from top-left corner) if 0, 704x480 if 1\n+\t   - bit 13..16: direct bitmap render priority\n+\t     - 0x0000: before overlay sprites\n+\t     - 0x1000: before all sprites\n+\t     - 0x2000: before fg layer\n+\t     - 0x3000: before bg and fg layers\n+\t*/\n+\tif (offset == 0x10/4) {\n+\t\tm_scale = ((data & 0x200) == 0) ? 2 : 1;\n+\t}\n+\n+\tCOMBINE_DATA(&m_video_regs[offset]);\n+}\n+\n+uint32_t sega_9h0_0008_state::midi_reg_r(offs_t offset)\n+{\n+\tif (offset == 0 && m_midi_busy_count > 0) {\n+\t\tm_midi_busy_count--;\n+\t\treturn 0x2;\n+\t}\n+\n+\treturn m_midi_regs[offset];\n+}\n+\n+void sega_9h0_0008_state::midi_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tLOG(\"midi_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\tswitch (offset) {\n+\t\tcase 0x4/4:\n+\t\t\tif ((data & 5) == 5) {\n+\t\t\t\t// TODO: MIDI all notes off\n+\t\t\t}\n+\t\t\tbreak;\n+\t\tcase 0x8/4:\n+\t\t\t// TODO: MIDI buffered event\n+\t\t\t// Games wait before sending additional notes,\n+\t\t\t// checking if audio status is busy then ready.\n+\t\t\tm_midi_busy_count = 1;\n+\t\t\tbreak;\n+\t\tcase 0xc/4:\n+\t\t\t// TODO: MIDI passthrough event\n+\t\t\tbreak;\n+\t\tcase 0x18/4:\n+\t\t\t// TODO: MIDI update_divisor\n+\t\t\tbreak;\n+\t}\n+\n+\tCOMBINE_DATA(&m_midi_regs[offset]);\n+}\n+\n+void sega_9h0_0008_state::install_game_rom()\n+{\n+\t// Nothing (overriden by each system)\n+}\n+\n+void sega_9h0_0008_state::machine_start()\n+{\n+\tinstall_game_rom();\n+\n+\tsave_item(NAME(m_requested_fiq));\n+\tsave_item(NAME(m_irq_wait_start_addr));\n+\n+\tm_video_regs = make_unique_clear<uint32_t[]>(0x100/4);\n+\tsave_pointer(NAME(m_video_regs), 0x100/4);\n+\tsave_item(NAME(m_scale));\n+\n+\tm_midi_regs = make_unique_clear<uint32_t[]>(0x20/4);\n+\tsave_pointer(NAME(m_midi_regs), 0x20/4);\n+\tsave_item(NAME(m_midi_busy_count));\n+\n+\tsave_item(NAME(m_pen_previous_input));\n+\tsave_item(NAME(m_pen_target));\n+\tsave_item(NAME(m_pages_previous_input));\n+\tsave_item(NAME(m_effective_page));\n+\n+\tm_cache_layer.allocate(1024, 512);\n+}\n+\n+void sega_9h0_0008_state::video_start()\n+{\n+\tm_cache_palette = std::make_unique<rgb_t[]>(0x100*SCREEN_H);\n+\tfor (int i = 0; i < 0x100 * SCREEN_H; i++) {\n+\t\tm_cache_palette[i] = 0;\n+\t}\n+\tsave_pointer(NAME(m_cache_palette.get()), 0x100*SCREEN_H);\n+\n+\tm_tiles_layers = make_unique_clear<uint8_t[]>(0x80000);\n+\tm_tiles_sprites = make_unique_clear<uint8_t[]>(0x80000);\n+\tsave_pointer(NAME(m_tiles_layers.get()), 0x80000);\n+\tsave_pointer(NAME(m_tiles_sprites.get()), 0x80000);\n+\n+\tm_gfxdecode->set_gfx(0, std::make_unique<gfx_element>(\n+\t\tm_palette, sega_beena_8bpp_layout, m_tiles_layers.get(), 0, 1, 0));\n+\tm_gfxdecode->set_gfx(1, std::make_unique<gfx_element>(\n+\t\tm_palette, sega_beena_8bpp_layout, m_tiles_sprites.get(), 0, 1, 0));\n+}\n+\n+void sega_9h0_0008_state::machine_reset()\n+{\n+\tm_requested_fiq = false;\n+\tm_irq_wait_start_addr = UNKNOWN_ADDR;\n+\n+\tmemset(m_video_regs.get(), 0, 0x100);\n+\tm_video_regs[0x10/4] = 0x200; // Tiles are 1x scaled by default.\n+\tm_scale = 1;\n+\tm_scanline = 0;\n+\n+\tbool is_video_connected = m_io_video_config->read() == 0;\n+\tif (!is_video_connected) {\n+\t\tm_video_regs[0] |= 0x00000200;\n+\t}\n+\n+\tmemset(m_midi_regs.get(), 0, 0x20);\n+\tm_midi_busy_count = 0;\n+\n+\tm_io_sensor_regs[0] = 7; // Pen is making contact with the target surface.\n+\tm_io_sensor_regs[0x2c/4] = 0xffffffff; // Pages 1 to 4 are closed.\n+\tm_io_sensor_regs[0x30/4] = 0x00ffffff; // Pages 5 to 6 are closed.\n+\tm_pen_previous_input = 0;\n+\tm_pen_target = 0;\n+\tm_pages_previous_input = 0;\n+\tm_effective_page = 0;\n+\n+\tm_memcache_addr = 0;\n+\tm_memcache_data = 0;\n+\tm_memcache_i = 0;\n+\tm_memcache_seq = BITS_EMPTY;\n+\tm_memcache_state = IDLE;\n+\tm_memcache_state_after = {};\n+\n+\tupdate_rtc();\n+}\n+\n+void sega_9h0_0008_state::device_post_load()\n+{\n+\tm_gfxdecode->gfx(0)->mark_all_dirty();\n+\tm_gfxdecode->gfx(1)->mark_all_dirty();\n+}\n+\n+void sega_9h0_0008_state::memcache_advance(uint32_t &status)\n+{\n+\tuint8_t event = m_memcache_events.front();\n+\tm_memcache_events.pop();\n+\n+\tstatus = event == 6 ? 1 : 0;\n+\n+\tswitch(m_memcache_seq) {\n+\t\tcase BITS_0:\n+\t\t\tm_memcache_seq = event == 1 ? BITS_0_1 : BITS_ERR;\n+\t\t\tbreak;\n+\t\tcase BITS_0_1:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_0_1_7 : (event == 6 ? BITS_6 : BITS_ERR);\n+\t\t\tbreak;\n+\t\tcase BITS_6:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_6_7 : (event == 0 ? BITS_0 : BITS_ERR);\n+\t\t\tbreak;\n+\t\tcase BITS_7:\n+\t\t\tm_memcache_seq = event == 1 ? BITS_7_1 : BITS_ERR;\n+\t\t\tbreak;\n+\t\tcase BITS_EMPTY:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_7 : (event == 6 ? BITS_6 : (event == 0 ? BITS_0 : BITS_ERR));\n+\t\t\tbreak;\n+\t\tdefault:\n+\t\t\tm_memcache_seq = BITS_ERR;\n+\t}\n+\n+\tLOG(\"memcache seq = %08x\\n\", m_memcache_seq);\n+}\n+\n+void sega_9h0_0008_state::memcache_parse_data_bit(uint32_t &status)\n+{\n+\tif (m_memcache_seq == BITS_0_1) {\n+\t\t// After a command has been ack'd, we might reset instead of parse the command's data bits.\n+\t\t// Due to both sequences starting with the same prefix, we have to bailout on the shorter\n+\t\t// sequence if the lookahead matches the longer sequence.\n+\t\tif (!m_memcache_events.empty() && m_memcache_events.front() == 7) {\n+\t\t\tLOG(\"memcache READ_COMMAND 0 1 skipped\\n\");\n+\t\t\treturn;\n+\t\t}\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_data = (m_memcache_data << 1) | 0;\n+\t\tm_memcache_i++;\n+\t} else if (m_memcache_seq == BITS_6_7) {\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_data = (m_memcache_data << 1) | 1;\n+\t\tm_memcache_i++;\n+\t} else if (m_memcache_seq == BITS_0_1_7) {\n+\t\tstatus = 1;\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_state = IDLE;\n+\t\tm_memcache_state_after = {};\n+\t\tLOG(\"memcache READ_COMMAND 0 1 7 -> IDLE\\n\");\n+\t}\n+}\n+\n+uint32_t sega_9h0_0008_state::io_expansion_r()\n+{\n+\treturn 0; // TODO\n+}\n+\n+uint32_t sega_9h0_0008_state::io_memcache_r()\n+{\n+\t/*\n+\t    A non-memory mapped cache can be interfaced with data address 0x500300c0,\n+\t    while the status after parsing this data (events) can be read at 0x500300bc.\n+\n+\t    The cache stores RAM values in range 0xc00c6400..0xc00c6fff.\n+\n+\t    During I/O init, this cache is cleared.\n+\n+\t    During Test Mode, some memory integrity checks are carried out,\n+\t    consisting of reading RAM to the cache, then writing those cached bytes\n+\t    at the same RAM address, which is then compared with the expected values.\n+\n+\t    The communication protocol consists of sending sequences of events,\n+\t    contextual to the command that is currently being parsed (which in turn\n+\t    is initiated with a sequence of events).\n+\n+\t    Simplified flow:\n+\n+\t        IDLE\n+\t        READ_COMMAND (includes RAM address bits 8..12)\n+\t            if 0xa0:\n+\t                READ_ADDRESS_BYTE (RAM address bits 0..7)\n+\t                READ_RAM_BYTE (RAM value bits 0..7)\n+\t            if 0xa1:\n+\t                WRITE_RAM_BYTE (assumed to be at previous read RAM address)\n+\n+\t    Some of these sequences can be followed by acknowledgements (READ_ACK), to\n+\t    ensure sent events were parsed as expected, otherwise games bailout from the\n+\t    session. Always ends with the same sequence (BITS_0_1_7).\n+\t*/\n+\tuint32_t status = 0;\n+\twhile (!m_memcache_events.empty()) {\n+\t\tmemcache_advance(status);\n+\n+\t\tbool is_memcache_disabled = (m_io_cpu_config->read() & 0x40) == 0x40;\n+\t\tif (is_memcache_disabled) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tswitch(m_memcache_state) {\n+\t\t\tcase IDLE:\n+\t\t\t\tif (m_memcache_seq == BITS_6) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\t\t\tLOG(\"memcache IDLE stat\\n\");\n+\t\t\t\t} else if (m_memcache_seq == BITS_7_1) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = READ_COMMAND;\n+\t\t\t\t\tLOG(\"memcache IDLE -> READ_COMMAND\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_COMMAND:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tLOG(\"memcache READ_COMMAND byte data = %08x\\n\", m_memcache_data);\n+\t\t\t\t\tm_memcache_state = READ_ACK;\n+\t\t\t\t\tm_memcache_addr = (((m_memcache_data & 0xe) >> 1) << 8) | (m_memcache_addr & 0xff);\n+\t\t\t\t\tLOG(\"memcache READ_COMMAND addr & 0xf00 = %08x\\n\", m_memcache_addr);\n+\t\t\t\t\tif ((m_memcache_data & 0xa1) == 0xa0) {\n+\t\t\t\t\t\tm_memcache_state_after.push(READ_ADDRESS_BYTE);\n+\t\t\t\t\t\tm_memcache_state_after.push(READ_ACK);\n+\t\t\t\t\t\tm_memcache_state_after.push(READ_RAM_BYTE);\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND 0xa0 -> READ_ACK\\n\");\n+\t\t\t\t\t} else if ((m_memcache_data & 0xa1) == 0xa1) {\n+\t\t\t\t\t\tm_memcache_state_after.push(WRITE_RAM_BYTE);\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND 0xa1 -> READ_ACK\\n\");\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\t\t\t\tm_memcache_state_after = {};\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND -> CONSUME_UNTIL_IDLE (unknown command?)\\n\");\n+\t\t\t\t\t}\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_ACK:\n+\t\t\t\tif (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = m_memcache_state_after.front();\n+\t\t\t\t\tm_memcache_state_after.pop();\n+\t\t\t\t\tLOG(\"memcache READ_ACK\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_ADDRESS_BYTE:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tm_memcache_addr |= m_memcache_data;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_state = m_memcache_state_after.front();\n+\t\t\t\t\tm_memcache_state_after.pop();\n+\t\t\t\t\tLOG(\"memcache READ_ADDRESS_BYTE addr = %08x\\n\", m_memcache_addr);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_RAM_BYTE:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_seq == BITS_7_1) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = READ_COMMAND;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE -> READ_COMMAND (interrupted?)\\n\");\n+\t\t\t\t}\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE [%08x]=>%02x\\n\", m_memcache_addr, m_memcache_data);\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE effective addr = %08x\\n\", 0xc00c6400 + 0x100 + m_memcache_addr);\n+\t\t\t\t\tm_memcache[m_memcache_addr] = m_memcache_data;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\n+\t\t\t\t\t// Later games (e.g. \"Pocket Monsters Best Wishes\") optimize reading the next RAM bytes\n+\t\t\t\t\t// and just store one after the other, skipping READ_COMMAND + READ_ADDRESS_BYTE sequences.\n+\t\t\t\t\tm_memcache_state = READ_ACK;\n+\t\t\t\t\tm_memcache_state_after = {};\n+\t\t\t\t\tm_memcache_state_after.push(READ_RAM_BYTE);\n+\t\t\t\t\tm_memcache_addr++;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase WRITE_RAM_BYTE:\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tif (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE ACK\\n\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (m_memcache_seq == BITS_0_1) {\n+\t\t\t\t\tif (!m_memcache_events.empty() && m_memcache_events.front() == 7) {\n+\t\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE 0 1 skipped\\n\");\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_addr++;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE next addr %08x\\n\", m_memcache_addr);\n+\t\t\t\t} else if (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\tstatus = (m_memcache[m_memcache_addr] >> (7 - m_memcache_i)) & 1;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE read addr [%08x]=>(%08x >> %02x) & 1 = %02x\\n\",\n+\t\t\t\t\t\t\tm_memcache_addr,\n+\t\t\t\t\t\t\tm_memcache[m_memcache_addr],\n+\t\t\t\t\t\t\tm_memcache_i,\n+\t\t\t\t\t\t\tstatus);\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_i++;\n+\t\t\t\t} else if (m_memcache_seq == BITS_0_1_7) {\n+\t\t\t\t\tstatus = 1;\n+\t\t\t\t\tm_memcache_addr = 0;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = IDLE;\n+\t\t\t\t\tm_memcache_state_after = {};\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE 0 1 7 -> IDLE\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase CONSUME_UNTIL_IDLE:\n+\t\t\t\tif (m_memcache_seq == BITS_0_1_7) {\n+\t\t\t\t\tstatus = 1;\n+\t\t\t\t\tm_memcache_addr = 0;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = IDLE;\n+\t\t\t\t\tLOG(\"memcache CONSUME_UNTIL_IDLE 0 1 7 -> IDLE\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t}\n+\n+\t\tif (m_memcache_seq == BITS_ERR) {\n+\t\t\t// Caught unexpected events, so clear all state, and try to resync at next reset bits.\n+\t\t\tm_memcache_addr = 0;\n+\t\t\tm_memcache_data = 0;\n+\t\t\tm_memcache_i = 0;\n+\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\tm_memcache_state_after = {};\n+\t\t\tLOG(\"memcache BITS_ERR -> CONSUME_UNTIL_IDLE\\n\");\n+\t\t}\n+\t}\n+\n+\treturn status;\n+}\n+\n+uint32_t sega_9h0_0008_state::rtc_r(offs_t offset)\n+{\n+\treturn m_rtc[offset];\n+}\n+\n+void sega_9h0_0008_state::rtc_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tCOMBINE_DATA(&m_rtc[offset]);\n+\tLOG(\"rtc_w @ %08x [%02x]=%08x\\n\", m_maincpu->pc(), offset, data);\n+}\n+\n+void sega_9h0_0008_state::pal_w(offs_t offset, uint16_t data, uint16_t mem_mask)\n+{\n+\tuint16_t *shared16 = reinterpret_cast<uint16_t *>(m_paletteram.target());\n+\tCOMBINE_DATA(&shared16[BYTE_XOR_BE(offset)]);\n+\n+\tuint16_t pal_entry = shared16[BYTE_XOR_BE(offset)];\n+\tuint8_t r, g, b;\n+\tr = (pal_entry & 0x001f) >> 0;\n+\tg = (pal_entry & 0x03e0) >> 5;\n+\tb = (pal_entry & 0x7c00) >> 10;\n+\trgb_t color = rgb_t(pal5bit(r), pal5bit(g), pal5bit(b));\n+\tm_cache_palette[m_scanline * 0x100 + offset] = color;\n+\tm_palette->set_pen_color(offset, color);\n+\tLOG(\"m_cache_palette[%d / m_scale * 0x100 + %04x] = %04x (%04x)\\n\", m_scanline, offset, color, pal_entry);\n+\n+\tm_requested_fiq = true;\n+}\n+\n+uint8_t sega_9h0_0008_state::tiles_layers_r(offs_t offset)\n+{\n+\treturn m_tiles_layers[offset];\n+}\n+\n+void sega_9h0_0008_state::tiles_layers_w(offs_t offset, uint8_t data)\n+{\n+\tif (m_tiles_layers[offset] != data) {\n+\t\tm_tiles_layers[offset] = data;\n+\t\tm_gfxdecode->gfx(0)->mark_dirty(offset/(16*16));\n+\t}\n+}\n+\n+uint8_t sega_9h0_0008_state::tiles_sprites_r(offs_t offset)\n+{\n+\treturn m_tiles_sprites[offset];\n+}\n+\n+void sega_9h0_0008_state::tiles_sprites_w(offs_t offset, uint8_t data)\n+{\n+\tif (m_tiles_sprites[offset] != data) {\n+\t\tm_tiles_sprites[offset] = data;\n+\t\tm_gfxdecode->gfx(1)->mark_dirty(offset/(16*16));\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered)\n+{\n+\tif (!is_active) {\n+\t\treturn; // Disabled\n+\t}\n+\n+\tif ((m_video_regs[0x10/4] & 0x30) == 0x30) {\n+\t\tdraw_layer_scanlines(bitmap, cliprect, tilemap, scroll_idx, is_overlay_rendered);\n+\t} else {\n+\t\tdraw_layer_tiles(bitmap, cliprect, tilemap, scroll_idx, is_overlay_rendered);\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered)\n+{\n+\t// Bitplane area =  1024x512 (64x32 tiles), matches tile data mapping entries (64 * 32 = 0x800).\n+\t//  Visible area =   704x480 (44x30 tiles), offset by +10 tiles in x-axis and +2 tiles in y-axis.\n+\t//  Tilemap area = 1024x1024 (64x64 tiles), all these off-screen tiles must be considered for scrolling.\n+\tfor (size_t offset = 0; offset < 0x2000/2; offset++) {\n+\t\tint32_t y = ((offset / 64) - 2) * 16;\n+\t\tint32_t x = ((offset % 64) - 10) * 16;\n+\n+\t\tuint16_t scroll_x_idx = scroll_idx;\n+\t\tuint16_t scroll_y_idx = scroll_idx;\n+\t\tuint8_t entry_size = 4; // 2 int16_t values, 1 for each tile layer\n+\t\tif (y >= 0 && y < (0x90 / entry_size) * 16) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x20) == 0x20) {\n+\t\t\t\tscroll_x_idx += y/16 * 2;\n+\t\t\t}\n+\t\t}\n+\t\tif (x >= 0 && x < (0xb4 / entry_size) * 16) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x40) == 0x40) {\n+\t\t\t\tscroll_y_idx += x/16 * 2;\n+\t\t\t}\n+\t\t}\n+\n+\t\tx = scroll_x(x, scroll_x_idx);\n+\t\ty = scroll_y(y, scroll_y_idx);\n+\n+\t\tuint16_t tile = tilemap[BYTE_XOR_BE(offset)];\n+\t\tuint16_t tile_transform = (tile & 0xf000) >> 12;\n+\t\tuint16_t flip_x = (tile_transform & 1) != 0;\n+\t\tuint16_t flip_y = (tile_transform & 2) != 0;\n+\t\tbool is_overlay = (tile_transform & 4) != 0;\n+\t\tif (is_overlay != is_overlay_rendered) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint16_t tile_idx = tile & 0x7ff;\n+\t\tbool is_sprite_tile_data_used = tile & 0x800;\n+\t\tgfx_element *gfx = m_gfxdecode->gfx(is_sprite_tile_data_used ? 1 : 0);\n+\t\tconst pen_t *paldata = m_palette->pens() + gfx->colorbase() + gfx->granularity() * (7 % gfx->colors());\n+\t\tconst uint8_t scale = m_scale;\n+\t\tdrawgfxzoom_with_pixel_op(gfx, bitmap, cliprect,\n+\t\t\ttile_idx,\n+\t\t\tflip_x,\n+\t\t\tflip_y,\n+\t\t\tx * m_scale,\n+\t\t\ty * m_scale,\n+\t\t\t0x10000 * m_scale,\n+\t\t\t0x10000 * m_scale,\n+\t\t\t[scale, paldata](int32_t y, const std::unique_ptr<rgb_t[]> &palcache, uint32_t &destp, const uint8_t &srcp) {\n+\t\t\t\tif (srcp != 0) {\n+\t\t\t\t\trgb_t color = palcache[y / scale * 0x100 + srcp];\n+\t\t\t\t\tif (color == 0) {\n+\t\t\t\t\t\tcolor = paldata[srcp];\n+\t\t\t\t\t}\n+\t\t\t\t\tdestp = color;\n+\t\t\t\t}\n+\t\t\t});\n+\t}\n+}\n+\n+/**\n+ * Similar to gfx_element::drawgfxzoom_core(), but uses a pixel_op that depends on the current y-position to render,\n+ * in order to apply dedicated palettes for each scanline. These palettes are cached and passed directly\n+ * as a parameter instead of being captured in the pixel_op lambda, to avoid degraded performance from large copies.\n+ */\n+template <typename BitmapType, typename FunctionClass>\n+inline void sega_9h0_0008_state::drawgfxzoom_with_pixel_op(gfx_element *gfx, BitmapType &dest, const rectangle &cliprect, uint32_t code, int flipx, int flipy, int32_t destx, int32_t desty, uint32_t scalex, uint32_t scaley, FunctionClass pixel_op)\n+{\n+\tdo {\n+\t\tassert(dest.valid());\n+\t\tassert(dest.cliprect().contains(cliprect));\n+\n+\t\t// ignore empty/invalid cliprects\n+\t\tif (cliprect.empty())\n+\t\t\tbreak;\n+\n+\t\t// compute scaled size\n+\t\tuint32_t dstwidth = (scalex * gfx->width() + 0x8000) >> 16;\n+\t\tuint32_t dstheight = (scaley * gfx->height() + 0x8000) >> 16;\n+\t\tif (dstwidth < 1 || dstheight < 1)\n+\t\t\tbreak;\n+\n+\t\t// compute 16.16 source steps in dx and dy\n+\t\tint32_t dx = (gfx->width() << 16) / dstwidth;\n+\t\tint32_t dy = (gfx->height() << 16) / dstheight;\n+\n+\t\t// compute final pixel in X and exit if we are entirely clipped\n+\t\tint32_t destendx = destx + dstwidth - 1;\n+\t\tif (destx > cliprect.right() || destendx < cliprect.left())\n+\t\t\tbreak;\n+\n+\t\t// apply left clip\n+\t\tint32_t srcx = 0;\n+\t\tif (destx < cliprect.left())\n+\t\t{\n+\t\t\tsrcx = (cliprect.left() - destx) * dx;\n+\t\t\tdestx = cliprect.left();\n+\t\t}\n+\n+\t\t// apply right clip\n+\t\tif (destendx > cliprect.right())\n+\t\t\tdestendx = cliprect.right();\n+\n+\t\t// compute final pixel in Y and exit if we are entirely clipped\n+\t\tint32_t destendy = desty + dstheight - 1;\n+\t\tif (desty > cliprect.bottom() || destendy < cliprect.top())\n+\t\t\tbreak;\n+\n+\t\t// apply top clip\n+\t\tint32_t srcy = 0;\n+\t\tif (desty < cliprect.top())\n+\t\t{\n+\t\t\tsrcy = (cliprect.top() - desty) * dy;\n+\t\t\tdesty = cliprect.top();\n+\t\t}\n+\n+\t\t// apply bottom clip\n+\t\tif (destendy > cliprect.bottom())\n+\t\t\tdestendy = cliprect.bottom();\n+\n+\t\t// apply X flipping\n+\t\tif (flipx)\n+\t\t{\n+\t\t\tsrcx = (dstwidth - 1) * dx - srcx;\n+\t\t\tdx = -dx;\n+\t\t}\n+\n+\t\t// apply Y flipping\n+\t\tif (flipy)\n+\t\t{\n+\t\t\tsrcy = (dstheight - 1) * dy - srcy;\n+\t\t\tdy = -dy;\n+\t\t}\n+\n+\t\t// fetch the source data\n+\t\tconst uint8_t *srcdata = gfx->get_data(code);\n+\n+\t\t// compute how many blocks of 4 pixels we have\n+\t\tuint32_t numblocks = (destendx + 1 - destx) / 4;\n+\t\tuint32_t leftovers = (destendx + 1 - destx) - 4 * numblocks;\n+\n+\t\t// iterate over pixels in Y\n+\t\tfor (int32_t cury = desty; cury <= destendy; cury++)\n+\t\t{\n+\t\t\tauto *destptr = &dest.pix(cury, destx);\n+\t\t\tconst uint8_t *srcptr = srcdata + (srcy >> 16) * gfx->rowbytes();\n+\t\t\tint32_t cursrcx = srcx;\n+\t\t\tsrcy += dy;\n+\n+\t\t\t// iterate over unrolled blocks of 4\n+\t\t\tfor (int32_t curx = 0; curx < numblocks; curx++)\n+\t\t\t{\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[0], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[1], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[2], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[3], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\n+\t\t\t\tdestptr += 4;\n+\t\t\t}\n+\n+\t\t\t// iterate over leftover pixels\n+\t\t\tfor (int32_t curx = 0; curx < leftovers; curx++)\n+\t\t\t{\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[0], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tdestptr++;\n+\t\t\t}\n+\t\t}\n+\t} while (0);\n+}\n+\n+int32_t sega_9h0_0008_state::scroll_x(int32_t x, uint16_t i)\n+{\n+\tuint16_t *scroll_data = reinterpret_cast<uint16_t *>(m_tilemap_scroll_x.target());\n+\tx += -signed10(scroll_data[BYTE_XOR_BE(i)]);\n+\n+\t// Wrap-around at tilemap borders\n+\tif (x > 0x2c0 + 0xa0) {\n+\t\tx -= (0x2c0 + 0xa0 * 2);\n+\t}\n+\tif (x < -0xa0) {\n+\t\tx += (0x2c0 + 0xa0 * 2);\n+\t}\n+\n+\treturn x;\n+}\n+\n+int32_t sega_9h0_0008_state::scroll_y(int32_t y, uint16_t i)\n+{\n+\tuint16_t *scroll_data = reinterpret_cast<uint16_t *>(m_tilemap_scroll_y.target());\n+\tuint32_t scroll_entry = scroll_data[BYTE_XOR_BE(i)];\n+\tif (((scroll_entry & 0xfc00) == 0xfc00) && (y <= 224)) {\n+\t\t// Skip scroll on first 14 (7 if 2x scaled) tile rows.\n+\t\t// Test case is title screen of \"Cooking Beena\", where both title and table\n+\t\t// are rendered in the foreground layer, but only the table should be scrolled.\n+\t\treturn y;\n+\t}\n+\n+\ty += signed10(scroll_entry);\n+\n+\t// Wrap-around at tilemap borders\n+\tif (y > (0x400 - 0x20) - 0x10) {\n+\t\ty -= 0x400;\n+\t}\n+\tif (y < -0x20) {\n+\t\ty += 0x400;\n+\t}\n+\n+\treturn y;\n+}\n+\n+void sega_9h0_0008_state::draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered)\n+{\n+\tconst rectangle cache_bitmap_bounds(0, m_cache_layer.width()-1, 0, m_cache_layer.height()-1);\n+\tm_cache_layer.fill(0, cache_bitmap_bounds);\n+\n+\t// Apply y-scrolling + wrap-around on each tile row and draw to cached bitmap\n+\tconst int8_t tile_factor = 16;\n+\tfor (size_t offset = 0; offset < 0x2000/2; offset++) {\n+\t\tint32_t y = ((offset / 64) - 2) * tile_factor;\n+\t\tint32_t x = ((offset % 64) - 10) * tile_factor;\n+\n+\t\tuint16_t tile = tilemap[BYTE_XOR_BE(offset)];\n+\t\tuint16_t tile_transform = (tile & 0xf000) >> 12;\n+\t\tuint16_t flip_x = (tile_transform & 1) != 0;\n+\t\tuint16_t flip_y = (tile_transform & 2) != 0;\n+\t\tbool is_overlay = (tile_transform & 4) != 0;\n+\t\tif (is_overlay != is_overlay_rendered) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint16_t scroll_y_idx = scroll_idx;\n+\t\tif (x >= 0 && x < (0xb4 / 4) * tile_factor) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x40) == 0x40) {\n+\t\t\t\tscroll_y_idx += x /tile_factor * 2;\n+\t\t\t}\n+\t\t}\n+\n+\t\ty = scroll_y(y, scroll_y_idx);\n+\n+\t\t// Undo the x-axis visible area adjustment, otherwise we clip out tile data\n+\t\t// that is later used for x-scrolling.\n+\t\tx += 10 * tile_factor;\n+\n+\t\tuint16_t tile_idx = tile & 0x7ff;\n+\t\tbool is_sprite_tile_data_used = tile & 0x800;\n+\t\tgfx_element *gfx = m_gfxdecode->gfx(is_sprite_tile_data_used ? 1 : 0);\n+\t\tgfx->zoom_alpha(m_cache_layer, cache_bitmap_bounds,\n+\t\t\ttile_idx,\n+\t\t\t7,\n+\t\t\tflip_x,\n+\t\t\tflip_y,\n+\t\t\tx,\n+\t\t\ty,\n+\t\t\t0x10000,\n+\t\t\t0x10000,\n+\t\t\t0,\n+\t\t\t0xff);\n+\t}\n+\n+\t// Apply x-scrolling + wrap-around on each cached scanline and draw to screen bitmap\n+\tfor (int8_t yi = 0; yi < 32 / m_scale; yi++) {\n+\t\tfor (int8_t xi = 0; xi < 64; xi++) {\n+\t\t\tint32_t y = (yi - 0) * tile_factor;\n+\t\t\tint32_t x = (xi - 0) * tile_factor;\n+\n+\t\t\tfor (int8_t line_yi = 0; line_yi < tile_factor; line_yi++) {\n+\t\t\t\tint32_t dst_y = y + line_yi;\n+\t\t\t\tint32_t src_y = dst_y;\n+\n+\t\t\t\tuint16_t scroll_x_idx = scroll_idx;\n+\t\t\t\tif (y >= 0 && y < (0x90 / 4) * tile_factor) {\n+\t\t\t\t\tscroll_x_idx += (y + line_yi) * 2;\n+\t\t\t\t}\n+\n+\t\t\t\tfor (int8_t line_xi = 0; line_xi < tile_factor; line_xi++) {\n+\t\t\t\t\tint32_t dst_x = x + line_xi;\n+\t\t\t\t\tint32_t src_x = dst_x;\n+\n+\t\t\t\t\tdst_x = scroll_x(dst_x, scroll_x_idx);\n+\n+\t\t\t\t\t// Redo the x-axis visible area adjustment\n+\t\t\t\t\tdst_x -= 10 * tile_factor;\n+\n+\t\t\t\t\tif (dst_x * m_scale < cliprect.min_x\n+\t\t\t\t\t\t|| dst_x * m_scale > cliprect.max_x\n+\t\t\t\t\t\t|| dst_y * m_scale < cliprect.min_y\n+\t\t\t\t\t\t|| dst_y * m_scale > cliprect.max_y) {\n+\t\t\t\t\t\tcontinue; // Skip beyond screen size\n+\t\t\t\t\t}\n+\t\t\t\t\tif (src_x < m_cache_layer.cliprect().min_x\n+\t\t\t\t\t\t|| src_x > m_cache_layer.cliprect().max_x\n+\t\t\t\t\t\t|| src_y < m_cache_layer.cliprect().min_y\n+\t\t\t\t\t\t|| src_y > m_cache_layer.cliprect().max_y) {\n+\t\t\t\t\t\tcontinue; // Skip beyond cache size\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tuint32_t *src = &m_cache_layer.pix(src_y, src_x);\n+\t\t\t\t\tif (*src != 0) {\n+\t\t\t\t\t\tfor (size_t dyi = 0; dyi < m_scale; dyi++) {\n+\t\t\t\t\t\t\tfor (size_t dxi = 0; dxi < m_scale; dxi++) {\n+\t\t\t\t\t\t\t\tbitmap.pix(dyi + dst_y * m_scale, dxi + dst_x * m_scale) = *src;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+{\n+\tif ((m_video_regs[0x20/4] & 1) == 0) {\n+\t\treturn; // Disabled\n+\t}\n+\n+\tuint16_t *bitmap_data = reinterpret_cast<uint16_t *>(m_bitmap.target());\n+\n+\tuint16_t bitmap_full_w   = ((m_video_regs[0x20/4] >> 8)  & 0xff) << 4;\n+\tuint16_t bitmap_full_h   = ((m_video_regs[0x20/4] >> 16) & 0xff) << 4;\n+\tuint16_t bitmap_offset_x = ((m_video_regs[0x24/4] >> 0)  & 0x3ff);\n+\tuint16_t bitmap_offset_y = ((m_video_regs[0x24/4] >> 16) & 0x3ff);\n+\tuint16_t bitmap_scroll_x = ((m_video_regs[0x28/4] >> 0)  & 0x3ff);\n+\tuint16_t bitmap_scroll_y = ((m_video_regs[0x28/4] >> 16) & 0x3ff);\n+\tuint16_t bitmap_clip_w   = ((m_video_regs[0x2c/4] >> 0)  & 0x3ff);\n+\tuint16_t bitmap_clip_h   = ((m_video_regs[0x2c/4] >> 16) & 0x3ff);\n+\tuint32_t i = bitmap_offset_y * bitmap_full_w + bitmap_offset_x;\n+\tfor (size_t y = 0; y < bitmap_full_h * m_scale; y += m_scale) {\n+\t\tfor (size_t x = 0; x < bitmap_full_w * m_scale; x += m_scale) {\n+\t\t\tif (i >= 0xc6000/2) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tuint16_t color = bitmap_data[BYTE_XOR_BE(i)];\n+\t\t\ti++;\n+\n+\t\t\tif (color == 0\n+\t\t\t\t\t|| y >= bitmap_clip_h * m_scale\n+\t\t\t\t\t|| x >= bitmap_clip_w * m_scale\n+\t\t\t\t\t|| y + bitmap_scroll_y * m_scale > cliprect.max_y\n+\t\t\t\t\t|| x + bitmap_scroll_x * m_scale > cliprect.max_x) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tuint8_t r = pal5bit((color & 0x001f) >> 0);\n+\t\t\tuint8_t g = pal5bit((color & 0x03e0) >> 5);\n+\t\t\tuint8_t b = pal5bit((color & 0x7c00) >> 10);\n+\t\t\tuint32_t rgb = (b) | (g << 8) | (r << 16);\n+\t\t\tfor (size_t yi = 0; yi < m_scale; yi++) {\n+\t\t\t\tfor (size_t xi = 0; xi < m_scale; xi++) {\n+\t\t\t\t\tbitmap.pix(y + yi + bitmap_scroll_y * m_scale, x + xi + bitmap_scroll_x * m_scale) = rgb;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered) {\n+\tgfx_element *gfx = m_gfxdecode->gfx(1);\n+\n+\tuint16_t *tilemap_data = reinterpret_cast<uint16_t *>(m_tilemap_sprites.target());\n+\n+\t// For sprites to overlap as expected, they must be drawn in reverse order\n+\tfor (int16_t offset = 0x400/2 - 4; offset >= 0; offset -= 4) {\n+\t\tuint16_t priority =  tilemap_data[BYTE_XOR_BE(offset + 1)] & 0xff;\n+\t\tif ((priority > 0 && !is_overlay_rendered) || (priority == 0 && is_overlay_rendered)) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint32_t tile_pos = (tilemap_data[BYTE_XOR_BE(offset)] << 16) | tilemap_data[BYTE_XOR_BE(offset + 1)];\n+\t\tuint16_t y = (tile_pos >> 20) & 0x7ff;\n+\t\tuint16_t x = (tile_pos >> 8)  & 0x7ff;\n+\n+\t\tuint16_t flip_y = ((tile_pos >> 20) & 0x800) != 0;\n+\t\tuint16_t flip_x = ((tile_pos >> 8)  & 0x800) != 0;\n+\n+\t\tint16_t delta_factor = m_video_regs[0x38/4] & 0xff;\n+\t\tint16_t delta_x = 0;\n+\t\tint16_t delta_y = 0;\n+\t\tif (delta_factor == 0x2c) {\n+\t\t\tdelta_x = 14 * 16;\n+\t\t\tdelta_y =  7 * 16;\n+\t\t} else if (delta_factor == 0x20) {\n+\t\t\tdelta_x =  6 * 16;\n+\t\t\tdelta_y = -1 * 16;\n+\t\t}\n+\n+\t\tuint16_t tile_idx = tilemap_data[BYTE_XOR_BE(offset + 2)] & 0x7ff;\n+\t\tuint16_t tile_pattern_len = (tilemap_data[BYTE_XOR_BE(offset + 2)] & 0xf000) >> 12;\n+\n+\t\tif (tile_idx == 0 && x == 0 && y == 0)\n+\t\t\tcontinue;\n+\n+\t\tuint8_t pattern_x_len = ((tile_pattern_len % 4) + 1);\n+\t\tuint8_t pattern_y_len = ((tile_pattern_len / 4) + 1);\n+\t\tuint8_t pattern_i = 0;\n+\n+\t\tstd::vector<uint8_t> pattern_x_v(pattern_x_len);\n+\t\tstd::iota(pattern_x_v.begin(), pattern_x_v.end(), 0);\n+\t\tif (flip_x) {\n+\t\t\tstd::reverse(pattern_x_v.begin(), pattern_x_v.end());\n+\t\t}\n+\t\tstd::vector<uint8_t> pattern_y_v(pattern_y_len);\n+\t\tstd::iota(pattern_y_v.begin(), pattern_y_v.end(), 0);\n+\t\tif (flip_y) {\n+\t\t\tstd::reverse(pattern_y_v.begin(), pattern_y_v.end());\n+\t\t}\n+\t\tfor (size_t pattern_y : pattern_y_v) {\n+\t\t\tfor (size_t pattern_x : pattern_x_v) {\n+\t\t\t\t// FIXME: Can be transparent (e.g. pen cursor fade-in seen in \"Kazoku Minna no Nouryoku Trainer\")\n+\t\t\t\tgfx->zoom_alpha(bitmap, cliprect,\n+\t\t\t\t\ttile_idx + pattern_i++,\n+\t\t\t\t\t7,\n+\t\t\t\t\tflip_x,\n+\t\t\t\t\tflip_y,\n+\t\t\t\t\t(x + pattern_x * 16) * m_scale - (0x2c0 / 2) + delta_x,\n+\t\t\t\t\t(y + pattern_y * 16) * m_scale - (0x1e0 / 2) + delta_y,\n+\t\t\t\t\t0x10000 * m_scale,\n+\t\t\t\t\t0x10000 * m_scale,\n+\t\t\t\t\t0,\n+\t\t\t\t\t0xff);\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+void sega_9h0_0008_state::update_crosshair(screen_device &screen)\n+{\n+\t// Nothing (only the console uses a crosshair)\n+}\n+\n+uint32_t sega_9h0_0008_state::screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+{\n+\tupdate_crosshair(screen);\n+\n+\tbitmap.fill(m_palette->pen_color(0), cliprect);\n+\n+\tif ((m_video_regs[0x10/4] & 1) == 0) {\n+\t\tscreen_blend(bitmap, cliprect);\n+\n+\t\treturn 0; // Disabled\n+\t}\n+\n+\tuint16_t *shared16_tilemap_bg = reinterpret_cast<uint16_t *>(m_tilemap_bg.target());\n+\tuint16_t *shared16_tilemap_fg = reinterpret_cast<uint16_t *>(m_tilemap_fg.target());\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x3000)) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_bg, 1, (m_video_regs[0x10/4] & 4) != 0, false);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x2000)) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_fg, 0, (m_video_regs[0x10/4] & 2) != 0, false);\n+\n+\tbool is_bitmap_after_sprites = (m_video_regs[0x20/4] & 0x10) != 0;\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x1000) && !is_bitmap_after_sprites) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_sprites(bitmap, cliprect, false);\n+\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_bg, 1, (m_video_regs[0x10/4] & 4) != 0, true);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0) && !is_bitmap_after_sprites) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\t// TV bottom frame in front of running dog in \"Partner in TV\"\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_fg, 0, (m_video_regs[0x10/4] & 2) != 0, true);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x1000) && is_bitmap_after_sprites) {\n+\t\t// Minimap after lamp posts in \"Cars 2\" bridge section\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_sprites(bitmap, cliprect, true);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0) && is_bitmap_after_sprites) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tscreen_blend(bitmap, cliprect);\n+\n+\t// Invalidate on VBLANK: the latest entries are kept by m_palette.\n+\tfor (int i = 0; i < SCREEN_H; i++)\n+\t\tfor (int offset = 0; offset < 0x100; offset++)\n+\t\t\tm_cache_palette[i * 0x100 + offset] = 0;\n+\n+\treturn 0;\n+}\n+\n+void sega_9h0_0008_state::screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+{\n+\tuint8_t alpha_r_step = (m_video_regs[0x30/4] >>  0) & 0x3f;\n+\tuint8_t alpha_g_step = (m_video_regs[0x30/4] >>  8) & 0x3f;\n+\tuint8_t alpha_b_step = (m_video_regs[0x30/4] >> 16) & 0x3f;\n+\n+\tuint8_t alpha_r = rescale_alpha_step(alpha_r_step);\n+\tuint8_t alpha_g = rescale_alpha_step(alpha_g_step);\n+\tuint8_t alpha_b = rescale_alpha_step(alpha_b_step);\n+\n+\tuint8_t blend_r = alpha_r_step < 0x20 ? 0xff : 0;\n+\tuint8_t blend_g = alpha_g_step < 0x20 ? 0xff : 0;\n+\tuint8_t blend_b = alpha_b_step < 0x20 ? 0xff : 0;\n+\tuint32_t blend_rgb = blend_b | (blend_g << 8) | (blend_r << 16);\n+\n+\tfor (size_t y = cliprect.min_y; y <= cliprect.max_y; y++) {\n+\t\tfor (size_t x = cliprect.min_x; x <= cliprect.max_x; x++) {\n+\t\t\tuint32_t *dst = &bitmap.pix(y, x);\n+\t\t\t*dst = alpha_blend_rgb_levels(blend_rgb, *dst, alpha_b, alpha_r, alpha_g);\n+\t\t}\n+\t}\n+}\n+\n+/**\n+ * Similar to sega_9h0_0008_state::rescale(),\n+ * but the step can either lighten (e.g. video debug flag `0xc00c7cc7 = 1`\n+ * in \"Soreike! Anpanman Hajimete Kaketa yo! Oboeta yo! Hiragana Katakana\"\n+ * or darken (e.g. screen fadeout).\n+ */\n+int32_t sega_9h0_0008_state::rescale_alpha_step(uint8_t step)\n+{\n+\treturn step < 0x20 ? rescale(step, 0, 0x1f, 0xff, 0) : rescale(step, 0x20, 0x3f, 0, 0xff);\n+}\n+\n+/**\n+ * Similar to drawgfx::alpha_blend_r32(), but distinct levels are applied to each channel.\n+ */\n+constexpr uint32_t sega_9h0_0008_state::alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r)\n+{\n+\treturn ((((src & 0x0000ff) * level_r + (dst & 0x0000ff) * int(256 - level_r)) >> 8)) |\n+\t\t\t((((src & 0x00ff00) * level_g + (dst & 0x00ff00) * int(256 - level_g)) >> 8) & 0x00ff00) |\n+\t\t\t((((src & 0xff0000) * level_b + (dst & 0xff0000) * int(256 - level_b)) >> 8) & 0xff0000);\n+}\n+\n+void sega_9h0_0008_state::request_irq()\n+{\n+\tm_maincpu->set_input_line(ARM7_IRQ_LINE, ASSERT_LINE);\n+\tm_maincpu->set_input_line(ARM7_IRQ_LINE, CLEAR_LINE);\n+}\n+\n+void sega_9h0_0008_state::request_fiq()\n+{\n+\tif (m_requested_fiq) {\n+\t\tm_maincpu->set_input_line(ARM7_FIRQ_LINE, ASSERT_LINE);\n+\t\tm_maincpu->set_input_line(ARM7_FIRQ_LINE, CLEAR_LINE);\n+\n+\t\tm_requested_fiq = false;\n+\t}\n+}\n+\n+void sega_9h0_0008_state::update_rtc()\n+{\n+\tsystem_time systime;\n+\tmachine().current_datetime(systime);\n+\tm_rtc[0] = systime.local_time.second;\n+\tm_rtc[1] = systime.local_time.minute;\n+\tm_rtc[2] = systime.local_time.hour;\n+\tm_rtc[3] = systime.local_time.mday;\n+\tm_rtc[4] = systime.local_time.weekday;\n+\tm_rtc[5] = systime.local_time.month;\n+\tm_rtc[6] = systime.local_time.year - 2000;\n+}\n+\n+void sega_9h0_0008_state::sega_9h0_0008(machine_config &config)\n+{\n+\tAP2010CPU(config, m_maincpu, 81'000'000);\n+\tm_maincpu->set_addrmap(AS_PROGRAM, &sega_9h0_0008_state::beena_arm7_map);\n+\n+\tSCREEN(config, m_screen_main, SCREEN_TYPE_RASTER);\n+\tm_screen_main->set_refresh_hz(60);\n+\tm_screen_main->set_vblank_time(ATTOSECONDS_IN_USEC(0));\n+\tm_screen_main->set_size(SCREEN_W, SCREEN_H);\n+\tm_screen_main->set_visarea(0, SCREEN_W-1, 0, SCREEN_H-1);\n+\tm_screen_main->set_screen_update(FUNC(sega_9h0_0008_state::screen_update));\n+\n+\tTIMER(config, \"scantimer\").configure_scanline(FUNC(sega_9h0_0008_state::scanline), m_screen_main, 0, 1);\n+\n+\tPALETTE(config, m_palette).set_entries(0x100);\n+\n+\tGFXDECODE(config, m_gfxdecode, m_palette, gfxdecode_device::empty);\n+\n+\tconfig.set_default_layout(layout_beena);\n+\n+\tSPEAKER(config, \"speaker\").front_center();\n+\tAP2010PCM(config, m_pcm); // Unknown clock\n+\tm_pcm->add_route(ALL_OUTPUTS, \"speaker\", 1.0);\n+\n+\tSOFTWARE_LIST(config, \"cart_list\").set_original(\"sega_beena_cart\");\n+}\n+\n+\n+class sega_beena_state : public sega_9h0_0008_state\n+{\n+public:\n+\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\t\t: sega_9h0_0008_state(mconfig, type, tag)\n+\t\t, m_io_page(*this, \"PAGE\")\n+\t\t, m_io_pad_left(*this, \"PAD_LEFT\")\n+\t\t, m_io_pad_right(*this, \"PAD_RIGHT\")\n+\t\t, m_io_pen_left(*this, \"PEN_LEFT\")\n+\t\t, m_io_pen_right(*this, \"PEN_RIGHT\")\n+\t\t, m_io_pen_x(*this, \"PENX\")\n+\t\t, m_io_pen_y(*this, \"PENY\")\n+\t{ }\n+\n+\tvoid sega_beena(machine_config &config);\n+\n+\tvirtual DECLARE_CROSSHAIR_MAPPER_MEMBER(pen_y_mapper);\n+\n+private:\n+\tvirtual void machine_start() override;\n+\tvirtual void machine_reset() override;\n+\n+\tDECLARE_DEVICE_IMAGE_LOAD_MEMBER(cart_load);\n+\tvirtual void install_game_rom() override;\n+\tvirtual void update_crosshair(screen_device &screen) override;\n+\tvirtual void update_sensors(offs_t offset) override;\n+\n+\trequired_ioport m_io_page;\n+\trequired_ioport m_io_pad_left;\n+\trequired_ioport m_io_pad_right;\n+\trequired_ioport m_io_pen_left;\n+\trequired_ioport m_io_pen_right;\n+\trequired_ioport m_io_pen_x;\n+\trequired_ioport m_io_pen_y;\n+};\n+\n void sega_beena_state::machine_start()\n {\n-\t// if there's a cart, override the standard mapping\n-\tif (m_cart && m_cart->exists())\n-\t{\n+\tsega_9h0_0008_state::machine_start();\n+}\n+\n+void sega_beena_state::machine_reset()\n+{\n+\tsega_9h0_0008_state::machine_reset();\n+}\n+\n+void sega_beena_state::sega_beena(machine_config &config)\n+{\n+\tsega_9h0_0008_state::sega_9h0_0008(config);\n+\n+\tGENERIC_CARTSLOT(config, m_cart, generic_plain_slot, \"sega_beena_cart\");\n+\tm_cart->set_endian(ENDIANNESS_BIG);\n+\tm_cart->set_width(GENERIC_ROM32_WIDTH);\n+\tm_cart->set_device_load(FUNC(sega_beena_state::cart_load));\n+\tm_cart->set_must_be_loaded(false);\n+}\n+\n+void sega_beena_state::install_game_rom()\n+{\n+\tif (m_cart->exists()) {\n \t\tstd::string region_tag;\n-\t\tm_cart_region = memregion(region_tag.assign(m_cart->tag()).append(GENERIC_ROM_REGION_TAG).c_str());\n+\t\tmemory_region *cart_rom = memregion(region_tag.assign(m_cart->tag()).append(\":cart:rom\"));\n+\t\tuint32_t *rom32 = reinterpret_cast<uint32_t *>(cart_rom->base());\n+\n+\t\t/*\n+\t\t    ROM header contains a field for the base address which we can use to map\n+\t\t    the corresponding address range. On hardware, this mapping is done by the BIOS when\n+\t\t    writing to the following registers:\n+\n+\t\t        0x60020004=0x1ff and 0x60020010=0xa5: ROM_MASK_BASE mapped when the cart has a mask ROM;\n+\t\t        0x60020004=0x3fc and 0x60020010=0x90: ROM_FLASH_BASE mapped when the cart has a flash ROM;\n+\n+\t\t    Signatures on each address map are then checked to choose which one will run game code.\n \n-\t\tm_bank->configure_entries(0, (m_cart_region->bytes() + 0x7fffff) / 0x800000, m_cart_region->base(), 0x800000);\n+\t\t    It's possible to force some invalid mappings which result in the console hanging during reads.\n+\t\t    For example, setting 0x60020004=0x1ff and 0x60020010=0x90 will map both address ranges\n+\t\t    when the cart has a mask ROM.\n+\t\t*/\n+\t\tuint32_t base_address = rom32[0xdc/4];\n+\t\tif (base_address != ROM_MASK_BASE && base_address != ROM_FLASH_BASE) {\n+\t\t\tosd_printf_warning(\"Unknown base address '%08x' parsed from ROM, defaulting to '%08x'...\\n\", base_address, ROM_MASK_BASE);\n+\t\t\tbase_address = ROM_MASK_BASE;\n+\t\t}\n+\t\tm_maincpu->space(AS_PROGRAM).install_rom(base_address, base_address + 0x7fffff, 0x800000, cart_rom->base());\n \t}\n-\telse\n-\t\tm_bank->configure_entries(0, 1, memregion(\"bios\")->base(), 0x800000);\n+}\n \n-\tm_bank->set_entry(0);\n+void sega_beena_state::update_crosshair(screen_device &screen)\n+{\n+\t// Show crosshair on single screen with storyware pen target\n+\tmachine().crosshair().get_crosshair(0).set_screen(m_pen_target == 0 ? CROSSHAIR_SCREEN_NONE : &screen);\n }\n \n-void sega_beena_state::machine_reset()\n+void sega_beena_state::update_sensors(offs_t offset)\n {\n+\tsega_9h0_0008_state::update_sensors(offset);\n+\n+\tuint16_t io_page = 0;\n+\tint16_t io_pen_x = 0;\n+\tint16_t io_pen_y = 0;\n+\tint16_t io_pen_x_min = m_io_pen_x->field(0xff)->minval();\n+\tint16_t io_pen_x_max = m_io_pen_x->field(0xff)->maxval();\n+\tint16_t io_pen_y_min = m_io_pen_y->field(0xff)->minval();\n+\tint16_t io_pen_y_max = m_io_pen_y->field(0xff)->maxval();\n+\tint16_t pen_y_min = io_pen_y_min;\n+\tint16_t pen_y_max = io_pen_y_max;\n+\tuint32_t pen_pressed = 0;\n+\tuint32_t pen_data = 0;\n+\tuint8_t pen_target = 0;\n+\n+\tbool is_tablet = true;\n+\tbool is_test_mode = m_io_page_config->read() == 0;\n+\n+\tswitch (offset) {\n+\t\t// Pen position + button press state.\n+\t\t//\n+\t\t// A minimum of 3 readings must be parsed, otherwise effective pen position is not computed.\n+\t\t// Later games seem to only require 2 readings.\n+\t\t//\n+\t\t// Each reading encodes bits `pyyy yyyy yyyx xxxx xxxx`, where `p` is 1 on pen button pressed.\n+\t\t//\n+\t\t// Offsets of readings for each pen are given by 3 bits set at 0x50020000:\n+\t\t// - e.g. for 1st pen, 0x50020000=0x05 will parse 0x50020008, and 0x50020010, ignoring 0x5002000c;\n+\t\t// - e.g. for 2nd pen, 0x50020000=0x70 will parse 0x50020018, 0x5002001c, and 0x50020020;\n+\t\t//\n+\t\t// TODO: Check how 2 connected pens are reported. Regardless of where a single pen is connected\n+\t\t// (ports marked on PCB as CN12 or CN13), the first set of offsets is updated.\n+\t\t//\n+\t\t// 1st pen's 1st reading.\n+\t\tcase 0x8/4:\n+\t\t// 1st pen's 2nd reading.\n+\t\tcase 0xc/4:\n+\t\t// 1st pen's 3rd reading.\n+\t\tcase 0x10/4:\n+\t\t\tio_pen_x = m_io_pen_x->read();\n+\t\t\tio_pen_y = m_io_pen_y->read();\n+\n+\t\t\tpen_target = (m_io_pen_left->read() & 2) >> 1;\n+\t\t\tif ((m_pen_previous_input ^ pen_target) != 0) {\n+\t\t\t\tm_pen_previous_input = pen_target;\n+\t\t\t\tif (pen_target == 1) {\n+\t\t\t\t\tm_pen_target ^= 1;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// The y-position is used to distinguish between pen targets:\n+\t\t\t// - Tablet:    0x338..0x248\n+\t\t\t// - Storyware: 0x3b8..0x342\n+\t\t\t//\n+\t\t\t// The storyware's coordinates don't reach maximum screen positions (games don't compute\n+\t\t\t// effective pen positions if such values are forced), possibly to account for page tab gaps.\n+\t\t\t// Applying the same displacements to rescaled positions also results in more accurate mappings.\n+\t\t\t//\n+\t\t\t// FIXME: Confirm displacements with hardware tests.\n+\t\t\tis_tablet = m_pen_target == 0;\n+\t\t\tif (is_tablet) {\n+\t\t\t\t// screen x-position [0..0x2c0]\n+\t\t\t\tio_pen_x = rescale(io_pen_x, io_pen_x_min, io_pen_x_max, 0x1b8, 0x58);\n+\t\t\t\t// screen y-position [0..0x1e0]\n+\t\t\t\tio_pen_y = rescale(io_pen_y, pen_y_min, pen_y_max, 0x338, 0x248);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\t// screen x-position [8..0x2bc], off-by-4 upper bound?\n+\t\t\t\tio_pen_x = rescale(io_pen_x, io_pen_x_min+8, io_pen_x_max-8, 0x1b6, 0x109);\n+\t\t\t\t// screen y-position [0..0x1d8]\n+\t\t\t\tio_pen_y = rescale(io_pen_y, pen_y_min+8, pen_y_max, 0x3b8, 0x342);\n+\t\t\t}\n+\t\t\tpen_pressed = (m_io_pen_left->read() & 1) ? 0x80000 : 0;\n+\t\t\tpen_data = (io_pen_y << 9) | io_pen_x | pen_pressed;\n+\t\t\tLOG(\"Pen on %s(%d): x=%04x,y=%04x => %08x\",\n+\t\t\t\tis_tablet ? \"tablet\" : \"storyware\",\n+\t\t\t\tm_pen_target,\n+\t\t\t\tio_pen_x,\n+\t\t\t\tio_pen_y,\n+\t\t\t\tpen_data);\n+\n+\t\t\tm_io_sensor_regs[offset] = pen_data;\n+\t\t\tbreak;\n+\t\t// Pages 1 to 4, one for each byte value.\n+\t\t// We'll just threshold them to 0x00 (open) and 0xff (closed).\n+\t\tcase 0x2c/4:\n+\t\t\tio_page = m_io_page->read();\n+\t\t\tif (is_test_mode) {\n+\t\t\t\tm_io_sensor_regs[offset] = 0xff00ff00;\n+\t\t\t\tm_effective_page = 6;\n+\t\t\t} else if ((m_pages_previous_input ^ io_page) != 0) {\n+\t\t\t\tm_pages_previous_input = io_page;\n+\n+\t\t\t\tif (io_page == 1 && m_effective_page < 6) {\n+\t\t\t\t\tm_effective_page++;\n+\t\t\t\t} else if (io_page == 2 && m_effective_page > 0) {\n+\t\t\t\t\tm_effective_page--;\n+\t\t\t\t}\n+\n+\t\t\t\tm_io_sensor_regs[offset] = (0xffffffffULL >> (m_effective_page * 8));\n+\t\t\t}\n+\n+\t\t\tbreak;\n+\t\t// Pages 5 to 6, encodes bytes `XX AA BB YY`\n+\t\t// - XX: unused? always 0x00 on hardware;\n+\t\t// - YY: needs to be parsed as open for effective page computation (TODO: is this a sensor?);\n+\t\t// - AA: page 5;\n+\t\t// - BB: page 6;\n+\t\tcase 0x30/4:\n+\t\t\tif (is_test_mode) {\n+\t\t\t\tm_io_sensor_regs[offset] = 0xffff00ff;\n+\t\t\t} else {\n+\t\t\t\tswitch (m_effective_page) {\n+\t\t\t\t\tcase 5:\n+\t\t\t\t\t\tm_io_sensor_regs[offset] = 0x0000ff00;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase 6:\n+\t\t\t\t\t\tm_io_sensor_regs[offset] = 0x00000000;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\tm_io_sensor_regs[offset] = 0x00ffff00;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tbreak;\n+\t\t// Left and right pads, encodes bits `XXXX XXAB CDEF GHIJ`\n+\t\t// - X: unused?\n+\t\t// - ABCDE: red + directional buttons of left pad;\n+\t\t// - FGHIJ: red + directional buttons of right pad;\n+\t\tcase 0x34/4:\n+\t\t\tm_io_sensor_regs[offset] = ((m_io_pad_left->read() << 5) | m_io_pad_right->read()) & 0x3ff;\n+\t\t\tbreak;\n+\t}\n }\n \n DEVICE_IMAGE_LOAD_MEMBER(sega_beena_state::cart_load)\n {\n \tuint32_t const size = m_cart->common_get_size(\"rom\");\n \n-\tm_cart->rom_alloc(size, GENERIC_ROM16_WIDTH, ENDIANNESS_LITTLE);\n+\tm_cart->rom_alloc(size, GENERIC_ROM32_WIDTH, ENDIANNESS_BIG);\n \tm_cart->common_load_rom(m_cart->get_rom_base(), size, \"rom\");\n \n+\tif (!image.loaded_through_softlist()) {\n+\t\t// loadflags weren't parsed, start by manually applying `endianness=\"big\"`,\n+\t\t// taking into consideration the host's endianness.\n+\t\tuint32_t *rom32 = reinterpret_cast<uint32_t *>(m_cart->get_rom_base());\n+\t\tfor (size_t i = 0; i < size / 4; i++) {\n+\t\t\trom32[i] = big_endianize_int32(rom32[i]);\n+\t\t}\n+\t\t// Afterwards apply `load16_word_swap`, regardless of host's endianness,\n+\t\t// since this reflects how ROM data was stored, not the CPU's architecture.\n+\t\tuint16_t *rom16 = reinterpret_cast<uint16_t *>(m_cart->get_rom_base());\n+\t\tfor (size_t i = 0; i < size / 2; i++) {\n+\t\t\trom16[i] = swapendian_int16(rom16[i]);\n+\t\t}\n+\t}\n+\n \treturn std::make_pair(std::error_condition(), std::string());\n }\n \n-static INPUT_PORTS_START( sega_beena )\n-INPUT_PORTS_END\n+CROSSHAIR_MAPPER_MEMBER(sega_beena_state::pen_y_mapper)\n+{\n+\t// TODO: Either remove or adapt for Storyware layout\n+\treturn linear_value;\n+}\n \n \n-uint32_t sega_beena_state::screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+class tvochken_state : public sega_9h0_0008_state\n {\n-\treturn 0;\n+public:\n+\ttvochken_state(const machine_config &mconfig, device_type type, const char *tag)\n+\t\t: sega_9h0_0008_state(mconfig, type, tag)\n+\t\t, m_io_buttons(*this, \"BUTTONS\")\n+\t\t, m_io_cards(*this, \"CARDS\")\n+\t\t{ }\n+\n+\tvoid tvochken(machine_config &config);\n+\n+\tvirtual uint32_t io_expansion_r() override;\n+\n+private:\n+\tvirtual void machine_start() override;\n+\tvirtual void machine_reset() override;\n+\n+\tvirtual void install_game_rom() override;\n+\n+\trequired_ioport m_io_buttons;\n+\trequired_ioport m_io_cards;\n+\tuint8_t m_card_previous_input;\n+\n+\tenum card_state : uint8_t\n+\t{\n+\t\tIDLE = 0,\n+\t\tSTART_WRITE_DATA,\n+\t\tWRITE_DATA,\n+\t};\n+\tuint8_t m_card_i;\n+\tuint16_t m_card_data;\n+\tuint8_t m_card_data_i;\n+\tuint8_t m_card_state;\n+\tuint8_t m_card_hold_i;\n+\tuint8_t m_card_status;\n+};\n+\n+void tvochken_state::machine_start()\n+{\n+\tsega_9h0_0008_state::machine_start();\n+\n+\tsave_item(NAME(m_card_i));\n+\tsave_item(NAME(m_card_data));\n+\tsave_item(NAME(m_card_data_i));\n+\tsave_item(NAME(m_card_hold_i));\n+\tsave_item(NAME(m_card_state));\n+\tsave_item(NAME(m_card_status));\n }\n \n-void sega_beena_state::sega_beena(machine_config &config)\n+void tvochken_state::machine_reset()\n {\n-\tARM7_BE(config, m_maincpu, 81'000'000);\n-\tm_maincpu->set_addrmap(AS_PROGRAM, &sega_beena_state::beena_arm7_map);\n+\tsega_9h0_0008_state::machine_reset();\n \n-\tscreen_device &screen(SCREEN(config, \"screen\", SCREEN_TYPE_RASTER));\n-\tscreen.set_refresh_hz(60);\n-\tscreen.set_vblank_time(ATTOSECONDS_IN_USEC(0));\n-\tscreen.set_size(640, 480);\n-\tscreen.set_visarea(0, 640-1, 0, 480-1);\n-\tscreen.set_screen_update(FUNC(sega_beena_state::screen_update));\n+\tm_card_previous_input = 0;\n \n-\tSPEAKER(config, \"lspeaker\").front_left();\n-\tSPEAKER(config, \"rspeaker\").front_right();\n+\tm_card_i = 0;\n+\tm_card_data = 0;\n+\tm_card_data_i = 0;\n+\tm_card_hold_i = 0;\n+\tm_card_state = IDLE;\n+\tm_card_status = 0;\n+}\n \n-\tGENERIC_CARTSLOT(config, m_cart, generic_plain_slot, \"sega_beena_cart\");\n-\tm_cart->set_width(GENERIC_ROM16_WIDTH);\n-\tm_cart->set_device_load(FUNC(sega_beena_state::cart_load));\n-\tm_cart->set_must_be_loaded(true);\n+void tvochken_state::tvochken(machine_config &config)\n+{\n+\tsega_9h0_0008_state::sega_9h0_0008(config);\n+}\n \n-\tSOFTWARE_LIST(config, \"cart_list\").set_original(\"sega_beena_cart\");\n+/**\n+ * Each scanned barcode is compared against these values taken from\n+ * an in-memory table at 0xc00d0f9c. Valid barcodes always have the\n+ * last bit set.\n+ */\n+static const uint16_t card_barcodes[] = {\n+\t0x900a, 0xa05a, 0xb0aa, 0x90ca, 0x910a,\n+\t0x914a, 0x918a, 0x91ca, 0x920a, 0xa25a,\n+\t0x928a, 0x92ca, 0xa312, 0x934a, 0x938a,\n+\t0x93ca, 0xa41a, 0x944a, 0x948a, 0xb4da,\n+\t0xb512, 0xa55a, 0x958a, 0x95ca, 0x960a,\n+\t0x964a, 0xb69a, 0x96ca, 0x970a, 0x974a,\n+\t0x978a, 0x97ca, 0x980a, 0x984a, 0xa892,\n+\t0xa8da, 0xa91a, 0xa952, 0x998a, 0xb9da,\n+\t0xaa1a, 0x9a4a, 0x9a8a, 0x9aca, 0xab12,\n+\t0xab52, 0xbba2, 0xabd2, 0x9c0a, 0x9c4a\n+};\n+\n+/**\n+ * Combines all inputs:\n+ * - Pressed buttons\n+ *   - bit 1: A;\n+ *   - bit 2: B;\n+ *   - bit 3: C;\n+ * - Scanned card barcode\n+ *   - bit 5: current data bit to read from 16-bit value;\n+ *   - bit 6: status for advancing data bit position;\n+ *\n+ * Parsing protocol at function 0xa0001240 doesn't seem to use any\n+ * control commands to start parsing either input. It expects each parsed barcode\n+ * to take several reads before advancing to the next data bit. We handle this\n+ * by holding the value for a few reads, which also covers reads unrelated\n+ * to barcodes.\n+ */\n+uint32_t tvochken_state::io_expansion_r()\n+{\n+\tif ((m_io_auxiliary_regs[0x8/4] & 0xff) != 0) {\n+\t\treturn 0x98 | m_io_buttons->read();\n+\t}\n+\n+\tconst uint8_t data = m_io_cards->read();\n+\tif (m_card_previous_input != data) {\n+\t\tm_card_previous_input = data;\n+\t\tif (data == 0x1 || data == 0x2) {\n+\t\t\tif (data == 0x2) {\n+\t\t\t\tif (m_card_i < 49) {\n+\t\t\t\t\tm_card_i++;\n+\t\t\t\t} else {\n+\t\t\t\t\tm_card_i = 0;\n+\t\t\t\t}\n+\t\t\t} else if (data == 0x1) {\n+\t\t\t\tif (m_card_i > 0) {\n+\t\t\t\t\tm_card_i--;\n+\t\t\t\t} else {\n+\t\t\t\t\tm_card_i = 49;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tLOG(\"selected card: %d\\n\", m_card_i + 1);\n+\t\t} else if (m_card_state == IDLE && data == 0x4) {\n+\t\t\tm_card_data = card_barcodes[m_card_i];\n+\t\t\tm_card_hold_i = 10;\n+\t\t\tm_card_state = START_WRITE_DATA;\n+\t\t\tLOG(\"scanning card: %d -> %04x\\n\", m_card_i + 1, m_card_data);\n+\t\t}\n+\t}\n+\n+\tif (m_card_state == START_WRITE_DATA) {\n+\t\tm_card_hold_i--;\n+\t\tif (m_card_hold_i == 0) {\n+\t\t\tm_card_hold_i = 10;\n+\t\t\tm_card_data_i = 0;\n+\t\t\tm_card_status = 0;\n+\t\t\tm_card_state = WRITE_DATA;\n+\t\t}\n+\n+\t\treturn 0x98 | (1 << 5) | m_io_buttons->read();\n+\t}\n+\n+\tif (m_card_state == WRITE_DATA) {\n+\t\tuint8_t data_bit = (m_card_data >> (15 - m_card_data_i)) & 1;\n+\t\tLOG(\"write card: bit %d -> %d (sync %d)\\n\", m_card_data_i, data_bit, m_card_status);\n+\n+\t\tm_card_hold_i--;\n+\t\tif (m_card_hold_i == 0) {\n+\t\t\tm_card_hold_i = 10;\n+\t\t\tm_card_status ^= 1;\n+\t\t\tm_card_data_i++;\n+\t\t\tif (m_card_data_i == 16) {\n+\t\t\t\tm_card_data_i = 0;\n+\t\t\t\tm_card_status = 0;\n+\t\t\t\tm_card_state = IDLE;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn 0x98 | (m_card_status << 6) | (data_bit << 5) | m_io_buttons->read();\n+\t}\n+\n+\treturn 0x98 | m_io_buttons->read();\n+}\n+\n+void tvochken_state::install_game_rom()\n+{\n+\tmemory_region *rom = memregion(\"flash_rom\");\n+\tm_maincpu->space(AS_PROGRAM).install_rom(ROM_FLASH_BASE, ROM_FLASH_BASE + 0x7fffff, 0x800000, rom->base());\n }\n \n+\n+static INPUT_PORTS_START( sega_9h0_0008 )\n+\tPORT_START(\"VIDEO_CONFIG\")\n+\tPORT_CONFNAME( 0x80, 0x00, \"Video Output\" )\n+\tPORT_CONFSETTING( 0x00, DEF_STR( On ) )\n+\tPORT_CONFSETTING( 0x80, DEF_STR( Off ) )\n+\n+\tPORT_START(\"PAGE_CONFIG\")\n+\tPORT_CONFNAME( 0x80, 0x80, \"Test Mode Pages\" )\n+\tPORT_CONFSETTING( 0x00, DEF_STR( On ) )\n+\tPORT_CONFSETTING( 0x80, DEF_STR( Off ) )\n+\n+\tPORT_START(\"CPU_CONFIG\")\n+\tPORT_CONFNAME( 0x0f, 0x01, \"IRQ Frequency\" )\n+\tPORT_CONFSETTING( 0x01, \"1 (Once every VBLANK)\" )\n+\tPORT_CONFSETTING( 0x02, \"2\" )\n+\tPORT_CONFSETTING( 0x03, \"3\" )\n+\tPORT_CONFSETTING( 0x04, \"4\" )\n+\tPORT_CONFSETTING( 0x05, \"5\" )\n+\tPORT_CONFNAME( 0x10, 0x10, \"IRQ Wait Speedup\" )\n+\tPORT_CONFSETTING( 0x00, DEF_STR( On ) )\n+\tPORT_CONFSETTING( 0x10, DEF_STR( Off ) )\n+\tPORT_CONFNAME( 0x60, 0x20, \"Memory Cache\" )\n+\tPORT_CONFSETTING( 0x20, DEF_STR( On ) )\n+\tPORT_CONFSETTING( 0x40, DEF_STR( Off ) )\n+INPUT_PORTS_END\n+\n+static INPUT_PORTS_START( sega_beena )\n+\tPORT_INCLUDE( sega_9h0_0008 )\n+\n+\tPORT_START(\"PAD_LEFT\")\n+\tPORT_BIT( 0x0001, IP_ACTIVE_LOW, IPT_JOYSTICKLEFT_UP ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0002, IP_ACTIVE_LOW, IPT_JOYSTICKLEFT_DOWN ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0004, IP_ACTIVE_LOW, IPT_JOYSTICKLEFT_LEFT ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0008, IP_ACTIVE_LOW, IPT_JOYSTICKLEFT_RIGHT ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_BUTTON1 ) PORT_PLAYER(1) PORT_NAME(\"Left Red Button\")\n+\n+\tPORT_START(\"PAD_RIGHT\")\n+\tPORT_BIT( 0x0001, IP_ACTIVE_LOW, IPT_JOYSTICKRIGHT_UP ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0002, IP_ACTIVE_LOW, IPT_JOYSTICKRIGHT_DOWN ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0004, IP_ACTIVE_LOW, IPT_JOYSTICKRIGHT_LEFT ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0008, IP_ACTIVE_LOW, IPT_JOYSTICKRIGHT_RIGHT ) PORT_8WAY PORT_PLAYER(1)\n+\tPORT_BIT( 0x0010, IP_ACTIVE_LOW, IPT_BUTTON2 ) PORT_PLAYER(1) PORT_NAME(\"Right Red Button\")\n+\n+\tPORT_START(\"PEN_LEFT\")\n+\tPORT_BIT( 0x01, IP_ACTIVE_HIGH, IPT_BUTTON3 ) PORT_PLAYER(1) PORT_NAME(\"Left Pen Button\")\n+\tPORT_BIT( 0x02, IP_ACTIVE_HIGH, IPT_BUTTON4 ) PORT_PLAYER(1) PORT_NAME(\"Left Pen Target\")\n+\n+\tPORT_START(\"PEN_RIGHT\")\n+\tPORT_BIT( 0x01, IP_ACTIVE_HIGH, IPT_BUTTON5 ) PORT_PLAYER(1) PORT_NAME(\"Right Pen Button\")\n+\tPORT_BIT( 0x02, IP_ACTIVE_HIGH, IPT_BUTTON6 ) PORT_PLAYER(1) PORT_NAME(\"Right Pen Target\")\n+\n+\tPORT_START(\"PAGE\")\n+\tPORT_BIT( 0x01, IP_ACTIVE_LOW, IPT_BUTTON7 ) PORT_PLAYER(1) PORT_NAME(\"Decrement Page\")\n+\tPORT_BIT( 0x02, IP_ACTIVE_LOW, IPT_BUTTON8 ) PORT_PLAYER(1) PORT_NAME(\"Increment Page\")",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "eebd733f4f8e0e5cb88743f7cf54d7e9d4969880",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Nice, simplifies a bit of the parsing logic. I had to include a `PORT_CODE(JOYCODE_X)` just to avoid it mapping by default to the mouse, to avoid conflicts with the pen's lightgun mapping.",
                "created_at": "2023-10-26T21:31:53Z",
                "updated_at": "2023-10-26T21:31:53Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373837635",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373837635"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373837635"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373837635/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": 2123,
                "start_side": "RIGHT",
                "line": null,
                "original_line": 2125,
                "side": "RIGHT",
                "in_reply_to_id": 1372151714,
                "original_position": 2150,
                "position": null,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:31:53Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:31:53Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882395270",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700674807,
                "node_id": "PRR_kwDOANo_SM5lXjz3",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "eebd733f4f8e0e5cb88743f7cf54d7e9d4969880",
                "submitted_at": "2023-10-26T21:31:53Z",
                "state": "commented",
                "html_url": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700674807",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700674807"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:31:53Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:31:53Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882309241",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373833642",
                "pull_request_review_id": 1700669358,
                "id": 1373833642,
                "node_id": "PRRC_kwDOANo_SM5R4wmq",
                "diff_hunk": "@@ -71,131 +102,2074 @@\n         B18 A8\n         B19 A19\n         B20 A20\n-        B21 N/C\n+        B21 WE (for Flashrom)\n         B22 A21\n         B23 VCC\n         B24 N/C\n         B25 GND\n \n+    Storyware\n+    ---------\n+\n+    Although no booklet artwork is rendered, toggling input port 'Pen Target'\n+    switches between mapping pen coordinates to the tablet or the Storyware.\n+\n+    Test Mode\n+    ---------\n+\n+    Most games contain a hidden test mode that can be activated by the same inputs:\n+\n+        Pages 1, 3, and 5 covered, the others exposed;\n+        Left red button held down;\n+\n+    If the machine configuration 'Test Mode Pages' is enabled, the driver forces this page setup,\n+    so that the player only needs to hold the left red button at reset to activate this mode.\n+\n+    Toggling 'Memory Cache' allows the player to observe differences between test failure and success.\n+\n *******************************************************************************/\n \n #include \"emu.h\"\n \n #include \"bus/generic/slot.h\"\n #include \"bus/generic/carts.h\"\n-#include \"cpu/arm7/arm7.h\"\n+#include \"cpu/arm7/ap2010cpu.h\"\n+#include \"machine/clock.h\"\n+#include \"machine/timer.h\"\n+#include \"sound/ap2010pcm.h\"\n \n+#include \"crsshair.h\"\n+#include \"emupal.h\"\n+#include \"render.h\"\n #include \"softlist_dev.h\"\n+#include \"schedule.h\"\n #include \"speaker.h\"\n #include \"screen.h\"\n \n+#include \"beena.lh\"\n+\n+#define VERBOSE (0)\n+#include \"logmacro.h\"\n \n namespace {\n \n-class sega_beena_state : public driver_device\n+#define SCREEN_W 704\n+#define SCREEN_H 480\n+\n+#define ROM_MASK_BASE 0x80000000\n+#define ROM_FLASH_BASE 0xa0000000\n+#define UNKNOWN_ADDR 0xffffffff\n+\n+class sega_9h0_0008_state : public driver_device\n {\n public:\n-\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\tsega_9h0_0008_state(const machine_config &mconfig, device_type type, const char *tag)\n \t\t: driver_device(mconfig, type, tag)\n-\t\t, m_maincpu(*this, \"arm7\")\n+\t\t, m_maincpu(*this, \"maincpu\")\n+\t\t, m_workram(*this, \"workram\")\n+\t\t, m_pcm(*this, \"pcm\")\n \t\t, m_cart(*this, \"cartslot\")\n \t\t, m_cart_region(nullptr)\n-\t\t, m_bank(*this, \"cartbank\")\n+\t\t, m_screen_main(*this, \"screen\")\n+\t\t, m_gfxdecode(*this, \"gfxdecode\")\n+\t\t, m_palette(*this, \"palette\")\n+\t\t, m_paletteram(*this, \"paletteram\")\n+\t\t, m_tilemap_bg(*this, \"tilemap_bg\")\n+\t\t, m_tilemap_fg(*this, \"tilemap_fg\")\n+\t\t, m_tilemap_scroll_x(*this, \"tilemap_scroll_x\")\n+\t\t, m_tilemap_scroll_y(*this, \"tilemap_scroll_y\")\n+\t\t, m_tilemap_sprites(*this, \"tilemap_sprites\")\n+\t\t, m_bitmap(*this, \"bitmap\")\n+\t\t, m_io_sensor_regs(*this, \"io_sensor_regs\")\n+\t\t, m_io_auxiliary_regs(*this, \"io_auxiliary_regs\")\n+\t\t, m_io_cpu_config(*this, \"CPU_CONFIG\")\n+\t\t, m_io_page_config(*this, \"PAGE_CONFIG\")\n+\t\t, m_io_video_config(*this, \"VIDEO_CONFIG\")\n \t{ }\n \n-\tvoid sega_beena(machine_config &config);\n+\tvoid sega_9h0_0008(machine_config &config);\n \n-private:\n+protected:\n+\tvirtual void device_post_load() override;\n \tvirtual void machine_start() override;\n \tvirtual void machine_reset() override;\n+\tvirtual void video_start() override;\n \n+\tvirtual void install_game_rom();\n+\tvirtual void update_sensors(offs_t offset);\n+\n+\tvoid beena_arm7_map(address_map &map);\n+\n+\tvoid request_irq();\n+\tvoid request_fiq();\n+\n+\tTIMER_DEVICE_CALLBACK_MEMBER(scanline);\n+\tvirtual void update_crosshair(screen_device &screen);\n+\tvoid irq_wait_speedup();\n \tuint32_t screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tuint32_t video_reg_r(offs_t offset);\n+\tvoid video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid pal_w(offs_t offset, uint16_t data, uint16_t mem_mask = ~0);\n+\tuint8_t tiles_layers_r(offs_t offset);\n+\tuint8_t tiles_sprites_r(offs_t offset);\n+\tvoid tiles_layers_w(offs_t offset, uint8_t data);\n+\tvoid tiles_sprites_w(offs_t offset, uint8_t data);\n+\tint32_t scroll_x(int32_t x, uint16_t i);\n+\tint32_t scroll_y(int32_t y, uint16_t i);\n+\tvoid draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered);\n+\tvoid draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered);\n+\tvoid draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered);\n+\tvoid draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tvoid screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect);\n+\tint32_t rescale_alpha_step(uint8_t step);\n+\tconstexpr uint32_t alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r);\n+\ttemplate <typename BitmapType, typename FunctionClass> void drawgfxzoom_with_pixel_op(gfx_element *gfx, BitmapType &dest, const rectangle &cliprect, uint32_t code, int flipx, int flipy, int32_t destx, int32_t desty, uint32_t scalex, uint32_t scaley, FunctionClass pixel_op);\n \n-\tDECLARE_DEVICE_IMAGE_LOAD_MEMBER(cart_load);\n+\tuint32_t io_sensors_r(offs_t offset);\n \n-\tvoid beena_arm7_map(address_map &map);\n+\tuint32_t io_memcache_r();\n+\tvirtual uint32_t io_expansion_r();\n+\tvoid memcache_advance(uint32_t &status);\n+\tvoid memcache_parse_data_bit(uint32_t &status);\n+\n+\tuint32_t rtc_r(offs_t offset);\n+\tvoid rtc_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\tvoid update_rtc();\n+\n+\tuint32_t midi_reg_r(offs_t offset);\n+\tvoid midi_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask = ~0);\n+\n+\tstatic constexpr int16_t signed10(uint32_t number)\n+\t{\n+\t\treturn util::sext(number, 10);\n+\t}\n+\tstatic constexpr int32_t rescale(int32_t x, int32_t min_x, int32_t max_x, int32_t a, int32_t b)\n+\t{\n+\t\t// Rescaling (min-max normalization) from [min_x..max_x] to [a..b].\n+\t\treturn a + (((x - min_x) * (b - a)) / (max_x - min_x));\n+\t}\n+\n+\trequired_device<ap2010cpu_device> m_maincpu;\n+\trequired_shared_ptr<uint32_t> m_workram;\n+\trequired_device<ap2010pcm_device> m_pcm;\n+\tbool m_requested_fiq;\n+\tuint32_t m_irq_wait_start_addr;\n \n-\trequired_device<arm7_cpu_device> m_maincpu;\n \toptional_device<generic_slot_device> m_cart;\n \tmemory_region *m_cart_region;\n-\toptional_memory_bank m_bank;\n+\n+\trequired_device<screen_device> m_screen_main;\n+\trequired_device<gfxdecode_device> m_gfxdecode;\n+\trequired_device<palette_device> m_palette;\n+\tstd::unique_ptr<rgb_t[]> m_cache_palette;\n+\trequired_shared_ptr<uint32_t> m_paletteram;\n+\trequired_shared_ptr<uint32_t> m_tilemap_bg;\n+\trequired_shared_ptr<uint32_t> m_tilemap_fg;\n+\trequired_shared_ptr<uint32_t> m_tilemap_scroll_x;\n+\trequired_shared_ptr<uint32_t> m_tilemap_scroll_y;\n+\trequired_shared_ptr<uint32_t> m_tilemap_sprites;\n+\trequired_shared_ptr<uint32_t> m_bitmap;\n+\tstd::unique_ptr<uint8_t[]> m_tiles_layers;\n+\tstd::unique_ptr<uint8_t[]> m_tiles_sprites;\n+\tstd::unique_ptr<uint32_t[]> m_video_regs;\n+\tbitmap_rgb32 m_cache_layer; // Used for x-scrolling scanlines, same size as bitplane\n+\tuint8_t m_scale;\n+\tuint16_t m_scanline;\n+\n+\trequired_shared_ptr<uint32_t> m_io_sensor_regs;\n+\trequired_shared_ptr<uint32_t> m_io_auxiliary_regs;\n+\tuint32_t m_pen_previous_input;\n+\tuint32_t m_pen_target;\n+\tuint32_t m_pages_previous_input;\n+\tuint32_t m_effective_page;\n+\n+\tuint16_t m_rtc[0x100/2]{};\n+\n+\tstd::unique_ptr<uint32_t[]> m_midi_regs;\n+\tuint32_t m_midi_busy_count;\n+\n+\trequired_ioport m_io_cpu_config;\n+\trequired_ioport m_io_page_config;\n+\trequired_ioport m_io_video_config;\n+\n+private:\n+\tuint8_t m_memcache[0x800]{};\n+\tenum memcache_seq : uint32_t\n+\t{\n+\t\tBITS_EMPTY = 0,\n+\t\tBITS_0     = 0x0000ff00,\n+\t\tBITS_0_1   = 0x00ff0001, // Command 0xa0 store bit 0\n+\t\t\t\t\t\t\t\t // Command 0xa1 move to next bit?\n+\t\tBITS_0_1_7 = 0xff000107, // Reset\n+\t\tBITS_6     = 0x0000ff06, // Query (1 if ready for next events)\n+\t\tBITS_6_7   = 0x00ff0607, // Query (0 if events parsed successfully)\n+\t\t\t\t\t\t\t\t // Command 0xa0 store bit 1\n+\t\t\t\t\t\t\t\t // Command 0xa1 load bit\n+\t\tBITS_7     = 0x0000ff07,\n+\t\tBITS_7_1   = 0x00ff0701, // Start command\n+\t\tBITS_ERR   = 0xffffffff,\n+\t};\n+\tuint32_t m_memcache_seq;\n+\tenum memcache_state : uint8_t\n+\t{\n+\t\tIDLE = 0,\n+\t\tREAD_COMMAND,\n+\t\tREAD_ADDRESS_BYTE,\n+\t\tREAD_ACK,\n+\t\tREAD_RAM_BYTE,\n+\t\tWRITE_RAM_BYTE,\n+\t\tCONSUME_UNTIL_IDLE,\n+\t};\n+\tuint32_t m_memcache_addr;\n+\tuint8_t m_memcache_data;\n+\tuint8_t m_memcache_i;\n+\tuint8_t m_memcache_state;\n+\tstd::queue<uint8_t> m_memcache_state_after;\n+\tstd::queue<uint8_t> m_memcache_events;\n };\n \n-void sega_beena_state::beena_arm7_map(address_map &map)\n+/*\n+    FIXME: All of these have guessed timing.\n+\n+    Animation durations in hardware captures suggest that an IRQ is raised every VBLANK.\n+    Palette changes can occur for each scanline via FIQ callback set by games.\n+\n+    These variables in BIOS RAM may be worth following:\n+    - 0x20003ee0: FIQ enabled;\n+    - 0x20003ee1: IRQ enabled;\n+    Along with pairs used by interrupt callbacks:\n+    - 0x20003ed1..0x20003ed4: status;\n+    - 0x20003ee2..0x20003ee5: 1 if busy?\n+*/\n+TIMER_DEVICE_CALLBACK_MEMBER(sega_9h0_0008_state::scanline)\n {\n-\tmap(0x00000000, 0x000001ff).rom().bankr(\"cartbank\");\n-\tmap(0x80000000, 0x807fffff).rom().bankr(\"cartbank\");\n+\tirq_wait_speedup();\n+\n+\t// Pixel clock approximation derived from palette lookup tables applied per scanline,\n+\t// used for gradient backgrounds in \"Partner In TV\".\n+\t//\n+\t// FIXME:\n+\t// - Rainbow arc in \"Cars 2\" before bridge section is not rendered;\n+\t// - Foreground drop animation in \"Cooking Beena\" title screen is skipped;\n+\tm_scanline = param / m_scale;\n+\tm_video_regs[0x4/4] = 0x10000 * (20 + m_scanline);\n+\n+\tuint8_t irq_frequency = m_io_cpu_config->read() & 0xf;\n+\tif ((m_scanline % (SCREEN_H / irq_frequency)) == 0) {\n+\t\tuint8_t video_status = (m_video_regs[0] & 0x10) ^ 0x10;\n+\t\tm_video_regs[0] = (m_video_regs[0] & 0xffffffef) | video_status;\n+\n+\t\tupdate_rtc();\n+\n+\t\trequest_irq();\n+\n+\t\t// FIXME: Needed for .au data processing in \"Kazoku Minna no Nouryoku Trainer\"\n+\t\tm_requested_fiq = true;\n+\t}\n+\n+\trequest_fiq();\n }\n \n+static const uint32_t irq_wait_signature[] = {\n+   0xe3a03001,\n+   0xe5c03000,\n+   0xe5d03000,\n+   0xe3530000,\n+   0x1afffffc\n+};\n+\n+void sega_9h0_0008_state::irq_wait_speedup()\n+{\n+\tif ((m_io_cpu_config->read() & 0x10) == 0x10) {\n+\t\treturn;\n+\t}\n+\n+\t/*\n+\t    All games execute a busy wait until the next IRQ request is served.\n+\t    This can lead to significant downgrade of emulation speed.\n+\n+\t    The busy wait subroutine is copied to a dynamic location in work RAM,\n+\t    somewhere after 0xc00cc000, but before the stack pointer. r0 stores\n+\t    an address to a variable that is updated by the game's IRQ callback\n+\t    when video data has been processed:\n+\n+\t        e3 a0 30 01   mov     r3,#0x1\n+\t        e5 c0 30 00   strb    r3,[r0,#0x0]\n+\t        e5 d0 30 00   ldrb    r3,[r0,#0x0]\n+\t        e3 53 00 00   cmp     r3,#0x0\n+\t        1a ff ff fc   bne     LAB_c00ce8bc\n+\n+\t    Epilogue is the following for most games:\n+\n+\t        e5 9f 30 00   ldr     r3,[DAT_c00ce8d0] = 80000000h\n+\t        e5 93 f0 08   ldr     pc=>LAB_c00fff80,[r3,#offset ->SP]\n+\n+\t    But slightly different in early games:\n+\n+\t        e1 2f ff 1e   bx      lr\n+\n+\t    Since this code has a predictable byte signature, we can search\n+\t    in memory to find its exact start address, then consume enough cycles to\n+\t    reduce the number of instructions executed until the next IRQ is asserted.\n+\t*/\n+\tif (m_irq_wait_start_addr == UNKNOWN_ADDR) {\n+\t\tif (m_maincpu->pc() > 0xc00cc000 && m_maincpu->pc() < 0xc00fff80) {\n+\t\t\tint8_t addr_delta = 8;\n+\t\t\tmemory_share *shared = machine().root_device().memshare(\"workram\");\n+\t\t\tuint32_t *shared32 = reinterpret_cast<uint32_t *>(shared->ptr());\n+\t\t\tuint32_t candidate_start_addr = m_maincpu->pc() - addr_delta;\n+\t\t\tuint32_t candidate_offset = (candidate_start_addr - 0xc00cc000) / 4;\n+\t\t\tfor (size_t i = 0; i < addr_delta; i++) {\n+\t\t\t\tbool matched = true;\n+\t\t\t\tfor (size_t sig_i = 0; sig_i < 5; sig_i++) {\n+\t\t\t\t\tif (irq_wait_signature[sig_i] != shared32[candidate_offset + i + sig_i]) {\n+\t\t\t\t\t\tmatched = false;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (matched) {\n+\t\t\t\t\tm_irq_wait_start_addr = candidate_start_addr + i;\n+\n+\t\t\t\t\tfor (size_t sig_i = 0; sig_i < 5; sig_i++) {\n+\t\t\t\t\t\tm_maincpu->add_hotspot(candidate_start_addr + i + sig_i * 4);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+static const gfx_layout sega_beena_8bpp_layout =\n+{\n+\t16,16,\n+\t0x800, // 0x800 * 0x10 * 0x10 = 0x80000 (tile data mapping size)\n+\t8,\n+\t{ STEP8(0, 1) },\n+\t{ STEP16(0, 8) },\n+\t{ STEP16(0, 8*16) },\n+\t8*16*16\n+};\n+\n+void sega_9h0_0008_state::beena_arm7_map(address_map &map)\n+{\n+\t// BIOS internal ROM\n+\tmap(0x00000000, 0x0001ffff).rom();\n+\t// BIOS internal RAM\n+\tmap(0x20000000, 0x20003fff).ram();\n+\n+\t// FIXME: Need to confirm upper bounds / mirrored ranges on hardware, some return inconsistent reads\n+\t// Video (registers, palette, sprite data...)\n+\tmap(0x40000000, 0x400000ff).rw(FUNC(sega_9h0_0008_state::video_reg_r), FUNC(sega_9h0_0008_state::video_reg_w)).mirror(0xff00);\n+\tmap(0x40010000, 0x400103ff).ram().share(\"tilemap_sprites\");\n+\tmap(0x40010400, 0x4001ffff).ram();\n+\tmap(0x40020000, 0x400201ff).w(FUNC(sega_9h0_0008_state::pal_w)).share(\"paletteram\");\n+\tmap(0x40020200, 0x4002ffff).ram();\n+\tmap(0x40030000, 0x400302ff).ram().share(\"tilemap_scroll_y\");\n+\tmap(0x40030300, 0x4003ffff).ram();\n+\n+\t// I/O (registers, pages, pads, pen...)\n+\tmap(0x50000000, 0x5000000f).ram().mirror(0xfff0); // Unknown\n+\tmap(0x50010000, 0x5001003f).lrw32(\n+\t\tNAME([this](offs_t offset) {\n+\t\t\tLOG(\"audio_pcm_reg_r @ %08x: addr=%08x data=%08x\\n\", m_maincpu->pc(), offset * 4, m_pcm->reg_r(offset));\n+\n+\t\t\treturn m_pcm->reg_r(offset);\n+\t\t}),\n+\t\tNAME([this](offs_t offset, uint32_t data, uint32_t mem_mask) {\n+\t\t\tLOG(\"audio_pcm_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t\t\t// FIXME: Games hang during .au data processing unless FIQ requests are served,\n+\t\t\t// review this after playback is implemented\n+\t\t\tif (offset == 0x10/4) {\n+\t\t\t\tif (data != 0) {\n+\t\t\t\t\tm_requested_fiq = true;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tm_pcm->reg_w(offset, data, mem_mask);\n+\t\t})).mirror(0xffc0);\n+\tmap(0x50020000, 0x5002007f).r(FUNC(sega_9h0_0008_state::io_sensors_r)).share(\"io_sensor_regs\").mirror(0xff80);\n+\tmap(0x50030000, 0x500300ff).lrw32(\n+\t\tNAME([this](offs_t offset) {\n+\t\t\tLOG(\"m_io_auxiliary_regs_r @ %08x: addr=%08x\\n\", m_maincpu->pc(), offset * 4);\n+\n+\t\t\tif (offset == 0x0c/4) {\n+\t\t\t\treturn io_expansion_r();\n+\t\t\t}\n+\t\t\treturn offset == 0xbc/4 ? io_memcache_r() : m_io_auxiliary_regs[offset];\n+\t\t}),\n+\t\tNAME([this](offs_t offset, uint32_t data, uint32_t mem_mask) {\n+\t\t\tLOG(\"m_io_auxiliary_regs_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t\t\tCOMBINE_DATA(&m_io_auxiliary_regs[offset]);\n+\t\t\tif (offset == 0xc0/4) {\n+\t\t\t\tm_memcache_events.push(data);\n+\t\t\t}\n+\t\t})).share(\"io_auxiliary_regs\").mirror(0xff00);\n+\n+\t// Realtime clock\n+\tmap(0x60000000, 0x600000ff).rw(FUNC(sega_9h0_0008_state::rtc_r), FUNC(sega_9h0_0008_state::rtc_w)).mirror(0xff00);\n+\tmap(0x60010000, 0x6003ffff).ram(); // Unknown\n+\n+\t// MIDI\n+\tmap(0x70000000, 0x7000001f).rw(FUNC(sega_9h0_0008_state::midi_reg_r), FUNC(sega_9h0_0008_state::midi_reg_w)).mirror(0xffe0);\n+\tmap(0x70010000, 0x7003ffff).ram(); // Unknown\n+\n+\t// Game Mask ROM\n+\tmap(ROM_MASK_BASE, ROM_MASK_BASE + 0x7fffff).lr8(NAME([]() { return 0xff; })).mirror(0x800000);\n+\n+\t// Game NOR Flash ROM\n+\t// Some games have an unreferenced handler that jumps to 0xa0ffc000;\n+\tmap(ROM_FLASH_BASE, ROM_FLASH_BASE + 0x7fffff).lr8(NAME([]() { return 0xff; })).mirror(0x800000);\n+\n+\t// Direct bitmap with 2-byte BGR555 colors per pixel, same as tile palettes. Scaling also applied.\n+\t// The bitmap size is checked by games to be `w * h <= 0x63000`, so we allocate `0x63000 * 2 = 0xc6000`.\n+\tmap(0xc0000000, 0xc00c5fff).ram().share(\"bitmap\");\n+\t// Tilemap data for 2 layers (background and foreground).\n+\tmap(0xc00c6000, 0xc00c68ff).ram().share(\"tilemap_scroll_x\");\n+\t// Work RAM for tilemap data\n+\tmap(0xc00c6900, 0xc00c7fff).ram();\n+\tmap(0xc00c8000, 0xc00c9fff).ram().share(\"tilemap_fg\");\n+\tmap(0xc00ca000, 0xc00cbfff).ram().share(\"tilemap_bg\");\n+\t// Work RAM for general use + stack (usually starts at 0xc00fff80)\n+\tmap(0xc00cc000, 0xc00fffff).ram().share(\"workram\");\n+\t// Tile data for 2 layers (background and foreground) + sprites\n+\tmap(0xc0100000, 0xc017ffff).ram().rw(FUNC(sega_9h0_0008_state::tiles_layers_r), FUNC(sega_9h0_0008_state::tiles_layers_w));\n+\tmap(0xc0180000, 0xc01fffff).ram().rw(FUNC(sega_9h0_0008_state::tiles_sprites_r), FUNC(sega_9h0_0008_state::tiles_sprites_w));\n+}\n+\n+void sega_9h0_0008_state::update_sensors(offs_t offset)\n+{\n+\t// Power status\n+\t// - bit 1 = 0: a \"low battery\" screen shows up;\n+\t// - bit 2 = 0: game code goes into infinite loop, maybe power button pressed?\n+\tif (offset == 0x38/4) {\n+\t\tm_io_sensor_regs[offset] = 3;\n+\t}\n+}\n+\n+uint32_t sega_9h0_0008_state::io_sensors_r(offs_t offset)\n+{\n+\tupdate_sensors(offset);\n+\n+\treturn m_io_sensor_regs[offset];\n+}\n+\n+uint32_t sega_9h0_0008_state::video_reg_r(offs_t offset)\n+{\n+\treturn m_video_regs[offset];\n+}\n+\n+void sega_9h0_0008_state::video_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tLOG(\"video_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\t/*\n+\t   Video control\n+\t   - bit 1..4: rendering toggles\n+\t     - 0x1: enable rendering\n+\t     - 0x2: enable fg layer\n+\t     - 0x4: enable bg layer\n+\t   - bit 5..8: scroll data entries\n+\t     - 0x10: 0x900 for x-axis scanlines\n+\t     - 0x20:  0x90 for x-axis tiles\n+\t     - 0x40:  0xb4 for y-axis tiles\n+\t   - bit 9..12: video format\n+\t     - 0x100: vertical frequency: 60Hz (NTSC) if 0, 50Hz (PAL) if 1\n+\t     - 0x200: mode: 352x240 (scales 2x from top-left corner) if 0, 704x480 if 1\n+\t   - bit 13..16: direct bitmap render priority\n+\t     - 0x0000: before overlay sprites\n+\t     - 0x1000: before all sprites\n+\t     - 0x2000: before fg layer\n+\t     - 0x3000: before bg and fg layers\n+\t*/\n+\tif (offset == 0x10/4) {\n+\t\tm_scale = ((data & 0x200) == 0) ? 2 : 1;\n+\t}\n+\n+\tCOMBINE_DATA(&m_video_regs[offset]);\n+}\n+\n+uint32_t sega_9h0_0008_state::midi_reg_r(offs_t offset)\n+{\n+\tif (offset == 0 && m_midi_busy_count > 0) {\n+\t\tm_midi_busy_count--;\n+\t\treturn 0x2;\n+\t}\n+\n+\treturn m_midi_regs[offset];\n+}\n+\n+void sega_9h0_0008_state::midi_reg_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tLOG(\"midi_reg_w @ %08x: addr=%08x data=%08x mask=%08x\\n\", m_maincpu->pc(), offset * 4, data, mem_mask);\n+\n+\tswitch (offset) {\n+\t\tcase 0x4/4:\n+\t\t\tif ((data & 5) == 5) {\n+\t\t\t\t// TODO: MIDI all notes off\n+\t\t\t}\n+\t\t\tbreak;\n+\t\tcase 0x8/4:\n+\t\t\t// TODO: MIDI buffered event\n+\t\t\t// Games wait before sending additional notes,\n+\t\t\t// checking if audio status is busy then ready.\n+\t\t\tm_midi_busy_count = 1;\n+\t\t\tbreak;\n+\t\tcase 0xc/4:\n+\t\t\t// TODO: MIDI passthrough event\n+\t\t\tbreak;\n+\t\tcase 0x18/4:\n+\t\t\t// TODO: MIDI update_divisor\n+\t\t\tbreak;\n+\t}\n+\n+\tCOMBINE_DATA(&m_midi_regs[offset]);\n+}\n+\n+void sega_9h0_0008_state::install_game_rom()\n+{\n+\t// Nothing (overriden by each system)\n+}\n+\n+void sega_9h0_0008_state::machine_start()\n+{\n+\tinstall_game_rom();\n+\n+\tsave_item(NAME(m_requested_fiq));\n+\tsave_item(NAME(m_irq_wait_start_addr));\n+\n+\tm_video_regs = make_unique_clear<uint32_t[]>(0x100/4);\n+\tsave_pointer(NAME(m_video_regs), 0x100/4);\n+\tsave_item(NAME(m_scale));\n+\n+\tm_midi_regs = make_unique_clear<uint32_t[]>(0x20/4);\n+\tsave_pointer(NAME(m_midi_regs), 0x20/4);\n+\tsave_item(NAME(m_midi_busy_count));\n+\n+\tsave_item(NAME(m_pen_previous_input));\n+\tsave_item(NAME(m_pen_target));\n+\tsave_item(NAME(m_pages_previous_input));\n+\tsave_item(NAME(m_effective_page));\n+\n+\tm_cache_layer.allocate(1024, 512);\n+}\n+\n+void sega_9h0_0008_state::video_start()\n+{\n+\tm_cache_palette = std::make_unique<rgb_t[]>(0x100*SCREEN_H);\n+\tfor (int i = 0; i < 0x100 * SCREEN_H; i++) {\n+\t\tm_cache_palette[i] = 0;\n+\t}\n+\tsave_pointer(NAME(m_cache_palette.get()), 0x100*SCREEN_H);\n+\n+\tm_tiles_layers = make_unique_clear<uint8_t[]>(0x80000);\n+\tm_tiles_sprites = make_unique_clear<uint8_t[]>(0x80000);\n+\tsave_pointer(NAME(m_tiles_layers.get()), 0x80000);\n+\tsave_pointer(NAME(m_tiles_sprites.get()), 0x80000);\n+\n+\tm_gfxdecode->set_gfx(0, std::make_unique<gfx_element>(\n+\t\tm_palette, sega_beena_8bpp_layout, m_tiles_layers.get(), 0, 1, 0));\n+\tm_gfxdecode->set_gfx(1, std::make_unique<gfx_element>(\n+\t\tm_palette, sega_beena_8bpp_layout, m_tiles_sprites.get(), 0, 1, 0));\n+}\n+\n+void sega_9h0_0008_state::machine_reset()\n+{\n+\tm_requested_fiq = false;\n+\tm_irq_wait_start_addr = UNKNOWN_ADDR;\n+\n+\tmemset(m_video_regs.get(), 0, 0x100);\n+\tm_video_regs[0x10/4] = 0x200; // Tiles are 1x scaled by default.\n+\tm_scale = 1;\n+\tm_scanline = 0;\n+\n+\tbool is_video_connected = m_io_video_config->read() == 0;\n+\tif (!is_video_connected) {\n+\t\tm_video_regs[0] |= 0x00000200;\n+\t}\n+\n+\tmemset(m_midi_regs.get(), 0, 0x20);\n+\tm_midi_busy_count = 0;\n+\n+\tm_io_sensor_regs[0] = 7; // Pen is making contact with the target surface.\n+\tm_io_sensor_regs[0x2c/4] = 0xffffffff; // Pages 1 to 4 are closed.\n+\tm_io_sensor_regs[0x30/4] = 0x00ffffff; // Pages 5 to 6 are closed.\n+\tm_pen_previous_input = 0;\n+\tm_pen_target = 0;\n+\tm_pages_previous_input = 0;\n+\tm_effective_page = 0;\n+\n+\tm_memcache_addr = 0;\n+\tm_memcache_data = 0;\n+\tm_memcache_i = 0;\n+\tm_memcache_seq = BITS_EMPTY;\n+\tm_memcache_state = IDLE;\n+\tm_memcache_state_after = {};\n+\n+\tupdate_rtc();\n+}\n+\n+void sega_9h0_0008_state::device_post_load()\n+{\n+\tm_gfxdecode->gfx(0)->mark_all_dirty();\n+\tm_gfxdecode->gfx(1)->mark_all_dirty();\n+}\n+\n+void sega_9h0_0008_state::memcache_advance(uint32_t &status)\n+{\n+\tuint8_t event = m_memcache_events.front();\n+\tm_memcache_events.pop();\n+\n+\tstatus = event == 6 ? 1 : 0;\n+\n+\tswitch(m_memcache_seq) {\n+\t\tcase BITS_0:\n+\t\t\tm_memcache_seq = event == 1 ? BITS_0_1 : BITS_ERR;\n+\t\t\tbreak;\n+\t\tcase BITS_0_1:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_0_1_7 : (event == 6 ? BITS_6 : BITS_ERR);\n+\t\t\tbreak;\n+\t\tcase BITS_6:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_6_7 : (event == 0 ? BITS_0 : BITS_ERR);\n+\t\t\tbreak;\n+\t\tcase BITS_7:\n+\t\t\tm_memcache_seq = event == 1 ? BITS_7_1 : BITS_ERR;\n+\t\t\tbreak;\n+\t\tcase BITS_EMPTY:\n+\t\t\tm_memcache_seq = event == 7 ? BITS_7 : (event == 6 ? BITS_6 : (event == 0 ? BITS_0 : BITS_ERR));\n+\t\t\tbreak;\n+\t\tdefault:\n+\t\t\tm_memcache_seq = BITS_ERR;\n+\t}\n+\n+\tLOG(\"memcache seq = %08x\\n\", m_memcache_seq);\n+}\n+\n+void sega_9h0_0008_state::memcache_parse_data_bit(uint32_t &status)\n+{\n+\tif (m_memcache_seq == BITS_0_1) {\n+\t\t// After a command has been ack'd, we might reset instead of parse the command's data bits.\n+\t\t// Due to both sequences starting with the same prefix, we have to bailout on the shorter\n+\t\t// sequence if the lookahead matches the longer sequence.\n+\t\tif (!m_memcache_events.empty() && m_memcache_events.front() == 7) {\n+\t\t\tLOG(\"memcache READ_COMMAND 0 1 skipped\\n\");\n+\t\t\treturn;\n+\t\t}\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_data = (m_memcache_data << 1) | 0;\n+\t\tm_memcache_i++;\n+\t} else if (m_memcache_seq == BITS_6_7) {\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_data = (m_memcache_data << 1) | 1;\n+\t\tm_memcache_i++;\n+\t} else if (m_memcache_seq == BITS_0_1_7) {\n+\t\tstatus = 1;\n+\t\tm_memcache_seq = BITS_EMPTY;\n+\t\tm_memcache_state = IDLE;\n+\t\tm_memcache_state_after = {};\n+\t\tLOG(\"memcache READ_COMMAND 0 1 7 -> IDLE\\n\");\n+\t}\n+}\n+\n+uint32_t sega_9h0_0008_state::io_expansion_r()\n+{\n+\treturn 0; // TODO\n+}\n+\n+uint32_t sega_9h0_0008_state::io_memcache_r()\n+{\n+\t/*\n+\t    A non-memory mapped cache can be interfaced with data address 0x500300c0,\n+\t    while the status after parsing this data (events) can be read at 0x500300bc.\n+\n+\t    The cache stores RAM values in range 0xc00c6400..0xc00c6fff.\n+\n+\t    During I/O init, this cache is cleared.\n+\n+\t    During Test Mode, some memory integrity checks are carried out,\n+\t    consisting of reading RAM to the cache, then writing those cached bytes\n+\t    at the same RAM address, which is then compared with the expected values.\n+\n+\t    The communication protocol consists of sending sequences of events,\n+\t    contextual to the command that is currently being parsed (which in turn\n+\t    is initiated with a sequence of events).\n+\n+\t    Simplified flow:\n+\n+\t        IDLE\n+\t        READ_COMMAND (includes RAM address bits 8..12)\n+\t            if 0xa0:\n+\t                READ_ADDRESS_BYTE (RAM address bits 0..7)\n+\t                READ_RAM_BYTE (RAM value bits 0..7)\n+\t            if 0xa1:\n+\t                WRITE_RAM_BYTE (assumed to be at previous read RAM address)\n+\n+\t    Some of these sequences can be followed by acknowledgements (READ_ACK), to\n+\t    ensure sent events were parsed as expected, otherwise games bailout from the\n+\t    session. Always ends with the same sequence (BITS_0_1_7).\n+\t*/\n+\tuint32_t status = 0;\n+\twhile (!m_memcache_events.empty()) {\n+\t\tmemcache_advance(status);\n+\n+\t\tbool is_memcache_disabled = (m_io_cpu_config->read() & 0x40) == 0x40;\n+\t\tif (is_memcache_disabled) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tswitch(m_memcache_state) {\n+\t\t\tcase IDLE:\n+\t\t\t\tif (m_memcache_seq == BITS_6) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\t\t\tLOG(\"memcache IDLE stat\\n\");\n+\t\t\t\t} else if (m_memcache_seq == BITS_7_1) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = READ_COMMAND;\n+\t\t\t\t\tLOG(\"memcache IDLE -> READ_COMMAND\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_COMMAND:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tLOG(\"memcache READ_COMMAND byte data = %08x\\n\", m_memcache_data);\n+\t\t\t\t\tm_memcache_state = READ_ACK;\n+\t\t\t\t\tm_memcache_addr = (((m_memcache_data & 0xe) >> 1) << 8) | (m_memcache_addr & 0xff);\n+\t\t\t\t\tLOG(\"memcache READ_COMMAND addr & 0xf00 = %08x\\n\", m_memcache_addr);\n+\t\t\t\t\tif ((m_memcache_data & 0xa1) == 0xa0) {\n+\t\t\t\t\t\tm_memcache_state_after.push(READ_ADDRESS_BYTE);\n+\t\t\t\t\t\tm_memcache_state_after.push(READ_ACK);\n+\t\t\t\t\t\tm_memcache_state_after.push(READ_RAM_BYTE);\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND 0xa0 -> READ_ACK\\n\");\n+\t\t\t\t\t} else if ((m_memcache_data & 0xa1) == 0xa1) {\n+\t\t\t\t\t\tm_memcache_state_after.push(WRITE_RAM_BYTE);\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND 0xa1 -> READ_ACK\\n\");\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\t\t\t\tm_memcache_state_after = {};\n+\t\t\t\t\t\tLOG(\"memcache READ_COMMAND -> CONSUME_UNTIL_IDLE (unknown command?)\\n\");\n+\t\t\t\t\t}\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_ACK:\n+\t\t\t\tif (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = m_memcache_state_after.front();\n+\t\t\t\t\tm_memcache_state_after.pop();\n+\t\t\t\t\tLOG(\"memcache READ_ACK\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_ADDRESS_BYTE:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tm_memcache_addr |= m_memcache_data;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_state = m_memcache_state_after.front();\n+\t\t\t\t\tm_memcache_state_after.pop();\n+\t\t\t\t\tLOG(\"memcache READ_ADDRESS_BYTE addr = %08x\\n\", m_memcache_addr);\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase READ_RAM_BYTE:\n+\t\t\t\tmemcache_parse_data_bit(status);\n+\t\t\t\tif (m_memcache_seq == BITS_7_1) {\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = READ_COMMAND;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE -> READ_COMMAND (interrupted?)\\n\");\n+\t\t\t\t}\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE [%08x]=>%02x\\n\", m_memcache_addr, m_memcache_data);\n+\t\t\t\t\tLOG(\"memcache READ_RAM_BYTE effective addr = %08x\\n\", 0xc00c6400 + 0x100 + m_memcache_addr);\n+\t\t\t\t\tm_memcache[m_memcache_addr] = m_memcache_data;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\n+\t\t\t\t\t// Later games (e.g. \"Pocket Monsters Best Wishes\") optimize reading the next RAM bytes\n+\t\t\t\t\t// and just store one after the other, skipping READ_COMMAND + READ_ADDRESS_BYTE sequences.\n+\t\t\t\t\tm_memcache_state = READ_ACK;\n+\t\t\t\t\tm_memcache_state_after = {};\n+\t\t\t\t\tm_memcache_state_after.push(READ_RAM_BYTE);\n+\t\t\t\t\tm_memcache_addr++;\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase WRITE_RAM_BYTE:\n+\t\t\t\tif (m_memcache_i == 8) {\n+\t\t\t\t\tif (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE ACK\\n\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tif (m_memcache_seq == BITS_0_1) {\n+\t\t\t\t\tif (!m_memcache_events.empty() && m_memcache_events.front() == 7) {\n+\t\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE 0 1 skipped\\n\");\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_addr++;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE next addr %08x\\n\", m_memcache_addr);\n+\t\t\t\t} else if (m_memcache_seq == BITS_6_7) {\n+\t\t\t\t\tstatus = (m_memcache[m_memcache_addr] >> (7 - m_memcache_i)) & 1;\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE read addr [%08x]=>(%08x >> %02x) & 1 = %02x\\n\",\n+\t\t\t\t\t\t\tm_memcache_addr,\n+\t\t\t\t\t\t\tm_memcache[m_memcache_addr],\n+\t\t\t\t\t\t\tm_memcache_i,\n+\t\t\t\t\t\t\tstatus);\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_i++;\n+\t\t\t\t} else if (m_memcache_seq == BITS_0_1_7) {\n+\t\t\t\t\tstatus = 1;\n+\t\t\t\t\tm_memcache_addr = 0;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = IDLE;\n+\t\t\t\t\tm_memcache_state_after = {};\n+\t\t\t\t\tLOG(\"memcache WRITE_RAM_BYTE 0 1 7 -> IDLE\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t\tcase CONSUME_UNTIL_IDLE:\n+\t\t\t\tif (m_memcache_seq == BITS_0_1_7) {\n+\t\t\t\t\tstatus = 1;\n+\t\t\t\t\tm_memcache_addr = 0;\n+\t\t\t\t\tm_memcache_data = 0;\n+\t\t\t\t\tm_memcache_i = 0;\n+\t\t\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\t\t\tm_memcache_state = IDLE;\n+\t\t\t\t\tLOG(\"memcache CONSUME_UNTIL_IDLE 0 1 7 -> IDLE\\n\");\n+\t\t\t\t}\n+\t\t\t\tbreak;\n+\t\t}\n+\n+\t\tif (m_memcache_seq == BITS_ERR) {\n+\t\t\t// Caught unexpected events, so clear all state, and try to resync at next reset bits.\n+\t\t\tm_memcache_addr = 0;\n+\t\t\tm_memcache_data = 0;\n+\t\t\tm_memcache_i = 0;\n+\t\t\tm_memcache_seq = BITS_EMPTY;\n+\t\t\tm_memcache_state = CONSUME_UNTIL_IDLE;\n+\t\t\tm_memcache_state_after = {};\n+\t\t\tLOG(\"memcache BITS_ERR -> CONSUME_UNTIL_IDLE\\n\");\n+\t\t}\n+\t}\n+\n+\treturn status;\n+}\n+\n+uint32_t sega_9h0_0008_state::rtc_r(offs_t offset)\n+{\n+\treturn m_rtc[offset];\n+}\n+\n+void sega_9h0_0008_state::rtc_w(offs_t offset, uint32_t data, uint32_t mem_mask)\n+{\n+\tCOMBINE_DATA(&m_rtc[offset]);\n+\tLOG(\"rtc_w @ %08x [%02x]=%08x\\n\", m_maincpu->pc(), offset, data);\n+}\n+\n+void sega_9h0_0008_state::pal_w(offs_t offset, uint16_t data, uint16_t mem_mask)\n+{\n+\tuint16_t *shared16 = reinterpret_cast<uint16_t *>(m_paletteram.target());\n+\tCOMBINE_DATA(&shared16[BYTE_XOR_BE(offset)]);\n+\n+\tuint16_t pal_entry = shared16[BYTE_XOR_BE(offset)];\n+\tuint8_t r, g, b;\n+\tr = (pal_entry & 0x001f) >> 0;\n+\tg = (pal_entry & 0x03e0) >> 5;\n+\tb = (pal_entry & 0x7c00) >> 10;\n+\trgb_t color = rgb_t(pal5bit(r), pal5bit(g), pal5bit(b));\n+\tm_cache_palette[m_scanline * 0x100 + offset] = color;\n+\tm_palette->set_pen_color(offset, color);\n+\tLOG(\"m_cache_palette[%d / m_scale * 0x100 + %04x] = %04x (%04x)\\n\", m_scanline, offset, color, pal_entry);\n+\n+\tm_requested_fiq = true;\n+}\n+\n+uint8_t sega_9h0_0008_state::tiles_layers_r(offs_t offset)\n+{\n+\treturn m_tiles_layers[offset];\n+}\n+\n+void sega_9h0_0008_state::tiles_layers_w(offs_t offset, uint8_t data)\n+{\n+\tif (m_tiles_layers[offset] != data) {\n+\t\tm_tiles_layers[offset] = data;\n+\t\tm_gfxdecode->gfx(0)->mark_dirty(offset/(16*16));\n+\t}\n+}\n+\n+uint8_t sega_9h0_0008_state::tiles_sprites_r(offs_t offset)\n+{\n+\treturn m_tiles_sprites[offset];\n+}\n+\n+void sega_9h0_0008_state::tiles_sprites_w(offs_t offset, uint8_t data)\n+{\n+\tif (m_tiles_sprites[offset] != data) {\n+\t\tm_tiles_sprites[offset] = data;\n+\t\tm_gfxdecode->gfx(1)->mark_dirty(offset/(16*16));\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_layer(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_active, const bool is_overlay_rendered)\n+{\n+\tif (!is_active) {\n+\t\treturn; // Disabled\n+\t}\n+\n+\tif ((m_video_regs[0x10/4] & 0x30) == 0x30) {\n+\t\tdraw_layer_scanlines(bitmap, cliprect, tilemap, scroll_idx, is_overlay_rendered);\n+\t} else {\n+\t\tdraw_layer_tiles(bitmap, cliprect, tilemap, scroll_idx, is_overlay_rendered);\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_layer_tiles(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered)\n+{\n+\t// Bitplane area =  1024x512 (64x32 tiles), matches tile data mapping entries (64 * 32 = 0x800).\n+\t//  Visible area =   704x480 (44x30 tiles), offset by +10 tiles in x-axis and +2 tiles in y-axis.\n+\t//  Tilemap area = 1024x1024 (64x64 tiles), all these off-screen tiles must be considered for scrolling.\n+\tfor (size_t offset = 0; offset < 0x2000/2; offset++) {\n+\t\tint32_t y = ((offset / 64) - 2) * 16;\n+\t\tint32_t x = ((offset % 64) - 10) * 16;\n+\n+\t\tuint16_t scroll_x_idx = scroll_idx;\n+\t\tuint16_t scroll_y_idx = scroll_idx;\n+\t\tuint8_t entry_size = 4; // 2 int16_t values, 1 for each tile layer\n+\t\tif (y >= 0 && y < (0x90 / entry_size) * 16) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x20) == 0x20) {\n+\t\t\t\tscroll_x_idx += y/16 * 2;\n+\t\t\t}\n+\t\t}\n+\t\tif (x >= 0 && x < (0xb4 / entry_size) * 16) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x40) == 0x40) {\n+\t\t\t\tscroll_y_idx += x/16 * 2;\n+\t\t\t}\n+\t\t}\n+\n+\t\tx = scroll_x(x, scroll_x_idx);\n+\t\ty = scroll_y(y, scroll_y_idx);\n+\n+\t\tuint16_t tile = tilemap[BYTE_XOR_BE(offset)];\n+\t\tuint16_t tile_transform = (tile & 0xf000) >> 12;\n+\t\tuint16_t flip_x = (tile_transform & 1) != 0;\n+\t\tuint16_t flip_y = (tile_transform & 2) != 0;\n+\t\tbool is_overlay = (tile_transform & 4) != 0;\n+\t\tif (is_overlay != is_overlay_rendered) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint16_t tile_idx = tile & 0x7ff;\n+\t\tbool is_sprite_tile_data_used = tile & 0x800;\n+\t\tgfx_element *gfx = m_gfxdecode->gfx(is_sprite_tile_data_used ? 1 : 0);\n+\t\tconst pen_t *paldata = m_palette->pens() + gfx->colorbase() + gfx->granularity() * (7 % gfx->colors());\n+\t\tconst uint8_t scale = m_scale;\n+\t\tdrawgfxzoom_with_pixel_op(gfx, bitmap, cliprect,\n+\t\t\ttile_idx,\n+\t\t\tflip_x,\n+\t\t\tflip_y,\n+\t\t\tx * m_scale,\n+\t\t\ty * m_scale,\n+\t\t\t0x10000 * m_scale,\n+\t\t\t0x10000 * m_scale,\n+\t\t\t[scale, paldata](int32_t y, const std::unique_ptr<rgb_t[]> &palcache, uint32_t &destp, const uint8_t &srcp) {\n+\t\t\t\tif (srcp != 0) {\n+\t\t\t\t\trgb_t color = palcache[y / scale * 0x100 + srcp];\n+\t\t\t\t\tif (color == 0) {\n+\t\t\t\t\t\tcolor = paldata[srcp];\n+\t\t\t\t\t}\n+\t\t\t\t\tdestp = color;\n+\t\t\t\t}\n+\t\t\t});\n+\t}\n+}\n+\n+/**\n+ * Similar to gfx_element::drawgfxzoom_core(), but uses a pixel_op that depends on the current y-position to render,\n+ * in order to apply dedicated palettes for each scanline. These palettes are cached and passed directly\n+ * as a parameter instead of being captured in the pixel_op lambda, to avoid degraded performance from large copies.\n+ */\n+template <typename BitmapType, typename FunctionClass>\n+inline void sega_9h0_0008_state::drawgfxzoom_with_pixel_op(gfx_element *gfx, BitmapType &dest, const rectangle &cliprect, uint32_t code, int flipx, int flipy, int32_t destx, int32_t desty, uint32_t scalex, uint32_t scaley, FunctionClass pixel_op)\n+{\n+\tdo {\n+\t\tassert(dest.valid());\n+\t\tassert(dest.cliprect().contains(cliprect));\n+\n+\t\t// ignore empty/invalid cliprects\n+\t\tif (cliprect.empty())\n+\t\t\tbreak;\n+\n+\t\t// compute scaled size\n+\t\tuint32_t dstwidth = (scalex * gfx->width() + 0x8000) >> 16;\n+\t\tuint32_t dstheight = (scaley * gfx->height() + 0x8000) >> 16;\n+\t\tif (dstwidth < 1 || dstheight < 1)\n+\t\t\tbreak;\n+\n+\t\t// compute 16.16 source steps in dx and dy\n+\t\tint32_t dx = (gfx->width() << 16) / dstwidth;\n+\t\tint32_t dy = (gfx->height() << 16) / dstheight;\n+\n+\t\t// compute final pixel in X and exit if we are entirely clipped\n+\t\tint32_t destendx = destx + dstwidth - 1;\n+\t\tif (destx > cliprect.right() || destendx < cliprect.left())\n+\t\t\tbreak;\n+\n+\t\t// apply left clip\n+\t\tint32_t srcx = 0;\n+\t\tif (destx < cliprect.left())\n+\t\t{\n+\t\t\tsrcx = (cliprect.left() - destx) * dx;\n+\t\t\tdestx = cliprect.left();\n+\t\t}\n+\n+\t\t// apply right clip\n+\t\tif (destendx > cliprect.right())\n+\t\t\tdestendx = cliprect.right();\n+\n+\t\t// compute final pixel in Y and exit if we are entirely clipped\n+\t\tint32_t destendy = desty + dstheight - 1;\n+\t\tif (desty > cliprect.bottom() || destendy < cliprect.top())\n+\t\t\tbreak;\n+\n+\t\t// apply top clip\n+\t\tint32_t srcy = 0;\n+\t\tif (desty < cliprect.top())\n+\t\t{\n+\t\t\tsrcy = (cliprect.top() - desty) * dy;\n+\t\t\tdesty = cliprect.top();\n+\t\t}\n+\n+\t\t// apply bottom clip\n+\t\tif (destendy > cliprect.bottom())\n+\t\t\tdestendy = cliprect.bottom();\n+\n+\t\t// apply X flipping\n+\t\tif (flipx)\n+\t\t{\n+\t\t\tsrcx = (dstwidth - 1) * dx - srcx;\n+\t\t\tdx = -dx;\n+\t\t}\n+\n+\t\t// apply Y flipping\n+\t\tif (flipy)\n+\t\t{\n+\t\t\tsrcy = (dstheight - 1) * dy - srcy;\n+\t\t\tdy = -dy;\n+\t\t}\n+\n+\t\t// fetch the source data\n+\t\tconst uint8_t *srcdata = gfx->get_data(code);\n+\n+\t\t// compute how many blocks of 4 pixels we have\n+\t\tuint32_t numblocks = (destendx + 1 - destx) / 4;\n+\t\tuint32_t leftovers = (destendx + 1 - destx) - 4 * numblocks;\n+\n+\t\t// iterate over pixels in Y\n+\t\tfor (int32_t cury = desty; cury <= destendy; cury++)\n+\t\t{\n+\t\t\tauto *destptr = &dest.pix(cury, destx);\n+\t\t\tconst uint8_t *srcptr = srcdata + (srcy >> 16) * gfx->rowbytes();\n+\t\t\tint32_t cursrcx = srcx;\n+\t\t\tsrcy += dy;\n+\n+\t\t\t// iterate over unrolled blocks of 4\n+\t\t\tfor (int32_t curx = 0; curx < numblocks; curx++)\n+\t\t\t{\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[0], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[1], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[2], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[3], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\n+\t\t\t\tdestptr += 4;\n+\t\t\t}\n+\n+\t\t\t// iterate over leftover pixels\n+\t\t\tfor (int32_t curx = 0; curx < leftovers; curx++)\n+\t\t\t{\n+\t\t\t\tpixel_op(cury, m_cache_palette, destptr[0], srcptr[cursrcx >> 16]);\n+\t\t\t\tcursrcx += dx;\n+\t\t\t\tdestptr++;\n+\t\t\t}\n+\t\t}\n+\t} while (0);\n+}\n+\n+int32_t sega_9h0_0008_state::scroll_x(int32_t x, uint16_t i)\n+{\n+\tuint16_t *scroll_data = reinterpret_cast<uint16_t *>(m_tilemap_scroll_x.target());\n+\tx += -signed10(scroll_data[BYTE_XOR_BE(i)]);\n+\n+\t// Wrap-around at tilemap borders\n+\tif (x > 0x2c0 + 0xa0) {\n+\t\tx -= (0x2c0 + 0xa0 * 2);\n+\t}\n+\tif (x < -0xa0) {\n+\t\tx += (0x2c0 + 0xa0 * 2);\n+\t}\n+\n+\treturn x;\n+}\n+\n+int32_t sega_9h0_0008_state::scroll_y(int32_t y, uint16_t i)\n+{\n+\tuint16_t *scroll_data = reinterpret_cast<uint16_t *>(m_tilemap_scroll_y.target());\n+\tuint32_t scroll_entry = scroll_data[BYTE_XOR_BE(i)];\n+\tif (((scroll_entry & 0xfc00) == 0xfc00) && (y <= 224)) {\n+\t\t// Skip scroll on first 14 (7 if 2x scaled) tile rows.\n+\t\t// Test case is title screen of \"Cooking Beena\", where both title and table\n+\t\t// are rendered in the foreground layer, but only the table should be scrolled.\n+\t\treturn y;\n+\t}\n+\n+\ty += signed10(scroll_entry);\n+\n+\t// Wrap-around at tilemap borders\n+\tif (y > (0x400 - 0x20) - 0x10) {\n+\t\ty -= 0x400;\n+\t}\n+\tif (y < -0x20) {\n+\t\ty += 0x400;\n+\t}\n+\n+\treturn y;\n+}\n+\n+void sega_9h0_0008_state::draw_layer_scanlines(bitmap_rgb32 &bitmap, const rectangle &cliprect, const uint16_t *tilemap, const uint8_t scroll_idx, const bool is_overlay_rendered)\n+{\n+\tconst rectangle cache_bitmap_bounds(0, m_cache_layer.width()-1, 0, m_cache_layer.height()-1);\n+\tm_cache_layer.fill(0, cache_bitmap_bounds);\n+\n+\t// Apply y-scrolling + wrap-around on each tile row and draw to cached bitmap\n+\tconst int8_t tile_factor = 16;\n+\tfor (size_t offset = 0; offset < 0x2000/2; offset++) {\n+\t\tint32_t y = ((offset / 64) - 2) * tile_factor;\n+\t\tint32_t x = ((offset % 64) - 10) * tile_factor;\n+\n+\t\tuint16_t tile = tilemap[BYTE_XOR_BE(offset)];\n+\t\tuint16_t tile_transform = (tile & 0xf000) >> 12;\n+\t\tuint16_t flip_x = (tile_transform & 1) != 0;\n+\t\tuint16_t flip_y = (tile_transform & 2) != 0;\n+\t\tbool is_overlay = (tile_transform & 4) != 0;\n+\t\tif (is_overlay != is_overlay_rendered) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint16_t scroll_y_idx = scroll_idx;\n+\t\tif (x >= 0 && x < (0xb4 / 4) * tile_factor) {\n+\t\t\tif ((m_video_regs[0x10/4] & 0x40) == 0x40) {\n+\t\t\t\tscroll_y_idx += x /tile_factor * 2;\n+\t\t\t}\n+\t\t}\n+\n+\t\ty = scroll_y(y, scroll_y_idx);\n+\n+\t\t// Undo the x-axis visible area adjustment, otherwise we clip out tile data\n+\t\t// that is later used for x-scrolling.\n+\t\tx += 10 * tile_factor;\n+\n+\t\tuint16_t tile_idx = tile & 0x7ff;\n+\t\tbool is_sprite_tile_data_used = tile & 0x800;\n+\t\tgfx_element *gfx = m_gfxdecode->gfx(is_sprite_tile_data_used ? 1 : 0);\n+\t\tgfx->zoom_alpha(m_cache_layer, cache_bitmap_bounds,\n+\t\t\ttile_idx,\n+\t\t\t7,\n+\t\t\tflip_x,\n+\t\t\tflip_y,\n+\t\t\tx,\n+\t\t\ty,\n+\t\t\t0x10000,\n+\t\t\t0x10000,\n+\t\t\t0,\n+\t\t\t0xff);\n+\t}\n+\n+\t// Apply x-scrolling + wrap-around on each cached scanline and draw to screen bitmap\n+\tfor (int8_t yi = 0; yi < 32 / m_scale; yi++) {\n+\t\tfor (int8_t xi = 0; xi < 64; xi++) {\n+\t\t\tint32_t y = (yi - 0) * tile_factor;\n+\t\t\tint32_t x = (xi - 0) * tile_factor;\n+\n+\t\t\tfor (int8_t line_yi = 0; line_yi < tile_factor; line_yi++) {\n+\t\t\t\tint32_t dst_y = y + line_yi;\n+\t\t\t\tint32_t src_y = dst_y;\n+\n+\t\t\t\tuint16_t scroll_x_idx = scroll_idx;\n+\t\t\t\tif (y >= 0 && y < (0x90 / 4) * tile_factor) {\n+\t\t\t\t\tscroll_x_idx += (y + line_yi) * 2;\n+\t\t\t\t}\n+\n+\t\t\t\tfor (int8_t line_xi = 0; line_xi < tile_factor; line_xi++) {\n+\t\t\t\t\tint32_t dst_x = x + line_xi;\n+\t\t\t\t\tint32_t src_x = dst_x;\n+\n+\t\t\t\t\tdst_x = scroll_x(dst_x, scroll_x_idx);\n+\n+\t\t\t\t\t// Redo the x-axis visible area adjustment\n+\t\t\t\t\tdst_x -= 10 * tile_factor;\n+\n+\t\t\t\t\tif (dst_x * m_scale < cliprect.min_x\n+\t\t\t\t\t\t|| dst_x * m_scale > cliprect.max_x\n+\t\t\t\t\t\t|| dst_y * m_scale < cliprect.min_y\n+\t\t\t\t\t\t|| dst_y * m_scale > cliprect.max_y) {\n+\t\t\t\t\t\tcontinue; // Skip beyond screen size\n+\t\t\t\t\t}\n+\t\t\t\t\tif (src_x < m_cache_layer.cliprect().min_x\n+\t\t\t\t\t\t|| src_x > m_cache_layer.cliprect().max_x\n+\t\t\t\t\t\t|| src_y < m_cache_layer.cliprect().min_y\n+\t\t\t\t\t\t|| src_y > m_cache_layer.cliprect().max_y) {\n+\t\t\t\t\t\tcontinue; // Skip beyond cache size\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tuint32_t *src = &m_cache_layer.pix(src_y, src_x);\n+\t\t\t\t\tif (*src != 0) {\n+\t\t\t\t\t\tfor (size_t dyi = 0; dyi < m_scale; dyi++) {\n+\t\t\t\t\t\t\tfor (size_t dxi = 0; dxi < m_scale; dxi++) {\n+\t\t\t\t\t\t\t\tbitmap.pix(dyi + dst_y * m_scale, dxi + dst_x * m_scale) = *src;\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_bitmap(bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+{\n+\tif ((m_video_regs[0x20/4] & 1) == 0) {\n+\t\treturn; // Disabled\n+\t}\n+\n+\tuint16_t *bitmap_data = reinterpret_cast<uint16_t *>(m_bitmap.target());\n+\n+\tuint16_t bitmap_full_w   = ((m_video_regs[0x20/4] >> 8)  & 0xff) << 4;\n+\tuint16_t bitmap_full_h   = ((m_video_regs[0x20/4] >> 16) & 0xff) << 4;\n+\tuint16_t bitmap_offset_x = ((m_video_regs[0x24/4] >> 0)  & 0x3ff);\n+\tuint16_t bitmap_offset_y = ((m_video_regs[0x24/4] >> 16) & 0x3ff);\n+\tuint16_t bitmap_scroll_x = ((m_video_regs[0x28/4] >> 0)  & 0x3ff);\n+\tuint16_t bitmap_scroll_y = ((m_video_regs[0x28/4] >> 16) & 0x3ff);\n+\tuint16_t bitmap_clip_w   = ((m_video_regs[0x2c/4] >> 0)  & 0x3ff);\n+\tuint16_t bitmap_clip_h   = ((m_video_regs[0x2c/4] >> 16) & 0x3ff);\n+\tuint32_t i = bitmap_offset_y * bitmap_full_w + bitmap_offset_x;\n+\tfor (size_t y = 0; y < bitmap_full_h * m_scale; y += m_scale) {\n+\t\tfor (size_t x = 0; x < bitmap_full_w * m_scale; x += m_scale) {\n+\t\t\tif (i >= 0xc6000/2) {\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tuint16_t color = bitmap_data[BYTE_XOR_BE(i)];\n+\t\t\ti++;\n+\n+\t\t\tif (color == 0\n+\t\t\t\t\t|| y >= bitmap_clip_h * m_scale\n+\t\t\t\t\t|| x >= bitmap_clip_w * m_scale\n+\t\t\t\t\t|| y + bitmap_scroll_y * m_scale > cliprect.max_y\n+\t\t\t\t\t|| x + bitmap_scroll_x * m_scale > cliprect.max_x) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\n+\t\t\tuint8_t r = pal5bit((color & 0x001f) >> 0);\n+\t\t\tuint8_t g = pal5bit((color & 0x03e0) >> 5);\n+\t\t\tuint8_t b = pal5bit((color & 0x7c00) >> 10);\n+\t\t\tuint32_t rgb = (b) | (g << 8) | (r << 16);\n+\t\t\tfor (size_t yi = 0; yi < m_scale; yi++) {\n+\t\t\t\tfor (size_t xi = 0; xi < m_scale; xi++) {\n+\t\t\t\t\tbitmap.pix(y + yi + bitmap_scroll_y * m_scale, x + xi + bitmap_scroll_x * m_scale) = rgb;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+void sega_9h0_0008_state::draw_sprites(bitmap_rgb32 &bitmap, const rectangle &cliprect, const bool is_overlay_rendered) {\n+\tgfx_element *gfx = m_gfxdecode->gfx(1);\n+\n+\tuint16_t *tilemap_data = reinterpret_cast<uint16_t *>(m_tilemap_sprites.target());\n+\n+\t// For sprites to overlap as expected, they must be drawn in reverse order\n+\tfor (int16_t offset = 0x400/2 - 4; offset >= 0; offset -= 4) {\n+\t\tuint16_t priority =  tilemap_data[BYTE_XOR_BE(offset + 1)] & 0xff;\n+\t\tif ((priority > 0 && !is_overlay_rendered) || (priority == 0 && is_overlay_rendered)) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tuint32_t tile_pos = (tilemap_data[BYTE_XOR_BE(offset)] << 16) | tilemap_data[BYTE_XOR_BE(offset + 1)];\n+\t\tuint16_t y = (tile_pos >> 20) & 0x7ff;\n+\t\tuint16_t x = (tile_pos >> 8)  & 0x7ff;\n+\n+\t\tuint16_t flip_y = ((tile_pos >> 20) & 0x800) != 0;\n+\t\tuint16_t flip_x = ((tile_pos >> 8)  & 0x800) != 0;\n+\n+\t\tint16_t delta_factor = m_video_regs[0x38/4] & 0xff;\n+\t\tint16_t delta_x = 0;\n+\t\tint16_t delta_y = 0;\n+\t\tif (delta_factor == 0x2c) {\n+\t\t\tdelta_x = 14 * 16;\n+\t\t\tdelta_y =  7 * 16;\n+\t\t} else if (delta_factor == 0x20) {\n+\t\t\tdelta_x =  6 * 16;\n+\t\t\tdelta_y = -1 * 16;\n+\t\t}\n+\n+\t\tuint16_t tile_idx = tilemap_data[BYTE_XOR_BE(offset + 2)] & 0x7ff;\n+\t\tuint16_t tile_pattern_len = (tilemap_data[BYTE_XOR_BE(offset + 2)] & 0xf000) >> 12;\n+\n+\t\tif (tile_idx == 0 && x == 0 && y == 0)\n+\t\t\tcontinue;\n+\n+\t\tuint8_t pattern_x_len = ((tile_pattern_len % 4) + 1);\n+\t\tuint8_t pattern_y_len = ((tile_pattern_len / 4) + 1);\n+\t\tuint8_t pattern_i = 0;\n+\n+\t\tstd::vector<uint8_t> pattern_x_v(pattern_x_len);\n+\t\tstd::iota(pattern_x_v.begin(), pattern_x_v.end(), 0);\n+\t\tif (flip_x) {\n+\t\t\tstd::reverse(pattern_x_v.begin(), pattern_x_v.end());\n+\t\t}\n+\t\tstd::vector<uint8_t> pattern_y_v(pattern_y_len);\n+\t\tstd::iota(pattern_y_v.begin(), pattern_y_v.end(), 0);\n+\t\tif (flip_y) {\n+\t\t\tstd::reverse(pattern_y_v.begin(), pattern_y_v.end());\n+\t\t}\n+\t\tfor (size_t pattern_y : pattern_y_v) {\n+\t\t\tfor (size_t pattern_x : pattern_x_v) {\n+\t\t\t\t// FIXME: Can be transparent (e.g. pen cursor fade-in seen in \"Kazoku Minna no Nouryoku Trainer\")\n+\t\t\t\tgfx->zoom_alpha(bitmap, cliprect,\n+\t\t\t\t\ttile_idx + pattern_i++,\n+\t\t\t\t\t7,\n+\t\t\t\t\tflip_x,\n+\t\t\t\t\tflip_y,\n+\t\t\t\t\t(x + pattern_x * 16) * m_scale - (0x2c0 / 2) + delta_x,\n+\t\t\t\t\t(y + pattern_y * 16) * m_scale - (0x1e0 / 2) + delta_y,\n+\t\t\t\t\t0x10000 * m_scale,\n+\t\t\t\t\t0x10000 * m_scale,\n+\t\t\t\t\t0,\n+\t\t\t\t\t0xff);\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+void sega_9h0_0008_state::update_crosshair(screen_device &screen)\n+{\n+\t// Nothing (only the console uses a crosshair)\n+}\n+\n+uint32_t sega_9h0_0008_state::screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+{\n+\tupdate_crosshair(screen);\n+\n+\tbitmap.fill(m_palette->pen_color(0), cliprect);\n+\n+\tif ((m_video_regs[0x10/4] & 1) == 0) {\n+\t\tscreen_blend(bitmap, cliprect);\n+\n+\t\treturn 0; // Disabled\n+\t}\n+\n+\tuint16_t *shared16_tilemap_bg = reinterpret_cast<uint16_t *>(m_tilemap_bg.target());\n+\tuint16_t *shared16_tilemap_fg = reinterpret_cast<uint16_t *>(m_tilemap_fg.target());\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x3000)) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_bg, 1, (m_video_regs[0x10/4] & 4) != 0, false);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x2000)) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_fg, 0, (m_video_regs[0x10/4] & 2) != 0, false);\n+\n+\tbool is_bitmap_after_sprites = (m_video_regs[0x20/4] & 0x10) != 0;\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x1000) && !is_bitmap_after_sprites) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_sprites(bitmap, cliprect, false);\n+\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_bg, 1, (m_video_regs[0x10/4] & 4) != 0, true);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0) && !is_bitmap_after_sprites) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\t// TV bottom frame in front of running dog in \"Partner in TV\"\n+\tdraw_layer(bitmap, cliprect, shared16_tilemap_fg, 0, (m_video_regs[0x10/4] & 2) != 0, true);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0x1000) && is_bitmap_after_sprites) {\n+\t\t// Minimap after lamp posts in \"Cars 2\" bridge section\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tdraw_sprites(bitmap, cliprect, true);\n+\n+\tif (((m_video_regs[0x10/4] & 0x3000) == 0) && is_bitmap_after_sprites) {\n+\t\tdraw_bitmap(bitmap, cliprect);\n+\t}\n+\n+\tscreen_blend(bitmap, cliprect);\n+\n+\t// Invalidate on VBLANK: the latest entries are kept by m_palette.\n+\tfor (int i = 0; i < SCREEN_H; i++)\n+\t\tfor (int offset = 0; offset < 0x100; offset++)\n+\t\t\tm_cache_palette[i * 0x100 + offset] = 0;\n+\n+\treturn 0;\n+}\n+\n+void sega_9h0_0008_state::screen_blend(bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+{\n+\tuint8_t alpha_r_step = (m_video_regs[0x30/4] >>  0) & 0x3f;\n+\tuint8_t alpha_g_step = (m_video_regs[0x30/4] >>  8) & 0x3f;\n+\tuint8_t alpha_b_step = (m_video_regs[0x30/4] >> 16) & 0x3f;\n+\n+\tuint8_t alpha_r = rescale_alpha_step(alpha_r_step);\n+\tuint8_t alpha_g = rescale_alpha_step(alpha_g_step);\n+\tuint8_t alpha_b = rescale_alpha_step(alpha_b_step);\n+\n+\tuint8_t blend_r = alpha_r_step < 0x20 ? 0xff : 0;\n+\tuint8_t blend_g = alpha_g_step < 0x20 ? 0xff : 0;\n+\tuint8_t blend_b = alpha_b_step < 0x20 ? 0xff : 0;\n+\tuint32_t blend_rgb = blend_b | (blend_g << 8) | (blend_r << 16);\n+\n+\tfor (size_t y = cliprect.min_y; y <= cliprect.max_y; y++) {\n+\t\tfor (size_t x = cliprect.min_x; x <= cliprect.max_x; x++) {\n+\t\t\tuint32_t *dst = &bitmap.pix(y, x);\n+\t\t\t*dst = alpha_blend_rgb_levels(blend_rgb, *dst, alpha_b, alpha_r, alpha_g);\n+\t\t}\n+\t}\n+}\n+\n+/**\n+ * Similar to sega_9h0_0008_state::rescale(),\n+ * but the step can either lighten (e.g. video debug flag `0xc00c7cc7 = 1`\n+ * in \"Soreike! Anpanman Hajimete Kaketa yo! Oboeta yo! Hiragana Katakana\"\n+ * or darken (e.g. screen fadeout).\n+ */\n+int32_t sega_9h0_0008_state::rescale_alpha_step(uint8_t step)\n+{\n+\treturn step < 0x20 ? rescale(step, 0, 0x1f, 0xff, 0) : rescale(step, 0x20, 0x3f, 0, 0xff);\n+}\n+\n+/**\n+ * Similar to drawgfx::alpha_blend_r32(), but distinct levels are applied to each channel.\n+ */\n+constexpr uint32_t sega_9h0_0008_state::alpha_blend_rgb_levels(uint32_t dst, uint32_t src, uint8_t level_b, uint8_t level_g, uint8_t level_r)\n+{\n+\treturn ((((src & 0x0000ff) * level_r + (dst & 0x0000ff) * int(256 - level_r)) >> 8)) |\n+\t\t\t((((src & 0x00ff00) * level_g + (dst & 0x00ff00) * int(256 - level_g)) >> 8) & 0x00ff00) |\n+\t\t\t((((src & 0xff0000) * level_b + (dst & 0xff0000) * int(256 - level_b)) >> 8) & 0xff0000);\n+}\n+\n+void sega_9h0_0008_state::request_irq()\n+{\n+\tm_maincpu->set_input_line(ARM7_IRQ_LINE, ASSERT_LINE);\n+\tm_maincpu->set_input_line(ARM7_IRQ_LINE, CLEAR_LINE);\n+}\n+\n+void sega_9h0_0008_state::request_fiq()\n+{\n+\tif (m_requested_fiq) {\n+\t\tm_maincpu->set_input_line(ARM7_FIRQ_LINE, ASSERT_LINE);\n+\t\tm_maincpu->set_input_line(ARM7_FIRQ_LINE, CLEAR_LINE);\n+\n+\t\tm_requested_fiq = false;\n+\t}\n+}\n+\n+void sega_9h0_0008_state::update_rtc()\n+{\n+\tsystem_time systime;\n+\tmachine().current_datetime(systime);\n+\tm_rtc[0] = systime.local_time.second;\n+\tm_rtc[1] = systime.local_time.minute;\n+\tm_rtc[2] = systime.local_time.hour;\n+\tm_rtc[3] = systime.local_time.mday;\n+\tm_rtc[4] = systime.local_time.weekday;\n+\tm_rtc[5] = systime.local_time.month;\n+\tm_rtc[6] = systime.local_time.year - 2000;\n+}\n+\n+void sega_9h0_0008_state::sega_9h0_0008(machine_config &config)\n+{\n+\tAP2010CPU(config, m_maincpu, 81'000'000);\n+\tm_maincpu->set_addrmap(AS_PROGRAM, &sega_9h0_0008_state::beena_arm7_map);\n+\n+\tSCREEN(config, m_screen_main, SCREEN_TYPE_RASTER);\n+\tm_screen_main->set_refresh_hz(60);\n+\tm_screen_main->set_vblank_time(ATTOSECONDS_IN_USEC(0));\n+\tm_screen_main->set_size(SCREEN_W, SCREEN_H);\n+\tm_screen_main->set_visarea(0, SCREEN_W-1, 0, SCREEN_H-1);\n+\tm_screen_main->set_screen_update(FUNC(sega_9h0_0008_state::screen_update));\n+\n+\tTIMER(config, \"scantimer\").configure_scanline(FUNC(sega_9h0_0008_state::scanline), m_screen_main, 0, 1);\n+\n+\tPALETTE(config, m_palette).set_entries(0x100);\n+\n+\tGFXDECODE(config, m_gfxdecode, m_palette, gfxdecode_device::empty);\n+\n+\tconfig.set_default_layout(layout_beena);\n+\n+\tSPEAKER(config, \"speaker\").front_center();\n+\tAP2010PCM(config, m_pcm); // Unknown clock\n+\tm_pcm->add_route(ALL_OUTPUTS, \"speaker\", 1.0);\n+\n+\tSOFTWARE_LIST(config, \"cart_list\").set_original(\"sega_beena_cart\");\n+}\n+\n+\n+class sega_beena_state : public sega_9h0_0008_state\n+{\n+public:\n+\tsega_beena_state(const machine_config &mconfig, device_type type, const char *tag)\n+\t\t: sega_9h0_0008_state(mconfig, type, tag)\n+\t\t, m_io_page(*this, \"PAGE\")\n+\t\t, m_io_pad_left(*this, \"PAD_LEFT\")\n+\t\t, m_io_pad_right(*this, \"PAD_RIGHT\")\n+\t\t, m_io_pen_left(*this, \"PEN_LEFT\")\n+\t\t, m_io_pen_right(*this, \"PEN_RIGHT\")\n+\t\t, m_io_pen_x(*this, \"PENX\")\n+\t\t, m_io_pen_y(*this, \"PENY\")\n+\t{ }\n+\n+\tvoid sega_beena(machine_config &config);\n+\n+\tvirtual DECLARE_CROSSHAIR_MAPPER_MEMBER(pen_y_mapper);\n+\n+private:\n+\tvirtual void machine_start() override;\n+\tvirtual void machine_reset() override;\n+\n+\tDECLARE_DEVICE_IMAGE_LOAD_MEMBER(cart_load);\n+\tvirtual void install_game_rom() override;\n+\tvirtual void update_crosshair(screen_device &screen) override;\n+\tvirtual void update_sensors(offs_t offset) override;\n+\n+\trequired_ioport m_io_page;\n+\trequired_ioport m_io_pad_left;\n+\trequired_ioport m_io_pad_right;\n+\trequired_ioport m_io_pen_left;\n+\trequired_ioport m_io_pen_right;\n+\trequired_ioport m_io_pen_x;\n+\trequired_ioport m_io_pen_y;\n+};\n+\n void sega_beena_state::machine_start()\n {\n-\t// if there's a cart, override the standard mapping\n-\tif (m_cart && m_cart->exists())\n-\t{\n+\tsega_9h0_0008_state::machine_start();\n+}\n+\n+void sega_beena_state::machine_reset()\n+{\n+\tsega_9h0_0008_state::machine_reset();\n+}\n+\n+void sega_beena_state::sega_beena(machine_config &config)\n+{\n+\tsega_9h0_0008_state::sega_9h0_0008(config);\n+\n+\tGENERIC_CARTSLOT(config, m_cart, generic_plain_slot, \"sega_beena_cart\");\n+\tm_cart->set_endian(ENDIANNESS_BIG);\n+\tm_cart->set_width(GENERIC_ROM32_WIDTH);\n+\tm_cart->set_device_load(FUNC(sega_beena_state::cart_load));\n+\tm_cart->set_must_be_loaded(false);\n+}\n+\n+void sega_beena_state::install_game_rom()\n+{\n+\tif (m_cart->exists()) {\n \t\tstd::string region_tag;\n-\t\tm_cart_region = memregion(region_tag.assign(m_cart->tag()).append(GENERIC_ROM_REGION_TAG).c_str());\n+\t\tmemory_region *cart_rom = memregion(region_tag.assign(m_cart->tag()).append(\":cart:rom\"));\n+\t\tuint32_t *rom32 = reinterpret_cast<uint32_t *>(cart_rom->base());\n+\n+\t\t/*\n+\t\t    ROM header contains a field for the base address which we can use to map\n+\t\t    the corresponding address range. On hardware, this mapping is done by the BIOS when\n+\t\t    writing to the following registers:\n+\n+\t\t        0x60020004=0x1ff and 0x60020010=0xa5: ROM_MASK_BASE mapped when the cart has a mask ROM;\n+\t\t        0x60020004=0x3fc and 0x60020010=0x90: ROM_FLASH_BASE mapped when the cart has a flash ROM;\n+\n+\t\t    Signatures on each address map are then checked to choose which one will run game code.\n \n-\t\tm_bank->configure_entries(0, (m_cart_region->bytes() + 0x7fffff) / 0x800000, m_cart_region->base(), 0x800000);\n+\t\t    It's possible to force some invalid mappings which result in the console hanging during reads.\n+\t\t    For example, setting 0x60020004=0x1ff and 0x60020010=0x90 will map both address ranges\n+\t\t    when the cart has a mask ROM.\n+\t\t*/\n+\t\tuint32_t base_address = rom32[0xdc/4];\n+\t\tif (base_address != ROM_MASK_BASE && base_address != ROM_FLASH_BASE) {\n+\t\t\tosd_printf_warning(\"Unknown base address '%08x' parsed from ROM, defaulting to '%08x'...\\n\", base_address, ROM_MASK_BASE);\n+\t\t\tbase_address = ROM_MASK_BASE;\n+\t\t}\n+\t\tm_maincpu->space(AS_PROGRAM).install_rom(base_address, base_address + 0x7fffff, 0x800000, cart_rom->base());\n \t}\n-\telse\n-\t\tm_bank->configure_entries(0, 1, memregion(\"bios\")->base(), 0x800000);\n+}\n \n-\tm_bank->set_entry(0);\n+void sega_beena_state::update_crosshair(screen_device &screen)\n+{\n+\t// Show crosshair on single screen with storyware pen target\n+\tmachine().crosshair().get_crosshair(0).set_screen(m_pen_target == 0 ? CROSSHAIR_SCREEN_NONE : &screen);\n }\n \n-void sega_beena_state::machine_reset()\n+void sega_beena_state::update_sensors(offs_t offset)\n {\n+\tsega_9h0_0008_state::update_sensors(offset);\n+\n+\tuint16_t io_page = 0;\n+\tint16_t io_pen_x = 0;\n+\tint16_t io_pen_y = 0;\n+\tint16_t io_pen_x_min = m_io_pen_x->field(0xff)->minval();\n+\tint16_t io_pen_x_max = m_io_pen_x->field(0xff)->maxval();\n+\tint16_t io_pen_y_min = m_io_pen_y->field(0xff)->minval();\n+\tint16_t io_pen_y_max = m_io_pen_y->field(0xff)->maxval();\n+\tint16_t pen_y_min = io_pen_y_min;\n+\tint16_t pen_y_max = io_pen_y_max;\n+\tuint32_t pen_pressed = 0;\n+\tuint32_t pen_data = 0;\n+\tuint8_t pen_target = 0;\n+\n+\tbool is_tablet = true;\n+\tbool is_test_mode = m_io_page_config->read() == 0;\n+\n+\tswitch (offset) {\n+\t\t// Pen position + button press state.\n+\t\t//\n+\t\t// A minimum of 3 readings must be parsed, otherwise effective pen position is not computed.\n+\t\t// Later games seem to only require 2 readings.\n+\t\t//\n+\t\t// Each reading encodes bits `pyyy yyyy yyyx xxxx xxxx`, where `p` is 1 on pen button pressed.\n+\t\t//\n+\t\t// Offsets of readings for each pen are given by 3 bits set at 0x50020000:\n+\t\t// - e.g. for 1st pen, 0x50020000=0x05 will parse 0x50020008, and 0x50020010, ignoring 0x5002000c;\n+\t\t// - e.g. for 2nd pen, 0x50020000=0x70 will parse 0x50020018, 0x5002001c, and 0x50020020;\n+\t\t//\n+\t\t// TODO: Check how 2 connected pens are reported. Regardless of where a single pen is connected\n+\t\t// (ports marked on PCB as CN12 or CN13), the first set of offsets is updated.\n+\t\t//\n+\t\t// 1st pen's 1st reading.\n+\t\tcase 0x8/4:\n+\t\t// 1st pen's 2nd reading.\n+\t\tcase 0xc/4:\n+\t\t// 1st pen's 3rd reading.\n+\t\tcase 0x10/4:\n+\t\t\tio_pen_x = m_io_pen_x->read();\n+\t\t\tio_pen_y = m_io_pen_y->read();\n+\n+\t\t\tpen_target = (m_io_pen_left->read() & 2) >> 1;\n+\t\t\tif ((m_pen_previous_input ^ pen_target) != 0) {\n+\t\t\t\tm_pen_previous_input = pen_target;\n+\t\t\t\tif (pen_target == 1) {\n+\t\t\t\t\tm_pen_target ^= 1;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\t// The y-position is used to distinguish between pen targets:\n+\t\t\t// - Tablet:    0x338..0x248\n+\t\t\t// - Storyware: 0x3b8..0x342\n+\t\t\t//\n+\t\t\t// The storyware's coordinates don't reach maximum screen positions (games don't compute\n+\t\t\t// effective pen positions if such values are forced), possibly to account for page tab gaps.\n+\t\t\t// Applying the same displacements to rescaled positions also results in more accurate mappings.\n+\t\t\t//\n+\t\t\t// FIXME: Confirm displacements with hardware tests.\n+\t\t\tis_tablet = m_pen_target == 0;\n+\t\t\tif (is_tablet) {\n+\t\t\t\t// screen x-position [0..0x2c0]\n+\t\t\t\tio_pen_x = rescale(io_pen_x, io_pen_x_min, io_pen_x_max, 0x1b8, 0x58);\n+\t\t\t\t// screen y-position [0..0x1e0]\n+\t\t\t\tio_pen_y = rescale(io_pen_y, pen_y_min, pen_y_max, 0x338, 0x248);\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\t// screen x-position [8..0x2bc], off-by-4 upper bound?\n+\t\t\t\tio_pen_x = rescale(io_pen_x, io_pen_x_min+8, io_pen_x_max-8, 0x1b6, 0x109);\n+\t\t\t\t// screen y-position [0..0x1d8]\n+\t\t\t\tio_pen_y = rescale(io_pen_y, pen_y_min+8, pen_y_max, 0x3b8, 0x342);\n+\t\t\t}\n+\t\t\tpen_pressed = (m_io_pen_left->read() & 1) ? 0x80000 : 0;\n+\t\t\tpen_data = (io_pen_y << 9) | io_pen_x | pen_pressed;\n+\t\t\tLOG(\"Pen on %s(%d): x=%04x,y=%04x => %08x\",\n+\t\t\t\tis_tablet ? \"tablet\" : \"storyware\",\n+\t\t\t\tm_pen_target,\n+\t\t\t\tio_pen_x,\n+\t\t\t\tio_pen_y,\n+\t\t\t\tpen_data);\n+\n+\t\t\tm_io_sensor_regs[offset] = pen_data;\n+\t\t\tbreak;\n+\t\t// Pages 1 to 4, one for each byte value.\n+\t\t// We'll just threshold them to 0x00 (open) and 0xff (closed).\n+\t\tcase 0x2c/4:\n+\t\t\tio_page = m_io_page->read();\n+\t\t\tif (is_test_mode) {\n+\t\t\t\tm_io_sensor_regs[offset] = 0xff00ff00;\n+\t\t\t\tm_effective_page = 6;\n+\t\t\t} else if ((m_pages_previous_input ^ io_page) != 0) {\n+\t\t\t\tm_pages_previous_input = io_page;\n+\n+\t\t\t\tif (io_page == 1 && m_effective_page < 6) {\n+\t\t\t\t\tm_effective_page++;\n+\t\t\t\t} else if (io_page == 2 && m_effective_page > 0) {\n+\t\t\t\t\tm_effective_page--;\n+\t\t\t\t}\n+\n+\t\t\t\tm_io_sensor_regs[offset] = (0xffffffffULL >> (m_effective_page * 8));\n+\t\t\t}\n+\n+\t\t\tbreak;\n+\t\t// Pages 5 to 6, encodes bytes `XX AA BB YY`\n+\t\t// - XX: unused? always 0x00 on hardware;\n+\t\t// - YY: needs to be parsed as open for effective page computation (TODO: is this a sensor?);\n+\t\t// - AA: page 5;\n+\t\t// - BB: page 6;\n+\t\tcase 0x30/4:\n+\t\t\tif (is_test_mode) {\n+\t\t\t\tm_io_sensor_regs[offset] = 0xffff00ff;\n+\t\t\t} else {\n+\t\t\t\tswitch (m_effective_page) {\n+\t\t\t\t\tcase 5:\n+\t\t\t\t\t\tm_io_sensor_regs[offset] = 0x0000ff00;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tcase 6:\n+\t\t\t\t\t\tm_io_sensor_regs[offset] = 0x00000000;\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\tm_io_sensor_regs[offset] = 0x00ffff00;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tbreak;\n+\t\t// Left and right pads, encodes bits `XXXX XXAB CDEF GHIJ`\n+\t\t// - X: unused?\n+\t\t// - ABCDE: red + directional buttons of left pad;\n+\t\t// - FGHIJ: red + directional buttons of right pad;\n+\t\tcase 0x34/4:\n+\t\t\tm_io_sensor_regs[offset] = ((m_io_pad_left->read() << 5) | m_io_pad_right->read()) & 0x3ff;\n+\t\t\tbreak;\n+\t}\n }\n \n DEVICE_IMAGE_LOAD_MEMBER(sega_beena_state::cart_load)\n {\n \tuint32_t const size = m_cart->common_get_size(\"rom\");\n \n-\tm_cart->rom_alloc(size, GENERIC_ROM16_WIDTH, ENDIANNESS_LITTLE);\n+\tm_cart->rom_alloc(size, GENERIC_ROM32_WIDTH, ENDIANNESS_BIG);\n \tm_cart->common_load_rom(m_cart->get_rom_base(), size, \"rom\");\n \n+\tif (!image.loaded_through_softlist()) {\n+\t\t// loadflags weren't parsed, start by manually applying `endianness=\"big\"`,\n+\t\t// taking into consideration the host's endianness.\n+\t\tuint32_t *rom32 = reinterpret_cast<uint32_t *>(m_cart->get_rom_base());\n+\t\tfor (size_t i = 0; i < size / 4; i++) {\n+\t\t\trom32[i] = big_endianize_int32(rom32[i]);\n+\t\t}\n+\t\t// Afterwards apply `load16_word_swap`, regardless of host's endianness,\n+\t\t// since this reflects how ROM data was stored, not the CPU's architecture.\n+\t\tuint16_t *rom16 = reinterpret_cast<uint16_t *>(m_cart->get_rom_base());\n+\t\tfor (size_t i = 0; i < size / 2; i++) {\n+\t\t\trom16[i] = swapendian_int16(rom16[i]);\n+\t\t}\n+\t}\n+\n \treturn std::make_pair(std::error_condition(), std::string());\n }\n \n-static INPUT_PORTS_START( sega_beena )\n-INPUT_PORTS_END\n+CROSSHAIR_MAPPER_MEMBER(sega_beena_state::pen_y_mapper)\n+{\n+\t// TODO: Either remove or adapt for Storyware layout\n+\treturn linear_value;\n+}\n \n \n-uint32_t sega_beena_state::screen_update(screen_device &screen, bitmap_rgb32 &bitmap, const rectangle &cliprect)\n+class tvochken_state : public sega_9h0_0008_state\n {\n-\treturn 0;\n+public:\n+\ttvochken_state(const machine_config &mconfig, device_type type, const char *tag)\n+\t\t: sega_9h0_0008_state(mconfig, type, tag)\n+\t\t, m_io_buttons(*this, \"BUTTONS\")\n+\t\t, m_io_cards(*this, \"CARDS\")\n+\t\t{ }\n+\n+\tvoid tvochken(machine_config &config);\n+\n+\tvirtual uint32_t io_expansion_r() override;\n+\n+private:\n+\tvirtual void machine_start() override;\n+\tvirtual void machine_reset() override;\n+\n+\tvirtual void install_game_rom() override;\n+\n+\trequired_ioport m_io_buttons;\n+\trequired_ioport m_io_cards;\n+\tuint8_t m_card_previous_input;\n+\n+\tenum card_state : uint8_t\n+\t{\n+\t\tIDLE = 0,\n+\t\tSTART_WRITE_DATA,\n+\t\tWRITE_DATA,\n+\t};\n+\tuint8_t m_card_i;\n+\tuint16_t m_card_data;\n+\tuint8_t m_card_data_i;\n+\tuint8_t m_card_state;\n+\tuint8_t m_card_hold_i;\n+\tuint8_t m_card_status;\n+};\n+\n+void tvochken_state::machine_start()\n+{\n+\tsega_9h0_0008_state::machine_start();\n+\n+\tsave_item(NAME(m_card_i));\n+\tsave_item(NAME(m_card_data));\n+\tsave_item(NAME(m_card_data_i));\n+\tsave_item(NAME(m_card_hold_i));\n+\tsave_item(NAME(m_card_state));\n+\tsave_item(NAME(m_card_status));\n }\n \n-void sega_beena_state::sega_beena(machine_config &config)\n+void tvochken_state::machine_reset()\n {\n-\tARM7_BE(config, m_maincpu, 81'000'000);\n-\tm_maincpu->set_addrmap(AS_PROGRAM, &sega_beena_state::beena_arm7_map);\n+\tsega_9h0_0008_state::machine_reset();\n \n-\tscreen_device &screen(SCREEN(config, \"screen\", SCREEN_TYPE_RASTER));\n-\tscreen.set_refresh_hz(60);\n-\tscreen.set_vblank_time(ATTOSECONDS_IN_USEC(0));\n-\tscreen.set_size(640, 480);\n-\tscreen.set_visarea(0, 640-1, 0, 480-1);\n-\tscreen.set_screen_update(FUNC(sega_beena_state::screen_update));\n+\tm_card_previous_input = 0;\n \n-\tSPEAKER(config, \"lspeaker\").front_left();\n-\tSPEAKER(config, \"rspeaker\").front_right();\n+\tm_card_i = 0;\n+\tm_card_data = 0;\n+\tm_card_data_i = 0;\n+\tm_card_hold_i = 0;\n+\tm_card_state = IDLE;\n+\tm_card_status = 0;\n+}\n \n-\tGENERIC_CARTSLOT(config, m_cart, generic_plain_slot, \"sega_beena_cart\");\n-\tm_cart->set_width(GENERIC_ROM16_WIDTH);\n-\tm_cart->set_device_load(FUNC(sega_beena_state::cart_load));\n-\tm_cart->set_must_be_loaded(true);\n+void tvochken_state::tvochken(machine_config &config)\n+{\n+\tsega_9h0_0008_state::sega_9h0_0008(config);\n+}",
                "path": "src/mame/sega/sega_beena.cpp",
                "commit_id": "9a1907458ea76046a786a2702844939c71d39457",
                "original_commit_id": "eebd733f4f8e0e5cb88743f7cf54d7e9d4969880",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Not right now, but we can reintroduce it later on if needed.",
                "created_at": "2023-10-26T21:27:09Z",
                "updated_at": "2023-10-26T21:27:10Z",
                "html_url": "https://github.com/mamedev/mame/pull/11213#discussion_r1373833642",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373833642"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#discussion_r1373833642"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/mamedev/mame/pulls/comments/1373833642/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": 1960,
                "start_side": "RIGHT",
                "line": null,
                "original_line": 1963,
                "side": "RIGHT",
                "in_reply_to_id": 1372145499,
                "original_position": 1987,
                "position": null,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:27:10Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:27:09Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    },
    {
        "id": "32882309164",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 93520295,
            "login": "qufb",
            "display_login": "qufb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qufb",
            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?"
        },
        "repo": {
            "id": 14303048,
            "name": "mamedev/mame",
            "url": "https://api.github.com/repos/mamedev/mame"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1700669358,
                "node_id": "PRR_kwDOANo_SM5lXieu",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "eebd733f4f8e0e5cb88743f7cf54d7e9d4969880",
                "submitted_at": "2023-10-26T21:27:10Z",
                "state": "commented",
                "html_url": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700669358",
                "pull_request_url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "author_association": "NONE",
                "_links": {
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213#pullrequestreview-1700669358"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/mamedev/mame/pulls/11213",
                "id": 1347488660,
                "node_id": "PR_kwDOANo_SM5QUQuU",
                "html_url": "https://github.com/mamedev/mame/pull/11213",
                "diff_url": "https://github.com/mamedev/mame/pull/11213.diff",
                "patch_url": "https://github.com/mamedev/mame/pull/11213.patch",
                "issue_url": "https://api.github.com/repos/mamedev/mame/issues/11213",
                "number": 11213,
                "state": "open",
                "locked": false,
                "title": "sega_beena: Playable WIP",
                "user": {
                    "login": "qufb",
                    "id": 93520295,
                    "node_id": "U_kgDOBZMBpw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/qufb",
                    "html_url": "https://github.com/qufb",
                    "followers_url": "https://api.github.com/users/qufb/followers",
                    "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                    "organizations_url": "https://api.github.com/users/qufb/orgs",
                    "repos_url": "https://api.github.com/users/qufb/repos",
                    "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/qufb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "The driver can now play games, supporting all needed inputs except those requiring game specific peripherals.\r\n\r\nGraphics are mostly done, there are still some issues which require a more accurate emulation of the pixel clock, which will be addressed after I disassemble some more games that make use of it. Currently it's used to support palette changes per scanline.\r\n\r\nA new device is introduced for the Storyware (a booklet containing pages with artwork that can be interacted with a pen). An attempt was made to make it generic enough to eventually be reused for the Sega Pico / Yamaha Copera.\r\n\r\nThere are two main aspects about the Storyware device which I'm not entirely confident about:\r\n\r\n1. To allow a player to specify page images, an environment variable needs to be set with the absolute path of the directory containing those images. I'd rather have used a command line option, but it seems only slots and picture_image_devices can be used to generate such options. I didn't use the latter, since it would be very cumbersome to pass about a dozen options for each page.\r\n2. The Storyware has its own dedicate screen, which is separate from the main screen handling pen input for the tablet. A custom cursor is being rendered on the Storyware screen, since I couldn't get any other alternative to work as I expected:\r\n    - Using the lightgun input port with a PORT_CROSSHAIR renders a cursor that is contained exclusively in the first screen, which would be fine (I could use the first screen for the Storyware), but the crosshair position is scaled to the input port's coordinates spanning all screens, i.e. the cursor moves in the first screen even if we are interacting with the second screen, and regardless of which screen we interact with, the cursor will be offset from the input port coordinates;\r\n    - MACHINE_CLICKABLE_ARTWORK forces a pointer, but it's offset from the input port coordinates (instead it just follows the mouse);\r\n\r\nEDIT: With the latest changes, the points raised above have been addressed.\r\n\r\n---\r\n\r\nFollowing this merge request I'll tackle audio support. I haven't yet seen much on how MAME handles MIDI playback, but at least OGG could use a third-party dependency for decoding (I was considering libogg since MAME already bundles libflac from the same authors).\r\n\r\nEDIT: I've looked more into this and found that the BIOS streams OGGs as PCM data, so a new sound device should be enough.",
                "created_at": "2023-05-11T17:46:01Z",
                "updated_at": "2023-10-26T21:27:10Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "842f05427d3203b05b47cf2e9b2b9b3d0858d9ac",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits",
                "review_comments_url": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments",
                "review_comment_url": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/mamedev/mame/issues/11213/comments",
                "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457",
                "head": {
                    "label": "qufb:beena",
                    "ref": "beena",
                    "sha": "9a1907458ea76046a786a2702844939c71d39457",
                    "user": {
                        "login": "qufb",
                        "id": 93520295,
                        "node_id": "U_kgDOBZMBpw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/qufb",
                        "html_url": "https://github.com/qufb",
                        "followers_url": "https://api.github.com/users/qufb/followers",
                        "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                        "organizations_url": "https://api.github.com/users/qufb/orgs",
                        "repos_url": "https://api.github.com/users/qufb/repos",
                        "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/qufb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 541853378,
                        "node_id": "R_kgDOIEwGwg",
                        "name": "mame",
                        "full_name": "qufb/mame",
                        "private": false,
                        "owner": {
                            "login": "qufb",
                            "id": 93520295,
                            "node_id": "U_kgDOBZMBpw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93520295?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/qufb",
                            "html_url": "https://github.com/qufb",
                            "followers_url": "https://api.github.com/users/qufb/followers",
                            "following_url": "https://api.github.com/users/qufb/following{/other_user}",
                            "gists_url": "https://api.github.com/users/qufb/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/qufb/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/qufb/subscriptions",
                            "organizations_url": "https://api.github.com/users/qufb/orgs",
                            "repos_url": "https://api.github.com/users/qufb/repos",
                            "events_url": "https://api.github.com/users/qufb/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/qufb/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/qufb/mame",
                        "description": "MAME",
                        "fork": true,
                        "url": "https://api.github.com/repos/qufb/mame",
                        "forks_url": "https://api.github.com/repos/qufb/mame/forks",
                        "keys_url": "https://api.github.com/repos/qufb/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/qufb/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/qufb/mame/teams",
                        "hooks_url": "https://api.github.com/repos/qufb/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/qufb/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/qufb/mame/events",
                        "assignees_url": "https://api.github.com/repos/qufb/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/qufb/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/qufb/mame/tags",
                        "blobs_url": "https://api.github.com/repos/qufb/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/qufb/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/qufb/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/qufb/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/qufb/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/qufb/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/qufb/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/qufb/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/qufb/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/qufb/mame/subscription",
                        "commits_url": "https://api.github.com/repos/qufb/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/qufb/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/qufb/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/qufb/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/qufb/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/qufb/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/qufb/mame/merges",
                        "archive_url": "https://api.github.com/repos/qufb/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/qufb/mame/downloads",
                        "issues_url": "https://api.github.com/repos/qufb/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/qufb/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/qufb/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/qufb/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/qufb/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/qufb/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/qufb/mame/deployments",
                        "created_at": "2022-09-27T01:26:43Z",
                        "updated_at": "2022-09-27T01:30:30Z",
                        "pushed_at": "2023-10-26T21:13:35Z",
                        "git_url": "git://github.com/qufb/mame.git",
                        "ssh_url": "git@github.com:qufb/mame.git",
                        "clone_url": "https://github.com/qufb/mame.git",
                        "svn_url": "https://github.com/qufb/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1558960,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C++",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "beena"
                    }
                },
                "base": {
                    "label": "mamedev:master",
                    "ref": "master",
                    "sha": "25a0dd47abb9b75b543a562ff6b6cdcad891028a",
                    "user": {
                        "login": "mamedev",
                        "id": 9024458,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mamedev",
                        "html_url": "https://github.com/mamedev",
                        "followers_url": "https://api.github.com/users/mamedev/followers",
                        "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                        "organizations_url": "https://api.github.com/users/mamedev/orgs",
                        "repos_url": "https://api.github.com/users/mamedev/repos",
                        "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mamedev/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 14303048,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNDMwMzA0OA==",
                        "name": "mame",
                        "full_name": "mamedev/mame",
                        "private": false,
                        "owner": {
                            "login": "mamedev",
                            "id": 9024458,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjkwMjQ0NTg=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/mamedev",
                            "html_url": "https://github.com/mamedev",
                            "followers_url": "https://api.github.com/users/mamedev/followers",
                            "following_url": "https://api.github.com/users/mamedev/following{/other_user}",
                            "gists_url": "https://api.github.com/users/mamedev/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/mamedev/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/mamedev/subscriptions",
                            "organizations_url": "https://api.github.com/users/mamedev/orgs",
                            "repos_url": "https://api.github.com/users/mamedev/repos",
                            "events_url": "https://api.github.com/users/mamedev/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/mamedev/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/mamedev/mame",
                        "description": "MAME",
                        "fork": false,
                        "url": "https://api.github.com/repos/mamedev/mame",
                        "forks_url": "https://api.github.com/repos/mamedev/mame/forks",
                        "keys_url": "https://api.github.com/repos/mamedev/mame/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/mamedev/mame/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/mamedev/mame/teams",
                        "hooks_url": "https://api.github.com/repos/mamedev/mame/hooks",
                        "issue_events_url": "https://api.github.com/repos/mamedev/mame/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/mamedev/mame/events",
                        "assignees_url": "https://api.github.com/repos/mamedev/mame/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/mamedev/mame/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/mamedev/mame/tags",
                        "blobs_url": "https://api.github.com/repos/mamedev/mame/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/mamedev/mame/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/mamedev/mame/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/mamedev/mame/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/mamedev/mame/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/mamedev/mame/languages",
                        "stargazers_url": "https://api.github.com/repos/mamedev/mame/stargazers",
                        "contributors_url": "https://api.github.com/repos/mamedev/mame/contributors",
                        "subscribers_url": "https://api.github.com/repos/mamedev/mame/subscribers",
                        "subscription_url": "https://api.github.com/repos/mamedev/mame/subscription",
                        "commits_url": "https://api.github.com/repos/mamedev/mame/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/mamedev/mame/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/mamedev/mame/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/mamedev/mame/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/mamedev/mame/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/mamedev/mame/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/mamedev/mame/merges",
                        "archive_url": "https://api.github.com/repos/mamedev/mame/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/mamedev/mame/downloads",
                        "issues_url": "https://api.github.com/repos/mamedev/mame/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/mamedev/mame/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/mamedev/mame/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/mamedev/mame/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/mamedev/mame/labels{/name}",
                        "releases_url": "https://api.github.com/repos/mamedev/mame/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/mamedev/mame/deployments",
                        "created_at": "2013-11-11T14:32:13Z",
                        "updated_at": "2023-10-26T21:24:22Z",
                        "pushed_at": "2023-10-26T21:13:39Z",
                        "git_url": "git://github.com/mamedev/mame.git",
                        "ssh_url": "git@github.com:mamedev/mame.git",
                        "clone_url": "https://github.com/mamedev/mame.git",
                        "svn_url": "https://github.com/mamedev/mame",
                        "homepage": "https://www.mamedev.org/",
                        "size": 1591719,
                        "stargazers_count": 6986,
                        "watchers_count": 6986,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1809,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 591,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1809,
                        "open_issues": 591,
                        "watchers": 6986,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213"
                    },
                    "html": {
                        "href": "https://github.com/mamedev/mame/pull/11213"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/issues/11213/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/mamedev/mame/pulls/11213/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/mamedev/mame/statuses/9a1907458ea76046a786a2702844939c71d39457"
                    }
                },
                "author_association": "NONE",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:27:10Z",
        "org": {
            "id": 9024458,
            "login": "mamedev",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/mamedev",
            "avatar_url": "https://avatars.githubusercontent.com/u/9024458?"
        }
    }
]