[
    {
        "id": "32895402620",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 112729,
            "login": "brianmay",
            "display_login": "brianmay",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brianmay",
            "avatar_url": "https://avatars.githubusercontent.com/u/112729?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2293",
                "id": 1964623613,
                "node_id": "I_kwDOCTXdt851Gcb9",
                "number": 2293,
                "title": "/bin/cat hard-coded when sending outgoing messages",
                "user": {
                    "login": "brianmay",
                    "id": 112729,
                    "node_id": "MDQ6VXNlcjExMjcyOQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/112729?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/brianmay",
                    "html_url": "https://github.com/brianmay",
                    "followers_url": "https://api.github.com/users/brianmay/followers",
                    "following_url": "https://api.github.com/users/brianmay/following{/other_user}",
                    "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions",
                    "organizations_url": "https://api.github.com/users/brianmay/orgs",
                    "repos_url": "https://api.github.com/users/brianmay/repos",
                    "events_url": "https://api.github.com/users/brianmay/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/brianmay/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T01:48:48Z",
                "updated_at": "2023-10-27T10:18:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nWhen sending a voice mail I get the error:\r\n\r\n```\r\nOct 27 12:33:03 featherby freeswitch[21631]: sh: line 1: /bin/cat: No such file or directory\r\n```\r\n\r\nAnd the outgoing email is empty.\r\n\r\nThis is because my OS, nixos does not have a `/bin/cat`.\r\n\r\nIt looks like this is because `/bin/cat` is hard coded here:\r\n\r\nhttps://github.com/signalwire/freeswitch/blob/f1fb05214e4f427dcf922f531431ab649cf0622b/src/switch_utils.c#L1304\r\n\r\nMaking this configurable would help, but I also wonder is this really necessarily?\r\n\r\nFor now I have worked around this with:\r\n\r\n```\r\nln -s /run/current-system/sw/bin/cat /bin/cat\r\n```\r\n\r\n**To Reproduce**\r\n\r\nAs above.\r\n\r\n**Expected behavior**\r\n\r\nThe email should get sent.\r\n\r\n**Package version or git hash**\r\n\r\n1.10.10\r\n\r\n**Trace logs**\r\n\r\nNot really relevant.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782665282",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2293#issuecomment-1782665282",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293",
                "id": 1782665282,
                "node_id": "IC_kwDOCTXdt85qQVBC",
                "user": {
                    "login": "brianmay",
                    "id": 112729,
                    "node_id": "MDQ6VXNlcjExMjcyOQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/112729?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/brianmay",
                    "html_url": "https://github.com/brianmay",
                    "followers_url": "https://api.github.com/users/brianmay/followers",
                    "following_url": "https://api.github.com/users/brianmay/following{/other_user}",
                    "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions",
                    "organizations_url": "https://api.github.com/users/brianmay/orgs",
                    "repos_url": "https://api.github.com/users/brianmay/repos",
                    "events_url": "https://api.github.com/users/brianmay/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/brianmay/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:18:48Z",
                "updated_at": "2023-10-27T10:18:48Z",
                "author_association": "NONE",
                "body": "Looking at that code, I wonder if there is a good reason why we can't just use the WIN32 code (that users redirection instead of piping) under Linux.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782665282/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:18:49Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32891951053",
        "type": "IssuesEvent",
        "actor": {
            "id": 67529250,
            "login": "wang-wenfang",
            "display_login": "wang-wenfang",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wang-wenfang",
            "avatar_url": "https://avatars.githubusercontent.com/u/67529250?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2294",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2294/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2294/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2294/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2294",
                "id": 1964991803,
                "node_id": "I_kwDOCTXdt851H2U7",
                "number": 2294,
                "title": "Cannot queue any more events.....",
                "user": {
                    "login": "wang-wenfang",
                    "id": 67529250,
                    "node_id": "MDQ6VXNlcjY3NTI5MjUw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67529250?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wang-wenfang",
                    "html_url": "https://github.com/wang-wenfang",
                    "followers_url": "https://api.github.com/users/wang-wenfang/followers",
                    "following_url": "https://api.github.com/users/wang-wenfang/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wang-wenfang/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wang-wenfang/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wang-wenfang/subscriptions",
                    "organizations_url": "https://api.github.com/users/wang-wenfang/orgs",
                    "repos_url": "https://api.github.com/users/wang-wenfang/repos",
                    "events_url": "https://api.github.com/users/wang-wenfang/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wang-wenfang/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T08:07:12Z",
                "updated_at": "2023-10-27T08:07:12Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Help\uff01Why does this happen, and how can I fix it?\r\n\r\n![image](https://github.com/signalwire/freeswitch/assets/67529250/1054ee8b-e6c4-4b6e-bc62-95f3cb059290)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2294/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2294/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:07:13Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32888994471",
        "type": "WatchEvent",
        "actor": {
            "id": 50616520,
            "login": "fudm2019",
            "display_login": "fudm2019",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fudm2019",
            "avatar_url": "https://avatars.githubusercontent.com/u/50616520?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T05:43:26Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32886082730",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 48600469,
            "login": "signalwire-ci[bot]",
            "display_login": "signalwire-ci",
            "gravatar_id": "",
            "url": "https://api.github.com/users/signalwire-ci[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/48600469?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/events",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2292",
                "id": 1964622228,
                "node_id": "PR_kwDOCTXdt85d7OZU",
                "number": 2292,
                "title": "Freeswitch packet relay metrics",
                "user": {
                    "login": "jchavanton",
                    "id": 3736014,
                    "node_id": "MDQ6VXNlcjM3MzYwMTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3736014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jchavanton",
                    "html_url": "https://github.com/jchavanton",
                    "followers_url": "https://api.github.com/users/jchavanton/followers",
                    "following_url": "https://api.github.com/users/jchavanton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jchavanton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jchavanton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jchavanton/subscriptions",
                    "organizations_url": "https://api.github.com/users/jchavanton/orgs",
                    "repos_url": "https://api.github.com/users/jchavanton/repos",
                    "events_url": "https://api.github.com/users/jchavanton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jchavanton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T01:46:41Z",
                "updated_at": "2023-10-27T01:58:11Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292",
                    "html_url": "https://github.com/signalwire/freeswitch/pull/2292",
                    "diff_url": "https://github.com/signalwire/freeswitch/pull/2292.diff",
                    "patch_url": "https://github.com/signalwire/freeswitch/pull/2292.patch",
                    "merged_at": null
                },
                "body": "As I am now using the elastic jitter buffer, I wanted precise metrics on the time packets are spending inside FS.\r\n\r\nI made some modifications to have such report.\r\n\r\nThis is the aritificial jitter I am using\r\n`sudo tc qdisc add dev wlp0s20f3 root netem delay 475ms 600ms`\r\n\r\nExample with a test with high jitter with/without the elastic jitter buffer activated.\r\n\r\n```json\r\n{\r\n  \"call_id_in\": \"j6mk7sg4g7kppjr4koii\",\r\n  \"call_id_out\": \"a5045e74-c3c5-4fe7-825e-49d8185cc852\",\r\n  \"report\": {\r\n    \"in\": {\r\n      \"ssrc\": \"0x8A0F2483\",\r\n      \"remote_socket\": \"172.31.61.69:11836\",\r\n      \"local_socket\": \"172.31.61.69:33034\",\r\n      \"codec\": \"opus\",\r\n      \"count\": 1045,\r\n      \"plc\": 36                        << very little PLC was required\r\n    },\r\n    \"out\": {\r\n      \"ssrc\": \"0xB93EA6DF\",\r\n      \"remote_socket\": \"172.31.50.119:27362\",\r\n      \"local_socket\": \"172.31.61.69:19990\",\r\n      \"codec\": \"PCMU\",\r\n      \"count\": 1081,\r\n      \"max\": 1100,\r\n      \"avg\": 429.21               << average time spend in the jitter buffer in ms, it seems to make perfect sense\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI did several load tests to measure the impact of the extra work load and nothing significant on a very small instance for example.\r\n\r\n\r\nWith packet stats\r\n<img src=\"https://github.com/signalwire/freeswitch/assets/3736014/95514531-80ef-4db6-a295-c46a609d6abc\" width=\"300\" />\r\n\r\n\r\nWithout packet stats\r\n<img src=\"https://github.com/signalwire/freeswitch/assets/3736014/b0fa648a-bdf9-4fb1-bddb-8e8f3941dd4e\" width=\"300\" />\r\n\r\nI understand that some refactoring and modifications will be needed to consider merging this ...\r\nI just wanted to get some feedback to see if you guys see the value of such feature.\r\n\r\n\r\nAlso here is the same test with the EJB:\r\n```json\r\n{\r\n  \"call_id_in\": \"hh95nco8uo20428poa9q\",\r\n  \"call_id_out\": \"45e7d02a-bd72-4ee3-9dad-cec79fe5247c\",\r\n  \"report\": {\r\n    \"in\": {\r\n      \"ssrc\": \"0xC81DB53F\",\r\n      \"remote_socket\": \"172.31.61.69:11810\",\r\n      \"local_socket\": \"172.31.61.69:29424\",\r\n      \"codec\": \"opus\",\r\n      \"count\": 1654,\r\n      \"plc\": 496      << a lot of plc was generated, the audio was terrible\r\n    },\r\n    \"out\": {\r\n      \"ssrc\": \"0xB93EA5D4\",\r\n      \"remote_socket\": \"172.31.50.81:26902\",\r\n      \"local_socket\": \"172.31.61.69:18580\",\r\n      \"codec\": \"PCMU\",\r\n      \"count\": 2150,\r\n      \"max\": 479,                  \r\n      \"avg\": 19.00         << average size in ms, this is not looking good \r\n    }\r\n  }\r\n}\r\n```\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782171169",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2292#issuecomment-1782171169",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292",
                "id": 1782171169,
                "node_id": "IC_kwDOCTXdt85qOcYh",
                "user": {
                    "login": "signalwire-ci[bot]",
                    "id": 48600469,
                    "node_id": "MDM6Qm90NDg2MDA0Njk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/27049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/signalwire-ci%5Bbot%5D",
                    "html_url": "https://github.com/apps/signalwire-ci",
                    "followers_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:58:11Z",
                "updated_at": "2023-10-27T01:58:11Z",
                "author_association": "NONE",
                "body": "Scan-build found bugs: https://public-artifacts.signalwire.cloud/drone/signalwire/freeswitch/1544/index.html",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782171169/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:58:11Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32886066133",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 48600469,
            "login": "signalwire-ci[bot]",
            "display_login": "signalwire-ci",
            "gravatar_id": "",
            "url": "https://api.github.com/users/signalwire-ci[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/48600469?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/events",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2292",
                "id": 1964622228,
                "node_id": "PR_kwDOCTXdt85d7OZU",
                "number": 2292,
                "title": "Freeswitch packet relay metrics",
                "user": {
                    "login": "jchavanton",
                    "id": 3736014,
                    "node_id": "MDQ6VXNlcjM3MzYwMTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3736014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jchavanton",
                    "html_url": "https://github.com/jchavanton",
                    "followers_url": "https://api.github.com/users/jchavanton/followers",
                    "following_url": "https://api.github.com/users/jchavanton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jchavanton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jchavanton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jchavanton/subscriptions",
                    "organizations_url": "https://api.github.com/users/jchavanton/orgs",
                    "repos_url": "https://api.github.com/users/jchavanton/repos",
                    "events_url": "https://api.github.com/users/jchavanton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jchavanton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T01:46:41Z",
                "updated_at": "2023-10-27T01:56:56Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292",
                    "html_url": "https://github.com/signalwire/freeswitch/pull/2292",
                    "diff_url": "https://github.com/signalwire/freeswitch/pull/2292.diff",
                    "patch_url": "https://github.com/signalwire/freeswitch/pull/2292.patch",
                    "merged_at": null
                },
                "body": "As I am now using the elastic jitter buffer, I wanted precise metrics on the time packets are spending inside FS.\r\n\r\nI made some modifications to have such report.\r\n\r\nThis is the aritificial jitter I am using\r\n`sudo tc qdisc add dev wlp0s20f3 root netem delay 475ms 600ms`\r\n\r\nExample with a test with high jitter with/without the elastic jitter buffer activated.\r\n\r\n```json\r\n{\r\n  \"call_id_in\": \"j6mk7sg4g7kppjr4koii\",\r\n  \"call_id_out\": \"a5045e74-c3c5-4fe7-825e-49d8185cc852\",\r\n  \"report\": {\r\n    \"in\": {\r\n      \"ssrc\": \"0x8A0F2483\",\r\n      \"remote_socket\": \"172.31.61.69:11836\",\r\n      \"local_socket\": \"172.31.61.69:33034\",\r\n      \"codec\": \"opus\",\r\n      \"count\": 1045,\r\n      \"plc\": 36                        << very little PLC was required\r\n    },\r\n    \"out\": {\r\n      \"ssrc\": \"0xB93EA6DF\",\r\n      \"remote_socket\": \"172.31.50.119:27362\",\r\n      \"local_socket\": \"172.31.61.69:19990\",\r\n      \"codec\": \"PCMU\",\r\n      \"count\": 1081,\r\n      \"max\": 1100,\r\n      \"avg\": 429.21               << average time spend in the jitter buffer in ms, it seems to make perfect sense\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI did several load tests to measure the impact of the extra work load and nothing significant on a very small instance for example.\r\n\r\n\r\nWith packet stats\r\n<img src=\"https://github.com/signalwire/freeswitch/assets/3736014/95514531-80ef-4db6-a295-c46a609d6abc\" width=\"300\" />\r\n\r\n\r\nWithout packet stats\r\n<img src=\"https://github.com/signalwire/freeswitch/assets/3736014/b0fa648a-bdf9-4fb1-bddb-8e8f3941dd4e\" width=\"300\" />\r\n\r\nI understand that some refactoring and modifications will be needed to consider merging this ...\r\nI just wanted to get some feedback to see if you guys see the value of such feature.\r\n\r\n\r\nAlso here is the same test with the EJB:\r\n```json\r\n{\r\n  \"call_id_in\": \"hh95nco8uo20428poa9q\",\r\n  \"call_id_out\": \"45e7d02a-bd72-4ee3-9dad-cec79fe5247c\",\r\n  \"report\": {\r\n    \"in\": {\r\n      \"ssrc\": \"0xC81DB53F\",\r\n      \"remote_socket\": \"172.31.61.69:11810\",\r\n      \"local_socket\": \"172.31.61.69:29424\",\r\n      \"codec\": \"opus\",\r\n      \"count\": 1654,\r\n      \"plc\": 496      << a lot of plc was generated, the audio was terrible\r\n    },\r\n    \"out\": {\r\n      \"ssrc\": \"0xB93EA5D4\",\r\n      \"remote_socket\": \"172.31.50.81:26902\",\r\n      \"local_socket\": \"172.31.61.69:18580\",\r\n      \"codec\": \"PCMU\",\r\n      \"count\": 2150,\r\n      \"max\": 479,                  \r\n      \"avg\": 19.00         << average size in ms, this is not looking good \r\n    }\r\n  }\r\n}\r\n```\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782170425",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2292#issuecomment-1782170425",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292",
                "id": 1782170425,
                "node_id": "IC_kwDOCTXdt85qOcM5",
                "user": {
                    "login": "signalwire-ci[bot]",
                    "id": 48600469,
                    "node_id": "MDM6Qm90NDg2MDA0Njk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/27049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/signalwire-ci%5Bbot%5D",
                    "html_url": "https://github.com/apps/signalwire-ci",
                    "followers_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:56:56Z",
                "updated_at": "2023-10-27T01:56:56Z",
                "author_association": "NONE",
                "body": "Unit-tests failed: https://public-artifacts.signalwire.cloud/drone/signalwire/freeswitch/1544/artifacts.html",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782170425/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:56:57Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32885947375",
        "type": "IssuesEvent",
        "actor": {
            "id": 112729,
            "login": "brianmay",
            "display_login": "brianmay",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brianmay",
            "avatar_url": "https://avatars.githubusercontent.com/u/112729?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2293",
                "id": 1964623613,
                "node_id": "I_kwDOCTXdt851Gcb9",
                "number": 2293,
                "title": "/bin/cat hard-coded when sending outgoing messages",
                "user": {
                    "login": "brianmay",
                    "id": 112729,
                    "node_id": "MDQ6VXNlcjExMjcyOQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/112729?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/brianmay",
                    "html_url": "https://github.com/brianmay",
                    "followers_url": "https://api.github.com/users/brianmay/followers",
                    "following_url": "https://api.github.com/users/brianmay/following{/other_user}",
                    "gists_url": "https://api.github.com/users/brianmay/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/brianmay/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/brianmay/subscriptions",
                    "organizations_url": "https://api.github.com/users/brianmay/orgs",
                    "repos_url": "https://api.github.com/users/brianmay/repos",
                    "events_url": "https://api.github.com/users/brianmay/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/brianmay/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T01:48:48Z",
                "updated_at": "2023-10-27T01:48:48Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nWhen sending a voice mail I get the error:\r\n\r\n```\r\nOct 27 12:33:03 featherby freeswitch[21631]: sh: line 1: /bin/cat: No such file or directory\r\n```\r\n\r\nAnd the outgoing email is empty.\r\n\r\nThis is because my OS, nixos does not have a `/bin/cat`.\r\n\r\nIt looks like this is because `/bin/cat` is hard coded here:\r\n\r\nhttps://github.com/signalwire/freeswitch/blob/f1fb05214e4f427dcf922f531431ab649cf0622b/src/switch_utils.c#L1304\r\n\r\nMaking this configurable would help, but I also wonder is this really necessarily?\r\n\r\nFor now I have worked around this with:\r\n\r\n```\r\nln -s /run/current-system/sw/bin/cat /bin/cat\r\n```\r\n\r\n**To Reproduce**\r\n\r\nAs above.\r\n\r\n**Expected behavior**\r\n\r\nThe email should get sent.\r\n\r\n**Package version or git hash**\r\n\r\n1.10.10\r\n\r\n**Trace logs**\r\n\r\nNot really relevant.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2293/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:48:49Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32885921032",
        "type": "PullRequestEvent",
        "actor": {
            "id": 3736014,
            "login": "jchavanton",
            "display_login": "jchavanton",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jchavanton",
            "avatar_url": "https://avatars.githubusercontent.com/u/3736014?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "opened",
            "number": 2292,
            "pull_request": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292",
                "id": 1575806548,
                "node_id": "PR_kwDOCTXdt85d7OZU",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2292",
                "diff_url": "https://github.com/signalwire/freeswitch/pull/2292.diff",
                "patch_url": "https://github.com/signalwire/freeswitch/pull/2292.patch",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292",
                "number": 2292,
                "state": "open",
                "locked": false,
                "title": "Freeswitch packet relay metrics",
                "user": {
                    "login": "jchavanton",
                    "id": 3736014,
                    "node_id": "MDQ6VXNlcjM3MzYwMTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3736014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jchavanton",
                    "html_url": "https://github.com/jchavanton",
                    "followers_url": "https://api.github.com/users/jchavanton/followers",
                    "following_url": "https://api.github.com/users/jchavanton/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jchavanton/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jchavanton/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jchavanton/subscriptions",
                    "organizations_url": "https://api.github.com/users/jchavanton/orgs",
                    "repos_url": "https://api.github.com/users/jchavanton/repos",
                    "events_url": "https://api.github.com/users/jchavanton/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jchavanton/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "As I am now using the elastic jitter buffer, I wanted precise metrics on the time packets are spending inside FS.\r\n\r\nI made some modifications to have such report.\r\n\r\nThis is the aritificial jitter I am using\r\n`sudo tc qdisc add dev wlp0s20f3 root netem delay 475ms 600ms`\r\n\r\nExample with a test with high jitter with/without the elastic jitter buffer activated.\r\n\r\n```json\r\n{\r\n  \"call_id_in\": \"j6mk7sg4g7kppjr4koii\",\r\n  \"call_id_out\": \"a5045e74-c3c5-4fe7-825e-49d8185cc852\",\r\n  \"report\": {\r\n    \"in\": {\r\n      \"ssrc\": \"0x8A0F2483\",\r\n      \"remote_socket\": \"172.31.61.69:11836\",\r\n      \"local_socket\": \"172.31.61.69:33034\",\r\n      \"codec\": \"opus\",\r\n      \"count\": 1045,\r\n      \"plc\": 36                        << very little PLC was required\r\n    },\r\n    \"out\": {\r\n      \"ssrc\": \"0xB93EA6DF\",\r\n      \"remote_socket\": \"172.31.50.119:27362\",\r\n      \"local_socket\": \"172.31.61.69:19990\",\r\n      \"codec\": \"PCMU\",\r\n      \"count\": 1081,\r\n      \"max\": 1100,\r\n      \"avg\": 429.21               << average time spend in the jitter buffer seems to make perfect sense\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI did several load tests to measure the impact of the extra work load and nothing significant on a very small instance for example.\r\nWith packet stats\r\n\r\n<img src=\"https://github.com/signalwire/freeswitch/assets/3736014/95514531-80ef-4db6-a295-c46a609d6abc\" width=\"300\" />\r\nWithout packet stats\r\n\r\n<img src=\"https://github.com/signalwire/freeswitch/assets/3736014/b0fa648a-bdf9-4fb1-bddb-8e8f3941dd4e\" width=\"300\" />\r\n\r\nI understand that some refactoring and modifications will be needed to consider merging this ...\r\nJust wanted to get some feedback to see if you guys see the value of such feature.",
                "created_at": "2023-10-27T01:46:41Z",
                "updated_at": "2023-10-27T01:46:41Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292/commits",
                "review_comments_url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292/comments",
                "review_comment_url": "https://api.github.com/repos/signalwire/freeswitch/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/comments",
                "statuses_url": "https://api.github.com/repos/signalwire/freeswitch/statuses/4eed40c331c4df7dd70456031dcbdda135e6cad6",
                "head": {
                    "label": "jchavanton:jbm",
                    "ref": "jbm",
                    "sha": "4eed40c331c4df7dd70456031dcbdda135e6cad6",
                    "user": {
                        "login": "jchavanton",
                        "id": 3736014,
                        "node_id": "MDQ6VXNlcjM3MzYwMTQ=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/3736014?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/jchavanton",
                        "html_url": "https://github.com/jchavanton",
                        "followers_url": "https://api.github.com/users/jchavanton/followers",
                        "following_url": "https://api.github.com/users/jchavanton/following{/other_user}",
                        "gists_url": "https://api.github.com/users/jchavanton/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/jchavanton/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/jchavanton/subscriptions",
                        "organizations_url": "https://api.github.com/users/jchavanton/orgs",
                        "repos_url": "https://api.github.com/users/jchavanton/repos",
                        "events_url": "https://api.github.com/users/jchavanton/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/jchavanton/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 627110685,
                        "node_id": "R_kgDOJWDzHQ",
                        "name": "freeswitch",
                        "full_name": "jchavanton/freeswitch",
                        "private": false,
                        "owner": {
                            "login": "jchavanton",
                            "id": 3736014,
                            "node_id": "MDQ6VXNlcjM3MzYwMTQ=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/3736014?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/jchavanton",
                            "html_url": "https://github.com/jchavanton",
                            "followers_url": "https://api.github.com/users/jchavanton/followers",
                            "following_url": "https://api.github.com/users/jchavanton/following{/other_user}",
                            "gists_url": "https://api.github.com/users/jchavanton/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/jchavanton/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/jchavanton/subscriptions",
                            "organizations_url": "https://api.github.com/users/jchavanton/orgs",
                            "repos_url": "https://api.github.com/users/jchavanton/repos",
                            "events_url": "https://api.github.com/users/jchavanton/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/jchavanton/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/jchavanton/freeswitch",
                        "description": "FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a versatile software implementation that runs on any commodity hardware. From a Raspberry PI to a multi-core server, FreeSWITCH can unlock the telecommunications potential of any device.",
                        "fork": true,
                        "url": "https://api.github.com/repos/jchavanton/freeswitch",
                        "forks_url": "https://api.github.com/repos/jchavanton/freeswitch/forks",
                        "keys_url": "https://api.github.com/repos/jchavanton/freeswitch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/jchavanton/freeswitch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/jchavanton/freeswitch/teams",
                        "hooks_url": "https://api.github.com/repos/jchavanton/freeswitch/hooks",
                        "issue_events_url": "https://api.github.com/repos/jchavanton/freeswitch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/jchavanton/freeswitch/events",
                        "assignees_url": "https://api.github.com/repos/jchavanton/freeswitch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/jchavanton/freeswitch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/jchavanton/freeswitch/tags",
                        "blobs_url": "https://api.github.com/repos/jchavanton/freeswitch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/jchavanton/freeswitch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/jchavanton/freeswitch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/jchavanton/freeswitch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/jchavanton/freeswitch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/jchavanton/freeswitch/languages",
                        "stargazers_url": "https://api.github.com/repos/jchavanton/freeswitch/stargazers",
                        "contributors_url": "https://api.github.com/repos/jchavanton/freeswitch/contributors",
                        "subscribers_url": "https://api.github.com/repos/jchavanton/freeswitch/subscribers",
                        "subscription_url": "https://api.github.com/repos/jchavanton/freeswitch/subscription",
                        "commits_url": "https://api.github.com/repos/jchavanton/freeswitch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/jchavanton/freeswitch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/jchavanton/freeswitch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/jchavanton/freeswitch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/jchavanton/freeswitch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/jchavanton/freeswitch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/jchavanton/freeswitch/merges",
                        "archive_url": "https://api.github.com/repos/jchavanton/freeswitch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/jchavanton/freeswitch/downloads",
                        "issues_url": "https://api.github.com/repos/jchavanton/freeswitch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/jchavanton/freeswitch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/jchavanton/freeswitch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/jchavanton/freeswitch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/jchavanton/freeswitch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/jchavanton/freeswitch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/jchavanton/freeswitch/deployments",
                        "created_at": "2023-04-12T20:02:46Z",
                        "updated_at": "2023-06-23T16:52:39Z",
                        "pushed_at": "2023-10-06T20:43:02Z",
                        "git_url": "git://github.com/jchavanton/freeswitch.git",
                        "ssh_url": "git@github.com:jchavanton/freeswitch.git",
                        "clone_url": "https://github.com/jchavanton/freeswitch.git",
                        "svn_url": "https://github.com/jchavanton/freeswitch",
                        "homepage": "https://freeswitch.com/#getting-started",
                        "size": 132034,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "C",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 2,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 2,
                        "watchers": 0,
                        "default_branch": "master"
                    }
                },
                "base": {
                    "label": "signalwire:master",
                    "ref": "master",
                    "sha": "f1fb05214e4f427dcf922f531431ab649cf0622b",
                    "user": {
                        "login": "signalwire",
                        "id": 34925332,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0OTI1MzMy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/34925332?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/signalwire",
                        "html_url": "https://github.com/signalwire",
                        "followers_url": "https://api.github.com/users/signalwire/followers",
                        "following_url": "https://api.github.com/users/signalwire/following{/other_user}",
                        "gists_url": "https://api.github.com/users/signalwire/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/signalwire/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/signalwire/subscriptions",
                        "organizations_url": "https://api.github.com/users/signalwire/orgs",
                        "repos_url": "https://api.github.com/users/signalwire/repos",
                        "events_url": "https://api.github.com/users/signalwire/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/signalwire/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 154525111,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxNTQ1MjUxMTE=",
                        "name": "freeswitch",
                        "full_name": "signalwire/freeswitch",
                        "private": false,
                        "owner": {
                            "login": "signalwire",
                            "id": 34925332,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjM0OTI1MzMy",
                            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/signalwire",
                            "html_url": "https://github.com/signalwire",
                            "followers_url": "https://api.github.com/users/signalwire/followers",
                            "following_url": "https://api.github.com/users/signalwire/following{/other_user}",
                            "gists_url": "https://api.github.com/users/signalwire/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/signalwire/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/signalwire/subscriptions",
                            "organizations_url": "https://api.github.com/users/signalwire/orgs",
                            "repos_url": "https://api.github.com/users/signalwire/repos",
                            "events_url": "https://api.github.com/users/signalwire/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/signalwire/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/signalwire/freeswitch",
                        "description": "FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a versatile software implementation that runs on any commodity hardware. From a Raspberry PI to a multi-core server, FreeSWITCH can unlock the telecommunications potential of any device.",
                        "fork": false,
                        "url": "https://api.github.com/repos/signalwire/freeswitch",
                        "forks_url": "https://api.github.com/repos/signalwire/freeswitch/forks",
                        "keys_url": "https://api.github.com/repos/signalwire/freeswitch/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/signalwire/freeswitch/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/signalwire/freeswitch/teams",
                        "hooks_url": "https://api.github.com/repos/signalwire/freeswitch/hooks",
                        "issue_events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/signalwire/freeswitch/events",
                        "assignees_url": "https://api.github.com/repos/signalwire/freeswitch/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/signalwire/freeswitch/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/signalwire/freeswitch/tags",
                        "blobs_url": "https://api.github.com/repos/signalwire/freeswitch/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/signalwire/freeswitch/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/signalwire/freeswitch/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/signalwire/freeswitch/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/signalwire/freeswitch/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/signalwire/freeswitch/languages",
                        "stargazers_url": "https://api.github.com/repos/signalwire/freeswitch/stargazers",
                        "contributors_url": "https://api.github.com/repos/signalwire/freeswitch/contributors",
                        "subscribers_url": "https://api.github.com/repos/signalwire/freeswitch/subscribers",
                        "subscription_url": "https://api.github.com/repos/signalwire/freeswitch/subscription",
                        "commits_url": "https://api.github.com/repos/signalwire/freeswitch/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/signalwire/freeswitch/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/signalwire/freeswitch/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/signalwire/freeswitch/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/signalwire/freeswitch/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/signalwire/freeswitch/merges",
                        "archive_url": "https://api.github.com/repos/signalwire/freeswitch/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/signalwire/freeswitch/downloads",
                        "issues_url": "https://api.github.com/repos/signalwire/freeswitch/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/signalwire/freeswitch/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/signalwire/freeswitch/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/signalwire/freeswitch/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/signalwire/freeswitch/labels{/name}",
                        "releases_url": "https://api.github.com/repos/signalwire/freeswitch/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/signalwire/freeswitch/deployments",
                        "created_at": "2018-10-24T15:30:09Z",
                        "updated_at": "2023-10-26T08:11:25Z",
                        "pushed_at": "2023-10-27T01:46:42Z",
                        "git_url": "git://github.com/signalwire/freeswitch.git",
                        "ssh_url": "git@github.com:signalwire/freeswitch.git",
                        "clone_url": "https://github.com/signalwire/freeswitch.git",
                        "svn_url": "https://github.com/signalwire/freeswitch",
                        "homepage": "https://freeswitch.com/#getting-started",
                        "size": 134699,
                        "stargazers_count": 2642,
                        "watchers_count": 2642,
                        "language": "C",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1212,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 830,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "freeswitch",
                            "iot",
                            "open-source",
                            "signalwire",
                            "sip",
                            "source-code",
                            "telephony",
                            "voip",
                            "webrtc"
                        ],
                        "visibility": "public",
                        "forks": 1212,
                        "open_issues": 830,
                        "watchers": 2642,
                        "default_branch": "master"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292"
                    },
                    "html": {
                        "href": "https://github.com/signalwire/freeswitch/pull/2292"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/issues/2292"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/issues/2292/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/pulls/2292/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/signalwire/freeswitch/statuses/4eed40c331c4df7dd70456031dcbdda135e6cad6"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 2,
                "additions": 241,
                "deletions": 4,
                "changed_files": 9
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:46:42Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32885185275",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 48600469,
            "login": "signalwire-ci[bot]",
            "display_login": "signalwire-ci",
            "gravatar_id": "",
            "url": "https://api.github.com/users/signalwire-ci[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/48600469?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/events",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2260",
                "id": 1925195369,
                "node_id": "PR_kwDOCTXdt85b2NYx",
                "number": 2260,
                "title": "[mod_verto] Support for JSON message body in the HTTP POST request",
                "user": {
                    "login": "ajay-sabat",
                    "id": 33070898,
                    "node_id": "MDQ6VXNlcjMzMDcwODk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33070898?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ajay-sabat",
                    "html_url": "https://github.com/ajay-sabat",
                    "followers_url": "https://api.github.com/users/ajay-sabat/followers",
                    "following_url": "https://api.github.com/users/ajay-sabat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ajay-sabat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ajay-sabat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ajay-sabat/subscriptions",
                    "organizations_url": "https://api.github.com/users/ajay-sabat/orgs",
                    "repos_url": "https://api.github.com/users/ajay-sabat/repos",
                    "events_url": "https://api.github.com/users/ajay-sabat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ajay-sabat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 13,
                "created_at": "2023-10-04T00:56:34Z",
                "updated_at": "2023-10-27T00:48:38Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2260",
                    "html_url": "https://github.com/signalwire/freeswitch/pull/2260",
                    "diff_url": "https://github.com/signalwire/freeswitch/pull/2260.diff",
                    "patch_url": "https://github.com/signalwire/freeswitch/pull/2260.patch",
                    "merged_at": null
                },
                "body": "In past mod_verto supported only urlencoded data in the message body of the received http request.\r\n\r\nThis fix is to support JSON encoded data in the message body when the Content-Type header is JSON as below.\r\n`Content-Type: application/JSON`\r\nNow from the Lua script you can directly fetch the message body as\r\n`body = env:getBody()`",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782126016",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2260#issuecomment-1782126016",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260",
                "id": 1782126016,
                "node_id": "IC_kwDOCTXdt85qORXA",
                "user": {
                    "login": "signalwire-ci[bot]",
                    "id": 48600469,
                    "node_id": "MDM6Qm90NDg2MDA0Njk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/27049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/signalwire-ci%5Bbot%5D",
                    "html_url": "https://github.com/apps/signalwire-ci",
                    "followers_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T00:48:38Z",
                "updated_at": "2023-10-27T00:48:38Z",
                "author_association": "NONE",
                "body": "Unit-tests failed: https://public-artifacts.signalwire.cloud/drone/signalwire/freeswitch/1542/artifacts.html",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782126016/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:48:39Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32884590259",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 48600469,
            "login": "signalwire-ci[bot]",
            "display_login": "signalwire-ci",
            "gravatar_id": "",
            "url": "https://api.github.com/users/signalwire-ci[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/48600469?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/events",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2260",
                "id": 1925195369,
                "node_id": "PR_kwDOCTXdt85b2NYx",
                "number": 2260,
                "title": "[mod_verto] Support for JSON message body in the HTTP POST request",
                "user": {
                    "login": "ajay-sabat",
                    "id": 33070898,
                    "node_id": "MDQ6VXNlcjMzMDcwODk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/33070898?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ajay-sabat",
                    "html_url": "https://github.com/ajay-sabat",
                    "followers_url": "https://api.github.com/users/ajay-sabat/followers",
                    "following_url": "https://api.github.com/users/ajay-sabat/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ajay-sabat/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ajay-sabat/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ajay-sabat/subscriptions",
                    "organizations_url": "https://api.github.com/users/ajay-sabat/orgs",
                    "repos_url": "https://api.github.com/users/ajay-sabat/repos",
                    "events_url": "https://api.github.com/users/ajay-sabat/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ajay-sabat/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 12,
                "created_at": "2023-10-04T00:56:34Z",
                "updated_at": "2023-10-27T00:02:21Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/pulls/2260",
                    "html_url": "https://github.com/signalwire/freeswitch/pull/2260",
                    "diff_url": "https://github.com/signalwire/freeswitch/pull/2260.diff",
                    "patch_url": "https://github.com/signalwire/freeswitch/pull/2260.patch",
                    "merged_at": null
                },
                "body": "In past mod_verto supported only urlencoded data in the message body of the received http request.\r\n\r\nThis fix is to support JSON encoded data in the message body when the Content-Type header is JSON as below.\r\n`Content-Type: application/JSON`\r\nNow from the Lua script you can directly fetch the message body as\r\n`body = env:getBody()`",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782091863",
                "html_url": "https://github.com/signalwire/freeswitch/pull/2260#issuecomment-1782091863",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2260",
                "id": 1782091863,
                "node_id": "IC_kwDOCTXdt85qOJBX",
                "user": {
                    "login": "signalwire-ci[bot]",
                    "id": 48600469,
                    "node_id": "MDM6Qm90NDg2MDA0Njk=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/27049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/signalwire-ci%5Bbot%5D",
                    "html_url": "https://github.com/apps/signalwire-ci",
                    "followers_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/signalwire-ci%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T00:02:20Z",
                "updated_at": "2023-10-27T00:02:20Z",
                "author_association": "NONE",
                "body": "Unit-tests failed: https://public-artifacts.signalwire.cloud/drone/signalwire/freeswitch/1540/artifacts.html",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782091863/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T00:02:21Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32884520302",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 28,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T23:56:42Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782088008",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1782088008",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1782088008,
                "node_id": "IC_kwDOCTXdt85qOIFI",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T23:56:41Z",
                "updated_at": "2023-10-26T23:56:41Z",
                "author_association": "NONE",
                "body": "My PR freeswitch/sofia-sip#231 fixes this completely, did you see it?",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782088008/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:56:42Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32884275106",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 51345687,
            "login": "jakubkarolczyk",
            "display_login": "jakubkarolczyk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubkarolczyk",
            "avatar_url": "https://avatars.githubusercontent.com/u/51345687?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 27,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T23:35:41Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782073853",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1782073853",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1782073853,
                "node_id": "IC_kwDOCTXdt85qOEn9",
                "user": {
                    "login": "jakubkarolczyk",
                    "id": 51345687,
                    "node_id": "MDQ6VXNlcjUxMzQ1Njg3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51345687?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jakubkarolczyk",
                    "html_url": "https://github.com/jakubkarolczyk",
                    "followers_url": "https://api.github.com/users/jakubkarolczyk/followers",
                    "following_url": "https://api.github.com/users/jakubkarolczyk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jakubkarolczyk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jakubkarolczyk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jakubkarolczyk/subscriptions",
                    "organizations_url": "https://api.github.com/users/jakubkarolczyk/orgs",
                    "repos_url": "https://api.github.com/users/jakubkarolczyk/repos",
                    "events_url": "https://api.github.com/users/jakubkarolczyk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jakubkarolczyk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T23:35:41Z",
                "updated_at": "2023-10-26T23:35:41Z",
                "author_association": "COLLABORATOR",
                "body": "Looks like your clients abruptly and randomly terminate connections without sending WSOC_CLOSE msg (even not speaking about close_notify alert). You should investigate that, it's not normal and that shouldn't happen with the level of occurences you've given figures for. However, server should be resilient for that nasty behavior, so I'll keep you updated. Thanks for the effort you've put in that so far, much apprieciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1782073853/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:35:42Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32882645541",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 26,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T21:46:22Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781937887",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1781937887",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1781937887,
                "node_id": "IC_kwDOCTXdt85qNjbf",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T21:46:21Z",
                "updated_at": "2023-10-26T21:46:21Z",
                "author_association": "NONE",
                "body": "From my debugging of this so far, you can't rely on SSL_get_shutdown() telling you anything useful in the case of SSL_ERROR_SSL or _SYSCALL",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781937887/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:46:22Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32881919401",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 25,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T21:07:18Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781895529",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1781895529",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1781895529,
                "node_id": "IC_kwDOCTXdt85qNZFp",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T21:07:18Z",
                "updated_at": "2023-10-26T21:07:18Z",
                "author_association": "NONE",
                "body": "This does not seem to fix the problem. I built from a fresh git clone then applied PR 233 to it then added a patch so I could make sure that it was OK by printing out the fd's it would try to SSL_write to.\r\n\r\n```\r\n--- libsofia-sip-ua/tport/ws.c.orig     2023-10-26 20:04:05.030422865 +0000\r\n+++ libsofia-sip-ua/tport/ws.c  2023-10-26 20:06:33.677116924 +0000\r\n@@ -669,6 +669,7 @@\r\n                        if (code < 0) {\r\n                                int ssl_err = SSL_get_error(wsh->ssl, code);\r\n                                if (!SSL_WANT_READ_WRITE(ssl_err)) {\r\n+                                       printf(\"WS estab -1 code <0 ssl_err %d errno %s fd %d\\n\",ssl_err, ssl_err == SSL_ERROR_SYSCALL ? strerror(errno):\"N/A\", wsh->sock);\r\n                                        wss_error(wsh, ssl_err, \"establish_logical_layer: SSL_accept\");\r\n                                        return -1;\r\n                                }\r\n@@ -833,6 +834,17 @@\r\n\r\n                /* peer closes the connection */\r\n                if (SSL_get_shutdown(wsh->ssl) & SSL_RECEIVED_SHUTDOWN) {\r\n+                       char procbuf[1024], fnbuf[1024];\r\n+                       ssize_t fnlen;\r\n+                       sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n+                       if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n+                               fnbuf[fnlen] = '\\0';\r\n+                               printf(\"WS ws_raw_write rs fd %d target %s\\n\",wsh->sock,fnbuf);\r\n+                               }\r\n+                       else\r\n+                               {\r\n+                               printf(\"WS ws_raw_write rs fd %d readlink failed\\n\",wsh->sock);\r\n+                               }\r\n                        code = SSL_write(wsh->ssl, buf, 1);\r\n                        ssl_error = SSL_get_error(wsh->ssl, code);\r\n                        if (ssl_error == SSL_ERROR_SYSCALL || ssl_error == SSL_ERROR_SSL) {\r\n@@ -844,6 +856,17 @@\r\n                }\r\n\r\n                /* us closes the connection. We do bidirection shutdown handshake */\r\n+               char procbuf[1024], fnbuf[1024];\r\n+               ssize_t fnlen;\r\n+               sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n+               if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n+                       fnbuf[fnlen] = '\\0';\r\n+                       printf(\"WS ws_raw_write ss fd %d target %s\\n\",wsh->sock,fnbuf);\r\n+                       }\r\n+               else\r\n+                       {\r\n+                       printf(\"WS ws_raw_write ss fd %d readlink failed\\n\",wsh->sock);\r\n+                       }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n                ssl_error = SSL_get_error(wsh->ssl, code);\r\n                if (ssl_error == SSL_ERROR_SYSCALL || ssl_error == SSL_ERROR_SSL) {\r\n```\r\n\r\nThe idea there is that immediately before it hits SSL_write we know what it's about to write to. If it comes back with readlink failed then that is a dead fd which we should never be touching. When it says socket: something then it is at least a socket though we can't say from this if it is the right one or not. If it says anything starting with / then it may be about to overwrite an open file.\r\n\r\nSo far I've had \r\n```\r\n# for pattern in 'ss fd.*readlink' 'rs fd.*readlink' 'rs.*socket' \"ss.*socket\" '/' 'ssl_err'; do echo $pattern; journalctl -u freeswitch -S \"2023-10-26 20:13:38\" | grep -c \"$pattern\" ;done\r\nss fd.*readlink\r\n497\r\nrs fd.*readlink\r\n0\r\nrs.*socket\r\n30\r\nss.*socket\r\n762\r\n/\r\n9\r\nssl_err\r\n9\r\n```\r\n\r\nThankfully the only / matches are on my debug message \r\n\r\n```\r\nOct 26 20:13:47 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 120\r\nOct 26 20:13:47 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 120\r\nOct 26 20:13:47 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 138\r\nOct 26 20:13:48 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 158\r\nOct 26 20:13:48 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 159\r\nOct 26 20:19:36 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 215\r\nOct 26 20:28:57 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 179\r\nOct 26 20:36:09 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 206\r\nOct 26 20:40:24 fstrtc01.voiceflex.com stdbuf[827898]: WS estab -1 code <0 ssl_err 1 errno N/A fd 147\r\n```\r\n\r\nThat's SSL_ERROR_SSL.\r\n\r\nI don't think we should ever get a failed readlink right before the SSL_write just after the \"us closes the connection\" comment. If we do it will fail because the fd is not there. There are 497 of those.\r\n\r\n```\r\nOct 26 20:13:48 fstrtc01.voiceflex.com stdbuf[827898]: WS ws_raw_write ss fd 162 readlink failed\r\nOct 26 20:13:50 fstrtc01.voiceflex.com stdbuf[827898]: WS ws_raw_write ss fd 151 readlink failed\r\nOct 26 20:13:50 fstrtc01.voiceflex.com stdbuf[827898]: WS ws_raw_write ss fd 149 readlink failed\r\n```\r\n\r\nWhat I observe is that when an SSL call returns either SSL_ERROR_SYSCALL or SSL_ERROR_SSL then the socket that those errors reference is already gone. I think that when man SSL_get_error says \"If this error occurs then no further I/O operations should  be performed on the connection and SSL_shutdown() must not be called.\", they really really mean *no further I/O* !",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781895529/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:07:19Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32868092313",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 51345687,
            "login": "jakubkarolczyk",
            "display_login": "jakubkarolczyk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubkarolczyk",
            "avatar_url": "https://avatars.githubusercontent.com/u/51345687?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 24,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T12:43:19Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781048498",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1781048498",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1781048498,
                "node_id": "IC_kwDOCTXdt85qKKSy",
                "user": {
                    "login": "jakubkarolczyk",
                    "id": 51345687,
                    "node_id": "MDQ6VXNlcjUxMzQ1Njg3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51345687?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jakubkarolczyk",
                    "html_url": "https://github.com/jakubkarolczyk",
                    "followers_url": "https://api.github.com/users/jakubkarolczyk/followers",
                    "following_url": "https://api.github.com/users/jakubkarolczyk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jakubkarolczyk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jakubkarolczyk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jakubkarolczyk/subscriptions",
                    "organizations_url": "https://api.github.com/users/jakubkarolczyk/orgs",
                    "repos_url": "https://api.github.com/users/jakubkarolczyk/repos",
                    "events_url": "https://api.github.com/users/jakubkarolczyk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jakubkarolczyk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:43:18Z",
                "updated_at": "2023-10-26T12:43:18Z",
                "author_association": "COLLABORATOR",
                "body": "thanks, please rebuild this PR and re-test too https://github.com/freeswitch/sofia-sip/pull/233",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781048498/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:43:19Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32868006025",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 23,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T12:40:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781043993",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1781043993",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1781043993,
                "node_id": "IC_kwDOCTXdt85qKJMZ",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T12:40:34Z",
                "updated_at": "2023-10-26T12:40:34Z",
                "author_association": "NONE",
                "body": "I will build and test later this evening.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1781043993/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:40:35Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32862626419",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 51345687,
            "login": "jakubkarolczyk",
            "display_login": "jakubkarolczyk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubkarolczyk",
            "avatar_url": "https://avatars.githubusercontent.com/u/51345687?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 22,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T09:28:40Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780748267",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780748267",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780748267,
                "node_id": "IC_kwDOCTXdt85qJA_r",
                "user": {
                    "login": "jakubkarolczyk",
                    "id": 51345687,
                    "node_id": "MDQ6VXNlcjUxMzQ1Njg3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51345687?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jakubkarolczyk",
                    "html_url": "https://github.com/jakubkarolczyk",
                    "followers_url": "https://api.github.com/users/jakubkarolczyk/followers",
                    "following_url": "https://api.github.com/users/jakubkarolczyk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jakubkarolczyk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jakubkarolczyk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jakubkarolczyk/subscriptions",
                    "organizations_url": "https://api.github.com/users/jakubkarolczyk/orgs",
                    "repos_url": "https://api.github.com/users/jakubkarolczyk/repos",
                    "events_url": "https://api.github.com/users/jakubkarolczyk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jakubkarolczyk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T09:28:40Z",
                "updated_at": "2023-10-26T09:28:40Z",
                "author_association": "COLLABORATOR",
                "body": "@themsley-voiceflex besides of the problem reported in the subject of this issue, does FS accepts registrations from your clients when you're running sofia on current master?",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780748267/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T09:28:41Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32861759894",
        "type": "IssuesEvent",
        "actor": {
            "id": 40118754,
            "login": "S0NN1",
            "display_login": "S0NN1",
            "gravatar_id": "",
            "url": "https://api.github.com/users/S0NN1",
            "avatar_url": "https://avatars.githubusercontent.com/u/40118754?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2291",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2291/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2291/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2291/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2291",
                "id": 1963040826,
                "node_id": "I_kwDOCTXdt851AaA6",
                "number": 2291,
                "title": "Failed Registration with status No transport [503]",
                "user": {
                    "login": "S0NN1",
                    "id": 40118754,
                    "node_id": "MDQ6VXNlcjQwMTE4NzU0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/40118754?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/S0NN1",
                    "html_url": "https://github.com/S0NN1",
                    "followers_url": "https://api.github.com/users/S0NN1/followers",
                    "following_url": "https://api.github.com/users/S0NN1/following{/other_user}",
                    "gists_url": "https://api.github.com/users/S0NN1/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/S0NN1/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/S0NN1/subscriptions",
                    "organizations_url": "https://api.github.com/users/S0NN1/orgs",
                    "repos_url": "https://api.github.com/users/S0NN1/repos",
                    "events_url": "https://api.github.com/users/S0NN1/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/S0NN1/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T08:59:53Z",
                "updated_at": "2023-10-26T08:59:53Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nGateway registration fails with 503 code using TCP registration transport.\r\n\r\n**To Reproduce**\r\n\r\n- Prepare two machines on the same LAN with Freewitch installed on both (from now on we will call server the machine with the sip profile and client the one with the gateway pointing to the server)\r\n\r\n- Create sip profile (the sip-ip is the local IP address) on the server:\r\n```xml\r\n<profile name=\"XXX\">\r\n  <aliases></aliases>\r\n  <domains>\r\n    <domain name=\"all\" alias=\"true\" parse=\"false\"/>\r\n  </domains>\r\n  <settings>\r\n    <param name=\"sip-ip\" value=\"XXX.XXX.XX\"/>\r\n    <param name=\"ext-rtp-ip\" value=\"$${hostname}.local\"/>\r\n    <param name=\"ext-sip-ip\" value=\"$${hostname}.local\"/>\r\n    <param name=\"sip-port\" value=\"5061\"/>\r\n    <param name=\"register-transport\" value=\"tcp\"/>\r\n    <param name=\"auth-calls\" value=\"true\"/>\r\n    <param name=\"context\" value=\"public\"/>\r\n    <param name=\"log-level\" value=\"9\"/>\r\n  </settings>\r\n</profile>`\r\n```\r\n\r\n- Create domain under directory/domain.xml  on the server:\r\n```xml\r\n<include>\r\n  <!--the domain or ip (the right hand side of the @ in the addr-->\r\n  <domain name=\"${hostname}.local\">\r\n    <params>\r\n      <param name=\"dial-string\" value=\"{^^:sip_invite_domain=${dialed_domain}:presence_id=${dialed_user}@${dialed_domain}}${sofia_contact(*/${dialed_user}@${dialed_domain})},${verto_contact(${dialed_user}@${dialed_domain})}\"/>\r\n      <param name=\"jsonrpc-allowed-methods\" value=\"verto\"/>\r\n    </params>\r\n\r\n    <variables>\r\n      <variable name=\"record_stereo\" value=\"true\"/>\r\n      <variable name=\"default_gateway\" value=\"$${default_provider}\"/>\r\n      <variable name=\"default_areacode\" value=\"$${default_areacode}\"/>\r\n      <variable name=\"transfer_fallback_extension\" value=\"operator\"/>\r\n    </variables>\r\n\r\n    <groups>\r\n      <group name=\"company\">\r\n        <users>\r\n          <X-PRE-PROCESS cmd=\"include\" data=\"company/*.xml\"/>\r\n        </users>\r\n      </group>\r\n    </groups>\r\n  </domain>\r\n</include>\r\n```\r\n\r\n- Create user under directory/company/user.xml on the server:\r\n```xml\r\n<include>\r\n  <user id=\"user\">\r\n    <params>\r\n      <param name=\"password\" value=\"password\"/>\r\n    </params>\r\n    <variables>\r\n      <variable name=\"user_context\" value=\"company\"/>\r\n    </variables>\r\n  </user>\r\n</include>\r\n ```\r\n \r\n- Create dialplan in dialplan/company.xml on the server:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<include>\r\n  <context name=\"company\">\r\n\r\n    <extension name=\"Internal Call\">\r\n      <condition field=\"destination_number\" expression=\"^(user)$\">\r\n        <action application=\"set\" data=\"dialed_extension=$1\" />\r\n        <action application=\"bridge\" data=\"user/${dialed_extension}@${domain_name}\" />\r\n      </condition>\r\n    </extension>\r\n\r\n  </context>\r\n</include>\r\n ```\r\n \r\n - Create external sip_profile under sip_profiles/external on the client (where XXX.XXX.XX is the server local IP address):\r\n ```xml\r\n  <include>\r\n    <gateway name=\"TATU\">\r\n      <param name=\"proxy\" value=\"XXX.XXX.XX\"/>\r\n      <param name=\"register-proxy\" value=\"\"/>\r\n      <param name=\"outbound-proxy\" value=\"\"/>\r\n      <param name=\"sip-port\" value=\"5061\"/>\r\n      <param name=\"realm\" value=\"\"/>\r\n      <param name=\"register\" value=\"true\"/>\r\n      <param name=\"caller-id-in-from\" value=\"true\"/>\r\n      <param name=\"register-transport\" value=\"tcp\"/>\r\n      <param name=\"username\" value=\"user\"/>\r\n      <param name=\"password\" value=\"password\"/>\r\n      <param name=\"context\" value=\"public\"/>\r\n    </gateway>\r\n </include>\r\n ```\r\n\r\n**Expected behavior**\r\nClient resister correctly on the server.\r\n\r\n**Package version or git hash**\r\n - FreeSWITCH Version 1.10.7-release~32bit ( 32bit)\r\n\r\n**Trace logs**\r\nOn the server I don't see any incoming sip events, while on the client I see this:\r\n```log\r\n\r\n2023-10-26 08:52:17.412900 88.67% [NOTICE] sofia_reg.c:463 Registering TATU\r\nnua_stack.c:599 nua_stack_signal() nua(0x7559a890): recv signal r_register\r\nnua_dialog.c:338 nua_dialog_usage_add() nua(0x7559a890): adding register usage\r\nnta.c:2707 nta_tpn_by_url() nta: selecting scheme sip\r\nnta.c:8224 outgoing_prepare_send() nta outgoing create: no transport protocol\r\nnua_stack.c:301 nua_stack_event() nua(0x7559a890): event r_register 503 No transport\r\nnua_dialog.c:397 nua_dialog_usage_remove_at() nua(0x7559a890): removing register usage\r\nnua_stack.c:559 nua_signal() nua(0x7559a890): sent signal r_handle_unref\r\nnua_stack.c:559 nua_signal() nua((nil)): sent signal r_unref\r\nnua_stack.c:599 nua_stack_signal() nua(0x7559a890): recv signal r_handle_unref\r\nnua_stack.c:599 nua_stack_signal() nua((nil)): recv signal r_unref\r\nnua_stack.c:559 nua_signal() nua(0x7559a890): sent signal r_register\r\n2023-10-26 08:52:17.433078 88.67% [ERR] sofia_reg.c:2681 TATU Failed Registration with status No transport [503]. failure #34\r\nnua_stack.c:599 nua_stack_signal() nua(0x7559a890): recv signal r_handle_unref\r\nnua_stack.c:559 nua_signal() nua(0x7559a890): sent signal r_handle_unref\r\nnua_stack.c:599 nua_stack_signal() nua((nil)): recv signal r_unref\r\nnua_stack.c:559 nua_signal() nua((nil)): sent signal r_unref\r\n2023-10-26 08:52:18.432890 88.37% [WARNING] sofia_reg.c:520 TATU Failed Registration [503], setting retry to 30 seconds.\r\nnta.c:9225 outgoing_timer_dk() nta: timer K fired, terminate REGISTER (74601376)\r\nnta.c:9044 _nta_outgoing_timer() nta_outgoing_timer: 0/0 resent, 0/0 tout, 1/1 term, 1/1 free\r\n```\r\n\r\n**Further details**\r\nI am able to reach the host and the port from the client:\r\n```bash\r\ntelnet XXX.XXX.XXX.XX 5061\r\nTrying XXX.XXX.XXX.XX...\r\nConnected to XXX.XXX.XXX.XX.\r\nEscape character is '^]'.\r\n```\r\nDoing a netstat on the server reveals that the port is open and listening\r\n\r\nSorry for the long post, I'm very new to Freeswitch and I couldn't find anything related to this error (apart from viewing the C source code) nor anyone having this problem while searching on Google.\r\nIf any additional information is needed, tell me and I will gladly attach it to this issue.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2291/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2291/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T08:59:54Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32860360943",
        "type": "WatchEvent",
        "actor": {
            "id": 71819976,
            "login": "ashok-murugan",
            "display_login": "ashok-murugan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashok-murugan",
            "avatar_url": "https://avatars.githubusercontent.com/u/71819976?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T08:11:24Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32858959159",
        "type": "WatchEvent",
        "actor": {
            "id": 42791357,
            "login": "L-HeliantHuS",
            "display_login": "L-HeliantHuS",
            "gravatar_id": "",
            "url": "https://api.github.com/users/L-HeliantHuS",
            "avatar_url": "https://avatars.githubusercontent.com/u/42791357?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T07:18:25Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32853828523",
        "type": "WatchEvent",
        "actor": {
            "id": 143479552,
            "login": "win3x",
            "display_login": "win3x",
            "gravatar_id": "",
            "url": "https://api.github.com/users/win3x",
            "avatar_url": "https://avatars.githubusercontent.com/u/143479552?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T01:51:09Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32853134868",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 21,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T00:59:02Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780256209",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780256209",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780256209,
                "node_id": "IC_kwDOCTXdt85qHI3R",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T00:59:02Z",
                "updated_at": "2023-10-26T00:59:02Z",
                "author_association": "NONE",
                "body": "About the only thing I am not sure is correct in PR231 is https://github.com/freeswitch/sofia-sip/pull/231/files#diff-75fafb0c367c42d57236bcc76287aed6d582556d527057bdf103ef75d33e75d6R560\r\n\r\nDoesn't mean PR231 is the correct way to do it but it does seem to work.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780256209/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T00:59:02Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32852847381",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 20,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T00:37:07Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780241709",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780241709",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780241709,
                "node_id": "IC_kwDOCTXdt85qHFUt",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T00:37:06Z",
                "updated_at": "2023-10-26T00:37:06Z",
                "author_association": "NONE",
                "body": "I checked my logs (with the current PR231 applied)  after restart and it's very rare that a whole minute goes by without a single registration, usually it's 2 or more, up to about a dozen, maybe 20 every minute. With PR233 on there were none at all for 8 mins.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780241709/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T00:37:07Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32852658168",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 19,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T00:23:46Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780233188",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780233188",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780233188,
                "node_id": "IC_kwDOCTXdt85qHDPk",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T00:23:46Z",
                "updated_at": "2023-10-26T00:23:46Z",
                "author_association": "NONE",
                "body": "Yes, sure. I backed out all my changes\r\n\r\ngit diff -R ae810c8872dee7547ed5e8443080d416ac0ba348 > /tmp/sofia-sip-ae810c8872dee7547ed5e8443080d416ac0ba348.patch\r\n\r\nthen applied it, rebuilt, restarted, got almost no output from anything.\r\n\r\nLast thing it wrote to the console was\r\n\r\n2023-10-25 23:58:29.889824 100.00% [INFO] switch_core.c:2503 \r\nFreeSWITCH Version 1.10.10-release~64bit (-release 64bit)\r\n\r\nFreeSWITCH Started\r\nMax Sessions [4000]\r\nSession Rate [4000]\r\nSQL [Enabled]\r\n\r\n2023-10-26 00:00:02.500027 99.40% [NOTICE] mod_logfile.c:217 New log started.\r\n2023-10-26 00:01:01.740280 99.27% [INFO] switch_time.c:627 Clock synchronized to system time.\r\n2023-10-26 00:02:29.200025 99.50% [ERR] switch_odbc.c:529 ERR: [update sip_registrations set ping_expires = 1698278578 where hostname='fstrtc01.voiceflex.com' and profile_name='internaltcp' and ping_expires <= 1698278548 ]\r\n[STATE: 40001 CODE 1213 ERROR: [ma-3.1.12][5.5.68-MariaDB]Deadlock found when trying to get lock; try restarting transaction\r\n]\r\n2023-10-26 00:02:29.200025 99.50% [ERR] switch_core_sqldb.c:728 [db=\"freeswitch\";type=\"odbc\"user=\"nebulaip\";pass=\"Nebula1p\"] ODBC SQL ERR [STATE: 40001 CODE 1213 ERROR: [ma-3.1.12][5.5.68-MariaDB]Deadlock found when trying to get lock; try restarting transaction\r\n]\r\nupdate sip_registrations set ping_expires = 1698278578 where hostname='fstrtc01.voiceflex.com' and profile_name='internaltcp' and ping_expires <= 1698278548 \r\n2023-10-26 00:06:17.181955 95.47% [INFO] switch_core.c:2891 Shutting down\r\n\r\nNo registrations in that entire 8 minute period. Backed out to my latest version with the code from PR freeswitch/sofia-sip#231 and restarted\r\n\r\n2023-10-26 00:06:36.531855 100.00% [INFO] switch_core.c:2503 \r\nFreeSWITCH Version 1.10.10-release~64bit (-release 64bit)\r\n\r\nFreeSWITCH Started\r\nMax Sessions [4000]\r\nSession Rate [4000]\r\nSQL [Enabled]\r\n2023-10-26 00:06:36.584927 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.219.37.21\r\n2023-10-26 00:06:36.602676 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.210.146.241\r\n2023-10-26 00:06:36.621780 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.102.11.112\r\n2023-10-26 00:06:36.681802 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.24.145.7\r\n2023-10-26 00:06:36.881801 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.103.181.164\r\n2023-10-26 00:06:36.981824 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.25.214.147\r\n2023-10-26 00:06:37.181780 100.00% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.97.66.47\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780233188/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T00:23:47Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32852555307",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4557407,
            "login": "andywolk",
            "display_login": "andywolk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andywolk",
            "avatar_url": "https://avatars.githubusercontent.com/u/4557407?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 18,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T00:16:27Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780227882",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780227882",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780227882,
                "node_id": "IC_kwDOCTXdt85qHB8q",
                "user": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T00:16:27Z",
                "updated_at": "2023-10-26T00:16:27Z",
                "author_association": "CONTRIBUTOR",
                "body": "@themsley-voiceflex are you sure the patch was applied correctly?",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780227882/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T00:16:27Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32852377953",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 74356639,
            "login": "themsley-voiceflex",
            "display_login": "themsley-voiceflex",
            "gravatar_id": "",
            "url": "https://api.github.com/users/themsley-voiceflex",
            "avatar_url": "https://avatars.githubusercontent.com/u/74356639?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 17,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-26T00:03:13Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780217669",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780217669",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780217669,
                "node_id": "IC_kwDOCTXdt85qG_dF",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T00:03:12Z",
                "updated_at": "2023-10-26T00:03:12Z",
                "author_association": "NONE",
                "body": "Applied, rebuilt, tested. Does not seem to work at all. Starts up, does nothing. Lots of connections, cannot make calls.",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780217669/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T00:03:13Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32852367094",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 51345687,
            "login": "jakubkarolczyk",
            "display_login": "jakubkarolczyk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakubkarolczyk",
            "avatar_url": "https://avatars.githubusercontent.com/u/51345687?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/1934",
                "id": 1553444596,
                "node_id": "I_kwDOCTXdt85cl670",
                "number": 1934,
                "title": "WSS issue, FS stops registering devices",
                "user": {
                    "login": "robertoscarpone",
                    "id": 11558478,
                    "node_id": "MDQ6VXNlcjExNTU4NDc4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11558478?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/robertoscarpone",
                    "html_url": "https://github.com/robertoscarpone",
                    "followers_url": "https://api.github.com/users/robertoscarpone/followers",
                    "following_url": "https://api.github.com/users/robertoscarpone/following{/other_user}",
                    "gists_url": "https://api.github.com/users/robertoscarpone/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/robertoscarpone/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/robertoscarpone/subscriptions",
                    "organizations_url": "https://api.github.com/users/robertoscarpone/orgs",
                    "repos_url": "https://api.github.com/users/robertoscarpone/repos",
                    "events_url": "https://api.github.com/users/robertoscarpone/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/robertoscarpone/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 35,
                "created_at": "2023-01-23T17:02:04Z",
                "updated_at": "2023-10-26T00:02:25Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nThe service stops handling registrations due to a WSS transport issue in FreeSWITCH.\r\nWe have found several cases in which it occurs (as reported by other users, for example #1920 and freeswitch/sofia-sip#177) where, however, we are unable to reproduce the issue voluntarily. In the scenario we are going to describe below it always occurs.\r\nWe tried to simulate the same scenario with FreeSWITCH 1.6.20 and the service handles requests correctly.\r\n\r\n**To Reproduce**\r\nAfter some time spent troubleshooting we managed to find a case where it always occurs.\r\nEnvironment to build to reproduce the issue: Windows 10 PC with ESET suite installed.\r\nWebRTC SIP client (SIP.js or JsSIP, it doesn't matter). It is possible to use https://tryit.jssip.net/.\r\n\r\nSteps to reproduce the behavior:\r\n1. Register the extension;\r\n2. Waiting some seconds;\r\n3. Logout and close WSS connection;\r\n4. FreeSWITCH stops registering devices for some times (min 30 seconds), if you try to register a device in WSS or UDP or TCP the service (FS) doesn't respond.\r\n\r\n**Expected behavior**\r\nThe system continues to correctly manage the registrations of all devices.\r\n\r\n**Package version or git hash**\r\n - FreeSWITCH (Version 1.10.8 -release-20-3510866140 64bit)\r\n - sofia-sip 1.13.11-111~4398da869f\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780216946",
                "html_url": "https://github.com/signalwire/freeswitch/issues/1934#issuecomment-1780216946",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/1934",
                "id": 1780216946,
                "node_id": "IC_kwDOCTXdt85qG_Ry",
                "user": {
                    "login": "jakubkarolczyk",
                    "id": 51345687,
                    "node_id": "MDQ6VXNlcjUxMzQ1Njg3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51345687?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jakubkarolczyk",
                    "html_url": "https://github.com/jakubkarolczyk",
                    "followers_url": "https://api.github.com/users/jakubkarolczyk/followers",
                    "following_url": "https://api.github.com/users/jakubkarolczyk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jakubkarolczyk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jakubkarolczyk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jakubkarolczyk/subscriptions",
                    "organizations_url": "https://api.github.com/users/jakubkarolczyk/orgs",
                    "repos_url": "https://api.github.com/users/jakubkarolczyk/repos",
                    "events_url": "https://api.github.com/users/jakubkarolczyk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jakubkarolczyk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T00:02:24Z",
                "updated_at": "2023-10-26T00:02:24Z",
                "author_association": "COLLABORATOR",
                "body": "@robertoscarpone please try this PR https://github.com/freeswitch/sofia-sip/pull/233",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780216946/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T00:02:25Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32851979727",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4557407,
            "login": "andywolk",
            "display_login": "andywolk",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andywolk",
            "avatar_url": "https://avatars.githubusercontent.com/u/4557407?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283",
                "id": 1952674757,
                "node_id": "I_kwDOCTXdt850Y3PF",
                "number": 2283,
                "title": "freeswitch randomly overwrites files that it has open in r/w mode",
                "user": {
                    "login": "themsley-voiceflex",
                    "id": 74356639,
                    "node_id": "MDQ6VXNlcjc0MzU2NjM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/74356639?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/themsley-voiceflex",
                    "html_url": "https://github.com/themsley-voiceflex",
                    "followers_url": "https://api.github.com/users/themsley-voiceflex/followers",
                    "following_url": "https://api.github.com/users/themsley-voiceflex/following{/other_user}",
                    "gists_url": "https://api.github.com/users/themsley-voiceflex/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/themsley-voiceflex/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/themsley-voiceflex/subscriptions",
                    "organizations_url": "https://api.github.com/users/themsley-voiceflex/orgs",
                    "repos_url": "https://api.github.com/users/themsley-voiceflex/repos",
                    "events_url": "https://api.github.com/users/themsley-voiceflex/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/themsley-voiceflex/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "andywolk",
                        "id": 4557407,
                        "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/andywolk",
                        "html_url": "https://github.com/andywolk",
                        "followers_url": "https://api.github.com/users/andywolk/followers",
                        "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                        "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                        "organizations_url": "https://api.github.com/users/andywolk/orgs",
                        "repos_url": "https://api.github.com/users/andywolk/repos",
                        "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/andywolk/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 16,
                "created_at": "2023-10-19T16:42:17Z",
                "updated_at": "2023-10-25T23:31:53Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nFreeswitch randomly writes SSL data to files that it has open in r/w mode due to some sort of race condition.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Set up a freeswitch profile to use WSS webrtc\r\n2. Expose it to the internet and allow people to attempt to use it\r\n3. after some time freeswitch will overwrite random filehandles that it has open with SSL data\r\n4. FreeSWITCH crashes with sqlite \"file is not a database\" messages in the majority of cases as the filehandle that is most often used and in r/w mode is the one for /dev/shm/core.db. This bug could potentially overwrite any file that is open in r/w mode although the more often it is opened the more likely it is to be a victim which is probably why it seems to pick on /dev/shm/core.db\r\n\r\n**Expected behavior**\r\nfreeswitch does not do random things!\r\n\r\n**Package version or git hash**\r\n1.10.10\r\n\r\nThis is the same issue previously reported in #420 which was mistakenly closed as a SQLite problem. \r\n\r\nI am 100% certain that it not for the following reasons:\r\n\r\n1) we have the patched version of SQLite installed and in use\r\n\r\n2) the bug in SQLite pointed to from #420 https://www.philipotoole.com/how-i-found-a-bug-in-sqlite/ is in a specific SLQite area that needs special action to invoke and freeswitch does not use this. This means the bug will probably never affect freeswitch so a SQLite upgrade is unnecessary. The SQLite bug as reported in that link affects only databases using this specifc set up https://www.sqlite.org/inmemorydb.html and to the best of my knowledge this way of using SQLite is not used by freeswitch. It is 100% definitely not used by our installation. And even if it was (which it isn't!) we have the patched version running.\r\n\r\n3) our freeswitch instance is set up to use param name=\"core-db-name\" value=\"/dev/shm/core.db\"  which is an ordinary file based SQLite database. It just happens to be on a filesystem that is 'in memory' but that is not the same thing as a SQLite 'in memory' database as described above. All these reasons rule out a SQLite problem.\r\n\r\nIn addition I have added debug code to libsofia-sip-ua/tport/ws.c in the ws_close() function, immediately prior to the SSL_write() that it uses. This debug code is\r\n\r\n```\r\n                /* check if no fatal error occurs on connection */\r\n                char procbuf[1024];\r\n                char fnbuf[1024];\r\n                ssize_t fnlen;\r\n                sprintf(procbuf,\"/proc/self/fd/%d\",wsh->sock);\r\n                if ((fnlen = readlink(procbuf,fnbuf,sizeof(fnbuf)-1)) != -1) {\r\n                        fnbuf[fnlen] = '\\0';\r\n                        printf(\"WS ws_close fd %d target %s\\n\",wsh->sock,fnbuf);\r\n                        }\r\n                else {\r\n                        printf(\"WS ws_close fd %d readlink failed\\n\",wsh->sock);\r\n                        }\r\n                code = SSL_write(wsh->ssl, buf, 1);\r\n```\r\n\r\nand when the bug is hit it shows the following information\r\n\r\nOct 18 07:50:47 fstrtc01.voiceflex.com stdbuf[389441]: WS ws_close fd 97 target /dev/shm/core.db\r\nOct 18 12:20:39 fstrtc01.voiceflex.com stdbuf[395088]: WS ws_close fd 63 target /dev/shm/core.db\r\nOct 18 19:20:46 fstrtc01.voiceflex.com stdbuf[403552]: WS ws_close fd 58 target /dev/shm/core.db\r\n\r\nThe SSL_write in ws_close() is issued immediately after that debug message and is writing SSL data to random files as per the similar problem that Facebook engineers found and debugged in their code referenced https://engineering.fb.com/2014/08/12/ios/debugging-file-corruption-on-ios/\r\n\r\n\"The SSL layer was writing to a socket that was already closed and subsequently reassigned to our database file. \"\r\nand\r\n\"Using a hex analyzer, we found a common prefix across the attachments: 17 03 03 00 28\"\r\n\r\nOur overwrite is not identical but similar enough for it to be the same problem:\r\n\r\n```\r\n$ for dbfile in $(ls /dev/shm/core.db-*); do echo $dbfile; od -X $dbfile | head -1;done\r\n/dev/shm/core.db-1697017847\r\n0000000 00030317 2299b112 b8d06713 442802c5\r\n/dev/shm/core.db-1697359841\r\n0000000 00030317 10e68912 769c4a0c 587aac68\r\n/dev/shm/core.db-1697457656\r\n0000000 00030317 cdc06712 26b9d175 b91379ec\r\n/dev/shm/core.db-1697474154\r\n0000000 00030317 0298eb12 10f4a06d a38d8a70\r\n/dev/shm/core.db-1697477136\r\n0000000 00030317 39243212 f67342eb 4eedfd89\r\n/dev/shm/core.db-1697537157\r\n0000000 00030317 bbc1a212 0dd52644 ae8bd737\r\n/dev/shm/core.db-1697547645\r\n0000000 00030317 c42d2612 233c9109 1cb91ff7\r\n/dev/shm/core.db-1697569857\r\n0000000 00030317 9e3fe612 3b797957 df9c0fba\r\n/dev/shm/core.db-1697604657\r\n0000000 00030317 af282512 3c08939a ac980ecf\r\n/dev/shm/core.db-1697615458\r\n0000000 694c5153 03031774 dd7c1300 2223e3b0\r\n/dev/shm/core.db-1697631649\r\n0000000 00030317 21e31112 bad65ac4 f6609114\r\n/dev/shm/core.db-1697656856\r\n0000000 00030317 42088b12 b27bce2d f3ed235c\r\n```\r\n\r\nOnly /dev/shm/core.db-1697615458 does not start with 0x1703030012 and that has 0x1703030013 at +5 into the file.\r\n\r\nWithin a  few seconds of those debug messages being issued we start to get\r\n\r\n2023-10-18 07:34:41.466490 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.179.208.228\r\n2023-10-18 07:50:47.946480 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [file is not a database]\r\nBEGIN EXCLUSIVE\r\n2023-10-18 07:50:48.026471 99.60% [CRIT] switch_core_sqldb.c:2109 ERROR [file is not a database], [db=\"/dev/shm/core.db\",type=\"core_db\"]\r\n2023-10-18 07:50:48.026471 99.60% [ERR] switch_core_sqldb.c:728 [db=\"/dev/shm/core.db\",type=\"core_db\"] NATIVE SQL ERR [cannot commit - no transaction is active]\r\nCOMMIT\r\n2023-10-18 07:50:48.086485 99.60% [WARNING] sofia_reg.c:1842 SIP auth challenge (REGISTER) on sofia profile 'internaltcp' for [webrtc@webrtc.nebulaip.com] from ip x.8.18.233\r\n\r\nThere are identical messages in the logs for the core.db overwrite at 12:20:39 and 19:20:46\r\n\r\nOnce this database is overwritten in this way then freeswitch will refuse to start up as the core.db.dsn database is corrupted and cannot be opened. It has to be deleted/renamed for freeswitch to start up again.\r\n\r\nI also see hangs in freeswitch where it stops responding to connection attempts and a gcore taken at the time of this shows that it is stuck in ws_close() in the middle of the SSL_write() call. I suspect this is related and we are sending to a socket that is not expecting us to write to it (wild abandoned guess!) but this can be stuck there waiting for sometimes hours. I suspect this is also involved in #1934 where people are reporting hangs when attempting to use WSS. This is from the most recent gcore taken for fd 49 which hung from Oct 19 15:23:25 to 16:26:43 when it woke up again.\r\n```\r\n(gdb) thread apply 18 bt full\r\n\r\nThread 18 (Thread 0x7f078bfff640 (LWP 450637)):\r\n#0  0x00007f07bd53e91c in read () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#1  0x00007f07bccdd091 in sock_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#2  0x00007f07bcccd44b in bread_conv () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#3  0x00007f07bccd0445 in bio_read_intern () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#4  0x00007f07bccd05c7 in BIO_read () from /lib64/libcrypto.so.3\r\nNo symbol table info available.\r\n#5  0x00007f07bd130e8c in ssl3_read_n.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#6  0x00007f07bd132af9 in ssl3_read_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#7  0x00007f07bd1425c0 in state_machine.part () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#8  0x00007f07bd13076e in ssl3_write_bytes () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#9  0x00007f07bd1136e7 in SSL_write () from /lib64/libssl.so.3\r\nNo symbol table info available.\r\n#10 0x00007f07bd2a5340 in ws_close (wsh=wsh@entry=0x7f0781f71240, reason=reason@entry=0) at tport/ws.c:900\r\n        ssl_error = 0\r\n        buf = 0x7f07bd2d41b6 \"0\"\r\n        procbuf = \"/proc/self/fd/49\\000\\000\\316\\201\\a\\177\\000\\000\\320\\347\\377\\213\\a\\177\\000\\000\\310\\347\\377\\213\\a\\177\\000\\000\\204\\236(\\275\\a\\177\\000\\000\\220y2\\200\\a\\177\\000\\000\\300\\240\\061\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\200\\350\\377\\213\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\u05a2(\\275\\a\\177\\000\\000\\377\\377\\377\\177\\000\\000\\000\\000\\064Z)\\275\\a\\177\\000\\000tag=ZNS5\\337Q-\\275\\a\\177\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377?B\\017\\000\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\326\\354\\367\\376AN\\245\\377\\377\\377\\177\\000\\000\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\365\\022*\\275\\a\\177\\000\\000P\\303\\316\\201\\a\\177\\000\\000\\000\\067a\\202\\a\\177\"...\r\n        fnbuf = \"socket:[9955738]\\000\\000\\000\\000\\000\\000\\000\\000d\\002\\000\\000\\000\\000\\000\\000\\001\", '\\000' <repeats 15 times>, \"\\307\\002\\000\\000\\000\\000\\000\\000\\325\\371J\\275\\a\\177\\000\\000\\236\\304\\333\\350\\000\\000\\000\\000\\273\\360\\b\\000\\000\\000\\000\\000@\\345\\377\\213\\a\\177\\000\\000@\\345\\377\\213\\a\\177\\000\\000\\340\\vy\\202\\a\\177\\000\\000\\361\\001*\\275\\a\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\240\\344\\377\\213\\a\\177\\000\\000\\060\\067a\\202\\a\\177\\000\\000\\001\\201\\001\\200\\a\\177\\000\\000\\312\\326,\\275\\a\\177\\000\\000\\020\\202\\001\\200\\a\\177\\000\\000d\\002\\000\\000\\000\\000\\000\\000`.\u0401\\000\\000\\000\\004\\000\\nV\\022C\\000\\000\\000\\000\\003\\000\\n]_|\\006\", '\\000' <repeats 25 times>...\r\n        fnlen = <optimized out>\r\n        code = 0\r\n#11 0x00007f07bd2a5bd3 in ws_destroy (wsh=0x7f0781f71240) at tport/ws.c:836\r\nNo locals.\r\n#12 0x00007f07bd2a5ca3 in tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:536\r\n        wstp = <optimized out>\r\n        wstp = <optimized out>\r\n        __func__ = {<optimized out> <repeats 26 times>}\r\n#13 tport_ws_deinit_secondary (self=0x7f0781f71050) at tport/tport_type_ws.c:530\r\n        wstp = 0x7f0781f71050\r\n        __func__ = \"tport_ws_deinit_secondary\"\r\n#14 0x00007f07bd294df8 in tport_zap_secondary (self=0x7f0781f71050) at tport/tport.c:1101\r\n        mr = <optimized out>\r\n        __func__ = \"tport_zap_secondary\"\r\n#15 0x00007f07bd287ed8 in su_timer_expire (timers=timers@entry=0x7f0780000ba8, timeout=timeout@entry=0x7f078bffec50, now=...) at su/su_timer.c:587\r\n        t = 0x7f07836cc9e0\r\n        f = 0x7f07bd296ed0 <tport_secondary_timer>\r\n        n = 42\r\n        __PRETTY_FUNCTION__ = \"su_timer_expire\"\r\n#16 0x00007f07bd288165 in su_base_port_run (self=0x7f0780000b60) at su/su_base_port.c:339\r\n        now = {tv_sec = <optimized out>, tv_usec = <optimized out>}\r\n        tout = 15000\r\n        tout2 = 0\r\n        __PRETTY_FUNCTION__ = \"su_base_port_run\"\r\n#17 0x00007f07bd28b1f3 in su_pthread_port_clone_main (varg=0x7f07b916b580) at su/su_pthread_port.c:343\r\n        arg = 0x0\r\n        task = {{sut_port = 0x7f0780000b60, sut_root = 0x7f07800013d0}}\r\n        zap = 1\r\n#18 0x00007f07bd49f812 in start_thread () from /lib64/libc.so.6\r\nNo symbol table info available.\r\n#19 0x00007f07bd43f450 in clone3 () from /lib64/libc.so.6\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780196162",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2283#issuecomment-1780196162",
                "issue_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2283",
                "id": 1780196162,
                "node_id": "IC_kwDOCTXdt85qG6NC",
                "user": {
                    "login": "andywolk",
                    "id": 4557407,
                    "node_id": "MDQ6VXNlcjQ1NTc0MDc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4557407?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/andywolk",
                    "html_url": "https://github.com/andywolk",
                    "followers_url": "https://api.github.com/users/andywolk/followers",
                    "following_url": "https://api.github.com/users/andywolk/following{/other_user}",
                    "gists_url": "https://api.github.com/users/andywolk/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/andywolk/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/andywolk/subscriptions",
                    "organizations_url": "https://api.github.com/users/andywolk/orgs",
                    "repos_url": "https://api.github.com/users/andywolk/repos",
                    "events_url": "https://api.github.com/users/andywolk/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/andywolk/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T23:31:53Z",
                "updated_at": "2023-10-25T23:31:53Z",
                "author_association": "CONTRIBUTOR",
                "body": "@themsley-voiceflex Please see if that PR helps https://github.com/freeswitch/sofia-sip/pull/233",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/comments/1780196162/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T23:31:54Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32841780530",
        "type": "WatchEvent",
        "actor": {
            "id": 143862758,
            "login": "cvs0",
            "display_login": "cvs0",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cvs0",
            "avatar_url": "https://avatars.githubusercontent.com/u/143862758?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-25T15:58:30Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32839108384",
        "type": "IssuesEvent",
        "actor": {
            "id": 8503259,
            "login": "cdevelop",
            "display_login": "cdevelop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdevelop",
            "avatar_url": "https://avatars.githubusercontent.com/u/8503259?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2290",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2290/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2290/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2290/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2290",
                "id": 1961583042,
                "node_id": "I_kwDOCTXdt85062HC",
                "number": 2290,
                "title": "* [Core] Fix possible deadlock in switch_core_media_set_codec() This commit results in a deadlock",
                "user": {
                    "login": "cdevelop",
                    "id": 8503259,
                    "node_id": "MDQ6VXNlcjg1MDMyNTk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/8503259?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cdevelop",
                    "html_url": "https://github.com/cdevelop",
                    "followers_url": "https://api.github.com/users/cdevelop/followers",
                    "following_url": "https://api.github.com/users/cdevelop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cdevelop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cdevelop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cdevelop/subscriptions",
                    "organizations_url": "https://api.github.com/users/cdevelop/orgs",
                    "repos_url": "https://api.github.com/users/cdevelop/repos",
                    "events_url": "https://api.github.com/users/cdevelop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cdevelop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T14:36:25Z",
                "updated_at": "2023-10-25T14:36:25Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "SHA-1: b4e43214f7c29e658e9a44239a45343d28186779\r\n\r\n* [Core] Fix possible deadlock in switch_core_media_set_codec()\r\n\r\n\r\nThis commit results in a deadlock\r\n\r\n\r\n\r\nThread 3 \r\nswitch_core_session_read_frame \r\n\tswitch_mutex_lock(session->codec_read_mutex);\r\nsofia_receive_message\r\n\tswitch_mutex_lock(tech_pvt->sofia_mutex);\r\nswitch_core_media_set_codec \r\n\tswitch_core_session_lock_codec_write(session);\r\n\tswitch_core_session_lock_codec_read(session);\r\n\r\nThread 2 \r\nswitch_core_session_write_frame\r\n\tswitch_mutex_lock(session->codec_write_mutex);\r\nsofia_receive_message\r\n\tswitch_mutex_lock(tech_pvt->sofia_mutex);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nThread 3 (Thread 0x7f8700ddc700 (LWP 44877)):\r\n#0  0x00007f8d324e854d in __lll_lock_wait () from /lib64/libpthread.so.0\r\n#1  0x00007f8d324e3eb6 in _L_lock_941 () from /lib64/libpthread.so.0\r\n#2  0x00007f8d324e3daf in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n#3  0x00007f8d351eeb49 in fspr_thread_mutex_lock (mutex=<optimized out>) at locks/unix/thread_mutex.c:92\r\n#4  0x00007f8d3507ca25 in switch_mutex_lock (lock=<optimized out>) at src/switch_apr.c:310\r\n#5  0x00007f8d3509a98c in switch_core_session_lock_codec_write (session=<optimized out>) at src/switch_core_codec.c:64\r\n#6  0x00007f8d350d0746 in switch_core_media_set_codec (session=session@entry=0x7f87302945b8, force=force@entry=0, codec_flags=0) at src/switch_core_media.c:3604\r\n#7  0x00007f8d350d604e in switch_core_media_activate_rtp (session=0x7f87302945b8) at src/switch_core_media.c:8589\r\n#8  0x00007f8d198103ce in sofia_media_activate_rtp (tech_pvt=tech_pvt@entry=0x7f873045e8e8) at sofia_media.c:58\r\n#9  0x00007f8d1981044e in sofia_media_tech_media (tech_pvt=tech_pvt@entry=0x7f873045e8e8, r_sdp=<optimized out>, type=type@entry=SDP_TYPE_REQUEST) at sofia_media.c:189\r\n#10 0x00007f8d197e3b4a in sofia_handle_sip_i_state (de=0x7f8d083ecdd0, tags=0x7f86987aa770, sip=0x0, sofia_private=<optimized out>, nh=0x7f8ad06dc470, profile=0x26cb1e0, nua=0x7f8d0802b090, phrase=0x7f86987aab3c \"Session Progress\", status=183, session=0x7f87302945b8) at sofia.c:7683\r\n#11 our_sofia_event_callback (event=nua_i_state, status=<optimized out>, phrase=0x7f86987aab3c \"Session Progress\", nua=0x7f8d0802b090, profile=0x26cb1e0, nh=0x7f8ad06dc470, sofia_private=0x7f8ad01d70d0, sip=0x0, de=de@entry=0x7f8d083ecdd0, tags=0x7f86987aa770) at sofia.c:1813\r\n#12 0x00007f8d197e7a4b in sofia_process_dispatch_event (dep=0x7f8700dd6a20) at sofia.c:2253\r\n#13 0x00007f8d197a8fc9 in sofia_receive_message (session=0x7f87302945b8, msg=0x7f8700dd7190) at mod_sofia.c:1347\r\n#14 0x00007f8d350adee5 in switch_core_session_perform_receive_message (session=session@entry=0x7f87302945b8, message=message@entry=0x7f8700dd7190, file=file@entry=0x7f8d3522d6c5 \"src/switch_ivr.c\", func=func@entry=0x7f8d3522e750 <__func__.18977> \"switch_ivr_parse_signal_data\", line=line@entry=893) at src/switch_core_session.c:854\r\n#15 0x00007f8d35175c5c in switch_ivr_parse_signal_data (session=0x7f87302945b8, all=all@entry=SWITCH_FALSE, only_session_thread=only_session_thread@entry=SWITCH_TRUE) at src/switch_ivr.c:893\r\n#16 0x00007f8d35082921 in switch_channel_check_signal (channel=<optimized out>, in_thread_only=in_thread_only@entry=SWITCH_TRUE) at src/switch_channel.c:2266\r\n#17 0x00007f8d350ec74c in switch_core_media_receive_message (session=session@entry=0x7f87302945b8, msg=<optimized out>) at src/switch_core_media.c:13211\r\n#18 0x00007f8d350ade3f in switch_core_session_perform_receive_message (session=session@entry=0x7f87302945b8, message=message@entry=0x7f8700dd7620, file=file@entry=0x7f8d3521107d \"src/switch_core_io.c\", func=func@entry=0x7f8d352113d0 <__func__.19321> \"switch_core_session_read_frame\", line=line@entry=416) at src/switch_core_session.c:927\r\n#19 0x00007f8d350b951b in switch_core_session_read_frame (session=session@entry=0x7f87302945b8, frame=frame@entry=0x7f8700dd9758, flags=flags@entry=0, stream_id=stream_id@entry=0) at src/switch_core_io.c:416\r\n#20 0x00007f8d35147119 in audio_bridge_thread (obj=obj@entry=0x7f8ad0094ea0, thread=0x0) at src/switch_ivr_bridge.c:799\r\n#21 0x00007f8d35148092 in audio_bridge_on_exchange_media (session=0x7f87302945b8) at src/switch_ivr_bridge.c:979\r\n#22 0x00007f8d350b657a in switch_core_session_run (session=0x7f87302945b8) at src/switch_core_state_machine.c:650\r\n#23 0x00007f8d350afb4e in switch_core_session_thread (thread=<optimized out>, obj=0x7f87302945b8) at src/switch_core_session.c:1727\r\n#24 0x00007f8d350ab22a in switch_core_session_thread_pool_worker (thread=0x7f86d5d68a70, obj=<optimized out>) at src/switch_core_session.c:1791\r\n#25 0x00007f8d351f4c30 in dummy_worker (opaque=0x7f86d5d68a70) at threadproc/unix/thread.c:151\r\n#26 0x00007f8d324e1ea5 in start_thread () from /lib64/libpthread.so.0\r\n#27 0x00007f8d31b35b0d in clone () from /lib64/libc.so.6\r\nThread 2 (Thread 0x7f88a9cbb700 (LWP 10894)):\r\n#0  0x00007f8d324e854d in __lll_lock_wait () from /lib64/libpthread.so.0\r\n#1  0x00007f8d324e3eb6 in _L_lock_941 () from /lib64/libpthread.so.0\r\n#2  0x00007f8d324e3daf in pthread_mutex_lock () from /lib64/libpthread.so.0\r\n#3  0x00007f8d351eeb49 in fspr_thread_mutex_lock (mutex=<optimized out>) at locks/unix/thread_mutex.c:92\r\n#4  0x00007f8d3507ca25 in switch_mutex_lock (lock=<optimized out>) at src/switch_apr.c:310\r\n#5  0x00007f8d197a929c in sofia_receive_message (session=0x7f87302945b8, msg=0x7f88a9cb8030) at mod_sofia.c:1526\r\n#6  0x00007f8d350ae16b in switch_core_session_perform_receive_message (session=session@entry=0x7f87302945b8, message=message@entry=0x7f88a9cb8030, file=file@entry=0x7f8d352142a2 \"src/switch_core_media.c\", func=func@entry=0x7f8d35218fe0 <__func__.40598> \"switch_core_session_write_frame\", line=line@entry=15951) at src/switch_core_session.c:931\r\n#7  0x00007f8d350f428f in switch_core_session_write_frame (session=session@entry=0x7f87302945b8, frame=0x7f86d6eb88a8, flags=flags@entry=0, stream_id=stream_id@entry=0) at src/switch_core_media.c:15951\r\n#8  0x00007f8d351471e3 in audio_bridge_thread (obj=obj@entry=0x7f87307df670, thread=0x0) at src/switch_ivr_bridge.c:818\r\n#9  0x00007f8d35149296 in switch_ivr_multi_threaded_bridge (session=session@entry=0x7f86d6eb3d68, peer_session=0x7f87302945b8, input_callback=<optimized out>, session_data=session_data@entry=0x0, peer_session_data=peer_session_data@entry=0x0) at src/switch_ivr_bridge.c:1794\r\n#10 0x00007f8cfb179012 in audio_bridge_function (session=<optimized out>, data=<optimized out>) at mod_dptools.c:3673\r\n#11 0x00007f8d350b2413 in switch_core_session_exec (session=session@entry=0x7f86d6eb3d68, application_interface=application_interface@entry=0x1f5b708, arg=arg@entry=0x7f86e908f868 \"sofia/out/${destination_number}@39.164.247.5:2090\") at src/switch_core_session.c:2965\r\n#12 0x00007f8d350b2aa9 in switch_core_session_execute_application_get_flags (session=session@entry=0x7f86d6eb3d68, app=0x7f86e908f860 \"bridge\", arg=0x7f86e908f868 \"sofia/out/${destination_number}@39.164.247.5:2090\", flags=flags@entry=0x0) at src/switch_core_session.c:2825\r\n#13 0x00007f8d350b69ac in switch_core_standard_on_execute (session=0x7f86d6eb3d68) at src/switch_core_state_machine.c:350\r\n#14 switch_core_session_run (session=0x7f86d6eb3d68) at src/switch_core_state_machine.c:647\r\n#15 0x00007f8d350afb4e in switch_core_session_thread (thread=<optimized out>, obj=0x7f86d6eb3d68) at src/switch_core_session.c:1727\r\n#16 0x00007f8d350ab22a in switch_core_session_thread_pool_worker (thread=0x7f8720418810, obj=<optimized out>) at src/switch_core_session.c:1791\r\n#17 0x00007f8d351f4c30 in dummy_worker (opaque=0x7f8720418810) at threadproc/unix/thread.c:151\r\n#18 0x00007f8d324e1ea5 in start_thread () from /lib64/libpthread.so.0\r\n#19 0x00007f8d31b35b0d in clone () from /lib64/libc.so.6\r\nThread 1 (Thread 0x7f8d3590d8c0 (LWP 35705)):\r\n#0  0x00007f8d31b2cb43 in select () from /lib64/libc.so.6\r\n#1  0x00007f8d351f6275 in fspr_sleep (t=<optimized out>) at time/unix/time.c:246\r\n#2  0x00007f8d350bdef2 in switch_core_runtime_loop (bg=bg@entry=1) at src/switch_core.c:1201\r\n#3  0x0000000000402f3b in main (argc=4, argv=<optimized out>) at src/switch.c:1229\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2290/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2290/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T14:36:27Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    },
    {
        "id": "32836533574",
        "type": "IssuesEvent",
        "actor": {
            "id": 55480187,
            "login": "zhanghuaifeng",
            "display_login": "zhanghuaifeng",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhanghuaifeng",
            "avatar_url": "https://avatars.githubusercontent.com/u/55480187?"
        },
        "repo": {
            "id": 154525111,
            "name": "signalwire/freeswitch",
            "url": "https://api.github.com/repos/signalwire/freeswitch"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2289",
                "repository_url": "https://api.github.com/repos/signalwire/freeswitch",
                "labels_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2289/labels{/name}",
                "comments_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2289/comments",
                "events_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2289/events",
                "html_url": "https://github.com/signalwire/freeswitch/issues/2289",
                "id": 1961421038,
                "node_id": "I_kwDOCTXdt8506Oju",
                "number": 2289,
                "title": "compile  freeswitch 1.10.10error",
                "user": {
                    "login": "zhanghuaifeng",
                    "id": 55480187,
                    "node_id": "MDQ6VXNlcjU1NDgwMTg3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/55480187?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/zhanghuaifeng",
                    "html_url": "https://github.com/zhanghuaifeng",
                    "followers_url": "https://api.github.com/users/zhanghuaifeng/followers",
                    "following_url": "https://api.github.com/users/zhanghuaifeng/following{/other_user}",
                    "gists_url": "https://api.github.com/users/zhanghuaifeng/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/zhanghuaifeng/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/zhanghuaifeng/subscriptions",
                    "organizations_url": "https://api.github.com/users/zhanghuaifeng/orgs",
                    "repos_url": "https://api.github.com/users/zhanghuaifeng/repos",
                    "events_url": "https://api.github.com/users/zhanghuaifeng/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/zhanghuaifeng/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 1103054681,
                        "node_id": "MDU6TGFiZWwxMTAzMDU0Njgx",
                        "url": "https://api.github.com/repos/signalwire/freeswitch/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T13:22:52Z",
                "updated_at": "2023-10-25T13:22:52Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nThe convolve8_8 function in the vpx_scaled_convolve8_neon.c file, which uses the NEON SIMD instruction set optimization code in vpx_convolve8_neon.h, results in a compilation error\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. git clone  freeswitch 1.10.10\r\n2. cd freeswitch-1.10.10\r\n3. ./configure && make\r\n\r\n**Expected behavior**\r\ncompile  and install freeswitch.\r\n\r\n**Package version or git hash**\r\n - Version [e.g. 1.10.10]\r\n\r\n**Trace logs**\r\nmake[1]: Entering directory `/opt/freeswitch-1.10.7/libs/libvpx'\r\n    [CC] vpx_dsp/arm/vpx_scaled_convolve8_neon.c.o\r\nIn file included from vpx_dsp/arm/vpx_scaled_convolve8_neon.c:11:0:\r\n./vpx_dsp/arm/vpx_convolve8_neon.h: In function 'convolve8_8':\r\n./vpx_dsp/arm/vpx_convolve8_neon.h:109:9: error: incompatible types when initializing type 'int16x8_t' using type 'int16x4_t'\r\n   sum = vmlaq_lane_s16(sum, s1, filters_lo, 1);\r\n         ^\r\n./vpx_dsp/arm/vpx_convolve8_neon.h:110:9: error: incompatible types when initializing type 'int16x8_t' using type 'int16x4_t'\r\n   sum = vmlaq_lane_s16(sum, s2, filters_lo, 2);\r\n         ^\r\n./vpx_dsp/arm/vpx_convolve8_neon.h:111:9: error: incompatible types when initializing type 'int16x8_t' using type 'int16x4_t'\r\n   sum = vmlaq_lane_s16(sum, s5, filters_hi, 1);\r\n         ^\r\n./vpx_dsp/arm/vpx_convolve8_neon.h:112:9: error: incompatible types when initializing type 'int16x8_t' using type 'int16x4_t'\r\n   sum = vmlaq_lane_s16(sum, s6, filters_hi, 2);\r\n         ^\r\n./vpx_dsp/arm/vpx_convolve8_neon.h:113:9: error: incompatible types when initializing type 'int16x8_t' using type 'int16x4_t'\r\n   sum = vmlaq_lane_s16(sum, s7, filters_hi, 3);\r\n         ^\r\nmake[2]: *** [vpx_dsp/arm/vpx_scaled_convolve8_neon.c.o] Error 1\r\nmake[1]: *** [.DEFAULT] Error 2\r\nmake[1]: Leaving directory `/opt/freeswitch-1.10.7/libs/libvpx'\r\nmake: *** [libs/libvpx/libvpx.a] Error 2\r\n\r\n\r\n**backtrace from core file**\r\n\r\n```\r\n\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/signalwire/freeswitch/issues/2289/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/signalwire/freeswitch/issues/2289/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T13:22:54Z",
        "org": {
            "id": 34925332,
            "login": "signalwire",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/signalwire",
            "avatar_url": "https://avatars.githubusercontent.com/u/34925332?"
        }
    }
]