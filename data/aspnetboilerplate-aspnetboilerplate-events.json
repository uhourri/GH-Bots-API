[
    {
        "id": "32889289884",
        "type": "IssuesEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6812",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6812/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6812/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6812/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6812",
                "id": 1964825179,
                "node_id": "I_kwDOALouQs51HNpb",
                "number": 6812,
                "title": "ObjectDisposedException when using PerRequestRedisCache",
                "user": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169",
                    "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/milestone/169",
                    "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169/labels",
                    "id": 9338232,
                    "node_id": "MI_kwDOALouQs4Ajn14",
                    "number": 169,
                    "title": "v9.0",
                    "description": "",
                    "creator": {
                        "login": "ismcagdas",
                        "id": 4133525,
                        "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ismcagdas",
                        "html_url": "https://github.com/ismcagdas",
                        "followers_url": "https://api.github.com/users/ismcagdas/followers",
                        "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                        "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                        "repos_url": "https://api.github.com/users/ismcagdas/repos",
                        "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 29,
                    "closed_issues": 18,
                    "state": "open",
                    "created_at": "2023-04-28T06:09:05Z",
                    "updated_at": "2023-10-27T06:02:31Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 0,
                "created_at": "2023-10-27T06:02:31Z",
                "updated_at": "2023-10-27T06:02:31Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "We have worked on this before https://github.com/aspnetboilerplate/aspnetboilerplate/commit/bf67e2781d57dc0989a9d339c56f91c4418d00fc but \r\nerror still persists https://support.aspnetzero.com/QA/Questions/10891/Redis-cache-perrequest-error-log#answer-e7f6912c-2941-7609-983c-3a0e77e38743\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6812/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6812/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:02:32Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32888542193",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1959413287,
                "node_id": "I_kwDOALouQs50ykYn",
                "number": 6809,
                "title": "Question about OpenIddict integration",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-24T14:38:09Z",
                "updated_at": "2023-10-27T05:13:35Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": ".NET 7 with Abp 8.3.1\r\n\r\n###  Description:\r\n\r\nI have an ASP.NET Core web application that is built using the AspNetBoilerplate framework. My goal is to separate out the authentication logic into a different project, which is an Authorization server built using OpenIddict and the Authorization Code Flow with PKCE enabled. \r\n\r\n### The Issue:\r\n\r\nWhen I run the application, I'm redirected to the login screen of the Authorization server as expected. However, after logging in, my web application goes into an infinite loop, where it keeps exchanging an authorization code for an access token over and over again.\r\n\r\n### Authorization Server Implementation:\r\n\r\nHere's a simplified version of my AuthorizationController in the Authorization Server:\r\nI'm not sure what claims I'm supposed to add...\r\n\r\n```csharp\r\n[...]\r\npublic class AuthorizationController : Controller\r\n{\r\n    [HttpPost(\"~/connect/token\")]\r\n    public async Task<IActionResult> Exchange()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        ClaimsPrincipal claimsPrincipal;\r\n\r\n        if (request.IsAuthorizationCodeGrantType())\r\n        {\r\n            // Retrieve the claims principal stored in the authorization code\r\n            claimsPrincipal = (await HttpContext.AuthenticateAsync(OpenIddictServerAspNetCoreDefaults.AuthenticationScheme)).Principal;\r\n        }\r\n        else\r\n        {\r\n            throw new InvalidOperationException(\"The specified grant type is not supported.\");\r\n        }\r\n\r\n        // Returning a SignInResult will ask OpenIddict to issue the appropriate access/identity tokens.\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n\r\n    [HttpGet(\"~/connect/authorize\")]\r\n    [HttpPost(\"~/connect/authorize\")]\r\n    [IgnoreAntiforgeryToken]\r\n    public async Task<IActionResult> Authorize()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        // Retrieve the user principal stored in the authentication cookie.\r\n        var result = await HttpContext.AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\r\n        // If the user principal can't be extracted, redirect the user to the login page.\r\n        if (!result.Succeeded)\r\n        {\r\n            return Challenge(\r\n                authenticationSchemes: CookieAuthenticationDefaults.AuthenticationScheme,\r\n                properties: new AuthenticationProperties\r\n                {\r\n                    RedirectUri = Request.PathBase + Request.Path + QueryString.Create(\r\n                        Request.HasFormContentType ? Request.Form.ToList() : Request.Query.ToList())\r\n                });\r\n        }\r\n\r\n        // Create a new claims principal\r\n        var claims = new List<Claim>\r\n        {\r\n            // 'subject' claim which is required\r\n            new Claim(Claims.Subject, result.Principal.Identity.Name),\r\n\r\n            //Add test claims\r\n            new Claim(ClaimTypes.NameIdentifier, \"2\").SetDestinations(Destinations.AccessToken),\r\n            new Claim(ClaimTypes.Name, \"test@test.com\").SetDestinations(Destinations.AccessToken), \r\n            new Claim(ClaimTypes.Email, \"test@test.com\").SetDestinations(Destinations.AccessToken)\r\n        };\r\n\r\n        var claimsIdentity = new ClaimsIdentity(claims, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n\r\n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\r\n\r\n        // Set requested scopes (this is not done automatically)\r\n        claimsPrincipal.SetScopes(request.GetScopes());\r\n\r\n        // Signing in with the OpenIddict authentication scheme trigger OpenIddict to issue a code (which can be exchanged for an access token)\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n```\r\n\r\n### Web App Authentication Setup:\r\n\r\nIn my web application, the authentication is set up as follows:\r\n\r\n```csharp\r\nservices.AddAuthentication(options =>\r\n    {\r\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        options.DefaultChallengeScheme = \"oidc\";\r\n    })\r\n    .AddOpenIdConnect(\"oidc\", options =>\r\n    {\r\n        options.Authority = \"https://localhost:7072/\";\r\n        options.ClientId = \"myApp\";\r\n        options.ClientSecret = \"myApp-secret\";\r\n        options.ResponseType = \"code\";\r\n        options.SaveTokens = true;\r\n    });\r\n```\r\n\r\nI've successfully tested the Authorization server's token endpoint via Postman, and it correctly returns an access token.\r\n\r\n\r\n\r\nI don't know if I'm working in the right direction so any guidance on how to resolve this issue would be greatly appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1782305815",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809#issuecomment-1782305815",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1782305815,
                "node_id": "IC_kwDOALouQs5qO9QX",
                "user": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T05:13:34Z",
                "updated_at": "2023-10-27T05:13:34Z",
                "author_association": "MEMBER",
                "body": "ABP will check UserId on the session (AbpSession.UserId) and will try to login again. So, when you receive user details from the external system, you need to create a local user on AbpUsers table and login this user.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1782305815/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T05:13:35Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867788395",
        "type": "PushEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15576293553,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/dev",
            "head": "1f10e0b18bfcc9cbaa6c1c5fc3eee12474eb16c7",
            "before": "be07045c6d1b647e963680f06fd0b84a1dfdc736",
            "commits": [
                {
                    "sha": "9bab0aed34124cf7663d4a820f481083d7975724",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "Add empty constructors to SimpleFeatureDependency and SimplePermissionDependency for serialization",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/9bab0aed34124cf7663d4a820f481083d7975724"
                },
                {
                    "sha": "1f10e0b18bfcc9cbaa6c1c5fc3eee12474eb16c7",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "Merge branch 'dev' of https://github.com/aspnetboilerplate/aspnetboilerplate into dev",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/1f10e0b18bfcc9cbaa6c1c5fc3eee12474eb16c7"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T12:33:21Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867662442",
        "type": "IssuesEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6647",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6647/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6647/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6647/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6647",
                "id": 1583615398,
                "node_id": "I_kwDOALouQs5eZA2m",
                "number": 6647,
                "title": "execute GetWaitingJobsAsync with input parameter 1000 in some case cause high waiting time for tasks with higher priority",
                "user": {
                    "login": "Omital",
                    "id": 12151866,
                    "node_id": "MDQ6VXNlcjEyMTUxODY2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/12151866?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Omital",
                    "html_url": "https://github.com/Omital",
                    "followers_url": "https://api.github.com/users/Omital/followers",
                    "following_url": "https://api.github.com/users/Omital/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Omital/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Omital/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Omital/subscriptions",
                    "organizations_url": "https://api.github.com/users/Omital/orgs",
                    "repos_url": "https://api.github.com/users/Omital/repos",
                    "events_url": "https://api.github.com/users/Omital/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Omital/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3931057118,
                        "node_id": "LA_kwDOALouQs7qTyve",
                        "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/labels/effort-sm",
                        "name": "effort-sm",
                        "color": "fffd9f",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "ismcagdas",
                        "id": 4133525,
                        "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ismcagdas",
                        "html_url": "https://github.com/ismcagdas",
                        "followers_url": "https://api.github.com/users/ismcagdas/followers",
                        "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                        "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                        "repos_url": "https://api.github.com/users/ismcagdas/repos",
                        "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169",
                    "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/milestone/169",
                    "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169/labels",
                    "id": 9338232,
                    "node_id": "MI_kwDOALouQs4Ajn14",
                    "number": 169,
                    "title": "v9.0",
                    "description": "",
                    "creator": {
                        "login": "ismcagdas",
                        "id": 4133525,
                        "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ismcagdas",
                        "html_url": "https://github.com/ismcagdas",
                        "followers_url": "https://api.github.com/users/ismcagdas/followers",
                        "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                        "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                        "repos_url": "https://api.github.com/users/ismcagdas/repos",
                        "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 28,
                    "closed_issues": 18,
                    "state": "open",
                    "created_at": "2023-04-28T06:09:05Z",
                    "updated_at": "2023-10-26T12:29:17Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 3,
                "created_at": "2023-02-14T07:02:13Z",
                "updated_at": "2023-10-26T12:29:17Z",
                "closed_at": "2023-10-26T12:29:16Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Running the method GetWaitingJobsAsync with input parameter 1000\r\n```\r\nprotected override async Task DoWorkAsync()\r\n        {\r\n            var waitingJobs = await _store.GetWaitingJobsAsync(1000);\r\n\r\n            foreach (var job in waitingJobs)\r\n            {\r\n                await TryProcessJobAsync(job);\r\n            }\r\n        }\r\n```\r\n  in cases where there are many tasks with _low priority_ will cause _high waiting time_ for tasks with **higher priority**. Consider this scenario: There are 1,000 jobs waiting to be executed. With the first execution of **GetWaitingJobsAsync,** the first 1,000 jobs are loaded. The system is executing these 1000 jobs, and 10 other jobs with higher priority are placed in the queue, as a result, until the execution of those 1000 jobs, it is not time to execute the job with higher priority.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6647/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6647/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:29:17Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867662319",
        "type": "PushEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15576230290,
            "size": 4,
            "distinct_size": 1,
            "ref": "refs/heads/dev",
            "head": "be07045c6d1b647e963680f06fd0b84a1dfdc736",
            "before": "18a21e75f0d02d881881b87d812e0f77a1356085",
            "commits": [
                {
                    "sha": "cc3468a10513eb3d065b257a1a02be62b7c46abd",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "Make MaxWaitingJobToProcessPerPeriod configurable",
                    "distinct": false,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/cc3468a10513eb3d065b257a1a02be62b7c46abd"
                },
                {
                    "sha": "24218e1e899fb0e2e8cc9c4fe09077ea13c3d7cd",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "Explain MaxWaitingJobToProcessPerPeriod and fix unit tests",
                    "distinct": false,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/24218e1e899fb0e2e8cc9c4fe09077ea13c3d7cd"
                },
                {
                    "sha": "775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "remove unrelated empty constuctors",
                    "distinct": false,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/775151edcfd5fbc9e30bdfadb25c42b4dd0869e5"
                },
                {
                    "sha": "be07045c6d1b647e963680f06fd0b84a1dfdc736",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "Merge pull request #6811 from aspnetboilerplate/feat/6647\n\nCreate MaxWaitingJobToProcessPerPeriod for background job configuration",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/be07045c6d1b647e963680f06fd0b84a1dfdc736"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T12:29:17Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867662032",
        "type": "PullRequestEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "closed",
            "number": 6811,
            "pull_request": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811",
                "id": 1574759538,
                "node_id": "PR_kwDOALouQs5d3Oxy",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811",
                "diff_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811.diff",
                "patch_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811.patch",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811",
                "number": 6811,
                "state": "closed",
                "locked": false,
                "title": "Create MaxWaitingJobToProcessPerPeriod for background job configuration ",
                "user": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "resolves #6647",
                "created_at": "2023-10-26T12:28:43Z",
                "updated_at": "2023-10-26T12:29:16Z",
                "closed_at": "2023-10-26T12:29:15Z",
                "merged_at": "2023-10-26T12:29:15Z",
                "merge_commit_sha": "be07045c6d1b647e963680f06fd0b84a1dfdc736",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169",
                    "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/milestone/169",
                    "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169/labels",
                    "id": 9338232,
                    "node_id": "MI_kwDOALouQs4Ajn14",
                    "number": 169,
                    "title": "v9.0",
                    "description": "",
                    "creator": {
                        "login": "ismcagdas",
                        "id": 4133525,
                        "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ismcagdas",
                        "html_url": "https://github.com/ismcagdas",
                        "followers_url": "https://api.github.com/users/ismcagdas/followers",
                        "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                        "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                        "repos_url": "https://api.github.com/users/ismcagdas/repos",
                        "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 29,
                    "closed_issues": 17,
                    "state": "open",
                    "created_at": "2023-04-28T06:09:05Z",
                    "updated_at": "2023-10-26T12:29:16Z",
                    "due_on": null,
                    "closed_at": null
                },
                "draft": false,
                "commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/commits",
                "review_comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/comments",
                "review_comment_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811/comments",
                "statuses_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
                "head": {
                    "label": "aspnetboilerplate:feat/6647",
                    "ref": "feat/6647",
                    "sha": "775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
                    "user": {
                        "login": "aspnetboilerplate",
                        "id": 5957277,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/aspnetboilerplate",
                        "html_url": "https://github.com/aspnetboilerplate",
                        "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                        "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                        "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                        "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                        "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                        "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 12201538,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjIwMTUzOA==",
                        "name": "aspnetboilerplate",
                        "full_name": "aspnetboilerplate/aspnetboilerplate",
                        "private": false,
                        "owner": {
                            "login": "aspnetboilerplate",
                            "id": 5957277,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/aspnetboilerplate",
                            "html_url": "https://github.com/aspnetboilerplate",
                            "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                            "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                            "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                            "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                            "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                            "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "description": "ASP.NET Boilerplate - Web Application Framework",
                        "fork": false,
                        "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                        "forks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/forks",
                        "keys_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/teams",
                        "hooks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/hooks",
                        "issue_events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/events",
                        "assignees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/tags",
                        "blobs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/languages",
                        "stargazers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/stargazers",
                        "contributors_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contributors",
                        "subscribers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscribers",
                        "subscription_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscription",
                        "commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/merges",
                        "archive_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/downloads",
                        "issues_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/labels{/name}",
                        "releases_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/deployments",
                        "created_at": "2013-08-18T20:45:08Z",
                        "updated_at": "2023-10-26T02:05:04Z",
                        "pushed_at": "2023-10-26T12:29:15Z",
                        "git_url": "git://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "ssh_url": "git@github.com:aspnetboilerplate/aspnetboilerplate.git",
                        "clone_url": "https://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "svn_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "homepage": "https://aspnetboilerplate.com",
                        "size": 61476,
                        "stargazers_count": 11344,
                        "watchers_count": 11344,
                        "language": "C#",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 3749,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 187,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "abp",
                            "architecture",
                            "aspnet",
                            "aspnet-core",
                            "aspnetcore",
                            "best-practices",
                            "c-sharp",
                            "csharp",
                            "domain-driven-design",
                            "dotnet",
                            "dotnet-core",
                            "framework",
                            "multi-tenancy",
                            "nlayer-architecture"
                        ],
                        "visibility": "public",
                        "forks": 3749,
                        "open_issues": 187,
                        "watchers": 11344,
                        "default_branch": "dev"
                    }
                },
                "base": {
                    "label": "aspnetboilerplate:dev",
                    "ref": "dev",
                    "sha": "18a21e75f0d02d881881b87d812e0f77a1356085",
                    "user": {
                        "login": "aspnetboilerplate",
                        "id": 5957277,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/aspnetboilerplate",
                        "html_url": "https://github.com/aspnetboilerplate",
                        "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                        "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                        "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                        "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                        "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                        "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 12201538,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjIwMTUzOA==",
                        "name": "aspnetboilerplate",
                        "full_name": "aspnetboilerplate/aspnetboilerplate",
                        "private": false,
                        "owner": {
                            "login": "aspnetboilerplate",
                            "id": 5957277,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/aspnetboilerplate",
                            "html_url": "https://github.com/aspnetboilerplate",
                            "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                            "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                            "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                            "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                            "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                            "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "description": "ASP.NET Boilerplate - Web Application Framework",
                        "fork": false,
                        "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                        "forks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/forks",
                        "keys_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/teams",
                        "hooks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/hooks",
                        "issue_events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/events",
                        "assignees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/tags",
                        "blobs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/languages",
                        "stargazers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/stargazers",
                        "contributors_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contributors",
                        "subscribers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscribers",
                        "subscription_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscription",
                        "commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/merges",
                        "archive_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/downloads",
                        "issues_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/labels{/name}",
                        "releases_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/deployments",
                        "created_at": "2013-08-18T20:45:08Z",
                        "updated_at": "2023-10-26T02:05:04Z",
                        "pushed_at": "2023-10-26T12:29:15Z",
                        "git_url": "git://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "ssh_url": "git@github.com:aspnetboilerplate/aspnetboilerplate.git",
                        "clone_url": "https://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "svn_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "homepage": "https://aspnetboilerplate.com",
                        "size": 61476,
                        "stargazers_count": 11344,
                        "watchers_count": 11344,
                        "language": "C#",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 3749,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 187,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "abp",
                            "architecture",
                            "aspnet",
                            "aspnet-core",
                            "aspnetcore",
                            "best-practices",
                            "c-sharp",
                            "csharp",
                            "domain-driven-design",
                            "dotnet",
                            "dotnet-core",
                            "framework",
                            "multi-tenancy",
                            "nlayer-architecture"
                        ],
                        "visibility": "public",
                        "forks": 3749,
                        "open_issues": 187,
                        "watchers": 11344,
                        "default_branch": "dev"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811"
                    },
                    "html": {
                        "href": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/775151edcfd5fbc9e30bdfadb25c42b4dd0869e5"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 3,
                "additions": 42,
                "deletions": 11,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:29:17Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867645697",
        "type": "PullRequestEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "opened",
            "number": 6811,
            "pull_request": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811",
                "id": 1574759538,
                "node_id": "PR_kwDOALouQs5d3Oxy",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811",
                "diff_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811.diff",
                "patch_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811.patch",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811",
                "number": 6811,
                "state": "open",
                "locked": false,
                "title": "Create MaxWaitingJobToProcessPerPeriod for background job configuration ",
                "user": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "resolves #6647",
                "created_at": "2023-10-26T12:28:43Z",
                "updated_at": "2023-10-26T12:28:43Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169",
                    "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/milestone/169",
                    "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones/169/labels",
                    "id": 9338232,
                    "node_id": "MI_kwDOALouQs4Ajn14",
                    "number": 169,
                    "title": "v9.0",
                    "description": "",
                    "creator": {
                        "login": "ismcagdas",
                        "id": 4133525,
                        "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ismcagdas",
                        "html_url": "https://github.com/ismcagdas",
                        "followers_url": "https://api.github.com/users/ismcagdas/followers",
                        "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                        "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                        "repos_url": "https://api.github.com/users/ismcagdas/repos",
                        "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 30,
                    "closed_issues": 16,
                    "state": "open",
                    "created_at": "2023-04-28T06:09:05Z",
                    "updated_at": "2023-10-26T12:28:43Z",
                    "due_on": null,
                    "closed_at": null
                },
                "draft": false,
                "commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/commits",
                "review_comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/comments",
                "review_comment_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811/comments",
                "statuses_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
                "head": {
                    "label": "aspnetboilerplate:feat/6647",
                    "ref": "feat/6647",
                    "sha": "775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
                    "user": {
                        "login": "aspnetboilerplate",
                        "id": 5957277,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/aspnetboilerplate",
                        "html_url": "https://github.com/aspnetboilerplate",
                        "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                        "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                        "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                        "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                        "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                        "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 12201538,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjIwMTUzOA==",
                        "name": "aspnetboilerplate",
                        "full_name": "aspnetboilerplate/aspnetboilerplate",
                        "private": false,
                        "owner": {
                            "login": "aspnetboilerplate",
                            "id": 5957277,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/aspnetboilerplate",
                            "html_url": "https://github.com/aspnetboilerplate",
                            "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                            "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                            "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                            "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                            "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                            "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "description": "ASP.NET Boilerplate - Web Application Framework",
                        "fork": false,
                        "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                        "forks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/forks",
                        "keys_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/teams",
                        "hooks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/hooks",
                        "issue_events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/events",
                        "assignees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/tags",
                        "blobs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/languages",
                        "stargazers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/stargazers",
                        "contributors_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contributors",
                        "subscribers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscribers",
                        "subscription_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscription",
                        "commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/merges",
                        "archive_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/downloads",
                        "issues_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/labels{/name}",
                        "releases_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/deployments",
                        "created_at": "2013-08-18T20:45:08Z",
                        "updated_at": "2023-10-26T02:05:04Z",
                        "pushed_at": "2023-10-26T12:28:43Z",
                        "git_url": "git://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "ssh_url": "git@github.com:aspnetboilerplate/aspnetboilerplate.git",
                        "clone_url": "https://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "svn_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "homepage": "https://aspnetboilerplate.com",
                        "size": 61476,
                        "stargazers_count": 11344,
                        "watchers_count": 11344,
                        "language": "C#",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 3749,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 188,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "abp",
                            "architecture",
                            "aspnet",
                            "aspnet-core",
                            "aspnetcore",
                            "best-practices",
                            "c-sharp",
                            "csharp",
                            "domain-driven-design",
                            "dotnet",
                            "dotnet-core",
                            "framework",
                            "multi-tenancy",
                            "nlayer-architecture"
                        ],
                        "visibility": "public",
                        "forks": 3749,
                        "open_issues": 188,
                        "watchers": 11344,
                        "default_branch": "dev"
                    }
                },
                "base": {
                    "label": "aspnetboilerplate:dev",
                    "ref": "dev",
                    "sha": "18a21e75f0d02d881881b87d812e0f77a1356085",
                    "user": {
                        "login": "aspnetboilerplate",
                        "id": 5957277,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/aspnetboilerplate",
                        "html_url": "https://github.com/aspnetboilerplate",
                        "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                        "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                        "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                        "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                        "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                        "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 12201538,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMjIwMTUzOA==",
                        "name": "aspnetboilerplate",
                        "full_name": "aspnetboilerplate/aspnetboilerplate",
                        "private": false,
                        "owner": {
                            "login": "aspnetboilerplate",
                            "id": 5957277,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjU5NTcyNzc=",
                            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/aspnetboilerplate",
                            "html_url": "https://github.com/aspnetboilerplate",
                            "followers_url": "https://api.github.com/users/aspnetboilerplate/followers",
                            "following_url": "https://api.github.com/users/aspnetboilerplate/following{/other_user}",
                            "gists_url": "https://api.github.com/users/aspnetboilerplate/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/aspnetboilerplate/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/aspnetboilerplate/subscriptions",
                            "organizations_url": "https://api.github.com/users/aspnetboilerplate/orgs",
                            "repos_url": "https://api.github.com/users/aspnetboilerplate/repos",
                            "events_url": "https://api.github.com/users/aspnetboilerplate/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/aspnetboilerplate/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "description": "ASP.NET Boilerplate - Web Application Framework",
                        "fork": false,
                        "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                        "forks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/forks",
                        "keys_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/teams",
                        "hooks_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/hooks",
                        "issue_events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/events",
                        "assignees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/tags",
                        "blobs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/languages",
                        "stargazers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/stargazers",
                        "contributors_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contributors",
                        "subscribers_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscribers",
                        "subscription_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/subscription",
                        "commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/merges",
                        "archive_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/downloads",
                        "issues_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/labels{/name}",
                        "releases_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/deployments",
                        "created_at": "2013-08-18T20:45:08Z",
                        "updated_at": "2023-10-26T02:05:04Z",
                        "pushed_at": "2023-10-26T12:28:43Z",
                        "git_url": "git://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "ssh_url": "git@github.com:aspnetboilerplate/aspnetboilerplate.git",
                        "clone_url": "https://github.com/aspnetboilerplate/aspnetboilerplate.git",
                        "svn_url": "https://github.com/aspnetboilerplate/aspnetboilerplate",
                        "homepage": "https://aspnetboilerplate.com",
                        "size": 61476,
                        "stargazers_count": 11344,
                        "watchers_count": 11344,
                        "language": "C#",
                        "has_issues": true,
                        "has_projects": false,
                        "has_downloads": true,
                        "has_wiki": false,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 3749,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 188,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "abp",
                            "architecture",
                            "aspnet",
                            "aspnet-core",
                            "aspnetcore",
                            "best-practices",
                            "c-sharp",
                            "csharp",
                            "domain-driven-design",
                            "dotnet",
                            "dotnet-core",
                            "framework",
                            "multi-tenancy",
                            "nlayer-architecture"
                        ],
                        "visibility": "public",
                        "forks": 3749,
                        "open_issues": 188,
                        "watchers": 11344,
                        "default_branch": "dev"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811"
                    },
                    "html": {
                        "href": "https://github.com/aspnetboilerplate/aspnetboilerplate/pull/6811"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6811/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/pulls/6811/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/statuses/775151edcfd5fbc9e30bdfadb25c42b4dd0869e5"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 3,
                "additions": 42,
                "deletions": 11,
                "changed_files": 6
            }
        },
        "public": true,
        "created_at": "2023-10-26T12:28:45Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867643113",
        "type": "PushEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15576220497,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/feat/6647",
            "head": "775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
            "before": "24218e1e899fb0e2e8cc9c4fe09077ea13c3d7cd",
            "commits": [
                {
                    "sha": "775151edcfd5fbc9e30bdfadb25c42b4dd0869e5",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "remove unrelated empty constuctors",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/775151edcfd5fbc9e30bdfadb25c42b4dd0869e5"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T12:28:40Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32867586262",
        "type": "PushEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15576191906,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/feat/6647",
            "head": "24218e1e899fb0e2e8cc9c4fe09077ea13c3d7cd",
            "before": "cc3468a10513eb3d065b257a1a02be62b7c46abd",
            "commits": [
                {
                    "sha": "24218e1e899fb0e2e8cc9c4fe09077ea13c3d7cd",
                    "author": {
                        "email": "ismailcagdas@gmail.com",
                        "name": "\u0130smail \u00c7A\u011eDA\u015e"
                    },
                    "message": "Explain MaxWaitingJobToProcessPerPeriod and fix unit tests",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/24218e1e899fb0e2e8cc9c4fe09077ea13c3d7cd"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-26T12:26:49Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32862549587",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 11884292,
            "login": "thibnes",
            "display_login": "thibnes",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibnes",
            "avatar_url": "https://avatars.githubusercontent.com/u/11884292?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1959413287,
                "node_id": "I_kwDOALouQs50ykYn",
                "number": 6809,
                "title": "Question about OpenIddict integration",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-24T14:38:09Z",
                "updated_at": "2023-10-26T09:26:06Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": ".NET 7 with Abp 8.3.1\r\n\r\n###  Description:\r\n\r\nI have an ASP.NET Core web application that is built using the AspNetBoilerplate framework. My goal is to separate out the authentication logic into a different project, which is an Authorization server built using OpenIddict and the Authorization Code Flow with PKCE enabled. \r\n\r\n### The Issue:\r\n\r\nWhen I run the application, I'm redirected to the login screen of the Authorization server as expected. However, after logging in, my web application goes into an infinite loop, where it keeps exchanging an authorization code for an access token over and over again.\r\n\r\n### Authorization Server Implementation:\r\n\r\nHere's a simplified version of my AuthorizationController in the Authorization Server:\r\nI'm not sure what claims I'm supposed to add...\r\n\r\n```csharp\r\n[...]\r\npublic class AuthorizationController : Controller\r\n{\r\n    [HttpPost(\"~/connect/token\")]\r\n    public async Task<IActionResult> Exchange()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        ClaimsPrincipal claimsPrincipal;\r\n\r\n        if (request.IsAuthorizationCodeGrantType())\r\n        {\r\n            // Retrieve the claims principal stored in the authorization code\r\n            claimsPrincipal = (await HttpContext.AuthenticateAsync(OpenIddictServerAspNetCoreDefaults.AuthenticationScheme)).Principal;\r\n        }\r\n        else\r\n        {\r\n            throw new InvalidOperationException(\"The specified grant type is not supported.\");\r\n        }\r\n\r\n        // Returning a SignInResult will ask OpenIddict to issue the appropriate access/identity tokens.\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n\r\n    [HttpGet(\"~/connect/authorize\")]\r\n    [HttpPost(\"~/connect/authorize\")]\r\n    [IgnoreAntiforgeryToken]\r\n    public async Task<IActionResult> Authorize()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        // Retrieve the user principal stored in the authentication cookie.\r\n        var result = await HttpContext.AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\r\n        // If the user principal can't be extracted, redirect the user to the login page.\r\n        if (!result.Succeeded)\r\n        {\r\n            return Challenge(\r\n                authenticationSchemes: CookieAuthenticationDefaults.AuthenticationScheme,\r\n                properties: new AuthenticationProperties\r\n                {\r\n                    RedirectUri = Request.PathBase + Request.Path + QueryString.Create(\r\n                        Request.HasFormContentType ? Request.Form.ToList() : Request.Query.ToList())\r\n                });\r\n        }\r\n\r\n        // Create a new claims principal\r\n        var claims = new List<Claim>\r\n        {\r\n            // 'subject' claim which is required\r\n            new Claim(Claims.Subject, result.Principal.Identity.Name),\r\n\r\n            //Add test claims\r\n            new Claim(ClaimTypes.NameIdentifier, \"2\").SetDestinations(Destinations.AccessToken),\r\n            new Claim(ClaimTypes.Name, \"test@test.com\").SetDestinations(Destinations.AccessToken), \r\n            new Claim(ClaimTypes.Email, \"test@test.com\").SetDestinations(Destinations.AccessToken)\r\n        };\r\n\r\n        var claimsIdentity = new ClaimsIdentity(claims, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n\r\n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\r\n\r\n        // Set requested scopes (this is not done automatically)\r\n        claimsPrincipal.SetScopes(request.GetScopes());\r\n\r\n        // Signing in with the OpenIddict authentication scheme trigger OpenIddict to issue a code (which can be exchanged for an access token)\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n```\r\n\r\n### Web App Authentication Setup:\r\n\r\nIn my web application, the authentication is set up as follows:\r\n\r\n```csharp\r\nservices.AddAuthentication(options =>\r\n    {\r\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        options.DefaultChallengeScheme = \"oidc\";\r\n    })\r\n    .AddOpenIdConnect(\"oidc\", options =>\r\n    {\r\n        options.Authority = \"https://localhost:7072/\";\r\n        options.ClientId = \"myApp\";\r\n        options.ClientSecret = \"myApp-secret\";\r\n        options.ResponseType = \"code\";\r\n        options.SaveTokens = true;\r\n    });\r\n```\r\n\r\nI've successfully tested the Authorization server's token endpoint via Postman, and it correctly returns an access token.\r\n\r\n\r\n\r\nI don't know if I'm working in the right direction so any guidance on how to resolve this issue would be greatly appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1780744143",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809#issuecomment-1780744143",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1780744143,
                "node_id": "IC_kwDOALouQs5qI__P",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T09:26:06Z",
                "updated_at": "2023-10-26T09:26:06Z",
                "author_association": "NONE",
                "body": "OpenIddict can automatically call the userinfo enpoint of the authorization server to get additional claims. \r\n`options.GetClaimsFromUserInfoEndpoint = true;`\r\nBut I don't understand what you mean by _create a local user and login this user._ Can you elaborate, please?",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1780744143/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T09:26:06Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32860031725",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1959413287,
                "node_id": "I_kwDOALouQs50ykYn",
                "number": 6809,
                "title": "Question about OpenIddict integration",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-24T14:38:09Z",
                "updated_at": "2023-10-26T07:59:39Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": ".NET 7 with Abp 8.3.1\r\n\r\n###  Description:\r\n\r\nI have an ASP.NET Core web application that is built using the AspNetBoilerplate framework. My goal is to separate out the authentication logic into a different project, which is an Authorization server built using OpenIddict and the Authorization Code Flow with PKCE enabled. \r\n\r\n### The Issue:\r\n\r\nWhen I run the application, I'm redirected to the login screen of the Authorization server as expected. However, after logging in, my web application goes into an infinite loop, where it keeps exchanging an authorization code for an access token over and over again.\r\n\r\n### Authorization Server Implementation:\r\n\r\nHere's a simplified version of my AuthorizationController in the Authorization Server:\r\nI'm not sure what claims I'm supposed to add...\r\n\r\n```csharp\r\n[...]\r\npublic class AuthorizationController : Controller\r\n{\r\n    [HttpPost(\"~/connect/token\")]\r\n    public async Task<IActionResult> Exchange()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        ClaimsPrincipal claimsPrincipal;\r\n\r\n        if (request.IsAuthorizationCodeGrantType())\r\n        {\r\n            // Retrieve the claims principal stored in the authorization code\r\n            claimsPrincipal = (await HttpContext.AuthenticateAsync(OpenIddictServerAspNetCoreDefaults.AuthenticationScheme)).Principal;\r\n        }\r\n        else\r\n        {\r\n            throw new InvalidOperationException(\"The specified grant type is not supported.\");\r\n        }\r\n\r\n        // Returning a SignInResult will ask OpenIddict to issue the appropriate access/identity tokens.\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n\r\n    [HttpGet(\"~/connect/authorize\")]\r\n    [HttpPost(\"~/connect/authorize\")]\r\n    [IgnoreAntiforgeryToken]\r\n    public async Task<IActionResult> Authorize()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        // Retrieve the user principal stored in the authentication cookie.\r\n        var result = await HttpContext.AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\r\n        // If the user principal can't be extracted, redirect the user to the login page.\r\n        if (!result.Succeeded)\r\n        {\r\n            return Challenge(\r\n                authenticationSchemes: CookieAuthenticationDefaults.AuthenticationScheme,\r\n                properties: new AuthenticationProperties\r\n                {\r\n                    RedirectUri = Request.PathBase + Request.Path + QueryString.Create(\r\n                        Request.HasFormContentType ? Request.Form.ToList() : Request.Query.ToList())\r\n                });\r\n        }\r\n\r\n        // Create a new claims principal\r\n        var claims = new List<Claim>\r\n        {\r\n            // 'subject' claim which is required\r\n            new Claim(Claims.Subject, result.Principal.Identity.Name),\r\n\r\n            //Add test claims\r\n            new Claim(ClaimTypes.NameIdentifier, \"2\").SetDestinations(Destinations.AccessToken),\r\n            new Claim(ClaimTypes.Name, \"test@test.com\").SetDestinations(Destinations.AccessToken), \r\n            new Claim(ClaimTypes.Email, \"test@test.com\").SetDestinations(Destinations.AccessToken)\r\n        };\r\n\r\n        var claimsIdentity = new ClaimsIdentity(claims, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n\r\n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\r\n\r\n        // Set requested scopes (this is not done automatically)\r\n        claimsPrincipal.SetScopes(request.GetScopes());\r\n\r\n        // Signing in with the OpenIddict authentication scheme trigger OpenIddict to issue a code (which can be exchanged for an access token)\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n```\r\n\r\n### Web App Authentication Setup:\r\n\r\nIn my web application, the authentication is set up as follows:\r\n\r\n```csharp\r\nservices.AddAuthentication(options =>\r\n    {\r\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        options.DefaultChallengeScheme = \"oidc\";\r\n    })\r\n    .AddOpenIdConnect(\"oidc\", options =>\r\n    {\r\n        options.Authority = \"https://localhost:7072/\";\r\n        options.ClientId = \"myApp\";\r\n        options.ClientSecret = \"myApp-secret\";\r\n        options.ResponseType = \"code\";\r\n        options.SaveTokens = true;\r\n    });\r\n```\r\n\r\nI've successfully tested the Authorization server's token endpoint via Postman, and it correctly returns an access token.\r\n\r\n\r\n\r\nI don't know if I'm working in the right direction so any guidance on how to resolve this issue would be greatly appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1780606503",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809#issuecomment-1780606503",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1780606503,
                "node_id": "IC_kwDOALouQs5qIeYn",
                "user": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T07:59:38Z",
                "updated_at": "2023-10-26T07:59:38Z",
                "author_association": "MEMBER",
                "body": "After receiving the token, you should request for user info from authentication server and then create a local user and login this user.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1780606503/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T07:59:39Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32857796273",
        "type": "CommitCommentEvent",
        "actor": {
            "id": 39435771,
            "login": "bxjg1987",
            "display_login": "bxjg1987",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bxjg1987",
            "avatar_url": "https://avatars.githubusercontent.com/u/39435771?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/comments/130950017",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/commit/16118cccf0c56513169141f09d1272350530ac66#commitcomment-130950017",
                "id": 130950017,
                "node_id": "CC_kwDOALouQs4HziOB",
                "user": {
                    "login": "bxjg1987",
                    "id": 39435771,
                    "node_id": "MDQ6VXNlcjM5NDM1Nzcx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39435771?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bxjg1987",
                    "html_url": "https://github.com/bxjg1987",
                    "followers_url": "https://api.github.com/users/bxjg1987/followers",
                    "following_url": "https://api.github.com/users/bxjg1987/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bxjg1987/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bxjg1987/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bxjg1987/subscriptions",
                    "organizations_url": "https://api.github.com/users/bxjg1987/orgs",
                    "repos_url": "https://api.github.com/users/bxjg1987/repos",
                    "events_url": "https://api.github.com/users/bxjg1987/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bxjg1987/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "position": null,
                "line": null,
                "path": null,
                "commit_id": "16118cccf0c56513169141f09d1272350530ac66",
                "created_at": "2023-10-26T06:26:00Z",
                "updated_at": "2023-10-26T06:26:00Z",
                "author_association": "NONE",
                "body": "If there are performance issues with tolist, you should try a thread safe collection.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/comments/130950017/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                }
            }
        },
        "public": true,
        "created_at": "2023-10-26T06:26:00Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32857575438",
        "type": "IssuesEvent",
        "actor": {
            "id": 39435771,
            "login": "bxjg1987",
            "display_login": "bxjg1987",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bxjg1987",
            "avatar_url": "https://avatars.githubusercontent.com/u/39435771?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "id": 1962581749,
                "node_id": "I_kwDOALouQs50-p71",
                "number": 6810,
                "title": "how get value from db in IAsyncEventHandler<EntityUpdatingEventData>",
                "user": {
                    "login": "bxjg1987",
                    "id": 39435771,
                    "node_id": "MDQ6VXNlcjM5NDM1Nzcx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39435771?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bxjg1987",
                    "html_url": "https://github.com/bxjg1987",
                    "followers_url": "https://api.github.com/users/bxjg1987/followers",
                    "following_url": "https://api.github.com/users/bxjg1987/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bxjg1987/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bxjg1987/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bxjg1987/subscriptions",
                    "organizations_url": "https://api.github.com/users/bxjg1987/orgs",
                    "repos_url": "https://api.github.com/users/bxjg1987/repos",
                    "events_url": "https://api.github.com/users/bxjg1987/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bxjg1987/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-26T02:21:00Z",
                "updated_at": "2023-10-26T06:15:00Z",
                "closed_at": "2023-10-26T06:14:59Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "version 8.4 temlate project\r\n\r\nevent handler:\r\n```\r\n    public class TestEvent : IAsyncEventHandler<EntityUpdatingEventData<User>>, ITransientDependency\r\n    {\r\n        IUnitOfWorkManager _unitOfWorkManager;\r\n        IRepository<User, long> _repository;\r\n\r\n        public TestEvent(IUnitOfWorkManager unitOfWorkManager, IRepository<User, long> repository, ILogger logger)\r\n        {\r\n            _unitOfWorkManager = unitOfWorkManager;\r\n            _repository = repository;\r\n        }\r\n\r\n        public async Task HandleEventAsync(EntityUpdatingEventData<User> eventData)\r\n        {\r\n            using (var uow = _unitOfWorkManager.Begin(System.Transactions.TransactionScopeOption.Suppress))\r\n            {\r\n                //var old = await _repository.GetAsync(eventData.Entity.Id); \r\n                \r\n                //It is not a value in the database, but a modified value\r\n                var dbName = await  _repository.GetAll().Where(c=>c.Id== eventData.Entity.Id).Select(c=>c.Name).SingleAsync();\r\n            }\r\n        }\r\n    }\r\n```\r\nSometimes, I want to obtain the values of entities in the database during event processing. What should I do?",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-26T06:15:01Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32857575355",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 39435771,
            "login": "bxjg1987",
            "display_login": "bxjg1987",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bxjg1987",
            "avatar_url": "https://avatars.githubusercontent.com/u/39435771?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "id": 1962581749,
                "node_id": "I_kwDOALouQs50-p71",
                "number": 6810,
                "title": "how get value from db in IAsyncEventHandler<EntityUpdatingEventData>",
                "user": {
                    "login": "bxjg1987",
                    "id": 39435771,
                    "node_id": "MDQ6VXNlcjM5NDM1Nzcx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39435771?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bxjg1987",
                    "html_url": "https://github.com/bxjg1987",
                    "followers_url": "https://api.github.com/users/bxjg1987/followers",
                    "following_url": "https://api.github.com/users/bxjg1987/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bxjg1987/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bxjg1987/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bxjg1987/subscriptions",
                    "organizations_url": "https://api.github.com/users/bxjg1987/orgs",
                    "repos_url": "https://api.github.com/users/bxjg1987/repos",
                    "events_url": "https://api.github.com/users/bxjg1987/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bxjg1987/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-26T02:21:00Z",
                "updated_at": "2023-10-26T06:15:00Z",
                "closed_at": "2023-10-26T06:14:59Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "version 8.4 temlate project\r\n\r\nevent handler:\r\n```\r\n    public class TestEvent : IAsyncEventHandler<EntityUpdatingEventData<User>>, ITransientDependency\r\n    {\r\n        IUnitOfWorkManager _unitOfWorkManager;\r\n        IRepository<User, long> _repository;\r\n\r\n        public TestEvent(IUnitOfWorkManager unitOfWorkManager, IRepository<User, long> repository, ILogger logger)\r\n        {\r\n            _unitOfWorkManager = unitOfWorkManager;\r\n            _repository = repository;\r\n        }\r\n\r\n        public async Task HandleEventAsync(EntityUpdatingEventData<User> eventData)\r\n        {\r\n            using (var uow = _unitOfWorkManager.Begin(System.Transactions.TransactionScopeOption.Suppress))\r\n            {\r\n                //var old = await _repository.GetAsync(eventData.Entity.Id); \r\n                \r\n                //It is not a value in the database, but a modified value\r\n                var dbName = await  _repository.GetAll().Where(c=>c.Id== eventData.Entity.Id).Select(c=>c.Name).SingleAsync();\r\n            }\r\n        }\r\n    }\r\n```\r\nSometimes, I want to obtain the values of entities in the database during event processing. What should I do?",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1780477109",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6810#issuecomment-1780477109",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "id": 1780477109,
                "node_id": "IC_kwDOALouQs5qH-y1",
                "user": {
                    "login": "bxjg1987",
                    "id": 39435771,
                    "node_id": "MDQ6VXNlcjM5NDM1Nzcx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39435771?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bxjg1987",
                    "html_url": "https://github.com/bxjg1987",
                    "followers_url": "https://api.github.com/users/bxjg1987/followers",
                    "following_url": "https://api.github.com/users/bxjg1987/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bxjg1987/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bxjg1987/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bxjg1987/subscriptions",
                    "organizations_url": "https://api.github.com/users/bxjg1987/orgs",
                    "repos_url": "https://api.github.com/users/bxjg1987/repos",
                    "events_url": "https://api.github.com/users/bxjg1987/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bxjg1987/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T06:15:00Z",
                "updated_at": "2023-10-26T06:15:00Z",
                "author_association": "NONE",
                "body": "Although I don't know why it was designed like this, at least it explains the reason.\r\n\r\nhttps://github.com/aspnetboilerplate/aspnetboilerplate/issues/5780",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1780477109/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T06:15:00Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32854238148",
        "type": "IssuesEvent",
        "actor": {
            "id": 39435771,
            "login": "bxjg1987",
            "display_login": "bxjg1987",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bxjg1987",
            "avatar_url": "https://avatars.githubusercontent.com/u/39435771?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6810",
                "id": 1962581749,
                "node_id": "I_kwDOALouQs50-p71",
                "number": 6810,
                "title": "how get value from db in IAsyncEventHandler<EntityUpdatingEventData>",
                "user": {
                    "login": "bxjg1987",
                    "id": 39435771,
                    "node_id": "MDQ6VXNlcjM5NDM1Nzcx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39435771?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bxjg1987",
                    "html_url": "https://github.com/bxjg1987",
                    "followers_url": "https://api.github.com/users/bxjg1987/followers",
                    "following_url": "https://api.github.com/users/bxjg1987/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bxjg1987/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bxjg1987/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bxjg1987/subscriptions",
                    "organizations_url": "https://api.github.com/users/bxjg1987/orgs",
                    "repos_url": "https://api.github.com/users/bxjg1987/repos",
                    "events_url": "https://api.github.com/users/bxjg1987/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bxjg1987/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T02:21:00Z",
                "updated_at": "2023-10-26T02:21:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "version 8.4 temlate project\r\n\r\nevent handler:\r\n```\r\n    public class TestEvent : IAsyncEventHandler<EntityUpdatingEventData<User>>, ITransientDependency\r\n    {\r\n        IUnitOfWorkManager _unitOfWorkManager;\r\n        IRepository<User, long> _repository;\r\n\r\n        public TestEvent(IUnitOfWorkManager unitOfWorkManager, IRepository<User, long> repository, ILogger logger)\r\n        {\r\n            _unitOfWorkManager = unitOfWorkManager;\r\n            _repository = repository;\r\n        }\r\n\r\n        public async Task HandleEventAsync(EntityUpdatingEventData<User> eventData)\r\n        {\r\n            using (var uow = _unitOfWorkManager.Begin(System.Transactions.TransactionScopeOption.Suppress))\r\n            {\r\n                //var old = await _repository.GetAsync(eventData.Entity.Id); \r\n                \r\n                //It is not a value in the database, but a modified value\r\n                var dbName = await  _repository.GetAll().Where(c=>c.Id== eventData.Entity.Id).Select(c=>c.Name).SingleAsync();\r\n            }\r\n        }\r\n    }\r\n```\r\nSometimes, I want to obtain the values of entities in the database during event processing. What should I do?",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6810/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T02:21:01Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32854028014",
        "type": "WatchEvent",
        "actor": {
            "id": 139432187,
            "login": "cladogram",
            "display_login": "cladogram",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cladogram",
            "avatar_url": "https://avatars.githubusercontent.com/u/139432187?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T02:05:04Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32850991158",
        "type": "WatchEvent",
        "actor": {
            "id": 9299435,
            "login": "edgolub",
            "display_login": "edgolub",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edgolub",
            "avatar_url": "https://avatars.githubusercontent.com/u/9299435?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-25T22:28:15Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32829733181",
        "type": "WatchEvent",
        "actor": {
            "id": 95408703,
            "login": "Michale-Nguyen",
            "display_login": "Michale-Nguyen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Michale-Nguyen",
            "avatar_url": "https://avatars.githubusercontent.com/u/95408703?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-25T09:31:45Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32825361945",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 11884292,
            "login": "thibnes",
            "display_login": "thibnes",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibnes",
            "avatar_url": "https://avatars.githubusercontent.com/u/11884292?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1959413287,
                "node_id": "I_kwDOALouQs50ykYn",
                "number": 6809,
                "title": "Question about OpenIddict integration",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-24T14:38:09Z",
                "updated_at": "2023-10-25T06:55:51Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": ".NET 7 with Abp 8.3.1\r\n\r\n###  Description:\r\n\r\nI have an ASP.NET Core web application that is built using the AspNetBoilerplate framework. My goal is to separate out the authentication logic into a different project, which is an Authorization server built using OpenIddict and the Authorization Code Flow with PKCE enabled. \r\n\r\n### The Issue:\r\n\r\nWhen I run the application, I'm redirected to the login screen of the Authorization server as expected. However, after logging in, my web application goes into an infinite loop, where it keeps exchanging an authorization code for an access token over and over again.\r\n\r\n### Authorization Server Implementation:\r\n\r\nHere's a simplified version of my AuthorizationController in the Authorization Server:\r\nI'm not sure what claims I'm supposed to add...\r\n\r\n```csharp\r\n[...]\r\npublic class AuthorizationController : Controller\r\n{\r\n    [HttpPost(\"~/connect/token\")]\r\n    public async Task<IActionResult> Exchange()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        ClaimsPrincipal claimsPrincipal;\r\n\r\n        if (request.IsAuthorizationCodeGrantType())\r\n        {\r\n            // Retrieve the claims principal stored in the authorization code\r\n            claimsPrincipal = (await HttpContext.AuthenticateAsync(OpenIddictServerAspNetCoreDefaults.AuthenticationScheme)).Principal;\r\n        }\r\n        else\r\n        {\r\n            throw new InvalidOperationException(\"The specified grant type is not supported.\");\r\n        }\r\n\r\n        // Returning a SignInResult will ask OpenIddict to issue the appropriate access/identity tokens.\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n\r\n    [HttpGet(\"~/connect/authorize\")]\r\n    [HttpPost(\"~/connect/authorize\")]\r\n    [IgnoreAntiforgeryToken]\r\n    public async Task<IActionResult> Authorize()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        // Retrieve the user principal stored in the authentication cookie.\r\n        var result = await HttpContext.AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\r\n        // If the user principal can't be extracted, redirect the user to the login page.\r\n        if (!result.Succeeded)\r\n        {\r\n            return Challenge(\r\n                authenticationSchemes: CookieAuthenticationDefaults.AuthenticationScheme,\r\n                properties: new AuthenticationProperties\r\n                {\r\n                    RedirectUri = Request.PathBase + Request.Path + QueryString.Create(\r\n                        Request.HasFormContentType ? Request.Form.ToList() : Request.Query.ToList())\r\n                });\r\n        }\r\n\r\n        // Create a new claims principal\r\n        var claims = new List<Claim>\r\n        {\r\n            // 'subject' claim which is required\r\n            new Claim(Claims.Subject, result.Principal.Identity.Name),\r\n\r\n            //Add test claims\r\n            new Claim(ClaimTypes.NameIdentifier, \"2\").SetDestinations(Destinations.AccessToken),\r\n            new Claim(ClaimTypes.Name, \"test@test.com\").SetDestinations(Destinations.AccessToken), \r\n            new Claim(ClaimTypes.Email, \"test@test.com\").SetDestinations(Destinations.AccessToken)\r\n        };\r\n\r\n        var claimsIdentity = new ClaimsIdentity(claims, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n\r\n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\r\n\r\n        // Set requested scopes (this is not done automatically)\r\n        claimsPrincipal.SetScopes(request.GetScopes());\r\n\r\n        // Signing in with the OpenIddict authentication scheme trigger OpenIddict to issue a code (which can be exchanged for an access token)\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n```\r\n\r\n### Web App Authentication Setup:\r\n\r\nIn my web application, the authentication is set up as follows:\r\n\r\n```csharp\r\nservices.AddAuthentication(options =>\r\n    {\r\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        options.DefaultChallengeScheme = \"oidc\";\r\n    })\r\n    .AddOpenIdConnect(\"oidc\", options =>\r\n    {\r\n        options.Authority = \"https://localhost:7072/\";\r\n        options.ClientId = \"myApp\";\r\n        options.ClientSecret = \"myApp-secret\";\r\n        options.ResponseType = \"code\";\r\n        options.SaveTokens = true;\r\n    });\r\n```\r\n\r\nI've successfully tested the Authorization server's token endpoint via Postman, and it correctly returns an access token.\r\n\r\n\r\n\r\nI don't know if I'm working in the right direction so any guidance on how to resolve this issue would be greatly appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1778630556",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809#issuecomment-1778630556",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1778630556,
                "node_id": "IC_kwDOALouQs5qA7-c",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T06:55:50Z",
                "updated_at": "2023-10-25T06:55:50Z",
                "author_association": "NONE",
                "body": "> So, does it always go into the below if statement ?\n> \n> ```csharp\n> // If the user principal can't be extracted, redirect the user to the login page.\n> if (!result.Succeeded)\n> {\n>     //....\n> }\n> ```\n\nNo it only goes here the first time when the user is not logged in.\nAfter a cookie is set and this part is always skipped and the web app receives the access token.\nI think the web app doesn't store it but I'm not sure how to verify that.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1778630556/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T06:55:51Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32824098393",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4133525,
            "login": "ismcagdas",
            "display_login": "ismcagdas",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ismcagdas",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133525?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1959413287,
                "node_id": "I_kwDOALouQs50ykYn",
                "number": 6809,
                "title": "Question about OpenIddict integration",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-24T14:38:09Z",
                "updated_at": "2023-10-25T05:53:05Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": ".NET 7 with Abp 8.3.1\r\n\r\n###  Description:\r\n\r\nI have an ASP.NET Core web application that is built using the AspNetBoilerplate framework. My goal is to separate out the authentication logic into a different project, which is an Authorization server built using OpenIddict and the Authorization Code Flow with PKCE enabled. \r\n\r\n### The Issue:\r\n\r\nWhen I run the application, I'm redirected to the login screen of the Authorization server as expected. However, after logging in, my web application goes into an infinite loop, where it keeps exchanging an authorization code for an access token over and over again.\r\n\r\n### Authorization Server Implementation:\r\n\r\nHere's a simplified version of my AuthorizationController in the Authorization Server:\r\nI'm not sure what claims I'm supposed to add...\r\n\r\n```csharp\r\n[...]\r\npublic class AuthorizationController : Controller\r\n{\r\n    [HttpPost(\"~/connect/token\")]\r\n    public async Task<IActionResult> Exchange()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        ClaimsPrincipal claimsPrincipal;\r\n\r\n        if (request.IsAuthorizationCodeGrantType())\r\n        {\r\n            // Retrieve the claims principal stored in the authorization code\r\n            claimsPrincipal = (await HttpContext.AuthenticateAsync(OpenIddictServerAspNetCoreDefaults.AuthenticationScheme)).Principal;\r\n        }\r\n        else\r\n        {\r\n            throw new InvalidOperationException(\"The specified grant type is not supported.\");\r\n        }\r\n\r\n        // Returning a SignInResult will ask OpenIddict to issue the appropriate access/identity tokens.\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n\r\n    [HttpGet(\"~/connect/authorize\")]\r\n    [HttpPost(\"~/connect/authorize\")]\r\n    [IgnoreAntiforgeryToken]\r\n    public async Task<IActionResult> Authorize()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        // Retrieve the user principal stored in the authentication cookie.\r\n        var result = await HttpContext.AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\r\n        // If the user principal can't be extracted, redirect the user to the login page.\r\n        if (!result.Succeeded)\r\n        {\r\n            return Challenge(\r\n                authenticationSchemes: CookieAuthenticationDefaults.AuthenticationScheme,\r\n                properties: new AuthenticationProperties\r\n                {\r\n                    RedirectUri = Request.PathBase + Request.Path + QueryString.Create(\r\n                        Request.HasFormContentType ? Request.Form.ToList() : Request.Query.ToList())\r\n                });\r\n        }\r\n\r\n        // Create a new claims principal\r\n        var claims = new List<Claim>\r\n        {\r\n            // 'subject' claim which is required\r\n            new Claim(Claims.Subject, result.Principal.Identity.Name),\r\n\r\n            //Add test claims\r\n            new Claim(ClaimTypes.NameIdentifier, \"2\").SetDestinations(Destinations.AccessToken),\r\n            new Claim(ClaimTypes.Name, \"test@test.com\").SetDestinations(Destinations.AccessToken), \r\n            new Claim(ClaimTypes.Email, \"test@test.com\").SetDestinations(Destinations.AccessToken)\r\n        };\r\n\r\n        var claimsIdentity = new ClaimsIdentity(claims, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n\r\n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\r\n\r\n        // Set requested scopes (this is not done automatically)\r\n        claimsPrincipal.SetScopes(request.GetScopes());\r\n\r\n        // Signing in with the OpenIddict authentication scheme trigger OpenIddict to issue a code (which can be exchanged for an access token)\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n```\r\n\r\n### Web App Authentication Setup:\r\n\r\nIn my web application, the authentication is set up as follows:\r\n\r\n```csharp\r\nservices.AddAuthentication(options =>\r\n    {\r\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        options.DefaultChallengeScheme = \"oidc\";\r\n    })\r\n    .AddOpenIdConnect(\"oidc\", options =>\r\n    {\r\n        options.Authority = \"https://localhost:7072/\";\r\n        options.ClientId = \"myApp\";\r\n        options.ClientSecret = \"myApp-secret\";\r\n        options.ResponseType = \"code\";\r\n        options.SaveTokens = true;\r\n    });\r\n```\r\n\r\nI've successfully tested the Authorization server's token endpoint via Postman, and it correctly returns an access token.\r\n\r\n\r\n\r\nI don't know if I'm working in the right direction so any guidance on how to resolve this issue would be greatly appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1778560806",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809#issuecomment-1778560806",
                "issue_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1778560806,
                "node_id": "IC_kwDOALouQs5qAq8m",
                "user": {
                    "login": "ismcagdas",
                    "id": 4133525,
                    "node_id": "MDQ6VXNlcjQxMzM1MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4133525?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ismcagdas",
                    "html_url": "https://github.com/ismcagdas",
                    "followers_url": "https://api.github.com/users/ismcagdas/followers",
                    "following_url": "https://api.github.com/users/ismcagdas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ismcagdas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ismcagdas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ismcagdas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ismcagdas/orgs",
                    "repos_url": "https://api.github.com/users/ismcagdas/repos",
                    "events_url": "https://api.github.com/users/ismcagdas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ismcagdas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T05:53:05Z",
                "updated_at": "2023-10-25T05:53:05Z",
                "author_association": "MEMBER",
                "body": "So, does it always go into the below if statement ?\r\n\r\n```csharp\r\n// If the user principal can't be extracted, redirect the user to the login page.\r\nif (!result.Succeeded)\r\n{\r\n    //....\r\n}\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/comments/1778560806/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T05:53:06Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32821250050",
        "type": "PushEvent",
        "actor": {
            "id": 6908465,
            "login": "maliming",
            "display_login": "maliming",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maliming",
            "avatar_url": "https://avatars.githubusercontent.com/u/6908465?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15553136076,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/System.Text.Json",
            "head": "c6e2db9681dd623c0dc13a5bd783442be1f04483",
            "before": "28b34cc657b798addf040441ac920e635902c0a6",
            "commits": [
                {
                    "sha": "c6e2db9681dd623c0dc13a5bd783442be1f04483",
                    "author": {
                        "email": "malimings@gmail.com",
                        "name": "maliming"
                    },
                    "message": "Update build-and-test.yml",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/c6e2db9681dd623c0dc13a5bd783442be1f04483"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-25T02:25:52Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32815274114",
        "type": "WatchEvent",
        "actor": {
            "id": 88532016,
            "login": "KazunguDev",
            "display_login": "KazunguDev",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KazunguDev",
            "avatar_url": "https://avatars.githubusercontent.com/u/88532016?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T20:11:04Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32815108187",
        "type": "WatchEvent",
        "actor": {
            "id": 88532016,
            "login": "KazunguDev",
            "display_login": "KazunguDev",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KazunguDev",
            "avatar_url": "https://avatars.githubusercontent.com/u/88532016?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T20:04:01Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32806583857",
        "type": "WatchEvent",
        "actor": {
            "id": 34991726,
            "login": "iburaksag",
            "display_login": "iburaksag",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iburaksag",
            "avatar_url": "https://avatars.githubusercontent.com/u/34991726?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T14:39:39Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32806534983",
        "type": "IssuesEvent",
        "actor": {
            "id": 11884292,
            "login": "thibnes",
            "display_login": "thibnes",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thibnes",
            "avatar_url": "https://avatars.githubusercontent.com/u/11884292?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "repository_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate",
                "labels_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/labels{/name}",
                "comments_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/comments",
                "events_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/events",
                "html_url": "https://github.com/aspnetboilerplate/aspnetboilerplate/issues/6809",
                "id": 1959413287,
                "node_id": "I_kwDOALouQs50ykYn",
                "number": 6809,
                "title": "Question aout OpenIddict integration",
                "user": {
                    "login": "thibnes",
                    "id": 11884292,
                    "node_id": "MDQ6VXNlcjExODg0Mjky",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11884292?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thibnes",
                    "html_url": "https://github.com/thibnes",
                    "followers_url": "https://api.github.com/users/thibnes/followers",
                    "following_url": "https://api.github.com/users/thibnes/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thibnes/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thibnes/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thibnes/subscriptions",
                    "organizations_url": "https://api.github.com/users/thibnes/orgs",
                    "repos_url": "https://api.github.com/users/thibnes/repos",
                    "events_url": "https://api.github.com/users/thibnes/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thibnes/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-24T14:38:09Z",
                "updated_at": "2023-10-24T14:38:09Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "###  Description:\r\n\r\nI have an ASP.NET Core web application that is built using the AspNetBoilerplate framework. My goal is to separate out the authentication logic into a different project, which is an Authorization server built using OpenIddict and the Authorization Code Flow with PKCE enabled. \r\n\r\n### The Issue:\r\n\r\nWhen I run the application, I'm redirected to the login screen of the Authorization server as expected. However, after logging in, my web application goes into an infinite loop, where it keeps exchanging an authorization code for an access token over and over again.\r\n\r\n### Authorization Server Implementation:\r\n\r\nHere's a simplified version of my AuthorizationController in the Authorization Server:\r\nI'm not sure what claims I'm supposed to add...\r\n\r\n```csharp\r\n[...]\r\npublic class AuthorizationController : Controller\r\n{\r\n    [HttpPost(\"~/connect/token\")]\r\n    public async Task<IActionResult> Exchange()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        ClaimsPrincipal claimsPrincipal;\r\n\r\n        if (request.IsAuthorizationCodeGrantType())\r\n        {\r\n            // Retrieve the claims principal stored in the authorization code\r\n            claimsPrincipal = (await HttpContext.AuthenticateAsync(OpenIddictServerAspNetCoreDefaults.AuthenticationScheme)).Principal;\r\n        }\r\n        else\r\n        {\r\n            throw new InvalidOperationException(\"The specified grant type is not supported.\");\r\n        }\r\n\r\n        // Returning a SignInResult will ask OpenIddict to issue the appropriate access/identity tokens.\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n\r\n    [HttpGet(\"~/connect/authorize\")]\r\n    [HttpPost(\"~/connect/authorize\")]\r\n    [IgnoreAntiforgeryToken]\r\n    public async Task<IActionResult> Authorize()\r\n    {\r\n        var request = HttpContext.GetOpenIddictServerRequest() ??\r\n                      throw new InvalidOperationException(\"The OpenID Connect request cannot be retrieved.\");\r\n\r\n        // Retrieve the user principal stored in the authentication cookie.\r\n        var result = await HttpContext.AuthenticateAsync(CookieAuthenticationDefaults.AuthenticationScheme);\r\n\r\n        // If the user principal can't be extracted, redirect the user to the login page.\r\n        if (!result.Succeeded)\r\n        {\r\n            return Challenge(\r\n                authenticationSchemes: CookieAuthenticationDefaults.AuthenticationScheme,\r\n                properties: new AuthenticationProperties\r\n                {\r\n                    RedirectUri = Request.PathBase + Request.Path + QueryString.Create(\r\n                        Request.HasFormContentType ? Request.Form.ToList() : Request.Query.ToList())\r\n                });\r\n        }\r\n\r\n        // Create a new claims principal\r\n        var claims = new List<Claim>\r\n        {\r\n            // 'subject' claim which is required\r\n            new Claim(Claims.Subject, result.Principal.Identity.Name),\r\n\r\n            //Add test claims\r\n            new Claim(ClaimTypes.NameIdentifier, \"2\").SetDestinations(Destinations.AccessToken),\r\n            new Claim(ClaimTypes.Name, \"test@test.com\").SetDestinations(Destinations.AccessToken), \r\n            new Claim(ClaimTypes.Email, \"test@test.com\").SetDestinations(Destinations.AccessToken)\r\n        };\r\n\r\n        var claimsIdentity = new ClaimsIdentity(claims, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n\r\n        var claimsPrincipal = new ClaimsPrincipal(claimsIdentity);\r\n\r\n        // Set requested scopes (this is not done automatically)\r\n        claimsPrincipal.SetScopes(request.GetScopes());\r\n\r\n        // Signing in with the OpenIddict authentication scheme trigger OpenIddict to issue a code (which can be exchanged for an access token)\r\n        return SignIn(claimsPrincipal, OpenIddictServerAspNetCoreDefaults.AuthenticationScheme);\r\n    }\r\n```\r\n\r\n### Web App Authentication Setup:\r\n\r\nIn my web application, the authentication is set up as follows:\r\n\r\n```csharp\r\nservices.AddAuthentication(options =>\r\n    {\r\n        options.DefaultScheme = CookieAuthenticationDefaults.AuthenticationScheme;\r\n        options.DefaultChallengeScheme = \"oidc\";\r\n    })\r\n    .AddOpenIdConnect(\"oidc\", options =>\r\n    {\r\n        options.Authority = \"https://localhost:7072/\";\r\n        options.ClientId = \"myApp\";\r\n        options.ClientSecret = \"myApp-secret\";\r\n        options.ResponseType = \"code\";\r\n        options.SaveTokens = true;\r\n    });\r\n```\r\n\r\nI've successfully tested the Authorization server's token endpoint via Postman, and it correctly returns an access token.\r\n\r\n\r\n\r\nI don't know if I'm working in the right direction so any guidance on how to resolve this issue would be greatly appreciated.",
                "reactions": {
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/issues/6809/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T14:38:11Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32802306357",
        "type": "PushEvent",
        "actor": {
            "id": 6908465,
            "login": "maliming",
            "display_login": "maliming",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maliming",
            "avatar_url": "https://avatars.githubusercontent.com/u/6908465?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15543717527,
            "size": 0,
            "distinct_size": 0,
            "ref": "refs/heads/System.Text.Json",
            "head": "28b34cc657b798addf040441ac920e635902c0a6",
            "before": "09b6c1235990d5883e042df4980e60315deab0d2",
            "commits": []
        },
        "public": true,
        "created_at": "2023-10-24T12:24:25Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32802027786",
        "type": "PushEvent",
        "actor": {
            "id": 6908465,
            "login": "maliming",
            "display_login": "maliming",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maliming",
            "avatar_url": "https://avatars.githubusercontent.com/u/6908465?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15543573414,
            "size": 2,
            "distinct_size": 2,
            "ref": "refs/heads/System.Text.Json",
            "head": "09b6c1235990d5883e042df4980e60315deab0d2",
            "before": "754faf418d3b3c3c8bb3c51028d561b21f3d940f",
            "commits": [
                {
                    "sha": "59a2c9a766c5d1b2b1f6aba50dca9e0a4a95826a",
                    "author": {
                        "email": "malimings@gmail.com",
                        "name": "maliming"
                    },
                    "message": "Update InMemoryBackgroundJobStore_Tests.cs",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/59a2c9a766c5d1b2b1f6aba50dca9e0a4a95826a"
                },
                {
                    "sha": "09b6c1235990d5883e042df4980e60315deab0d2",
                    "author": {
                        "email": "malimings@gmail.com",
                        "name": "maliming"
                    },
                    "message": "Merge branch 'System.Text.Json' of https://github.com/aspnetboilerplate/aspnetboilerplate into System.Text.Json",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/09b6c1235990d5883e042df4980e60315deab0d2"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T12:14:11Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32801338660",
        "type": "PushEvent",
        "actor": {
            "id": 6908465,
            "login": "maliming",
            "display_login": "maliming",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maliming",
            "avatar_url": "https://avatars.githubusercontent.com/u/6908465?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15543231463,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/System.Text.Json",
            "head": "754faf418d3b3c3c8bb3c51028d561b21f3d940f",
            "before": "28b34cc657b798addf040441ac920e635902c0a6",
            "commits": [
                {
                    "sha": "754faf418d3b3c3c8bb3c51028d561b21f3d940f",
                    "author": {
                        "email": "malimings@gmail.com",
                        "name": "maliming"
                    },
                    "message": "Update build-and-test.yml",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/754faf418d3b3c3c8bb3c51028d561b21f3d940f"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T11:47:19Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32797544266",
        "type": "PushEvent",
        "actor": {
            "id": 6908465,
            "login": "maliming",
            "display_login": "maliming",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maliming",
            "avatar_url": "https://avatars.githubusercontent.com/u/6908465?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15541365103,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/System.Text.Json",
            "head": "28b34cc657b798addf040441ac920e635902c0a6",
            "before": "27138bf3a6c6eed358402e4f19e37156f695b386",
            "commits": [
                {
                    "sha": "28b34cc657b798addf040441ac920e635902c0a6",
                    "author": {
                        "email": "malimings@gmail.com",
                        "name": "maliming"
                    },
                    "message": "Skip `OData` unit tests.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/28b34cc657b798addf040441ac920e635902c0a6"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T09:18:33Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    },
    {
        "id": "32796460893",
        "type": "PushEvent",
        "actor": {
            "id": 6908465,
            "login": "maliming",
            "display_login": "maliming",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maliming",
            "avatar_url": "https://avatars.githubusercontent.com/u/6908465?"
        },
        "repo": {
            "id": 12201538,
            "name": "aspnetboilerplate/aspnetboilerplate",
            "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate"
        },
        "payload": {
            "repository_id": 12201538,
            "push_id": 15540848324,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/System.Text.Json",
            "head": "27138bf3a6c6eed358402e4f19e37156f695b386",
            "before": "55aa7254453cfe58208c00c51dc6b1fb829ad523",
            "commits": [
                {
                    "sha": "27138bf3a6c6eed358402e4f19e37156f695b386",
                    "author": {
                        "email": "malimings@gmail.com",
                        "name": "maliming"
                    },
                    "message": "Add `DateOnlyJsonConverter`.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/aspnetboilerplate/aspnetboilerplate/commits/27138bf3a6c6eed358402e4f19e37156f695b386"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T08:39:56Z",
        "org": {
            "id": 5957277,
            "login": "aspnetboilerplate",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/aspnetboilerplate",
            "avatar_url": "https://avatars.githubusercontent.com/u/5957277?"
        }
    }
]