[
    {
        "id": "32897525078",
        "type": "PullRequestEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "opened",
            "number": 3602,
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3602",
                "id": 1576449317,
                "node_id": "PR_kwDOFTeDLc5d9rUl",
                "html_url": "https://github.com/Textualize/textual/pull/3602",
                "diff_url": "https://github.com/Textualize/textual/pull/3602.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3602.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3602",
                "number": 3602,
                "state": "open",
                "locked": false,
                "title": "Handle other Tabs widgets as DOM descendants of a TabbedContent",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2023-10-27T11:45:55Z",
                "updated_at": "2023-10-27T11:45:55Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": true,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3602/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3602/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3602/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/6214e5e60d0afbc19c09ca0b7e1c1a66e7de0ddb",
                "head": {
                    "label": "Textualize:tabs-assertionerror-fix",
                    "ref": "tabs-assertionerror-fix",
                    "sha": "6214e5e60d0afbc19c09ca0b7e1c1a66e7de0ddb",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T10:41:49Z",
                        "pushed_at": "2023-10-27T11:45:55Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275822,
                        "stargazers_count": 21814,
                        "watchers_count": 21814,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21814,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "f02cde2f83cee75e5ab7978580871267a867a710",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T10:41:49Z",
                        "pushed_at": "2023-10-27T11:45:55Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275822,
                        "stargazers_count": 21814,
                        "watchers_count": 21814,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21814,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3602"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3602"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3602"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3602/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3602/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3602/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/6214e5e60d0afbc19c09ca0b7e1c1a66e7de0ddb"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 21,
                "deletions": 11,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:45:57Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32897521698",
        "type": "CreateEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "ref": "tabs-assertionerror-fix",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T11:45:48Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895991213",
        "type": "WatchEvent",
        "actor": {
            "id": 18402822,
            "login": "ARtemachka",
            "display_login": "ARtemachka",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ARtemachka",
            "avatar_url": "https://avatars.githubusercontent.com/u/18402822?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T10:41:49Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895523023",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 41898282,
            "login": "github-actions[bot]",
            "display_login": "github-actions",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/41898282?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T10:23:07Z",
                "closed_at": "2023-10-27T10:22:54Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782670787",
                "html_url": "https://github.com/Textualize/textual/issues/3600#issuecomment-1782670787",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "id": 1782670787,
                "node_id": "IC_kwDOFTeDLc5qQWXD",
                "user": {
                    "login": "github-actions[bot]",
                    "id": 41898282,
                    "node_id": "MDM6Qm90NDE4OTgyODI=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
                    "html_url": "https://github.com/apps/github-actions",
                    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:23:07Z",
                "updated_at": "2023-10-27T10:23:07Z",
                "author_association": "NONE",
                "body": "Don't forget to [star](https://github.com/Textualize/textual) the repository!\n\nFollow [@textualizeio](https://twitter.com/textualizeio) for Textual updates.",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782670787/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:23:08Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895517201",
        "type": "IssuesEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T10:22:55Z",
                "closed_at": "2023-10-27T10:22:54Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:22:56Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895517035",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T10:22:55Z",
                "closed_at": "2023-10-27T10:22:54Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782670510",
                "html_url": "https://github.com/Textualize/textual/issues/3600#issuecomment-1782670510",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "id": 1782670510,
                "node_id": "IC_kwDOFTeDLc5qQWSu",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:22:54Z",
                "updated_at": "2023-10-27T10:22:54Z",
                "author_association": "MEMBER",
                "body": "Going to close this as I'm fairly certain it's resolved - if I'm wrong, don't hesitate to re-open. Thanks!",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782670510/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:22:55Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895257275",
        "type": "DeleteEvent",
        "actor": {
            "id": 554369,
            "login": "willmcgugan",
            "display_login": "willmcgugan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willmcgugan",
            "avatar_url": "https://avatars.githubusercontent.com/u/554369?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "ref": "update-changelog-loading-indicator-crash",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T10:13:15Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895256976",
        "type": "PushEvent",
        "actor": {
            "id": 554369,
            "login": "willmcgugan",
            "display_login": "willmcgugan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willmcgugan",
            "avatar_url": "https://avatars.githubusercontent.com/u/554369?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "repository_id": 355959597,
            "push_id": 15590030604,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/main",
            "head": "f02cde2f83cee75e5ab7978580871267a867a710",
            "before": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
            "commits": [
                {
                    "sha": "f02cde2f83cee75e5ab7978580871267a867a710",
                    "author": {
                        "email": "darrenburns@users.noreply.github.com",
                        "name": "Darren Burns"
                    },
                    "message": "Update CHANGELOG regarding LoadingIndicator crash (#3601)",
                    "distinct": true,
                    "url": "https://api.github.com/repos/Textualize/textual/commits/f02cde2f83cee75e5ab7978580871267a867a710"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T10:13:14Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895256659",
        "type": "PullRequestEvent",
        "actor": {
            "id": 554369,
            "login": "willmcgugan",
            "display_login": "willmcgugan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willmcgugan",
            "avatar_url": "https://avatars.githubusercontent.com/u/554369?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "closed",
            "number": 3601,
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3601",
                "id": 1576279881,
                "node_id": "PR_kwDOFTeDLc5d9B9J",
                "html_url": "https://github.com/Textualize/textual/pull/3601",
                "diff_url": "https://github.com/Textualize/textual/pull/3601.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3601.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3601",
                "number": 3601,
                "state": "closed",
                "locked": false,
                "title": "Update CHANGELOG regarding LoadingIndicator crash",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2023-10-27T09:49:45Z",
                "updated_at": "2023-10-27T10:13:12Z",
                "closed_at": "2023-10-27T10:13:12Z",
                "merged_at": "2023-10-27T10:13:12Z",
                "merge_commit_sha": "f02cde2f83cee75e5ab7978580871267a867a710",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "davep",
                        "id": 28237,
                        "node_id": "MDQ6VXNlcjI4MjM3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28237?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/davep",
                        "html_url": "https://github.com/davep",
                        "followers_url": "https://api.github.com/users/davep/followers",
                        "following_url": "https://api.github.com/users/davep/following{/other_user}",
                        "gists_url": "https://api.github.com/users/davep/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/davep/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/davep/subscriptions",
                        "organizations_url": "https://api.github.com/users/davep/orgs",
                        "repos_url": "https://api.github.com/users/davep/repos",
                        "events_url": "https://api.github.com/users/davep/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/davep/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3601/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3601/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3601/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                "head": {
                    "label": "Textualize:update-changelog-loading-indicator-crash",
                    "ref": "update-changelog-loading-indicator-crash",
                    "sha": "d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T10:13:12Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T10:13:12Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3601"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3601"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3601/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/d6f25e25c2beb20ff0baa108560e803e36a29a5a"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "willmcgugan",
                    "id": 554369,
                    "node_id": "MDQ6VXNlcjU1NDM2OQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/willmcgugan",
                    "html_url": "https://github.com/willmcgugan",
                    "followers_url": "https://api.github.com/users/willmcgugan/followers",
                    "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}",
                    "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions",
                    "organizations_url": "https://api.github.com/users/willmcgugan/orgs",
                    "repos_url": "https://api.github.com/users/willmcgugan/repos",
                    "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/willmcgugan/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 1,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:13:13Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32895250607",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 554369,
            "login": "willmcgugan",
            "display_login": "willmcgugan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willmcgugan",
            "avatar_url": "https://avatars.githubusercontent.com/u/554369?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1701443658,
                "node_id": "PRR_kwDOFTeDLc5lafhK",
                "user": {
                    "login": "willmcgugan",
                    "id": 554369,
                    "node_id": "MDQ6VXNlcjU1NDM2OQ==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/willmcgugan",
                    "html_url": "https://github.com/willmcgugan",
                    "followers_url": "https://api.github.com/users/willmcgugan/followers",
                    "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}",
                    "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions",
                    "organizations_url": "https://api.github.com/users/willmcgugan/orgs",
                    "repos_url": "https://api.github.com/users/willmcgugan/repos",
                    "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/willmcgugan/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "",
                "commit_id": "d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                "submitted_at": "2023-10-27T10:12:59Z",
                "state": "approved",
                "html_url": "https://github.com/Textualize/textual/pull/3601#pullrequestreview-1701443658",
                "pull_request_url": "https://api.github.com/repos/Textualize/textual/pulls/3601",
                "author_association": "COLLABORATOR",
                "_links": {
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3601#pullrequestreview-1701443658"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3601",
                "id": 1576279881,
                "node_id": "PR_kwDOFTeDLc5d9B9J",
                "html_url": "https://github.com/Textualize/textual/pull/3601",
                "diff_url": "https://github.com/Textualize/textual/pull/3601.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3601.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3601",
                "number": 3601,
                "state": "open",
                "locked": false,
                "title": "Update CHANGELOG regarding LoadingIndicator crash",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2023-10-27T09:49:45Z",
                "updated_at": "2023-10-27T10:12:59Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "7d1b8e6dba58c84754add38832d84dd982a0a3f2",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "davep",
                        "id": 28237,
                        "node_id": "MDQ6VXNlcjI4MjM3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/28237?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/davep",
                        "html_url": "https://github.com/davep",
                        "followers_url": "https://api.github.com/users/davep/followers",
                        "following_url": "https://api.github.com/users/davep/following{/other_user}",
                        "gists_url": "https://api.github.com/users/davep/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/davep/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/davep/subscriptions",
                        "organizations_url": "https://api.github.com/users/davep/orgs",
                        "repos_url": "https://api.github.com/users/davep/repos",
                        "events_url": "https://api.github.com/users/davep/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/davep/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3601/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3601/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3601/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                "head": {
                    "label": "Textualize:update-changelog-loading-indicator-crash",
                    "ref": "update-changelog-loading-indicator-crash",
                    "sha": "d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:49:45Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 192,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 192,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:49:45Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 192,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 192,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3601"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3601"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3601/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/d6f25e25c2beb20ff0baa108560e803e36a29a5a"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:13:00Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894641052",
        "type": "PullRequestEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "opened",
            "number": 3601,
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3601",
                "id": 1576279881,
                "node_id": "PR_kwDOFTeDLc5d9B9J",
                "html_url": "https://github.com/Textualize/textual/pull/3601",
                "diff_url": "https://github.com/Textualize/textual/pull/3601.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3601.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3601",
                "number": 3601,
                "state": "open",
                "locked": false,
                "title": "Update CHANGELOG regarding LoadingIndicator crash",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "created_at": "2023-10-27T09:49:45Z",
                "updated_at": "2023-10-27T09:49:45Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3601/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3601/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3601/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                "head": {
                    "label": "Textualize:update-changelog-loading-indicator-crash",
                    "ref": "update-changelog-loading-indicator-crash",
                    "sha": "d6f25e25c2beb20ff0baa108560e803e36a29a5a",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:49:45Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 192,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 192,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:49:45Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 192,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 192,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3601"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3601"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3601/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3601/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/d6f25e25c2beb20ff0baa108560e803e36a29a5a"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 1,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:49:47Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894638359",
        "type": "CreateEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "ref": "update-changelog-loading-indicator-crash",
            "ref_type": "branch",
            "master_branch": "main",
            "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:49:41Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894589473",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T09:47:48Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782623021",
                "html_url": "https://github.com/Textualize/textual/issues/3600#issuecomment-1782623021",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "id": 1782623021,
                "node_id": "IC_kwDOFTeDLc5qQKst",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:47:48Z",
                "updated_at": "2023-10-27T09:47:48Z",
                "author_association": "MEMBER",
                "body": "Yes, it's already in `main`. It's just missing from the changelog - not sure why.",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782623021/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:49Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894586878",
        "type": "PushEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "repository_id": 355959597,
            "push_id": 15589701796,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/wokers-inside-workers",
            "head": "841f72667766715b49a227557b945806d4ff4dc4",
            "before": "a91f8b4385e4ef992f3435c88ab13ee294ff171b",
            "commits": [
                {
                    "sha": "841f72667766715b49a227557b945806d4ff4dc4",
                    "author": {
                        "email": "5621605+rodrigogiraoserrao@users.noreply.github.com",
                        "name": "Rodrigo Gir\u00e3o Serr\u00e3o"
                    },
                    "message": "Update CHANGELOG.md\n\nCo-authored-by: Dave Pearson <davep@davep.org>",
                    "distinct": true,
                    "url": "https://api.github.com/repos/Textualize/textual/commits/841f72667766715b49a227557b945806d4ff4dc4"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:47:43Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894582611",
        "type": "PullRequestReviewCommentEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/comments/1374334090",
                "pull_request_review_id": 1701402181,
                "id": 1374334090,
                "node_id": "PRRC_kwDOFTeDLc5R6qyK",
                "diff_hunk": "@@ -1,12 +1,6 @@\n from typing import TYPE_CHECKING, Any, Awaitable, Callable, List, Union\n \n-from typing_extensions import (\n-    Literal,\n-    Protocol,\n-    SupportsIndex,\n-    get_args,\n-    runtime_checkable,\n-)\n+from typing_extensions import Protocol",
                "path": "src/textual/_types.py",
                "commit_id": "d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                "original_commit_id": "d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                "user": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Thanks for the heads-up.\r\nI'll merge after I make sure all is good.",
                "created_at": "2023-10-27T09:47:32Z",
                "updated_at": "2023-10-27T09:47:32Z",
                "html_url": "https://github.com/Textualize/textual/pull/3595#discussion_r1374334090",
                "pull_request_url": "https://api.github.com/repos/Textualize/textual/pulls/3595",
                "author_association": "CONTRIBUTOR",
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments/1374334090"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3595#discussion_r1374334090"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595"
                    }
                },
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/pulls/comments/1374334090/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "start_line": null,
                "original_start_line": null,
                "start_side": null,
                "line": 3,
                "original_line": 3,
                "side": "RIGHT",
                "in_reply_to_id": 1373478798,
                "original_position": 10,
                "position": 10,
                "subject_type": "line"
            },
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3595",
                "id": 1574531904,
                "node_id": "PR_kwDOFTeDLc5d2XNA",
                "html_url": "https://github.com/Textualize/textual/pull/3595",
                "diff_url": "https://github.com/Textualize/textual/pull/3595.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3595.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3595",
                "number": 3595,
                "state": "open",
                "locked": false,
                "title": "Add more pre-commit hooks.",
                "user": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Went through the list of Rich pre-commit hooks and added the ones that look useful.\r\nPrompted by the fact that I commit unused imports way too many times.\r\n\r\nTook the opportunity to fix imports in the code and make sure one of the examples is compatible with Python 3.7 out of the box, which we still support.",
                "created_at": "2023-10-26T10:29:29Z",
                "updated_at": "2023-10-27T09:47:32Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "0ee8bac320fd054be89e5255ebc47945a1f13856",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "willmcgugan",
                        "id": 554369,
                        "node_id": "MDQ6VXNlcjU1NDM2OQ==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/willmcgugan",
                        "html_url": "https://github.com/willmcgugan",
                        "followers_url": "https://api.github.com/users/willmcgugan/followers",
                        "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}",
                        "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions",
                        "organizations_url": "https://api.github.com/users/willmcgugan/orgs",
                        "repos_url": "https://api.github.com/users/willmcgugan/repos",
                        "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/willmcgugan/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "darrenburns",
                        "id": 5740731,
                        "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/darrenburns",
                        "html_url": "https://github.com/darrenburns",
                        "followers_url": "https://api.github.com/users/darrenburns/followers",
                        "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                        "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                        "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                        "repos_url": "https://api.github.com/users/darrenburns/repos",
                        "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3595/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3595/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3595/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                "head": {
                    "label": "Textualize:pre-commit",
                    "ref": "pre-commit",
                    "sha": "d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:47:14Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "34fb596c56e66e4327c58135d8f887613c9cf3e5",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:47:14Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3595"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3595"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3595/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/d9594f5adc6a5d35398989baa8b579a5fc3a8bb1"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:32Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894582498",
        "type": "PullRequestReviewEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "review": {
                "id": 1701402181,
                "node_id": "PRR_kwDOFTeDLc5laVZF",
                "user": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": null,
                "commit_id": "d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                "submitted_at": "2023-10-27T09:47:32Z",
                "state": "commented",
                "html_url": "https://github.com/Textualize/textual/pull/3595#pullrequestreview-1701402181",
                "pull_request_url": "https://api.github.com/repos/Textualize/textual/pulls/3595",
                "author_association": "CONTRIBUTOR",
                "_links": {
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3595#pullrequestreview-1701402181"
                    },
                    "pull_request": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595"
                    }
                }
            },
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3595",
                "id": 1574531904,
                "node_id": "PR_kwDOFTeDLc5d2XNA",
                "html_url": "https://github.com/Textualize/textual/pull/3595",
                "diff_url": "https://github.com/Textualize/textual/pull/3595.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3595.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3595",
                "number": 3595,
                "state": "open",
                "locked": false,
                "title": "Add more pre-commit hooks.",
                "user": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Went through the list of Rich pre-commit hooks and added the ones that look useful.\r\nPrompted by the fact that I commit unused imports way too many times.\r\n\r\nTook the opportunity to fix imports in the code and make sure one of the examples is compatible with Python 3.7 out of the box, which we still support.",
                "created_at": "2023-10-26T10:29:29Z",
                "updated_at": "2023-10-27T09:47:32Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": "0ee8bac320fd054be89e5255ebc47945a1f13856",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [
                    {
                        "login": "willmcgugan",
                        "id": 554369,
                        "node_id": "MDQ6VXNlcjU1NDM2OQ==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/willmcgugan",
                        "html_url": "https://github.com/willmcgugan",
                        "followers_url": "https://api.github.com/users/willmcgugan/followers",
                        "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}",
                        "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions",
                        "organizations_url": "https://api.github.com/users/willmcgugan/orgs",
                        "repos_url": "https://api.github.com/users/willmcgugan/repos",
                        "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/willmcgugan/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "darrenburns",
                        "id": 5740731,
                        "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/darrenburns",
                        "html_url": "https://github.com/darrenburns",
                        "followers_url": "https://api.github.com/users/darrenburns/followers",
                        "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                        "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                        "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                        "repos_url": "https://api.github.com/users/darrenburns/repos",
                        "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3595/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3595/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3595/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                "head": {
                    "label": "Textualize:pre-commit",
                    "ref": "pre-commit",
                    "sha": "d9594f5adc6a5d35398989baa8b579a5fc3a8bb1",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:47:14Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "34fb596c56e66e4327c58135d8f887613c9cf3e5",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:47:14Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 191,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 191,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3595"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3595"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3595/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3595/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/d9594f5adc6a5d35398989baa8b579a5fc3a8bb1"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:33Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894580818",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 41898282,
            "login": "github-actions[bot]",
            "display_login": "github-actions",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/41898282?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3434",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3434/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3434/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3434/events",
                "html_url": "https://github.com/Textualize/textual/issues/3434",
                "id": 1920331644,
                "node_id": "I_kwDOFTeDLc5yde98",
                "number": 3434,
                "title": "linter complaint about using a worker as a timer callback",
                "user": {
                    "login": "guystreeter",
                    "id": 49929301,
                    "node_id": "MDQ6VXNlcjQ5OTI5MzAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/49929301?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/guystreeter",
                    "html_url": "https://github.com/guystreeter",
                    "followers_url": "https://api.github.com/users/guystreeter/followers",
                    "following_url": "https://api.github.com/users/guystreeter/following{/other_user}",
                    "gists_url": "https://api.github.com/users/guystreeter/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/guystreeter/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/guystreeter/subscriptions",
                    "organizations_url": "https://api.github.com/users/guystreeter/orgs",
                    "repos_url": "https://api.github.com/users/guystreeter/repos",
                    "events_url": "https://api.github.com/users/guystreeter/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/guystreeter/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2896254901,
                        "node_id": "MDU6TGFiZWwyODk2MjU0OTAx",
                        "url": "https://api.github.com/repos/Textualize/textual/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 3104178504,
                        "node_id": "MDU6TGFiZWwzMTA0MTc4NTA0",
                        "url": "https://api.github.com/repos/Textualize/textual/labels/Task",
                        "name": "Task",
                        "color": "5B18F1",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [
                    {
                        "login": "rodrigogiraoserrao",
                        "id": 5621605,
                        "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rodrigogiraoserrao",
                        "html_url": "https://github.com/rodrigogiraoserrao",
                        "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                        "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                        "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                        "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                        "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-09-30T16:57:34Z",
                "updated_at": "2023-10-27T09:47:29Z",
                "closed_at": "2023-10-27T09:47:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Have you checked closed issues? https://github.com/Textualize/textual/issues?q=is%3Aissue+is%3Aclosed\r\n\r\nyes\r\n\r\nPlease give a brief but clear explanation of the issue. If you can, include a complete working example that demonstrates the bug. **Check it can run without modifications.**\r\n\r\n```\r\nfrom textual import work\r\nfrom textual.app import App\r\nclass testy(App):\r\n    @work\r\n    async def worky(self) -> None:\r\n        pass\r\n    def compose(self):\r\n        self.set_timer(1, self.worky)\r\n```\r\n\r\n```\r\n$ pyright test.py\r\n/home/guy/gits/ttuna/test.py\r\n  /home/guy/gits/ttuna/test.py:8:27 - error: Argument of type \"() -> Worker[None]\" cannot be assigned to parameter \"callback\" of type \"TimerCallback | None\" in function \"set_timer\"\r\n  \u00a0\u00a0Type \"() -> Worker[None]\" cannot be assigned to type \"TimerCallback | None\"\r\n  \u00a0\u00a0\u00a0\u00a0Type \"() -> Worker[None]\" cannot be assigned to type \"() -> Awaitable[None]\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Function return type \"Worker[None]\" is incompatible with type \"Awaitable[None]\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Worker[None]\" is incompatible with protocol \"Awaitable[None]\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"__await__\" is not present\r\n  \u00a0\u00a0\u00a0\u00a0Type \"() -> Worker[None]\" cannot be assigned to type \"() -> None\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Function return type \"Worker[None]\" is incompatible with type \"None\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Type cannot be assigned to type \"None\"\r\n    ... (reportGeneralTypeIssues)\r\n1 error, 0 warnings, 0 informations \r\n```\r\n\r\nThe same error is reported for `set_interval` as well",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3434/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3434/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782622551",
                "html_url": "https://github.com/Textualize/textual/issues/3434#issuecomment-1782622551",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3434",
                "id": 1782622551,
                "node_id": "IC_kwDOFTeDLc5qQKlX",
                "user": {
                    "login": "github-actions[bot]",
                    "id": 41898282,
                    "node_id": "MDM6Qm90NDE4OTgyODI=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
                    "html_url": "https://github.com/apps/github-actions",
                    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:47:28Z",
                "updated_at": "2023-10-27T09:47:28Z",
                "author_association": "NONE",
                "body": "Don't forget to [star](https://github.com/Textualize/textual) the repository!\n\nFollow [@textualizeio](https://twitter.com/textualizeio) for Textual updates.",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782622551/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:29Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894575405",
        "type": "DeleteEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "ref": "typing-timer-callback",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T09:47:17Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894574350",
        "type": "PushEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "repository_id": 355959597,
            "push_id": 15589695949,
            "size": 4,
            "distinct_size": 4,
            "ref": "refs/heads/main",
            "head": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
            "before": "41cadfcbf10858ad4afc6c99b52b17cac1b58fbb",
            "commits": [
                {
                    "sha": "1f2b09d8ba8b4f884e0f60293c2cda890ef8f35e",
                    "author": {
                        "email": "5621605+rodrigogiraoserrao@users.noreply.github.com",
                        "name": "Rodrigo Gir\u00e3o Serr\u00e3o"
                    },
                    "message": "Be less strict about typing timers.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/Textualize/textual/commits/1f2b09d8ba8b4f884e0f60293c2cda890ef8f35e"
                },
                {
                    "sha": "1ee6a48407759af9bc43bb47a14825d9552bed8f",
                    "author": {
                        "email": "5621605+rodrigogiraoserrao@users.noreply.github.com",
                        "name": "Rodrigo Gir\u00e3o Serr\u00e3o"
                    },
                    "message": "Update changelog.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/Textualize/textual/commits/1ee6a48407759af9bc43bb47a14825d9552bed8f"
                },
                {
                    "sha": "73795bf2e231a4ff7a41a0d78b7c465f4946c673",
                    "author": {
                        "email": "5621605+rodrigogiraoserrao@users.noreply.github.com",
                        "name": "Rodrigo Gir\u00e3o Serr\u00e3o"
                    },
                    "message": "Restore original typing for the work decorator.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/Textualize/textual/commits/73795bf2e231a4ff7a41a0d78b7c465f4946c673"
                },
                {
                    "sha": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
                    "author": {
                        "email": "5621605+rodrigogiraoserrao@users.noreply.github.com",
                        "name": "Rodrigo Gir\u00e3o Serr\u00e3o"
                    },
                    "message": "Merge pull request #3499 from Textualize/typing-timer-callback\n\nBe less strict about typing timer callbacks.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/Textualize/textual/commits/33a1d34db7aecdf051c4a2a5fac9860bd3d49fad"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T09:47:14Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894574387",
        "type": "IssuesEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3434",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3434/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3434/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3434/events",
                "html_url": "https://github.com/Textualize/textual/issues/3434",
                "id": 1920331644,
                "node_id": "I_kwDOFTeDLc5yde98",
                "number": 3434,
                "title": "linter complaint about using a worker as a timer callback",
                "user": {
                    "login": "guystreeter",
                    "id": 49929301,
                    "node_id": "MDQ6VXNlcjQ5OTI5MzAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/49929301?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/guystreeter",
                    "html_url": "https://github.com/guystreeter",
                    "followers_url": "https://api.github.com/users/guystreeter/followers",
                    "following_url": "https://api.github.com/users/guystreeter/following{/other_user}",
                    "gists_url": "https://api.github.com/users/guystreeter/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/guystreeter/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/guystreeter/subscriptions",
                    "organizations_url": "https://api.github.com/users/guystreeter/orgs",
                    "repos_url": "https://api.github.com/users/guystreeter/repos",
                    "events_url": "https://api.github.com/users/guystreeter/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/guystreeter/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2896254901,
                        "node_id": "MDU6TGFiZWwyODk2MjU0OTAx",
                        "url": "https://api.github.com/repos/Textualize/textual/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 3104178504,
                        "node_id": "MDU6TGFiZWwzMTA0MTc4NTA0",
                        "url": "https://api.github.com/repos/Textualize/textual/labels/Task",
                        "name": "Task",
                        "color": "5B18F1",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [
                    {
                        "login": "rodrigogiraoserrao",
                        "id": 5621605,
                        "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rodrigogiraoserrao",
                        "html_url": "https://github.com/rodrigogiraoserrao",
                        "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                        "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                        "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                        "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                        "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-09-30T16:57:34Z",
                "updated_at": "2023-10-27T09:47:14Z",
                "closed_at": "2023-10-27T09:47:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Have you checked closed issues? https://github.com/Textualize/textual/issues?q=is%3Aissue+is%3Aclosed\r\n\r\nyes\r\n\r\nPlease give a brief but clear explanation of the issue. If you can, include a complete working example that demonstrates the bug. **Check it can run without modifications.**\r\n\r\n```\r\nfrom textual import work\r\nfrom textual.app import App\r\nclass testy(App):\r\n    @work\r\n    async def worky(self) -> None:\r\n        pass\r\n    def compose(self):\r\n        self.set_timer(1, self.worky)\r\n```\r\n\r\n```\r\n$ pyright test.py\r\n/home/guy/gits/ttuna/test.py\r\n  /home/guy/gits/ttuna/test.py:8:27 - error: Argument of type \"() -> Worker[None]\" cannot be assigned to parameter \"callback\" of type \"TimerCallback | None\" in function \"set_timer\"\r\n  \u00a0\u00a0Type \"() -> Worker[None]\" cannot be assigned to type \"TimerCallback | None\"\r\n  \u00a0\u00a0\u00a0\u00a0Type \"() -> Worker[None]\" cannot be assigned to type \"() -> Awaitable[None]\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Function return type \"Worker[None]\" is incompatible with type \"Awaitable[None]\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Worker[None]\" is incompatible with protocol \"Awaitable[None]\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"__await__\" is not present\r\n  \u00a0\u00a0\u00a0\u00a0Type \"() -> Worker[None]\" cannot be assigned to type \"() -> None\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Function return type \"Worker[None]\" is incompatible with type \"None\"\r\n  \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Type cannot be assigned to type \"None\"\r\n    ... (reportGeneralTypeIssues)\r\n1 error, 0 warnings, 0 informations \r\n```\r\n\r\nThe same error is reported for `set_interval` as well",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3434/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3434/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:15Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894574043",
        "type": "PullRequestEvent",
        "actor": {
            "id": 5621605,
            "login": "rodrigogiraoserrao",
            "display_login": "rodrigogiraoserrao",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rodrigogiraoserrao",
            "avatar_url": "https://avatars.githubusercontent.com/u/5621605?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "closed",
            "number": 3499,
            "pull_request": {
                "url": "https://api.github.com/repos/Textualize/textual/pulls/3499",
                "id": 1550009319,
                "node_id": "PR_kwDOFTeDLc5cY0Pn",
                "html_url": "https://github.com/Textualize/textual/pull/3499",
                "diff_url": "https://github.com/Textualize/textual/pull/3499.diff",
                "patch_url": "https://github.com/Textualize/textual/pull/3499.patch",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3499",
                "number": 3499,
                "state": "closed",
                "locked": false,
                "title": "Be less strict about typing timer callbacks.",
                "user": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "Fixes #3434.\r\n\r\nTimer callbacks can now return `Any` instead of `None`.\r\n\r\nThis change did not introduce any new typing errors and it fixed two typing errors in our codebase.",
                "created_at": "2023-10-10T13:50:32Z",
                "updated_at": "2023-10-27T09:47:13Z",
                "closed_at": "2023-10-27T09:47:13Z",
                "merged_at": "2023-10-27T09:47:13Z",
                "merge_commit_sha": "33a1d34db7aecdf051c4a2a5fac9860bd3d49fad",
                "assignee": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "rodrigogiraoserrao",
                        "id": 5621605,
                        "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/rodrigogiraoserrao",
                        "html_url": "https://github.com/rodrigogiraoserrao",
                        "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                        "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                        "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                        "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                        "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                        "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_reviewers": [
                    {
                        "login": "willmcgugan",
                        "id": 554369,
                        "node_id": "MDQ6VXNlcjU1NDM2OQ==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/554369?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/willmcgugan",
                        "html_url": "https://github.com/willmcgugan",
                        "followers_url": "https://api.github.com/users/willmcgugan/followers",
                        "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}",
                        "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions",
                        "organizations_url": "https://api.github.com/users/willmcgugan/orgs",
                        "repos_url": "https://api.github.com/users/willmcgugan/repos",
                        "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/willmcgugan/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "darrenburns",
                        "id": 5740731,
                        "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/darrenburns",
                        "html_url": "https://github.com/darrenburns",
                        "followers_url": "https://api.github.com/users/darrenburns/followers",
                        "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                        "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                        "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                        "repos_url": "https://api.github.com/users/darrenburns/repos",
                        "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/Textualize/textual/pulls/3499/commits",
                "review_comments_url": "https://api.github.com/repos/Textualize/textual/pulls/3499/comments",
                "review_comment_url": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3499/comments",
                "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/73795bf2e231a4ff7a41a0d78b7c465f4946c673",
                "head": {
                    "label": "Textualize:typing-timer-callback",
                    "ref": "typing-timer-callback",
                    "sha": "73795bf2e231a4ff7a41a0d78b7c465f4946c673",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:47:12Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 192,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 192,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "Textualize:main",
                    "ref": "main",
                    "sha": "d0f0d76f789a7ed4542b85d196d09875d1fbf86e",
                    "user": {
                        "login": "Textualize",
                        "id": 93378883,
                        "node_id": "O_kgDOBZDZQw",
                        "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Textualize",
                        "html_url": "https://github.com/Textualize",
                        "followers_url": "https://api.github.com/users/Textualize/followers",
                        "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                        "organizations_url": "https://api.github.com/users/Textualize/orgs",
                        "repos_url": "https://api.github.com/users/Textualize/repos",
                        "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Textualize/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 355959597,
                        "node_id": "MDEwOlJlcG9zaXRvcnkzNTU5NTk1OTc=",
                        "name": "textual",
                        "full_name": "Textualize/textual",
                        "private": false,
                        "owner": {
                            "login": "Textualize",
                            "id": 93378883,
                            "node_id": "O_kgDOBZDZQw",
                            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/Textualize",
                            "html_url": "https://github.com/Textualize",
                            "followers_url": "https://api.github.com/users/Textualize/followers",
                            "following_url": "https://api.github.com/users/Textualize/following{/other_user}",
                            "gists_url": "https://api.github.com/users/Textualize/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/Textualize/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/Textualize/subscriptions",
                            "organizations_url": "https://api.github.com/users/Textualize/orgs",
                            "repos_url": "https://api.github.com/users/Textualize/repos",
                            "events_url": "https://api.github.com/users/Textualize/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/Textualize/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/Textualize/textual",
                        "description": "The lean application framework for Python.  Build sophisticated user interfaces with a simple Python API. Run your apps in the terminal and a web browser.",
                        "fork": false,
                        "url": "https://api.github.com/repos/Textualize/textual",
                        "forks_url": "https://api.github.com/repos/Textualize/textual/forks",
                        "keys_url": "https://api.github.com/repos/Textualize/textual/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/Textualize/textual/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/Textualize/textual/teams",
                        "hooks_url": "https://api.github.com/repos/Textualize/textual/hooks",
                        "issue_events_url": "https://api.github.com/repos/Textualize/textual/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/Textualize/textual/events",
                        "assignees_url": "https://api.github.com/repos/Textualize/textual/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/Textualize/textual/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/Textualize/textual/tags",
                        "blobs_url": "https://api.github.com/repos/Textualize/textual/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/Textualize/textual/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/Textualize/textual/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/Textualize/textual/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/Textualize/textual/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/Textualize/textual/languages",
                        "stargazers_url": "https://api.github.com/repos/Textualize/textual/stargazers",
                        "contributors_url": "https://api.github.com/repos/Textualize/textual/contributors",
                        "subscribers_url": "https://api.github.com/repos/Textualize/textual/subscribers",
                        "subscription_url": "https://api.github.com/repos/Textualize/textual/subscription",
                        "commits_url": "https://api.github.com/repos/Textualize/textual/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/Textualize/textual/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/Textualize/textual/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/Textualize/textual/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/Textualize/textual/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/Textualize/textual/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/Textualize/textual/merges",
                        "archive_url": "https://api.github.com/repos/Textualize/textual/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/Textualize/textual/downloads",
                        "issues_url": "https://api.github.com/repos/Textualize/textual/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/Textualize/textual/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/Textualize/textual/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/Textualize/textual/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/Textualize/textual/labels{/name}",
                        "releases_url": "https://api.github.com/repos/Textualize/textual/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/Textualize/textual/deployments",
                        "created_at": "2021-04-08T15:24:47Z",
                        "updated_at": "2023-10-27T06:04:38Z",
                        "pushed_at": "2023-10-27T09:47:12Z",
                        "git_url": "git://github.com/Textualize/textual.git",
                        "ssh_url": "git@github.com:Textualize/textual.git",
                        "clone_url": "https://github.com/Textualize/textual.git",
                        "svn_url": "https://github.com/Textualize/textual",
                        "homepage": "https://textual.textualize.io/",
                        "size": 275745,
                        "stargazers_count": 21813,
                        "watchers_count": 21813,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": true,
                        "has_discussions": true,
                        "forks_count": 665,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 192,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cli",
                            "framework",
                            "python",
                            "rich",
                            "terminal",
                            "tui"
                        ],
                        "visibility": "public",
                        "forks": 665,
                        "open_issues": 192,
                        "watchers": 21813,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3499"
                    },
                    "html": {
                        "href": "https://github.com/Textualize/textual/pull/3499"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3499"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/issues/3499/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3499/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/Textualize/textual/pulls/3499/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/Textualize/textual/statuses/73795bf2e231a4ff7a41a0d78b7c465f4946c673"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "rodrigogiraoserrao",
                    "id": 5621605,
                    "node_id": "MDQ6VXNlcjU2MjE2MDU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5621605?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/rodrigogiraoserrao",
                    "html_url": "https://github.com/rodrigogiraoserrao",
                    "followers_url": "https://api.github.com/users/rodrigogiraoserrao/followers",
                    "following_url": "https://api.github.com/users/rodrigogiraoserrao/following{/other_user}",
                    "gists_url": "https://api.github.com/users/rodrigogiraoserrao/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/rodrigogiraoserrao/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/rodrigogiraoserrao/subscriptions",
                    "organizations_url": "https://api.github.com/users/rodrigogiraoserrao/orgs",
                    "repos_url": "https://api.github.com/users/rodrigogiraoserrao/repos",
                    "events_url": "https://api.github.com/users/rodrigogiraoserrao/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/rodrigogiraoserrao/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 0,
                "review_comments": 5,
                "maintainer_can_modify": false,
                "commits": 3,
                "additions": 3,
                "deletions": 3,
                "changed_files": 3
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:47:14Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894338945",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 73518558,
            "login": "mzebrak",
            "display_login": "mzebrak",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzebrak",
            "avatar_url": "https://avatars.githubusercontent.com/u/73518558?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T09:38:14Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782609811",
                "html_url": "https://github.com/Textualize/textual/issues/3600#issuecomment-1782609811",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "id": 1782609811,
                "node_id": "IC_kwDOFTeDLc5qQHeT",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:38:14Z",
                "updated_at": "2023-10-27T09:38:14Z",
                "author_association": "NONE",
                "body": "> This is fixed and will be in the next release, which should be pretty soon \ud83d\ude42\r\n\r\nThanks for the really quick response! If it already on the current `main`  branch? I might give it a try",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782609811/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:38:15Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894179600",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5740731,
            "login": "darrenburns",
            "display_login": "darrenburns",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darrenburns",
            "avatar_url": "https://avatars.githubusercontent.com/u/5740731?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T09:32:16Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782601399",
                "html_url": "https://github.com/Textualize/textual/issues/3600#issuecomment-1782601399",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "id": 1782601399,
                "node_id": "IC_kwDOFTeDLc5qQFa3",
                "user": {
                    "login": "darrenburns",
                    "id": 5740731,
                    "node_id": "MDQ6VXNlcjU3NDA3MzE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5740731?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/darrenburns",
                    "html_url": "https://github.com/darrenburns",
                    "followers_url": "https://api.github.com/users/darrenburns/followers",
                    "following_url": "https://api.github.com/users/darrenburns/following{/other_user}",
                    "gists_url": "https://api.github.com/users/darrenburns/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/darrenburns/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/darrenburns/subscriptions",
                    "organizations_url": "https://api.github.com/users/darrenburns/orgs",
                    "repos_url": "https://api.github.com/users/darrenburns/repos",
                    "events_url": "https://api.github.com/users/darrenburns/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/darrenburns/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:32:16Z",
                "updated_at": "2023-10-27T09:32:16Z",
                "author_association": "MEMBER",
                "body": "This is fixed and will be in the next release, which should be pretty soon \ud83d\ude42",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782601399/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:32:16Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894134521",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 41898282,
            "login": "github-actions[bot]",
            "display_login": "github-actions",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/41898282?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T09:30:34Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782599011",
                "html_url": "https://github.com/Textualize/textual/issues/3600#issuecomment-1782599011",
                "issue_url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "id": 1782599011,
                "node_id": "IC_kwDOFTeDLc5qQE1j",
                "user": {
                    "login": "github-actions[bot]",
                    "id": 41898282,
                    "node_id": "MDM6Qm90NDE4OTgyODI=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/github-actions%5Bbot%5D",
                    "html_url": "https://github.com/apps/github-actions",
                    "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:30:33Z",
                "updated_at": "2023-10-27T09:30:33Z",
                "author_association": "NONE",
                "body": "Thank you for your issue. Give us a little time to review it.\n\nPS. You might want to check the [FAQ](https://textual.textualize.io/FAQ/) if you haven't done so already.\n\nThis is an automated reply, generated by [FAQtory](https://github.com/willmcgugan/faqtory)",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/comments/1782599011/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:30:34Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32894122967",
        "type": "IssuesEvent",
        "actor": {
            "id": 73518558,
            "login": "mzebrak",
            "display_login": "mzebrak",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mzebrak",
            "avatar_url": "https://avatars.githubusercontent.com/u/73518558?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/Textualize/textual/issues/3600",
                "repository_url": "https://api.github.com/repos/Textualize/textual",
                "labels_url": "https://api.github.com/repos/Textualize/textual/issues/3600/labels{/name}",
                "comments_url": "https://api.github.com/repos/Textualize/textual/issues/3600/comments",
                "events_url": "https://api.github.com/repos/Textualize/textual/issues/3600/events",
                "html_url": "https://github.com/Textualize/textual/issues/3600",
                "id": 1965130669,
                "node_id": "I_kwDOFTeDLc51IYOt",
                "number": 3600,
                "title": "App crashing with `AttributeError: 'LoadingIndicator' object has no attribute '_start_time`",
                "user": {
                    "login": "mzebrak",
                    "id": 73518558,
                    "node_id": "MDQ6VXNlcjczNTE4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/73518558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mzebrak",
                    "html_url": "https://github.com/mzebrak",
                    "followers_url": "https://api.github.com/users/mzebrak/followers",
                    "following_url": "https://api.github.com/users/mzebrak/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mzebrak/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mzebrak/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mzebrak/subscriptions",
                    "organizations_url": "https://api.github.com/users/mzebrak/orgs",
                    "repos_url": "https://api.github.com/users/mzebrak/repos",
                    "events_url": "https://api.github.com/users/mzebrak/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mzebrak/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T09:30:07Z",
                "updated_at": "2023-10-27T09:30:07Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "#### Overview\r\n\r\nConsider the example below.\r\nWhile spamming F1 and F2 keys really fast (in fact, so quickly that my fingers hurt :smile: ), app could be crashed.\r\nI managed to trigger it in such a small example (but it's quite hard to do), but in a real, more complicated application\r\nwhere we use a similar\r\nsolution, it's much easier to get the same error. I have the impression that it depends on the number of registered\r\nwatchers. Reading the callstack, it looks like the reason is that the Loading Indicator was not mounted even though it\r\nshould have been.\r\n\r\nThis is a bug report, so please don't ask me **why**  I'm doing this way. I use **public** interface and **documented**\r\nmethods. The main goal is to use watch and give it an asynchronous method. (we use this in the implementation of our\r\nown `DynamicLabel` widget, which can react to changes on its own (without lots of self.watch calls, we can just use\r\nyield DynamicLabel and pass a callback to it), which I previously wrote about [here](https://github.com/Textualize/textual/discussions/3171))\r\n\r\n\r\n<details>\r\n<summary>if anyone is interested, the source code of DynamicLabel looks like this, but that's not in scope of this bug report:</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\nfrom inspect import isawaitable\r\nfrom typing import TYPE_CHECKING, Any\r\n\r\nfrom textual.widgets import Label\r\n\r\nfrom clive.__private.ui.widgets.clive_widget import CliveWidget\r\n\r\nif TYPE_CHECKING:\r\n    from collections.abc import Callable\r\n\r\n    from textual.app import ComposeResult\r\n    from textual.reactive import Reactable\r\n\r\n\r\nclass DynamicLabel(CliveWidget):\r\n    \"\"\"A label that can be updated dynamically when a reactive variable changes.\"\"\"\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    DynamicLabel {\r\n        height: auto;\r\n        width: auto;\r\n    }\r\n\r\n    DynamicLabel LoadingIndicator {\r\n        min-height: 1;\r\n        min-width: 5;\r\n    }\r\n    \"\"\"\r\n\r\n    def __init__(\r\n            self,\r\n            obj_to_watch: Reactable,\r\n            attribute_name: str,\r\n            callback: Callable[[Any], Any],\r\n    ) -> None:\r\n        super().__init__()\r\n\r\n        self.__label = Label(\"loading...\")\r\n        self.__label.loading = True\r\n\r\n        self.__obj_to_watch = obj_to_watch\r\n        self.__attribute_name = attribute_name\r\n        self.__callback = callback\r\n\r\n    def on_mount(self) -> None:\r\n        def delegate_work(attribute: Any) -> None:\r\n            self.run_worker(self.attribute_changed(attribute))\r\n\r\n        self.watch(self.__obj_to_watch, self.__attribute_name, delegate_work)\r\n\r\n    def compose(self) -> ComposeResult:\r\n        yield self.__label\r\n\r\n    async def attribute_changed(self, attribute: Any) -> None:\r\n        self.__label.loading = True\r\n        value = self.__callback(attribute)\r\n        if isawaitable(value):\r\n            value = await value\r\n        if value != self.__label.renderable:\r\n            self.__label.update(f\"{value}\")\r\n        self.__label.loading = False\r\n```\r\n\r\n</details>\r\n\r\nI think this is related to and have the impression that there is some bug hidden in the reactivity, because we observed\r\nsome [app freezing also](https://github.com/Textualize/textual/issues/3214). I personally think it's also related to https://github.com/Textualize/textual/pull/3065, because we observe issues while bumping the textual version from 0.35.1 to 0.36.0.\r\n\r\n#### The minimal example causing crash, I talk about:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```python\r\nfrom __future__ import annotations\r\n\r\nimport asyncio\r\n\r\nfrom textual.app import App\r\nfrom textual.binding import Binding\r\nfrom textual.reactive import var\r\nfrom textual.screen import Screen\r\nfrom textual.widgets import Footer, Label\r\n\r\n\r\nclass SecondScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f2\", \"change_and_pop\", \"Change state and pop screen\"),\r\n    ]\r\n\r\n    def compose(self):\r\n        yield Label(self.__class__.__name__)\r\n        yield Footer()\r\n\r\n    def action_change_and_pop(self) -> None:\r\n        self.app.data = not self.app.data\r\n        self.app.pop_screen()\r\n\r\n\r\nclass FirstScreen(Screen):\r\n    BINDINGS = [\r\n        Binding(\"f1\", \"push_second_screen\", \"Push second screen\"),\r\n    ]\r\n\r\n    DEFAULT_CSS = \"\"\"\r\n    LoadingIndicator {\r\n        min-width: 3;   # otherwise it won't appear in Label\r\n    }\r\n    \"\"\"\r\n\r\n    def on_mount(self):\r\n        def delegate_work(data: bool) -> None:\r\n            self.run_worker(self.synchronize(data))\r\n\r\n        self.watch(self.app, \"data\", delegate_work)\r\n\r\n    async def synchronize(self, data: bool) -> None:\r\n        label = self.query_one(Label)\r\n\r\n        label.loading = True\r\n        await asyncio.sleep(1)  # assume there is some async work to do\r\n\r\n        label.update(f\"{data=}\")\r\n        label.loading = False\r\n\r\n    def compose(self):\r\n        yield Label()\r\n        yield Footer()\r\n\r\n    def action_push_second_screen(self) -> None:\r\n        self.app.push_screen(SecondScreen())\r\n\r\n\r\nclass CrashingApp(App[None]):\r\n    data = var(True, always_update=True)\r\n\r\n    def on_mount(self) -> None:\r\n        self.push_screen(FirstScreen())\r\n\r\n\r\nCrashingApp().run()\r\n\r\n\r\n```\r\n\r\n</details>\r\n\r\n#### It crashes with such an error message:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n```bash\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2993 in render_lines               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2990 \u2502   \u2502   Returns:                                                                                               \u2502\r\n\u2502   2991 \u2502   \u2502   \u2502   A list of list of segments.                                                                        \u2502\r\n\u2502   2992 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502 \u2771 2993 \u2502   \u2502   strips = self._styles_cache.render_widget(self, crop)                                                  \u2502\r\n\u2502   2994 \u2502   \u2502   return strips                                                                                          \u2502\r\n\u2502   2995 \u2502                                                                                                              \u2502\r\n\u2502   2996 \u2502   def get_style_at(self, x: int, y: int) -> Style:                                                           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                        \u2502\r\n\u2502 \u2502 crop = Region(x=0, y=0, width=3, height=1) \u2502                                                                        \u2502\r\n\u2502 \u2502 self = LoadingIndicator()                  \u2502                                                                        \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:115 in render_widget        \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   112 \u2502   \u2502                                                                                                           \u2502\r\n\u2502   113 \u2502   \u2502   base_background, background = widget._opacity_background_colors                                         \u2502\r\n\u2502   114 \u2502   \u2502   styles = widget.styles                                                                                  \u2502\r\n\u2502 \u2771 115 \u2502   \u2502   strips = self.render(                                                                                   \u2502\r\n\u2502   116 \u2502   \u2502   \u2502   styles,                                                                                             \u2502\r\n\u2502   117 \u2502   \u2502   \u2502   widget.region.size,                                                                                 \u2502\r\n\u2502   118 \u2502   \u2502   \u2502   base_background,                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e           \u2502\r\n\u2502 \u2502      background = Color(38, 38, 38)                                                                     \u2502           \u2502\r\n\u2502 \u2502 base_background = Color(30, 30, 30)                                                                     \u2502           \u2502\r\n\u2502 \u2502 border_subtitle = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502    border_title = None                                                                                  \u2502           \u2502\r\n\u2502 \u2502            crop = Region(x=0, y=0, width=3, height=1)                                                   \u2502           \u2502\r\n\u2502 \u2502            self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                          \u2502           \u2502\r\n\u2502 \u2502          styles = RenderStyles(                                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_color=False,                                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   color=Color(1, 120, 212),                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                            \u2502           \u2502\r\n\u2502 \u2502                   \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   min_height=Scalar(                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   value=1.0,                                                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   ),                                                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color=Color(35, 86, 139),                                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_hover=Color(35, 86, 139),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_color_active=Color(231, 146, 13),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_corner_color=Color(20, 25, 31),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background=Color(20, 25, 31),                                           \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_hover=Color(0, 5, 15),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_background_active=Color(0, 0, 0),                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_vertical=2,                                                        \u2502           \u2502\r\n\u2502 \u2502                   \u2502   scrollbar_size_horizontal=1,                                                      \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_horizontal='center',                                                \u2502           \u2502\r\n\u2502 \u2502                   \u2502   content_align_vertical='middle',                                                  \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_color=Color(255, 255, 255, a=0.87),                                          \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_color=True,                                                             \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_style=Style(underline=True),                                                 \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                    \u2502           \u2502\r\n\u2502 \u2502                   \u2502   auto_link_hover_color=True,                                                       \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_background=Color(1, 120, 212),                                         \u2502           \u2502\r\n\u2502 \u2502                   \u2502   link_hover_style=Style(bold=True, underline=False),                               \u2502           \u2502\r\n\u2502 \u2502                   \u2502   overlay='screen'                                                                  \u2502           \u2502\r\n\u2502 \u2502                   )                                                                                     \u2502           \u2502\r\n\u2502 \u2502          widget = LoadingIndicator()                                                                    \u2502           \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f           \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:214 in render               \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   211 \u2502   \u2502   render_line = self.render_line                                                                          \u2502\r\n\u2502   212 \u2502   \u2502   for y in crop.line_range:                                                                               \u2502\r\n\u2502   213 \u2502   \u2502   \u2502   if is_dirty(y) or y not in self._cache:                                                             \u2502\r\n\u2502 \u2771 214 \u2502   \u2502   \u2502   \u2502   strip = render_line(                                                                            \u2502\r\n\u2502   215 \u2502   \u2502   \u2502   \u2502   \u2502   styles,                                                                                     \u2502\r\n\u2502   216 \u2502   \u2502   \u2502   \u2502   \u2502   y,                                                                                          \u2502\r\n\u2502   217 \u2502   \u2502   \u2502   \u2502   \u2502   size,                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502             _height = 1                                                                                           \u2502 \u2502\r\n\u2502 \u2502           add_strip = <built-in method append of list object at 0x7fb3c9cdc480>                                   \u2502 \u2502\r\n\u2502 \u2502          background = Color(38, 38, 38)                                                                           \u2502 \u2502\r\n\u2502 \u2502     base_background = Color(30, 30, 30)                                                                           \u2502 \u2502\r\n\u2502 \u2502     border_subtitle = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502        border_title = None                                                                                        \u2502 \u2502\r\n\u2502 \u2502             console = <console width=121 ColorSystem.TRUECOLOR>                                                   \u2502 \u2502\r\n\u2502 \u2502        content_size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502                crop = Region(x=0, y=0, width=3, height=1)                                                         \u2502 \u2502\r\n\u2502 \u2502             filters = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502            is_dirty = <built-in method __contains__ of set object at 0x7fb3c9cbb840>                              \u2502 \u2502\r\n\u2502 \u2502             opacity = 1.0                                                                                         \u2502 \u2502\r\n\u2502 \u2502             padding = Spacing(top=0, right=0, bottom=0, left=0)                                                   \u2502 \u2502\r\n\u2502 \u2502 render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                     \u2502 \u2502\r\n\u2502 \u2502         render_line = <bound method StylesCache.render_line of <textual._styles_cache.StylesCache object at       \u2502 \u2502\r\n\u2502 \u2502                       0x7fb3c9c9be80>>                                                                            \u2502 \u2502\r\n\u2502 \u2502                self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                                \u2502 \u2502\r\n\u2502 \u2502                size = Size(width=3, height=1)                                                                     \u2502 \u2502\r\n\u2502 \u2502              strips = []                                                                                          \u2502 \u2502\r\n\u2502 \u2502              styles = RenderStyles(                                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_color=False,                                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   color=Color(1, 120, 212),                                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                  \u2502 \u2502\r\n\u2502 \u2502                       \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   min_height=Scalar(value=1.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color=Color(35, 86, 139),                                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_hover=Color(35, 86, 139),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_color_active=Color(231, 146, 13),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_corner_color=Color(20, 25, 31),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background=Color(20, 25, 31),                                                 \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_hover=Color(0, 5, 15),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_background_active=Color(0, 0, 0),                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_vertical=2,                                                              \u2502 \u2502\r\n\u2502 \u2502                       \u2502   scrollbar_size_horizontal=1,                                                            \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_horizontal='center',                                                      \u2502 \u2502\r\n\u2502 \u2502                       \u2502   content_align_vertical='middle',                                                        \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_color=Color(255, 255, 255, a=0.87),                                                \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_color=True,                                                                   \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_style=Style(underline=True),                                                       \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                          \u2502 \u2502\r\n\u2502 \u2502                       \u2502   auto_link_hover_color=True,                                                             \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_background=Color(1, 120, 212),                                               \u2502 \u2502\r\n\u2502 \u2502                       \u2502   link_hover_style=Style(bold=True, underline=False),                                     \u2502 \u2502\r\n\u2502 \u2502                       \u2502   overlay='screen'                                                                        \u2502 \u2502\r\n\u2502 \u2502                       )                                                                                           \u2502 \u2502\r\n\u2502 \u2502               width = 3                                                                                           \u2502 \u2502\r\n\u2502 \u2502                   y = 0                                                                                           \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/_styles_cache.py:409 in render_line          \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   406 \u2502   \u2502   \u2502   # Content with border and padding (C)                                                               \u2502\r\n\u2502   407 \u2502   \u2502   \u2502   content_y = y - gutter.top                                                                          \u2502\r\n\u2502   408 \u2502   \u2502   \u2502   if content_y < content_height:                                                                      \u2502\r\n\u2502 \u2771 409 \u2502   \u2502   \u2502   \u2502   line = render_content_line(y - gutter.top)                                                      \u2502\r\n\u2502   410 \u2502   \u2502   \u2502   \u2502   line = line.adjust_cell_length(content_width)                                                   \u2502\r\n\u2502   411 \u2502   \u2502   \u2502   else:                                                                                               \u2502\r\n\u2502   412 \u2502   \u2502   \u2502   \u2502   line = [make_blank(content_width, inner)]                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502           background = Color(38, 38, 38)                                                                          \u2502 \u2502\r\n\u2502 \u2502      base_background = Color(30, 30, 30)                                                                          \u2502 \u2502\r\n\u2502 \u2502        border_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  border_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          border_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    border_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         border_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   border_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502      border_subtitle = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502         border_title = None                                                                                       \u2502 \u2502\r\n\u2502 \u2502           border_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502     border_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502              console = <console width=121 ColorSystem.TRUECOLOR>                                                  \u2502 \u2502\r\n\u2502 \u2502       content_height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502         content_size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502        content_width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502            content_y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502           from_color = <bound method Style.from_color of <class 'rich.style.Style'>>                              \u2502 \u2502\r\n\u2502 \u2502               gutter = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502               height = 1                                                                                          \u2502 \u2502\r\n\u2502 \u2502                inner = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#262626',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=38, green=38, blue=38)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502              opacity = 1.0                                                                                        \u2502 \u2502\r\n\u2502 \u2502                outer = Style(                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   bgcolor=Color(                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   '#1e1e1e',                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   ColorType.TRUECOLOR,                                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   triplet=ColorTriplet(red=30, green=30, blue=30)                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   )                                                                                      \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502       outline_bottom = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502 outline_bottom_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502         outline_left = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502   outline_left_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502        outline_right = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502  outline_right_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502          outline_top = ''                                                                                         \u2502 \u2502\r\n\u2502 \u2502    outline_top_color = Color(0, 255, 0)                                                                           \u2502 \u2502\r\n\u2502 \u2502           pad_bottom = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502             pad_left = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502            pad_right = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              pad_top = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2502              padding = Spacing(top=0, right=0, bottom=0, left=0)                                                  \u2502 \u2502\r\n\u2502 \u2502                 post = <function StylesCache.render_line.<locals>.post at 0x7fb3c9e51120>                         \u2502 \u2502\r\n\u2502 \u2502  render_content_line = <bound method Widget.render_line of LoadingIndicator()>                                    \u2502 \u2502\r\n\u2502 \u2502                 self = <textual._styles_cache.StylesCache object at 0x7fb3c9c9be80>                               \u2502 \u2502\r\n\u2502 \u2502                 size = Size(width=3, height=1)                                                                    \u2502 \u2502\r\n\u2502 \u2502               styles = RenderStyles(                                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_color=False,                                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   color=Color(1, 120, 212),                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   background=Color(255, 255, 255, a=0.0392156862745098),                                 \u2502 \u2502\r\n\u2502 \u2502                        \u2502   width=Scalar(value=100.0, unit=<Unit.WIDTH: 4>, percent_unit=<Unit.WIDTH: 4>),         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   height=Scalar(value=100.0, unit=<Unit.HEIGHT: 5>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_width=Scalar(value=3.0, unit=<Unit.CELLS: 1>, percent_unit=<Unit.WIDTH: 4>),       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   min_height=Scalar(                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   value=1.0,                                                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   unit=<Unit.CELLS: 1>,                                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   \u2502   percent_unit=<Unit.WIDTH: 4>                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   ),                                                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color=Color(35, 86, 139),                                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_hover=Color(35, 86, 139),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_color_active=Color(231, 146, 13),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_corner_color=Color(20, 25, 31),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background=Color(20, 25, 31),                                                \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_hover=Color(0, 5, 15),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_background_active=Color(0, 0, 0),                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_vertical=2,                                                             \u2502 \u2502\r\n\u2502 \u2502                        \u2502   scrollbar_size_horizontal=1,                                                           \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_horizontal='center',                                                     \u2502 \u2502\r\n\u2502 \u2502                        \u2502   content_align_vertical='middle',                                                       \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_color=Color(255, 255, 255, a=0.87),                                               \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_color=True,                                                                  \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_style=Style(underline=True),                                                      \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_color=Color(255, 255, 255, a=0.87),                                         \u2502 \u2502\r\n\u2502 \u2502                        \u2502   auto_link_hover_color=True,                                                            \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_background=Color(1, 120, 212),                                              \u2502 \u2502\r\n\u2502 \u2502                        \u2502   link_hover_style=Style(bold=True, underline=False),                                    \u2502 \u2502\r\n\u2502 \u2502                        \u2502   overlay='screen'                                                                       \u2502 \u2502\r\n\u2502 \u2502                        )                                                                                          \u2502 \u2502\r\n\u2502 \u2502                width = 3                                                                                          \u2502 \u2502\r\n\u2502 \u2502                    y = 0                                                                                          \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2977 in render_line                \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2974 \u2502   \u2502   \u2502   A rendered line.                                                                                   \u2502\r\n\u2502   2975 \u2502   \u2502   \"\"\"                                                                                                    \u2502\r\n\u2502   2976 \u2502   \u2502   if self._dirty_regions:                                                                                \u2502\r\n\u2502 \u2771 2977 \u2502   \u2502   \u2502   self._render_content()                                                                             \u2502\r\n\u2502   2978 \u2502   \u2502   try:                                                                                                   \u2502\r\n\u2502   2979 \u2502   \u2502   \u2502   line = self._render_cache.lines[y]                                                                 \u2502\r\n\u2502   2980 \u2502   \u2502   except IndexError:                                                                                     \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2502    y = 0                  \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widget.py:2935 in _render_content            \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   2932 \u2502   def _render_content(self) -> None:                                                                         \u2502\r\n\u2502   2933 \u2502   \u2502   \"\"\"Render all lines.\"\"\"                                                                                \u2502\r\n\u2502   2934 \u2502   \u2502   width, height = self.size                                                                              \u2502\r\n\u2502 \u2771 2935 \u2502   \u2502   renderable = self.render()                                                                             \u2502\r\n\u2502   2936 \u2502   \u2502   renderable = self.post_render(renderable)                                                              \u2502\r\n\u2502   2937 \u2502   \u2502   options = self._console.options.update_dimensions(width, height).update(                               \u2502\r\n\u2502   2938 \u2502   \u2502   \u2502   highlight=False                                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                       \u2502\r\n\u2502 \u2502 height = 1                  \u2502                                                                                       \u2502\r\n\u2502 \u2502   self = LoadingIndicator() \u2502                                                                                       \u2502\r\n\u2502 \u2502  width = 3                  \u2502                                                                                       \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                       \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 /home/mzebrak/.pyenv/versions/clive/lib/python3.10/site-packages/textual/widgets/_loading_indicator.py:75 in render   \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502   72 \u2502   \u2502   self.auto_refresh = 1 / 16                                                                               \u2502\r\n\u2502   73 \u2502                                                                                                                \u2502\r\n\u2502   74 \u2502   def render(self) -> RenderableType:                                                                          \u2502\r\n\u2502 \u2771 75 \u2502   \u2502   elapsed = time() - self._start_time                                                                      \u2502\r\n\u2502   76 \u2502   \u2502   speed = 0.8                                                                                              \u2502\r\n\u2502   77 \u2502   \u2502   dot = \"\\u25cf\"                                                                                           \u2502\r\n\u2502   78 \u2502   \u2502   _, _, background, color = self.colors                                                                    \u2502\r\n\u2502                                                                                                                       \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                                                         \u2502\r\n\u2502 \u2502 self = LoadingIndicator() \u2502                                                                                         \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f                                                                                         \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nAttributeError: 'LoadingIndicator' object has no attribute '_start_time'\r\n```\r\n\r\n</details>\r\n\r\n#### Video\r\n\r\nI know that it's not easy to cause this crash, because you need to have nimble fingers, so I'm posting a video to prove\r\nit:\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n[Screencast from 10-27-2023 10:38:24 AM.webm](https://github.com/Textualize/textual/assets/73518558/4418d9ef-1724-4e17-bac8-2cf61628fc67)\r\n</details>\r\n\r\n#### Textual diagnose\r\n\r\n<details>\r\n<summary>Show</summary>\r\n\r\n<!-- This is valid Markdown, do not quote! -->\r\n\r\n# Textual Diagnostics\r\n\r\n## Versions\r\n\r\n| Name    | Value  |\r\n|---------|--------|\r\n| Textual | 0.40.0 |\r\n| Rich    | 13.3.5 |\r\n\r\n## Python\r\n\r\n| Name           | Value                                                      |\r\n|----------------|------------------------------------------------------------|\r\n| Version        | 3.10.6                                                     |\r\n| Implementation | CPython                                                    |\r\n| Compiler       | GCC 11.3.0                                                 |\r\n| Executable     | /home/mzebrak/.pyenv/versions/3.10.6/envs/clive/bin/python |\r\n\r\n## Operating System\r\n\r\n| Name    | Value                                                            |\r\n|---------|------------------------------------------------------------------|\r\n| System  | Linux                                                            |\r\n| Release | 6.2.6-76060206-generic                                           |\r\n| Version | #202303130630~1679424972~22.04~4a8cde1 SMP PREEMPT_DYNAMIC Tue M |\r\n\r\n## Terminal\r\n\r\n| Name                 | Value          |\r\n|----------------------|----------------|\r\n| Terminal Application | *Unknown*      |\r\n| TERM                 | xterm-256color |\r\n| COLORTERM            | truecolor      |\r\n| FORCE_COLOR          | *Not set*      |\r\n| NO_COLOR             | *Not set*      |\r\n\r\n## Rich Console options\r\n\r\n| Name           | Value                |\r\n|----------------|----------------------|\r\n| size           | width=121, height=32 |\r\n| legacy_windows | False                |\r\n| min_width      | 1                    |\r\n| max_width      | 121                  |\r\n| is_terminal    | True                 |\r\n| encoding       | utf-8                |\r\n| max_height     | 32                   |\r\n| justify        | None                 |\r\n| overflow       | None                 |\r\n| no_wrap        | False                |\r\n| highlight      | None                 |\r\n| markup         | None                 |\r\n| height         | None                 |\r\n\r\n</details>\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/Textualize/textual/issues/3600/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/Textualize/textual/issues/3600/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:30:09Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32889325252",
        "type": "WatchEvent",
        "actor": {
            "id": 2122810,
            "login": "glebdovzhenko",
            "display_login": "glebdovzhenko",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glebdovzhenko",
            "avatar_url": "https://avatars.githubusercontent.com/u/2122810?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T06:04:38Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32887445728",
        "type": "WatchEvent",
        "actor": {
            "id": 55862180,
            "login": "CFiggers",
            "display_login": "CFiggers",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CFiggers",
            "avatar_url": "https://avatars.githubusercontent.com/u/55862180?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T03:47:47Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32886572270",
        "type": "WatchEvent",
        "actor": {
            "id": 4082124,
            "login": "joonyoung-lee",
            "display_login": "joonyoung-lee",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joonyoung-lee",
            "avatar_url": "https://avatars.githubusercontent.com/u/4082124?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T02:36:12Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32886570094",
        "type": "WatchEvent",
        "actor": {
            "id": 8411884,
            "login": "weavingtan",
            "display_login": "weavingtan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/weavingtan",
            "avatar_url": "https://avatars.githubusercontent.com/u/8411884?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T02:36:03Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    },
    {
        "id": "32886550985",
        "type": "WatchEvent",
        "actor": {
            "id": 58254587,
            "login": "Chuanwise",
            "display_login": "Chuanwise",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Chuanwise",
            "avatar_url": "https://avatars.githubusercontent.com/u/58254587?"
        },
        "repo": {
            "id": 355959597,
            "name": "Textualize/textual",
            "url": "https://api.github.com/repos/Textualize/textual"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T02:34:34Z",
        "org": {
            "id": 93378883,
            "login": "Textualize",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/Textualize",
            "avatar_url": "https://avatars.githubusercontent.com/u/93378883?"
        }
    }
]