[
    {
        "id": "32897560843",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1238301,
            "login": "jershell",
            "display_login": "jershell",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jershell",
            "avatar_url": "https://avatars.githubusercontent.com/u/1238301?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/2602",
                "id": 1522664686,
                "node_id": "I_kwDOEX5ujM5awgTu",
                "number": 2602,
                "title": "TextStyle lineHeightStyle not working",
                "user": {
                    "login": "AiHMin",
                    "id": 28809242,
                    "node_id": "MDQ6VXNlcjI4ODA5MjQy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/28809242?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AiHMin",
                    "html_url": "https://github.com/AiHMin",
                    "followers_url": "https://api.github.com/users/AiHMin/followers",
                    "following_url": "https://api.github.com/users/AiHMin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AiHMin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AiHMin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AiHMin/subscriptions",
                    "organizations_url": "https://api.github.com/users/AiHMin/orgs",
                    "repos_url": "https://api.github.com/users/AiHMin/repos",
                    "events_url": "https://api.github.com/users/AiHMin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AiHMin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "igordmn",
                    "id": 5963351,
                    "node_id": "MDQ6VXNlcjU5NjMzNTE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5963351?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/igordmn",
                    "html_url": "https://github.com/igordmn",
                    "followers_url": "https://api.github.com/users/igordmn/followers",
                    "following_url": "https://api.github.com/users/igordmn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/igordmn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/igordmn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/igordmn/subscriptions",
                    "organizations_url": "https://api.github.com/users/igordmn/orgs",
                    "repos_url": "https://api.github.com/users/igordmn/repos",
                    "events_url": "https://api.github.com/users/igordmn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/igordmn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "igordmn",
                        "id": 5963351,
                        "node_id": "MDQ6VXNlcjU5NjMzNTE=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/5963351?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/igordmn",
                        "html_url": "https://github.com/igordmn",
                        "followers_url": "https://api.github.com/users/igordmn/followers",
                        "following_url": "https://api.github.com/users/igordmn/following{/other_user}",
                        "gists_url": "https://api.github.com/users/igordmn/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/igordmn/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/igordmn/subscriptions",
                        "organizations_url": "https://api.github.com/users/igordmn/orgs",
                        "repos_url": "https://api.github.com/users/igordmn/repos",
                        "events_url": "https://api.github.com/users/igordmn/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/igordmn/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-01-06T14:19:57Z",
                "updated_at": "2023-10-27T11:47:29Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "I'm trying to set `lineHeight` and `lineHeightStyle` to `TextStyle` but I found that `lineHeightStyle` doesn't work\r\n\r\nminimum reproduced code: \r\n```kt\r\nText(\r\n     \"Hello World!\",\r\n      style = TextStyle(\r\n          lineHeight = 36.sp,\r\n          lineHeightStyle = LineHeightStyle(\r\n              LineHeightStyle.Alignment.Center, // or any kind of Alignment\r\n              LineHeightStyle.Trim.None\r\n           )\r\n       \r\n)\r\n```\r\n\r\nversion properties:\r\n```properties\r\nkotlin.version=1.7.20\r\nagp.version=7.3.1\r\n# also test 1.2.2\r\ncompose.version=1.3.0-beta04-dev903\r\n```\r\n\r\nActual: \r\n<img width=\"111\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28809242/211029500-c2e029fa-52ea-4af0-94a2-fdeb6e8397ad.png\">\r\n\r\nExpect (use html and css\ud83d\ude02):\r\n<img width=\"116\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28809242/211030050-b5a082d8-8656-43b3-8ffb-fefc19a4eee5.png\">\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782777782",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/2602#issuecomment-1782777782",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/2602",
                "id": 1782777782,
                "node_id": "IC_kwDOEX5ujM5qQwe2",
                "user": {
                    "login": "jershell",
                    "id": 1238301,
                    "node_id": "MDQ6VXNlcjEyMzgzMDE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1238301?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jershell",
                    "html_url": "https://github.com/jershell",
                    "followers_url": "https://api.github.com/users/jershell/followers",
                    "following_url": "https://api.github.com/users/jershell/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jershell/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jershell/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jershell/subscriptions",
                    "organizations_url": "https://api.github.com/users/jershell/orgs",
                    "repos_url": "https://api.github.com/users/jershell/repos",
                    "events_url": "https://api.github.com/users/jershell/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jershell/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:47:28Z",
                "updated_at": "2023-10-27T11:47:28Z",
                "author_association": "NONE",
                "body": "Hello. Any news?",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782777782/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:47:29Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32894560272",
        "type": "WatchEvent",
        "actor": {
            "id": 1920241,
            "login": "csf033",
            "display_login": "csf033",
            "gravatar_id": "",
            "url": "https://api.github.com/users/csf033",
            "avatar_url": "https://avatars.githubusercontent.com/u/1920241?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:46:42Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32894550663",
        "type": "WatchEvent",
        "actor": {
            "id": 107768655,
            "login": "PythonVader",
            "display_login": "PythonVader",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PythonVader",
            "avatar_url": "https://avatars.githubusercontent.com/u/107768655?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:46:20Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32889959757",
        "type": "IssuesEvent",
        "actor": {
            "id": 50293753,
            "login": "JoelKanyi",
            "display_login": "JoelKanyi",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoelKanyi",
            "avatar_url": "https://avatars.githubusercontent.com/u/50293753?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3871",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3871/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3871/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3871/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3871",
                "id": 1964866366,
                "node_id": "I_kwDOEX5ujM51HXs-",
                "number": 3871,
                "title": "Error displaying .xml illustration on Web platform: Uncaught IllegalStateException - Size is unspecified",
                "user": {
                    "login": "JoelKanyi",
                    "id": 50293753,
                    "node_id": "MDQ6VXNlcjUwMjkzNzUz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/50293753?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JoelKanyi",
                    "html_url": "https://github.com/JoelKanyi",
                    "followers_url": "https://api.github.com/users/JoelKanyi/followers",
                    "following_url": "https://api.github.com/users/JoelKanyi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JoelKanyi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JoelKanyi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JoelKanyi/subscriptions",
                    "organizations_url": "https://api.github.com/users/JoelKanyi/orgs",
                    "repos_url": "https://api.github.com/users/JoelKanyi/repos",
                    "events_url": "https://api.github.com/users/JoelKanyi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JoelKanyi/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T06:39:16Z",
                "updated_at": "2023-10-27T06:39:16Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\n When I try displaying an illustration (`.xml` resource) on web platform, I get the following exception on the browser:\r\n \r\n ```\r\n Uncaught runtime errors:\r\n\u00d7\r\nERROR\r\nSize is unspecified\r\nIllegalStateException: Size is unspecified\r\n    at _Size___get_width__impl__58y75t (webpack-internal:///./kotlin/compose-multiplatform-core-ui-geometry.js:890:13)\r\n    at protoOf.draw_j25tpb_k$ (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:3503:27)\r\n    at protoOf.drawDirect_dh0hn_k$ (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:30248:14)\r\n    at protoOf.draw_ntml17_k$ (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:30164:14)\r\n    at drawContainedDrawModifiers (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:35290:17)\r\n    at protoOf.draw_lhjy7e_k$ (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:36272:7)\r\n    at protoOf.performDraw_1j48lz_k$ (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:27018:41)\r\n    at drawContainedDrawModifiers (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:35287:13)\r\n    at eval (webpack-internal:///./kotlin/compose-multiplatform-core-ui.js:35556:7)\r\n    at protoOf.observe_3gku70_k$ (webpack-internal:///./kotlin/compose-multiplatform-core-runtime.js:25319:25)\r\n```\r\n\r\nHere is the `Image` composable where I'm passing the image:\r\n```kotlin\r\nImage(\r\n    painter = painterResource(illustration),\r\n    contentDescription = illustration,\r\n    modifier = Modifier.size(370.dp)\r\n )\r\n```        \r\n\r\n**Affected platforms**\r\n- Web (K/Wasm) - Canvas based API\r\n\r\n**Versions**\r\n- Kotlin version*:  1.9.10\r\n- Compose Multiplatform version*: 1.5.10-beta01\r\n\r\n**Expected behavior**\r\nI expect the image to be displayed, because it is being dispayed on Android, iOS, and Desktop\r\n\r\n**Screenshots**\r\n<img width=\"1503\" alt=\"Screenshot 2023-10-27 at 09 35 58\" src=\"https://github.com/JetBrains/compose-multiplatform/assets/50293753/c391af6a-cecf-4d5f-980d-79af1df04ad8\">\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3871/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3871/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:39:17Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32889692322",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1651939,
            "login": "jbruchanov",
            "display_login": "jbruchanov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbruchanov",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651939?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3850",
                "id": 1956633219,
                "node_id": "I_kwDOEX5ujM50n9qD",
                "number": 3850,
                "title": "[Question] - KMP gradle plugin task inputs of Jvm target vs task deps",
                "user": {
                    "login": "jbruchanov",
                    "id": 1651939,
                    "node_id": "MDQ6VXNlcjE2NTE5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1651939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jbruchanov",
                    "html_url": "https://github.com/jbruchanov",
                    "followers_url": "https://api.github.com/users/jbruchanov/followers",
                    "following_url": "https://api.github.com/users/jbruchanov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jbruchanov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jbruchanov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jbruchanov/subscriptions",
                    "organizations_url": "https://api.github.com/users/jbruchanov/orgs",
                    "repos_url": "https://api.github.com/users/jbruchanov/repos",
                    "events_url": "https://api.github.com/users/jbruchanov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jbruchanov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029654,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjU0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/wait%20for%20reply",
                        "name": "wait for reply",
                        "color": "7F16E9",
                        "default": false,
                        "description": "Further information is requested"
                    },
                    {
                        "id": 2566130015,
                        "node_id": "MDU6TGFiZWwyNTY2MTMwMDE1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/question",
                        "name": "question",
                        "color": "d4c5f9",
                        "default": true,
                        "description": "Not a bug, but question or comment"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-23T08:31:07Z",
                "updated_at": "2023-10-27T06:25:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi, \r\nsorry for rather a question as I'm not totally sure if it's a bug or not, but I couldn't find any good answer in KMP docs nor on web.\r\n\r\nI've built a simple gradle plugin generating some resources.\r\nThe project setup is simple Android studio KMP template. (android/ios/shared)\r\n\r\nMy gradle plugin looks basically like this\r\n```\r\nclass MyPlugin : Plugin<Project> { \r\n   override fun apply(target: Project) {\r\n       val myTaskProvider = target.tasks.register(\"myTask\", GenerateResTask::class.java) { task ->\r\n            //some config\r\n            //output is `build/myPlugin`\r\n       }\r\n\r\n      //then I add my myTaskProvider to be as a srcDir for commonMain.resources\r\n      val commonMainSourceSets = target\r\n      .extensions\r\n      .findByType(KotlinMultiplatformExtension::class.java)\r\n      ?.sourceSets\r\n      ?.findByName(\"commonMain\")\r\n      ?.also {\r\n          println(\"Adding myTaskProvider\")\r\n          it.resources.srcDir(myTaskProvider )\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nThis works as expected (at least from app point of view). \r\nApp runs, I can read the generated resources and I can see in build logs \"Adding myTaskProvider\".\r\n\r\nThen I added a jvm target into shared/build.gradle\r\n\r\nsimply as \r\n```\r\nkotlin {\r\n     jvm()\r\n     sourceSets {\r\n          jvmMain {\r\n          }\r\n     }\r\n}\r\n```\r\nAdding jvm target added \"allTests\" task.\r\nApp building still works fine, though if I try to run the `./gradlew :shared:allTests` it fails with \r\n\r\n```\r\nA problem was found with the configuration of task ':shared:processDebugJavaRes' (type 'ProcessJavaResTask').\r\n  - Gradle detected a problem with the following location: '.....\\build\\myPlugin'.\r\n  \r\nReason: Task ':shared:processDebugJavaRes' uses this output of task ':shared:myTask' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.\r\n```\r\n\r\nIf I add explicit rules that `processDebugJavaRes.mustRunAfter(\"myTask\")` (also for processReleaseJavaRes), then it works.\r\n\r\nAnd my questions:\r\n- isn't this some sort of a bug ? I'd assume that if commonResources depends on something, java test config should inherit it ?\r\n- if it's not a bug, how to do it correctly ? Based on my understanding ^ error indicates invalid setup for input/output of gradle tasks. Why is it not enough to have `commonMain resources depends on myTask` for allTests task ?\r\n- only `ProcessJavaResTask` class I can find is `com.android.build.gradle.internal.tasks.ProcessJavaResTask`, I'm wondering how is now android gradle plugin task involved in `allTests` task which has been added with jvm target\r\n- is there some documentation/anything what I can read and understand relations in KMP plugin tasks ?\r\n\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782365827",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3850#issuecomment-1782365827",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850",
                "id": 1782365827,
                "node_id": "IC_kwDOEX5ujM5qPL6D",
                "user": {
                    "login": "jbruchanov",
                    "id": 1651939,
                    "node_id": "MDQ6VXNlcjE2NTE5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1651939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jbruchanov",
                    "html_url": "https://github.com/jbruchanov",
                    "followers_url": "https://api.github.com/users/jbruchanov/followers",
                    "following_url": "https://api.github.com/users/jbruchanov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jbruchanov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jbruchanov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jbruchanov/subscriptions",
                    "organizations_url": "https://api.github.com/users/jbruchanov/orgs",
                    "repos_url": "https://api.github.com/users/jbruchanov/repos",
                    "events_url": "https://api.github.com/users/jbruchanov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jbruchanov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T06:25:00Z",
                "updated_at": "2023-10-27T06:25:00Z",
                "author_association": "NONE",
                "body": "@dima-avdeev-jb \r\nHi, sorry for unclear question. \r\nMaybe this is not the best place to ask the question ?\r\nIt's related specifically about `KMP gradle plugin`\r\n\r\nI've built simple gradle plugin which generates some resources and my question is how to correctly hook it up into KMP build process, in particular step for testing.\r\n\r\nin example ^^^, my task with\r\n```\r\n@get:OutputDirectory\r\nabstract val outputDir: Property<File>\r\n```    \r\nis added as another resource` srcDir this way\r\n```\r\nval commonMainSourceSets = target\r\n      .extensions\r\n      .findByType(KotlinMultiplatformExtension::class.java)\r\n      ?.sourceSets\r\n      ?.findByName(\"commonMain\")\r\n      ?.also {\r\n          println(\"Adding myTaskProvider\")\r\n          it.resources.srcDir(myTaskProvider)\r\n      }\r\n```\r\n^ this helps for android/jvm from app perspective. (I can read in the app my generated resource).\r\n\r\nand now the issue I'm facing...\r\nHaving jvm target adds new `allTests` gradle task.\r\nAnd if I run the `allTests` task it fails with the \r\n```\r\nReason: Task ':shared:processDebugJavaRes' uses this output of task ':shared:myTask' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.\r\n```\r\n\r\nso it seems like simply doing\r\n```\r\nsourceSets.commonMain.resources.srcDir(myTask)\r\n```\r\nisn't enough for the allTests task..\r\n\r\nAnd I'd like to know if I'm doing something wrong, because it seems to be rather a bug if running the app works, but running the test task fails\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782365827/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T06:25:01Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887953131",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3858",
                "id": 1958310018,
                "node_id": "I_kwDOEX5ujM50uXCC",
                "number": 3858,
                "title": "Errors occurred while compiling module.",
                "user": {
                    "login": "adiba",
                    "id": 23532559,
                    "node_id": "MDQ6VXNlcjIzNTMyNTU5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/23532559?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/adiba",
                    "html_url": "https://github.com/adiba",
                    "followers_url": "https://api.github.com/users/adiba/followers",
                    "following_url": "https://api.github.com/users/adiba/following{/other_user}",
                    "gists_url": "https://api.github.com/users/adiba/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/adiba/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/adiba/subscriptions",
                    "organizations_url": "https://api.github.com/users/adiba/orgs",
                    "repos_url": "https://api.github.com/users/adiba/repos",
                    "events_url": "https://api.github.com/users/adiba/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/adiba/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-24T01:41:47Z",
                "updated_at": "2023-10-27T04:28:54Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nBuild error, \"Errors occurred while compiling module\", see full log below.\r\n\r\n**Affected platforms**\r\n- Desktop\r\n\r\n**Versions**\r\n- Kotlin version*: 1.8.20\r\n- Compose Multiplatform version*: 1.4.1\r\n- OS version(s)* (required for Desktop and iOS issues): Ubuntu 22.04\r\n- OS architecture (x86 or arm64): x86_64 / amd64\r\n- JDK (for desktop issues): corretto-18 (18.0.2)\r\n- IntelliJ: 2023.2.1, IU-232.9559.62\r\n\r\n**To Reproduce**\r\n1. Create a Compose project using the plugin with SDK `corretto-18`.\r\n2. Select _Load Gradle Project_ in the popup.\r\n3. Run MainKt from the editor using the run button next to `fun main()`\r\n\r\n**Expected behavior**\r\nBuild should not fail.\r\n\r\n**Additional context**\r\nInvalidate Caches & Restart did not help, neither did deleting the gradle directory.\r\n\r\nIn the two `*.gradle.kts` files, almost every word has red squiggly lines \"Unresolved reference\".\r\n\r\nEDIT: Running `./gradlew run` in the IntelliJ terminal with Ctrl+Enter works fine.\r\n\r\n**The Error**\r\n```\r\nKotlin: [Internal Error] org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering\r\nFile being compiled: /home/my_username/projects/compose-demo/src/main/kotlin/Main.kt\r\nThe root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:51)\r\n\tat org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)\r\n\tat org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:237)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:68)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:55)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:41)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:147)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:147)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:43)\r\n\tat org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:357)\r\n\tat org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen(KotlinToJVMBytecodeCompiler.kt:347)\r\n\tat org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli(KotlinToJVMBytecodeCompiler.kt:122)\r\n\tat org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.compileModules$cli$default(KotlinToJVMBytecodeCompiler.kt:47)\r\n\tat org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:168)\r\n\tat org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:53)\r\n\tat org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:100)\r\n\tat org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:46)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)\r\n\tat org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1423)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)\r\n\tat java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:714)\r\n\tat java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:598)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:844)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:721)\r\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:400)\r\n\tat java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:720)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1583)\r\nCaused by: java.lang.RuntimeException: Exception while generating code for:\r\nFUN name:App visibility:public modality:FINAL <> () returnType:kotlin.Unit\r\n  annotations:\r\n    Composable\r\n    Preview\r\n  BLOCK_BODY\r\n    VAR PROPERTY_DELEGATE name:text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> [val]\r\n      CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n        <T>: androidx.compose.runtime.MutableState<kotlin.String>\r\n        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=LAMBDA\r\n          COMPOSITE type=kotlin.Unit origin=null\r\n          FUNCTION_REFERENCE 'private final fun App$lambda$0 (): androidx.compose.runtime.MutableState<kotlin.String> declared in <root>.MainKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.String>> origin=INLINE_LAMBDA reflectionTarget=null\r\n    CALL 'public final fun MaterialTheme$default (colors: androidx.compose.material.Colors?, typography: androidx.compose.material.Typography?, shapes: androidx.compose.material.Shapes?, content: @[Composable] kotlin.Function0<kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material.MaterialThemeKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL\r\n      colors: COMPOSITE type=androidx.compose.material.Colors? origin=DEFAULT_VALUE\r\n        CONST Null type=androidx.compose.material.Colors? value=null\r\n      typography: COMPOSITE type=androidx.compose.material.Typography? origin=DEFAULT_VALUE\r\n        CONST Null type=androidx.compose.material.Typography? value=null\r\n      shapes: COMPOSITE type=androidx.compose.material.Shapes? origin=DEFAULT_VALUE\r\n        CONST Null type=androidx.compose.material.Shapes? value=null\r\n      content: BLOCK type=<root>.MainKt.App.<no name provided> origin=null\r\n        CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.jvm.internal.Lambda; kotlin.Function0<kotlin.Unit>]\r\n          $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>\r\n          CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> ($text$delegate:androidx.compose.runtime.MutableState<kotlin.String>) returnType:<root>.MainKt.App.<no name provided> [primary]\r\n            VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$text$delegate index:0 type:androidx.compose.runtime.MutableState<kotlin.String>\r\n            BLOCK_BODY\r\n              SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE\r\n                receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided> declared in <root>.MainKt.App.<no name provided>' type=<root>.MainKt.App.<no name provided> origin=null\r\n                value: GET_VAR '$text$delegate: androidx.compose.runtime.MutableState<kotlin.String> declared in <root>.MainKt.App.<no name provided>.<init>' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n              DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> (arity: kotlin.Int) declared in kotlin.jvm.internal.Lambda'\r\n                arity: CONST Int type=kotlin.Int value=0\r\n              BLOCK type=kotlin.Unit origin=null\r\n          FUN name:invoke visibility:public modality:FINAL <> ($this:<root>.MainKt.App.<no name provided>) returnType:kotlin.Unit\r\n            overridden:\r\n              public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0\r\n            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>\r\n            BLOCK_BODY\r\n              CALL 'public final fun Button$default (onClick: kotlin.Function0<kotlin.Unit>, modifier: androidx.compose.ui.Modifier?, enabled: kotlin.Boolean, interactionSource: androidx.compose.foundation.interaction.MutableInteractionSource?, elevation: androidx.compose.material.ButtonElevation?, shape: androidx.compose.ui.graphics.Shape?, border: androidx.compose.foundation.BorderStroke?, colors: androidx.compose.material.ButtonColors?, contentPadding: androidx.compose.foundation.layout.PaddingValues?, content: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material.ButtonKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL\r\n                onClick: BLOCK type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                  CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.jvm.internal.Lambda; kotlin.Function0<kotlin.Unit>]\r\n                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>.invoke.<no name provided>\r\n                    CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> ($text$delegate:androidx.compose.runtime.MutableState<kotlin.String>) returnType:<root>.MainKt.App.<no name provided>.invoke.<no name provided> [primary]\r\n                      VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$text$delegate index:0 type:androidx.compose.runtime.MutableState<kotlin.String>\r\n                      BLOCK_BODY\r\n                        SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE\r\n                          receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided>.invoke.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                          value: GET_VAR '$text$delegate: androidx.compose.runtime.MutableState<kotlin.String> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.<init>' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n                        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> (arity: kotlin.Int) declared in kotlin.jvm.internal.Lambda'\r\n                          arity: CONST Int type=kotlin.Int value=0\r\n                        BLOCK type=kotlin.Unit origin=null\r\n                    FUN name:invoke visibility:public modality:FINAL <> ($this:<root>.MainKt.App.<no name provided>.invoke.<no name provided>) returnType:kotlin.Unit\r\n                      overridden:\r\n                        public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0\r\n                      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>.invoke.<no name provided>\r\n                      BLOCK_BODY\r\n                        CALL 'public final fun access$App$lambda$2 ($text$delegate: androidx.compose.runtime.MutableState<kotlin.String>, value: kotlin.String): kotlin.Unit declared in <root>.MainKt' type=kotlin.Unit origin=EQ\r\n                          $text$delegate: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n                            receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided>.invoke.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                          value: CONST String type=kotlin.String value=\"Hello, Desktop!\"\r\n                    FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]\r\n                    FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:<root>.MainKt.App.<no name provided>.invoke.<no name provided>) returnType:kotlin.Any?\r\n                      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>.invoke.<no name provided>\r\n                      EXPRESSION_BODY\r\n                        RETURN type=kotlin.Nothing from='public open fun invoke (): kotlin.Any? declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>'\r\n                          CALL 'public final fun invoke (): kotlin.Unit declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION\r\n                            $this: GET_VAR '<this>: <root>.MainKt.App.<no name provided>.invoke.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                  CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($text$delegate: androidx.compose.runtime.MutableState<kotlin.String>) [primary] declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                    $text$delegate: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n                      receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided> origin=null\r\n                modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.ui.Modifier? value=null\r\n                enabled: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE\r\n                  CONST Boolean type=kotlin.Boolean value=false\r\n                interactionSource: COMPOSITE type=androidx.compose.foundation.interaction.MutableInteractionSource? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.foundation.interaction.MutableInteractionSource? value=null\r\n                elevation: COMPOSITE type=androidx.compose.material.ButtonElevation? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.material.ButtonElevation? value=null\r\n                shape: COMPOSITE type=androidx.compose.ui.graphics.Shape? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.ui.graphics.Shape? value=null\r\n                border: COMPOSITE type=androidx.compose.foundation.BorderStroke? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.foundation.BorderStroke? value=null\r\n                colors: COMPOSITE type=androidx.compose.material.ButtonColors? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.material.ButtonColors? value=null\r\n                contentPadding: COMPOSITE type=androidx.compose.foundation.layout.PaddingValues? origin=DEFAULT_VALUE\r\n                  CONST Null type=androidx.compose.foundation.layout.PaddingValues? value=null\r\n                content: BLOCK type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                  CLASS LAMBDA_IMPL CLASS name:<no name provided> modality:FINAL visibility:public/*package*/ superTypes:[kotlin.jvm.internal.Lambda; kotlin.Function1<androidx.compose.foundation.layout.RowScope, kotlin.Unit>]\r\n                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>.invoke.<no name provided>\r\n                    CONSTRUCTOR GENERATED_MEMBER_IN_CALLABLE_REFERENCE visibility:public/*package*/ <> ($text$delegate:androidx.compose.runtime.MutableState<kotlin.String>) returnType:<root>.MainKt.App.<no name provided>.invoke.<no name provided> [primary]\r\n                      VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$text$delegate index:0 type:androidx.compose.runtime.MutableState<kotlin.String>\r\n                      BLOCK_BODY\r\n                        SET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=kotlin.Unit origin=INITIALIZER_OF_FIELD_FOR_CAPTURED_VALUE\r\n                          receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided>.invoke.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                          value: GET_VAR '$text$delegate: androidx.compose.runtime.MutableState<kotlin.String> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.<init>' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n                        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> (arity: kotlin.Int) declared in kotlin.jvm.internal.Lambda'\r\n                          arity: CONST Int type=kotlin.Int value=1\r\n                        BLOCK type=kotlin.Unit origin=null\r\n                    FUN name:invoke visibility:public modality:FINAL <> ($this:<root>.MainKt.App.<no name provided>.invoke.<no name provided>, $this$Button:androidx.compose.foundation.layout.RowScope) returnType:kotlin.Unit\r\n                      overridden:\r\n                        public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1\r\n                      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>.invoke.<no name provided>\r\n                      VALUE_PARAMETER name:$this$Button index:0 type:androidx.compose.foundation.layout.RowScope\r\n                      BLOCK_BODY\r\n                        CALL 'public final fun Text-wnt91jo$default (text: kotlin.String, modifier: androidx.compose.ui.Modifier?, color: androidx.compose.ui.graphics.Color, fontSize: androidx.compose.ui.unit.TextUnit, fontStyle: androidx.compose.ui.text.font.FontStyle?, fontWeight: androidx.compose.ui.text.font.FontWeight?, fontFamily: androidx.compose.ui.text.font.FontFamily?, letterSpacing: androidx.compose.ui.unit.TextUnit, textDecoration: androidx.compose.ui.text.style.TextDecoration?, textAlign: androidx.compose.ui.text.style.TextAlign?, lineHeight: androidx.compose.ui.unit.TextUnit, overflow: androidx.compose.ui.text.style.TextOverflow, softWrap: kotlin.Boolean, maxLines: kotlin.Int, minLines: kotlin.Int, onTextLayout: kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>?, style: androidx.compose.ui.text.TextStyle?, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material.TextKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL\r\n                          text: CALL 'public final fun access$App$lambda$1 ($text$delegate: androidx.compose.runtime.MutableState<kotlin.String>): kotlin.String declared in <root>.MainKt' type=kotlin.String origin=GET_LOCAL_PROPERTY\r\n                            $text$delegate: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n                              receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided>.invoke.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                          modifier: COMPOSITE type=androidx.compose.ui.Modifier? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.Modifier? value=null\r\n                          color: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE\r\n                            CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null\r\n                              <T>: kotlin.Long\r\n                              <R>: androidx.compose.ui.graphics.Color\r\n                              v: CONST Long type=kotlin.Long value=0\r\n                          fontSize: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE\r\n                            CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null\r\n                              <T>: kotlin.Long\r\n                              <R>: androidx.compose.ui.unit.TextUnit\r\n                              v: CONST Long type=kotlin.Long value=0\r\n                          fontStyle: COMPOSITE type=androidx.compose.ui.text.font.FontStyle? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.text.font.FontStyle? value=null\r\n                          fontWeight: COMPOSITE type=androidx.compose.ui.text.font.FontWeight? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.text.font.FontWeight? value=null\r\n                          fontFamily: COMPOSITE type=androidx.compose.ui.text.font.FontFamily? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.text.font.FontFamily? value=null\r\n                          letterSpacing: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE\r\n                            CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null\r\n                              <T>: kotlin.Long\r\n                              <R>: androidx.compose.ui.unit.TextUnit\r\n                              v: CONST Long type=kotlin.Long value=0\r\n                          textDecoration: COMPOSITE type=androidx.compose.ui.text.style.TextDecoration? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.text.style.TextDecoration? value=null\r\n                          textAlign: COMPOSITE type=androidx.compose.ui.text.style.TextAlign? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.text.style.TextAlign? value=null\r\n                          lineHeight: COMPOSITE type=androidx.compose.ui.unit.TextUnit origin=DEFAULT_VALUE\r\n                            CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.unit.TextUnit origin=null\r\n                              <T>: kotlin.Long\r\n                              <R>: androidx.compose.ui.unit.TextUnit\r\n                              v: CONST Long type=kotlin.Long value=0\r\n                          overflow: COMPOSITE type=androidx.compose.ui.text.style.TextOverflow origin=DEFAULT_VALUE\r\n                            CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.text.style.TextOverflow origin=null\r\n                              <T>: kotlin.Int\r\n                              <R>: androidx.compose.ui.text.style.TextOverflow\r\n                              v: CONST Int type=kotlin.Int value=0\r\n                          softWrap: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE\r\n                            CONST Boolean type=kotlin.Boolean value=false\r\n                          maxLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE\r\n                            CONST Int type=kotlin.Int value=0\r\n                          minLines: COMPOSITE type=kotlin.Int origin=DEFAULT_VALUE\r\n                            CONST Int type=kotlin.Int value=0\r\n                          onTextLayout: COMPOSITE type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? origin=DEFAULT_VALUE\r\n                            CONST Null type=kotlin.Function1<androidx.compose.ui.text.TextLayoutResult, kotlin.Unit>? value=null\r\n                          style: COMPOSITE type=androidx.compose.ui.text.TextStyle? origin=DEFAULT_VALUE\r\n                            CONST Null type=androidx.compose.ui.text.TextStyle? value=null\r\n                          $mask0: CONST Int type=kotlin.Int value=131070\r\n                          $handler: CONST Null type=kotlin.Any? value=null\r\n                    FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]\r\n                    FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:<root>.MainKt.App.<no name provided>.invoke.<no name provided>, p1:kotlin.Any?) returnType:kotlin.Any?\r\n                      $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>.invoke.<no name provided>\r\n                      VALUE_PARAMETER BRIDGE name:p1 index:0 type:kotlin.Any?\r\n                      EXPRESSION_BODY\r\n                        RETURN type=kotlin.Nothing from='public open fun invoke (p1: kotlin.Any?): kotlin.Any? declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>'\r\n                          CALL 'public final fun invoke ($this$Button: androidx.compose.foundation.layout.RowScope): kotlin.Unit declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION\r\n                            $this: GET_VAR '<this>: <root>.MainKt.App.<no name provided>.invoke.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                            $this$Button: TYPE_OP type=androidx.compose.foundation.layout.RowScope origin=IMPLICIT_CAST typeOperand=androidx.compose.foundation.layout.RowScope\r\n                              GET_VAR 'p1: kotlin.Any? declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>.invoke' type=kotlin.Any? origin=null\r\n                  CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($text$delegate: androidx.compose.runtime.MutableState<kotlin.String>) [primary] declared in <root>.MainKt.App.<no name provided>.invoke.<no name provided>' type=<root>.MainKt.App.<no name provided>.invoke.<no name provided> origin=null\r\n                    $text$delegate: GET_FIELD 'FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n                      receiver: GET_VAR '<this>: <root>.MainKt.App.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided> origin=null\r\n                $mask0: CONST Int type=kotlin.Int value=510\r\n                $handler: CONST Null type=kotlin.Any? value=null\r\n          FIELD FIELD_FOR_CAPTURED_VALUE name:$text$delegate type:androidx.compose.runtime.MutableState<kotlin.String> visibility:public/*package*/ [final]\r\n          FUN BRIDGE name:invoke visibility:public modality:OPEN <> ($this:<root>.MainKt.App.<no name provided>) returnType:kotlin.Any?\r\n            $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.MainKt.App.<no name provided>\r\n            EXPRESSION_BODY\r\n              RETURN type=kotlin.Nothing from='public open fun invoke (): kotlin.Any? declared in <root>.MainKt.App.<no name provided>'\r\n                CALL 'public final fun invoke (): kotlin.Unit declared in <root>.MainKt.App.<no name provided>' type=kotlin.Unit origin=BRIDGE_DELEGATION\r\n                  $this: GET_VAR '<this>: <root>.MainKt.App.<no name provided> declared in <root>.MainKt.App.<no name provided>.invoke' type=<root>.MainKt.App.<no name provided> origin=null\r\n        CONSTRUCTOR_CALL 'public/*package*/ constructor <init> ($text$delegate: androidx.compose.runtime.MutableState<kotlin.String>) [primary] declared in <root>.MainKt.App.<no name provided>' type=<root>.MainKt.App.<no name provided> origin=null\r\n          $text$delegate: GET_VAR 'val text$delegate: androidx.compose.runtime.MutableState<kotlin.String> [val] declared in <root>.MainKt.App' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\n      $mask0: CONST Int type=kotlin.Int value=7\r\n      $handler: CONST Null type=kotlin.Any? value=null\r\n\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:51)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:43)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:390)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:407)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)\r\n\tat org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:44)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.FileLoweringPhaseAdapter.invoke(PhaseBuilders.kt:120)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.FileLoweringPhaseAdapter.invoke(PhaseBuilders.kt:116)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:147)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)\r\n\t... 34 more\r\nCaused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun remember <T> (calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.String> origin=null\r\nMethod: null\r\nFile is unknown\r\nThe root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)\r\n\tat org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:67)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:159)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:31)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:659)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:136)\r\n\tat org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:26)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:789)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:136)\r\n\tat org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:38)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:594)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:599)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:136)\r\n\tat org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:25)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:251)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:122)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)\r\n\t... 44 more\r\nCaused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/ComposablesKt;.remember(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;\r\n\tat org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)\r\n\tat org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)\r\n\tat org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)\r\n\tat org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:45)\r\n\tat org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:53)\r\n\t... 59 more\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782273083",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3858#issuecomment-1782273083",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3858",
                "id": 1782273083,
                "node_id": "IC_kwDOEX5ujM5qO1Q7",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T04:28:54Z",
                "updated_at": "2023-10-27T04:28:54Z",
                "author_association": "COLLABORATOR",
                "body": "Thanks for Issue.\r\nCan you please provide a minimal reproducible sample project on GitHub?\r\nThe best way is to shrink your project to minimal possible code and still reproduce this bug.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782273083/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:28:54Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887753713",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 11316434,
            "login": "BassirouRabo",
            "display_login": "BassirouRabo",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BassirouRabo",
            "avatar_url": "https://avatars.githubusercontent.com/u/11316434?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3800",
                "id": 1936301417,
                "node_id": "I_kwDOEX5ujM5zaZ1p",
                "number": 3800,
                "title": "iOS app using compose cannot find the image resources",
                "user": {
                    "login": "BitByAVampire",
                    "id": 147002455,
                    "node_id": "U_kgDOCMMUVw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/147002455?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/BitByAVampire",
                    "html_url": "https://github.com/BitByAVampire",
                    "followers_url": "https://api.github.com/users/BitByAVampire/followers",
                    "following_url": "https://api.github.com/users/BitByAVampire/following{/other_user}",
                    "gists_url": "https://api.github.com/users/BitByAVampire/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/BitByAVampire/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/BitByAVampire/subscriptions",
                    "organizations_url": "https://api.github.com/users/BitByAVampire/orgs",
                    "repos_url": "https://api.github.com/users/BitByAVampire/repos",
                    "events_url": "https://api.github.com/users/BitByAVampire/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/BitByAVampire/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029654,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjU0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/wait%20for%20reply",
                        "name": "wait for reply",
                        "color": "7F16E9",
                        "default": false,
                        "description": "Further information is requested"
                    },
                    {
                        "id": 2566130015,
                        "node_id": "MDU6TGFiZWwyNTY2MTMwMDE1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/question",
                        "name": "question",
                        "color": "d4c5f9",
                        "default": true,
                        "description": "Not a bug, but question or comment"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "dima-avdeev-jb",
                        "id": 99798741,
                        "node_id": "U_kgDOBfLO1Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/dima-avdeev-jb",
                        "html_url": "https://github.com/dima-avdeev-jb",
                        "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                        "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                        "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                        "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                        "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 11,
                "created_at": "2023-10-10T21:32:18Z",
                "updated_at": "2023-10-27T04:13:01Z",
                "closed_at": "2023-10-23T20:40:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nGetting this error when launching app in simulator `Uncaught Kotlin exception: org.jetbrains.compose.resources.MissingResourceException: Missing resource with path: img.xml`\r\n\r\n**Affected platforms**\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*:  latest\r\n- Compose Multiplatform version*:  1.5.3\r\n- OS version(s)* (required for Desktop and iOS issues): 13.6 for macos, ios 16.4 simulator\r\n- OS architecture (x86 or arm64): arm64 (my mac is M1)\r\n- JDK (for desktop issues): \r\n\r\n**To Reproduce**\r\nI am building an xcframework using \r\n```\r\nkotlinArtifacts {\r\n    Native.XCFramework(\"SharedNetwork\") {\r\n        targets(iosX64, iosArm64, iosSimulatorArm64)\r\n        setModules(\r\n\r\n            project(\":shared:data:network\"),\r\n            project(\":shared:data:impl\"),\r\n            project(\":shared:data:protocols\"),\r\n            project(\":shared:data:storage\"),\r\n            project(\":shared:feature:onboarding\"),\r\n            project(\":shared:feature:more\")\r\n        )\r\n        kotlinOptions {\r\n            //settings used to silence the errors raised by compiler due to crashkios.\r\n            // see: https://github.com/touchlab/CrashKiOS/issues/46\r\n            freeCompilerArgs = listOf(\r\n                \"-linker-options\",\r\n                \"-U _FIRCLSExceptionRecordNSException \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRStackFrame \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRExceptionModel \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRCrashlytics\"\r\n            )\r\n        }\r\n    }\r\n}\r\n```\r\nthere are images under data/onboarding/src/commonMain/resources. **edit:  the path is shared/**feature**/onboarding/src/commonMain/resources\r\nI add the framework to my app as a pod (it's a manual pod integration where we build the xcframework and then add it as a cocoapod separately). When we build and then open the app (from Xcode) the app crashes with above error logged. \r\n**Expected behavior**\r\nThe image should be found and displayed in the compose UI. \r\n\r\n**Additional context**\r\nAfter doing some digging I was wondering if the `MacOSResourceImpl` in `Resource.macos.kt` is the problem, because i see the code that looks for the image is \r\n```\r\nval contentsAtPath: NSData? = NSFileManager.defaultManager().run {\r\n            //todo in future bundle resources with app and use all sourceSets (skikoMain, nativeMain)\r\n            contentsAtPath(\"$currentDirectoryPath/src/macosMain/resources/$path\")\r\n                ?: contentsAtPath(\"$currentDirectoryPath/src/commonMain/resources/$path\")\r\n        }\r\n\r\n``` \r\nand the file path being searched is definitely not anywhere in the built xcode project.. ",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782262190",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3800#issuecomment-1782262190",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800",
                "id": 1782262190,
                "node_id": "IC_kwDOEX5ujM5qOymu",
                "user": {
                    "login": "BassirouRabo",
                    "id": 11316434,
                    "node_id": "MDQ6VXNlcjExMzE2NDM0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11316434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/BassirouRabo",
                    "html_url": "https://github.com/BassirouRabo",
                    "followers_url": "https://api.github.com/users/BassirouRabo/followers",
                    "following_url": "https://api.github.com/users/BassirouRabo/following{/other_user}",
                    "gists_url": "https://api.github.com/users/BassirouRabo/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/BassirouRabo/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/BassirouRabo/subscriptions",
                    "organizations_url": "https://api.github.com/users/BassirouRabo/orgs",
                    "repos_url": "https://api.github.com/users/BassirouRabo/repos",
                    "events_url": "https://api.github.com/users/BassirouRabo/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/BassirouRabo/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T04:13:00Z",
                "updated_at": "2023-10-27T04:13:00Z",
                "author_association": "NONE",
                "body": "> @BassirouRabo Since Compose `1.5.3` we don't need to set `spec.resources = ...` in CocoaPods. Resources will work without it.\r\n\r\nI think the issue is when mixing with the resource library `moko` or `libres`, enabling one of those pluging override the `compose resource` directory ",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782262190/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:13:01Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887718332",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3800",
                "id": 1936301417,
                "node_id": "I_kwDOEX5ujM5zaZ1p",
                "number": 3800,
                "title": "iOS app using compose cannot find the image resources",
                "user": {
                    "login": "BitByAVampire",
                    "id": 147002455,
                    "node_id": "U_kgDOCMMUVw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/147002455?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/BitByAVampire",
                    "html_url": "https://github.com/BitByAVampire",
                    "followers_url": "https://api.github.com/users/BitByAVampire/followers",
                    "following_url": "https://api.github.com/users/BitByAVampire/following{/other_user}",
                    "gists_url": "https://api.github.com/users/BitByAVampire/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/BitByAVampire/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/BitByAVampire/subscriptions",
                    "organizations_url": "https://api.github.com/users/BitByAVampire/orgs",
                    "repos_url": "https://api.github.com/users/BitByAVampire/repos",
                    "events_url": "https://api.github.com/users/BitByAVampire/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/BitByAVampire/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029654,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjU0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/wait%20for%20reply",
                        "name": "wait for reply",
                        "color": "7F16E9",
                        "default": false,
                        "description": "Further information is requested"
                    },
                    {
                        "id": 2566130015,
                        "node_id": "MDU6TGFiZWwyNTY2MTMwMDE1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/question",
                        "name": "question",
                        "color": "d4c5f9",
                        "default": true,
                        "description": "Not a bug, but question or comment"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "dima-avdeev-jb",
                        "id": 99798741,
                        "node_id": "U_kgDOBfLO1Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/dima-avdeev-jb",
                        "html_url": "https://github.com/dima-avdeev-jb",
                        "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                        "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                        "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                        "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                        "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 10,
                "created_at": "2023-10-10T21:32:18Z",
                "updated_at": "2023-10-27T04:10:07Z",
                "closed_at": "2023-10-23T20:40:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nGetting this error when launching app in simulator `Uncaught Kotlin exception: org.jetbrains.compose.resources.MissingResourceException: Missing resource with path: img.xml`\r\n\r\n**Affected platforms**\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*:  latest\r\n- Compose Multiplatform version*:  1.5.3\r\n- OS version(s)* (required for Desktop and iOS issues): 13.6 for macos, ios 16.4 simulator\r\n- OS architecture (x86 or arm64): arm64 (my mac is M1)\r\n- JDK (for desktop issues): \r\n\r\n**To Reproduce**\r\nI am building an xcframework using \r\n```\r\nkotlinArtifacts {\r\n    Native.XCFramework(\"SharedNetwork\") {\r\n        targets(iosX64, iosArm64, iosSimulatorArm64)\r\n        setModules(\r\n\r\n            project(\":shared:data:network\"),\r\n            project(\":shared:data:impl\"),\r\n            project(\":shared:data:protocols\"),\r\n            project(\":shared:data:storage\"),\r\n            project(\":shared:feature:onboarding\"),\r\n            project(\":shared:feature:more\")\r\n        )\r\n        kotlinOptions {\r\n            //settings used to silence the errors raised by compiler due to crashkios.\r\n            // see: https://github.com/touchlab/CrashKiOS/issues/46\r\n            freeCompilerArgs = listOf(\r\n                \"-linker-options\",\r\n                \"-U _FIRCLSExceptionRecordNSException \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRStackFrame \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRExceptionModel \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRCrashlytics\"\r\n            )\r\n        }\r\n    }\r\n}\r\n```\r\nthere are images under data/onboarding/src/commonMain/resources. **edit:  the path is shared/**feature**/onboarding/src/commonMain/resources\r\nI add the framework to my app as a pod (it's a manual pod integration where we build the xcframework and then add it as a cocoapod separately). When we build and then open the app (from Xcode) the app crashes with above error logged. \r\n**Expected behavior**\r\nThe image should be found and displayed in the compose UI. \r\n\r\n**Additional context**\r\nAfter doing some digging I was wondering if the `MacOSResourceImpl` in `Resource.macos.kt` is the problem, because i see the code that looks for the image is \r\n```\r\nval contentsAtPath: NSData? = NSFileManager.defaultManager().run {\r\n            //todo in future bundle resources with app and use all sourceSets (skikoMain, nativeMain)\r\n            contentsAtPath(\"$currentDirectoryPath/src/macosMain/resources/$path\")\r\n                ?: contentsAtPath(\"$currentDirectoryPath/src/commonMain/resources/$path\")\r\n        }\r\n\r\n``` \r\nand the file path being searched is definitely not anywhere in the built xcode project.. ",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782260262",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3800#issuecomment-1782260262",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800",
                "id": 1782260262,
                "node_id": "IC_kwDOEX5ujM5qOyIm",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T04:10:07Z",
                "updated_at": "2023-10-27T04:10:07Z",
                "author_association": "COLLABORATOR",
                "body": "@BassirouRabo Since Compose `1.5.3` we don't need to set `spec.resources = ...` in CocoaPods. Resources will work without it.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782260262/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:10:07Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887706676",
        "type": "WatchEvent",
        "actor": {
            "id": 72718339,
            "login": "NakiriYuuzu",
            "display_login": "NakiriYuuzu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NakiriYuuzu",
            "avatar_url": "https://avatars.githubusercontent.com/u/72718339?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T04:09:11Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887701876",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3800",
                "id": 1936301417,
                "node_id": "I_kwDOEX5ujM5zaZ1p",
                "number": 3800,
                "title": "iOS app using compose cannot find the image resources",
                "user": {
                    "login": "BitByAVampire",
                    "id": 147002455,
                    "node_id": "U_kgDOCMMUVw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/147002455?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/BitByAVampire",
                    "html_url": "https://github.com/BitByAVampire",
                    "followers_url": "https://api.github.com/users/BitByAVampire/followers",
                    "following_url": "https://api.github.com/users/BitByAVampire/following{/other_user}",
                    "gists_url": "https://api.github.com/users/BitByAVampire/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/BitByAVampire/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/BitByAVampire/subscriptions",
                    "organizations_url": "https://api.github.com/users/BitByAVampire/orgs",
                    "repos_url": "https://api.github.com/users/BitByAVampire/repos",
                    "events_url": "https://api.github.com/users/BitByAVampire/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/BitByAVampire/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029654,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjU0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/wait%20for%20reply",
                        "name": "wait for reply",
                        "color": "7F16E9",
                        "default": false,
                        "description": "Further information is requested"
                    },
                    {
                        "id": 2566130015,
                        "node_id": "MDU6TGFiZWwyNTY2MTMwMDE1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/question",
                        "name": "question",
                        "color": "d4c5f9",
                        "default": true,
                        "description": "Not a bug, but question or comment"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "dima-avdeev-jb",
                        "id": 99798741,
                        "node_id": "U_kgDOBfLO1Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/dima-avdeev-jb",
                        "html_url": "https://github.com/dima-avdeev-jb",
                        "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                        "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                        "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                        "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                        "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-10-10T21:32:18Z",
                "updated_at": "2023-10-27T04:08:47Z",
                "closed_at": "2023-10-23T20:40:14Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nGetting this error when launching app in simulator `Uncaught Kotlin exception: org.jetbrains.compose.resources.MissingResourceException: Missing resource with path: img.xml`\r\n\r\n**Affected platforms**\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*:  latest\r\n- Compose Multiplatform version*:  1.5.3\r\n- OS version(s)* (required for Desktop and iOS issues): 13.6 for macos, ios 16.4 simulator\r\n- OS architecture (x86 or arm64): arm64 (my mac is M1)\r\n- JDK (for desktop issues): \r\n\r\n**To Reproduce**\r\nI am building an xcframework using \r\n```\r\nkotlinArtifacts {\r\n    Native.XCFramework(\"SharedNetwork\") {\r\n        targets(iosX64, iosArm64, iosSimulatorArm64)\r\n        setModules(\r\n\r\n            project(\":shared:data:network\"),\r\n            project(\":shared:data:impl\"),\r\n            project(\":shared:data:protocols\"),\r\n            project(\":shared:data:storage\"),\r\n            project(\":shared:feature:onboarding\"),\r\n            project(\":shared:feature:more\")\r\n        )\r\n        kotlinOptions {\r\n            //settings used to silence the errors raised by compiler due to crashkios.\r\n            // see: https://github.com/touchlab/CrashKiOS/issues/46\r\n            freeCompilerArgs = listOf(\r\n                \"-linker-options\",\r\n                \"-U _FIRCLSExceptionRecordNSException \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRStackFrame \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRExceptionModel \" +\r\n                        \"-U _OBJC_CLASS_\\$_FIRCrashlytics\"\r\n            )\r\n        }\r\n    }\r\n}\r\n```\r\nthere are images under data/onboarding/src/commonMain/resources. **edit:  the path is shared/**feature**/onboarding/src/commonMain/resources\r\nI add the framework to my app as a pod (it's a manual pod integration where we build the xcframework and then add it as a cocoapod separately). When we build and then open the app (from Xcode) the app crashes with above error logged. \r\n**Expected behavior**\r\nThe image should be found and displayed in the compose UI. \r\n\r\n**Additional context**\r\nAfter doing some digging I was wondering if the `MacOSResourceImpl` in `Resource.macos.kt` is the problem, because i see the code that looks for the image is \r\n```\r\nval contentsAtPath: NSData? = NSFileManager.defaultManager().run {\r\n            //todo in future bundle resources with app and use all sourceSets (skikoMain, nativeMain)\r\n            contentsAtPath(\"$currentDirectoryPath/src/macosMain/resources/$path\")\r\n                ?: contentsAtPath(\"$currentDirectoryPath/src/commonMain/resources/$path\")\r\n        }\r\n\r\n``` \r\nand the file path being searched is definitely not anywhere in the built xcode project.. ",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782259290",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3800#issuecomment-1782259290",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3800",
                "id": 1782259290,
                "node_id": "IC_kwDOEX5ujM5qOx5a",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T04:08:47Z",
                "updated_at": "2023-10-27T04:08:47Z",
                "author_association": "COLLABORATOR",
                "body": "@BassirouRabo It is generate with this ` kotlin(\"native.cocoapods\")` Gradle plugin https://github.com/JetBrains/compose-multiplatform/blob/master/examples/cocoapods-ios-example/shared/build.gradle.kts#L3",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782259290/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:08:47Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887675581",
        "type": "IssuesEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3849",
                "id": 1956096652,
                "node_id": "I_kwDOEX5ujM50l6qM",
                "number": 3849,
                "title": "[jvm] HorizontalPager can't have snap scroll",
                "user": {
                    "login": "codlab",
                    "id": 3624067,
                    "node_id": "MDQ6VXNlcjM2MjQwNjc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3624067?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/codlab",
                    "html_url": "https://github.com/codlab",
                    "followers_url": "https://api.github.com/users/codlab/followers",
                    "following_url": "https://api.github.com/users/codlab/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codlab/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/codlab/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codlab/subscriptions",
                    "organizations_url": "https://api.github.com/users/codlab/orgs",
                    "repos_url": "https://api.github.com/users/codlab/repos",
                    "events_url": "https://api.github.com/users/codlab/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/codlab/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-22T23:20:46Z",
                "updated_at": "2023-10-27T04:06:39Z",
                "closed_at": "2023-10-27T04:06:38Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "edit : changed the title to be more explicit about the issue which makes more sense on desktops\r\n\r\n**Describe the bug**\r\nScrolling using the trackpad won't pan on entire page : stopping mid \"scroll\" will keep the pages in a weird state where it doesn't magnet to the new \"currentPage\"\r\n\r\n\r\nedit : removing this part : _Using the HorizontalPager on jvm artifact will have this weird behaviour that no drag interaction can change pages. On Mac for instance, only either switching pages programmatically or scrolling on the trackpad will work. Shouldn't a mouse drag be working just like on mobile platforms ?_\r\n\r\n**Affected platforms**\r\nSelect one of the platforms below:\r\n- Desktop\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.10\r\n- Compose Multiplatform version*: 1.5.10-beta02\r\n- OS version(s)* (required for Desktop and iOS issues): MacOS\r\n- OS architecture (x86 or arm64): arm64\r\n- JDK (for desktop issues): JDK shipped with Android Studio Hedgehog | 2023.1.1 Beta 5\r\n\r\n**To Reproduce**\r\nSteps and/or the code snippet to reproduce the behavior:\r\n1. Create a project which will have a screen with a HorizontalPager holding few dummy pages\r\n2. run\r\n3. Scroll horizontally the pager using the mouse or trackpads\r\n4. the pages won't snap scroll and just stop animating in between pages\r\n\r\n**Expected behavior**\r\nWhen scrolling using the trackpad, it should land to \"full\" currentPage instead of just be in a weird interstate\r\nedit : removed _It should be possible to scroll just on the other mobile platforms._ \r\n\r\n**Additional context**\r\nI took a quick snippet from another issue just to check if it wasn't my implementation which was introducing such issues and could reproduce the issue right away\r\n\r\n```\r\n    val state = rememberPagerState(\r\n        pageCount = { 3 }\r\n    )\r\n\r\n    ...\r\n    HorizontalPager(\r\n        modifier = Modifier.fillMaxSize(),\r\n        state = state,\r\n    ) { index ->\r\n        when (index) {\r\n            0 -> Box(modifier = Modifier.fillMaxSize().background(Color.Red))\r\n            1 -> Box(modifier = Modifier.fillMaxSize().background(Color.Black))\r\n            2 -> Box(modifier = Modifier.fillMaxSize().background(Color.Yellow))\r\n        }\r\n    }\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:06:39Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887675521",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3849",
                "id": 1956096652,
                "node_id": "I_kwDOEX5ujM50l6qM",
                "number": 3849,
                "title": "[jvm] HorizontalPager can't have snap scroll",
                "user": {
                    "login": "codlab",
                    "id": 3624067,
                    "node_id": "MDQ6VXNlcjM2MjQwNjc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/3624067?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/codlab",
                    "html_url": "https://github.com/codlab",
                    "followers_url": "https://api.github.com/users/codlab/followers",
                    "following_url": "https://api.github.com/users/codlab/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codlab/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/codlab/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codlab/subscriptions",
                    "organizations_url": "https://api.github.com/users/codlab/orgs",
                    "repos_url": "https://api.github.com/users/codlab/repos",
                    "events_url": "https://api.github.com/users/codlab/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/codlab/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-22T23:20:46Z",
                "updated_at": "2023-10-27T04:06:39Z",
                "closed_at": "2023-10-27T04:06:38Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "edit : changed the title to be more explicit about the issue which makes more sense on desktops\r\n\r\n**Describe the bug**\r\nScrolling using the trackpad won't pan on entire page : stopping mid \"scroll\" will keep the pages in a weird state where it doesn't magnet to the new \"currentPage\"\r\n\r\n\r\nedit : removing this part : _Using the HorizontalPager on jvm artifact will have this weird behaviour that no drag interaction can change pages. On Mac for instance, only either switching pages programmatically or scrolling on the trackpad will work. Shouldn't a mouse drag be working just like on mobile platforms ?_\r\n\r\n**Affected platforms**\r\nSelect one of the platforms below:\r\n- Desktop\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.10\r\n- Compose Multiplatform version*: 1.5.10-beta02\r\n- OS version(s)* (required for Desktop and iOS issues): MacOS\r\n- OS architecture (x86 or arm64): arm64\r\n- JDK (for desktop issues): JDK shipped with Android Studio Hedgehog | 2023.1.1 Beta 5\r\n\r\n**To Reproduce**\r\nSteps and/or the code snippet to reproduce the behavior:\r\n1. Create a project which will have a screen with a HorizontalPager holding few dummy pages\r\n2. run\r\n3. Scroll horizontally the pager using the mouse or trackpads\r\n4. the pages won't snap scroll and just stop animating in between pages\r\n\r\n**Expected behavior**\r\nWhen scrolling using the trackpad, it should land to \"full\" currentPage instead of just be in a weird interstate\r\nedit : removed _It should be possible to scroll just on the other mobile platforms._ \r\n\r\n**Additional context**\r\nI took a quick snippet from another issue just to check if it wasn't my implementation which was introducing such issues and could reproduce the issue right away\r\n\r\n```\r\n    val state = rememberPagerState(\r\n        pageCount = { 3 }\r\n    )\r\n\r\n    ...\r\n    HorizontalPager(\r\n        modifier = Modifier.fillMaxSize(),\r\n        state = state,\r\n    ) { index ->\r\n        when (index) {\r\n            0 -> Box(modifier = Modifier.fillMaxSize().background(Color.Red))\r\n            1 -> Box(modifier = Modifier.fillMaxSize().background(Color.Black))\r\n            2 -> Box(modifier = Modifier.fillMaxSize().background(Color.Yellow))\r\n        }\r\n    }\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782257649",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3849#issuecomment-1782257649",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3849",
                "id": 1782257649,
                "node_id": "IC_kwDOEX5ujM5qOxfx",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T04:06:38Z",
                "updated_at": "2023-10-27T04:06:38Z",
                "author_association": "COLLABORATOR",
                "body": "Thanks to @alexzhirkevich \r\nIt is duplicate of Issue https://github.com/JetBrains/compose-multiplatform/issues/3447\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782257649/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:06:39Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32887654449",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3850",
                "id": 1956633219,
                "node_id": "I_kwDOEX5ujM50n9qD",
                "number": 3850,
                "title": "[Question] - KMP gradle plugin task inputs of Jvm target vs task deps",
                "user": {
                    "login": "jbruchanov",
                    "id": 1651939,
                    "node_id": "MDQ6VXNlcjE2NTE5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1651939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jbruchanov",
                    "html_url": "https://github.com/jbruchanov",
                    "followers_url": "https://api.github.com/users/jbruchanov/followers",
                    "following_url": "https://api.github.com/users/jbruchanov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jbruchanov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jbruchanov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jbruchanov/subscriptions",
                    "organizations_url": "https://api.github.com/users/jbruchanov/orgs",
                    "repos_url": "https://api.github.com/users/jbruchanov/repos",
                    "events_url": "https://api.github.com/users/jbruchanov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jbruchanov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2566130015,
                        "node_id": "MDU6TGFiZWwyNTY2MTMwMDE1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/question",
                        "name": "question",
                        "color": "d4c5f9",
                        "default": true,
                        "description": "Not a bug, but question or comment"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-23T08:31:07Z",
                "updated_at": "2023-10-27T04:04:57Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Hi, \r\nsorry for rather a question as I'm not totally sure if it's a bug or not, but I couldn't find any good answer in KMP docs nor on web.\r\n\r\nI've built a simple gradle plugin generating some resources.\r\nThe project setup is simple Android studio KMP template. (android/ios/shared)\r\n\r\nMy gradle plugin looks basically like this\r\n```\r\nclass MyPlugin : Plugin<Project> { \r\n   override fun apply(target: Project) {\r\n       val myTaskProvider = target.tasks.register(\"myTask\", GenerateResTask::class.java) { task ->\r\n            //some config\r\n            //output is `build/myPlugin`\r\n       }\r\n\r\n      //then I add my myTaskProvider to be as a srcDir for commonMain.resources\r\n      val commonMainSourceSets = target\r\n      .extensions\r\n      .findByType(KotlinMultiplatformExtension::class.java)\r\n      ?.sourceSets\r\n      ?.findByName(\"commonMain\")\r\n      ?.also {\r\n          println(\"Adding myTaskProvider\")\r\n          it.resources.srcDir(myTaskProvider )\r\n      }\r\n   }\r\n}\r\n```\r\n\r\nThis works as expected (at least from app point of view). \r\nApp runs, I can read the generated resources and I can see in build logs \"Adding myTaskProvider\".\r\n\r\nThen I added a jvm target into shared/build.gradle\r\n\r\nsimply as \r\n```\r\nkotlin {\r\n     jvm()\r\n     sourceSets {\r\n          jvmMain {\r\n          }\r\n     }\r\n}\r\n```\r\nAdding jvm target added \"allTests\" task.\r\nApp building still works fine, though if I try to run the `./gradlew :shared:allTests` it fails with \r\n\r\n```\r\nA problem was found with the configuration of task ':shared:processDebugJavaRes' (type 'ProcessJavaResTask').\r\n  - Gradle detected a problem with the following location: '.....\\build\\myPlugin'.\r\n  \r\nReason: Task ':shared:processDebugJavaRes' uses this output of task ':shared:myTask' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.\r\n```\r\n\r\nIf I add explicit rules that `processDebugJavaRes.mustRunAfter(\"myTask\")` (also for processReleaseJavaRes), then it works.\r\n\r\nAnd my questions:\r\n- isn't this some sort of a bug ? I'd assume that if commonResources depends on something, java test config should inherit it ?\r\n- if it's not a bug, how to do it correctly ? Based on my understanding ^ error indicates invalid setup for input/output of gradle tasks. Why is it not enough to have `commonMain resources depends on myTask` for allTests task ?\r\n- only `ProcessJavaResTask` class I can find is `com.android.build.gradle.internal.tasks.ProcessJavaResTask`, I'm wondering how is now android gradle plugin task involved in `allTests` task which has been added with jvm target\r\n- is there some documentation/anything what I can read and understand relations in KMP plugin tasks ?\r\n\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782256233",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3850#issuecomment-1782256233",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3850",
                "id": 1782256233,
                "node_id": "IC_kwDOEX5ujM5qOxJp",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T04:04:57Z",
                "updated_at": "2023-10-27T04:04:57Z",
                "author_association": "COLLABORATOR",
                "body": "Hello! This issue tracker is about Compose Multiplatform framework.\r\nDo you have some problems with resources related to Compose for Desktop with JVM ?\r\nIn context of your question it is hard to understand what do you want to achive in result. What application are you developing?",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1782256233/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T04:04:58Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32886628143",
        "type": "WatchEvent",
        "actor": {
            "id": 43654611,
            "login": "KevinnZou",
            "display_login": "KevinnZou",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KevinnZou",
            "avatar_url": "https://avatars.githubusercontent.com/u/43654611?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T02:40:50Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32886122800",
        "type": "IssuesEvent",
        "actor": {
            "id": 43654611,
            "login": "KevinnZou",
            "display_login": "KevinnZou",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KevinnZou",
            "avatar_url": "https://avatars.githubusercontent.com/u/43654611?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3870",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3870/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3870/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3870/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3870",
                "id": 1964632123,
                "node_id": "I_kwDOEX5ujM51Geg7",
                "number": 3870,
                "title": "Does not print all level of logs of iOSApp in Android Studio",
                "user": {
                    "login": "KevinnZou",
                    "id": 43654611,
                    "node_id": "MDQ6VXNlcjQzNjU0NjEx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/43654611?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/KevinnZou",
                    "html_url": "https://github.com/KevinnZou",
                    "followers_url": "https://api.github.com/users/KevinnZou/followers",
                    "following_url": "https://api.github.com/users/KevinnZou/following{/other_user}",
                    "gists_url": "https://api.github.com/users/KevinnZou/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/KevinnZou/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/KevinnZou/subscriptions",
                    "organizations_url": "https://api.github.com/users/KevinnZou/orgs",
                    "repos_url": "https://api.github.com/users/KevinnZou/repos",
                    "events_url": "https://api.github.com/users/KevinnZou/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/KevinnZou/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T02:01:00Z",
                "updated_at": "2023-10-27T02:01:00Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nhttps://github.com/touchlab/Kermit/issues/380\r\n\r\nWhen running the iOSApp from AS, only logs with a level above INFO will be printed. However, if we run it in Xcode, we can see all the logs. I believe this is a bug related to the KMM AS plugin, but I am unable to find where to submit the issue. Therefore, I am submitting it here.\r\n\r\n**Affected platforms**\r\nSelect one of the platforms below:\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.10\r\n- Compose Multiplatform version*: 1.5.3\r\n\r\n**To Reproduce**\r\nYou can directly test this project https://github.com/KevinnZou/compose-webview-multiplatform. Start by running it on desktop or Android, and then run iOSApp to observe the differences in the logs.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3870/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3870/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T02:01:02Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32885567528",
        "type": "WatchEvent",
        "actor": {
            "id": 19502034,
            "login": "changhexuefei",
            "display_login": "changhexuefei",
            "gravatar_id": "",
            "url": "https://api.github.com/users/changhexuefei",
            "avatar_url": "https://avatars.githubusercontent.com/u/19502034?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T01:18:52Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32878578232",
        "type": "WatchEvent",
        "actor": {
            "id": 53515096,
            "login": "Yollty",
            "display_login": "Yollty",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yollty",
            "avatar_url": "https://avatars.githubusercontent.com/u/53515096?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T18:38:17Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32876594250",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3840",
                "id": 1953739700,
                "node_id": "I_kwDOEX5ujM50c7O0",
                "number": 3840,
                "title": "App Store verification fails with \"The app references non-public symbols\"",
                "user": {
                    "login": "sergei-mikhailovskii-idf",
                    "id": 64923802,
                    "node_id": "MDQ6VXNlcjY0OTIzODAy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/64923802?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/sergei-mikhailovskii-idf",
                    "html_url": "https://github.com/sergei-mikhailovskii-idf",
                    "followers_url": "https://api.github.com/users/sergei-mikhailovskii-idf/followers",
                    "following_url": "https://api.github.com/users/sergei-mikhailovskii-idf/following{/other_user}",
                    "gists_url": "https://api.github.com/users/sergei-mikhailovskii-idf/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/sergei-mikhailovskii-idf/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/sergei-mikhailovskii-idf/subscriptions",
                    "organizations_url": "https://api.github.com/users/sergei-mikhailovskii-idf/orgs",
                    "repos_url": "https://api.github.com/users/sergei-mikhailovskii-idf/repos",
                    "events_url": "https://api.github.com/users/sergei-mikhailovskii-idf/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/sergei-mikhailovskii-idf/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 2609884110,
                        "node_id": "MDU6TGFiZWwyNjA5ODg0MTEw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/skia",
                        "name": "skia",
                        "color": "A665A1",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4650581701,
                        "node_id": "LA_kwDOEX5ujM8AAAABFTI-xQ",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/ios",
                        "name": "ios",
                        "color": "0653EC",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-20T07:53:04Z",
                "updated_at": "2023-10-26T17:17:16Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nI implemented a library which uses Compose Multiplatform to display logs and added it to the iOS project. It builds fine, but when I upload the app to the App Store, lane fails with the following error:\r\n\r\n`ERROR: [ContentDelivery.Uploader] Asset validation failed (11) The app references non-public symbols in Payload/AppName.app/AppName: _ubidi_close, _ubidi_getDirection, _ubidi_getLength, _ubidi_getLevelAt, _ubidi_openSized, _ubidi_reorderVisual, _ubidi_setPara, _ubrk_clone, _ubrk_current, _ubrk_first, _ubrk_getRuleStatus, _ubrk_next, _uloc_getDefault, _uloc_toLanguageTag, _uscript_getScript (ID: b685f704-5d49-42c6-b138-5d9237029ac2)\r\n`\r\n\r\nI googled this problem and it seems that there's some problem with SKIA library (https://groups.google.com/g/skia-discuss/c/eY229SYmHbA)\r\n\r\nSo there's a question - how can I fix this issue? Thanks in advance for the answer!\r\n\r\n**Affected platforms**\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.10 \r\n- Compose Multiplatform version*:  1.5.3\r\n- OS version(s)* (required for Desktop and iOS issues): any\r\n- OS architecture (x86 or arm64): arm64\r\n\r\n**To Reproduce**\r\n1) Try to upload the app to the App Store\r\n2) See result\r\n\r\n**Expected behavior**\r\nSuccessfull upload of the IPA to the App Store\r\n\r\n**Additional context**\r\nXCode version - 15.0\r\nHere are libs I used\r\n\r\n```\r\nval commonMain by getting {\r\n            dependencies {\r\n                implementation(compose.runtime)\r\n                implementation(compose.material3)\r\n                implementation(compose.materialIconsExtended)\r\n                implementation(\"io.realm.kotlin:library-base:1.11.0\")\r\n                implementation(\"com.arkivanov.decompose:extensions-compose-jetbrains:2.1.2-compose-experimental\")\r\n                implementation(\"com.arkivanov.decompose:decompose:2.1.2\")\r\n                implementation(\"org.jetbrains.kotlinx:kotlinx-datetime:0.4.1\")\r\n            }\r\n        }\r\n        val androidMain by getting {\r\n            dependencies {\r\n                implementation(\"androidx.activity:activity-compose:1.8.0\")\r\n            }\r\n        }\r\n        val iosSimulatorArm64Main by getting\r\n        val iosMain by getting {\r\n            dependsOn(commonMain)\r\n            iosSimulatorArm64Main.dependsOn(this)\r\n        }\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1781526410",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3840#issuecomment-1781526410",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840",
                "id": 1781526410,
                "node_id": "IC_kwDOEX5ujM5qL--K",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T17:17:16Z",
                "updated_at": "2023-10-26T17:17:16Z",
                "author_association": "COLLABORATOR",
                "body": "@sergei-mikhailovskii-idf Can you please check validation in Xcode when building archive?\r\n\r\nTo do so you need folow these steps:\r\n - Go to Product -> Archive\r\n \r\n \r\n<img width=\"274\" alt=\"image\" src=\"https://github.com/JetBrains/compose-multiplatform/assets/99798741/df854793-efd3-40bc-a820-4850175c4c11\">\r\n\r\n\r\n - Don't use Xcode Cloud and start proccess of Archive again.\r\n \r\n  - Wait some time while archiving\r\n  \r\n   - Choose Validate App\r\n   \r\n   \r\n<img width=\"789\" alt=\"image\" src=\"https://github.com/JetBrains/compose-multiplatform/assets/99798741/84fd63e1-f388-4ae2-a54a-862db3b414ed\">\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1781526410/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:17:17Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32876514151",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 99798741,
            "login": "dima-avdeev-jb",
            "display_login": "dima-avdeev-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dima-avdeev-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/99798741?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3840",
                "id": 1953739700,
                "node_id": "I_kwDOEX5ujM50c7O0",
                "number": 3840,
                "title": "App Store verification fails with \"The app references non-public symbols\"",
                "user": {
                    "login": "sergei-mikhailovskii-idf",
                    "id": 64923802,
                    "node_id": "MDQ6VXNlcjY0OTIzODAy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/64923802?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/sergei-mikhailovskii-idf",
                    "html_url": "https://github.com/sergei-mikhailovskii-idf",
                    "followers_url": "https://api.github.com/users/sergei-mikhailovskii-idf/followers",
                    "following_url": "https://api.github.com/users/sergei-mikhailovskii-idf/following{/other_user}",
                    "gists_url": "https://api.github.com/users/sergei-mikhailovskii-idf/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/sergei-mikhailovskii-idf/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/sergei-mikhailovskii-idf/subscriptions",
                    "organizations_url": "https://api.github.com/users/sergei-mikhailovskii-idf/orgs",
                    "repos_url": "https://api.github.com/users/sergei-mikhailovskii-idf/repos",
                    "events_url": "https://api.github.com/users/sergei-mikhailovskii-idf/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/sergei-mikhailovskii-idf/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 2609884110,
                        "node_id": "MDU6TGFiZWwyNjA5ODg0MTEw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/skia",
                        "name": "skia",
                        "color": "A665A1",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 4650581701,
                        "node_id": "LA_kwDOEX5ujM8AAAABFTI-xQ",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/ios",
                        "name": "ios",
                        "color": "0653EC",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-20T07:53:04Z",
                "updated_at": "2023-10-26T17:14:16Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nI implemented a library which uses Compose Multiplatform to display logs and added it to the iOS project. It builds fine, but when I upload the app to the App Store, lane fails with the following error:\r\n\r\n`ERROR: [ContentDelivery.Uploader] Asset validation failed (11) The app references non-public symbols in Payload/AppName.app/AppName: _ubidi_close, _ubidi_getDirection, _ubidi_getLength, _ubidi_getLevelAt, _ubidi_openSized, _ubidi_reorderVisual, _ubidi_setPara, _ubrk_clone, _ubrk_current, _ubrk_first, _ubrk_getRuleStatus, _ubrk_next, _uloc_getDefault, _uloc_toLanguageTag, _uscript_getScript (ID: b685f704-5d49-42c6-b138-5d9237029ac2)\r\n`\r\n\r\nI googled this problem and it seems that there's some problem with SKIA library (https://groups.google.com/g/skia-discuss/c/eY229SYmHbA)\r\n\r\nSo there's a question - how can I fix this issue? Thanks in advance for the answer!\r\n\r\n**Affected platforms**\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.10 \r\n- Compose Multiplatform version*:  1.5.3\r\n- OS version(s)* (required for Desktop and iOS issues): any\r\n- OS architecture (x86 or arm64): arm64\r\n\r\n**To Reproduce**\r\n1) Try to upload the app to the App Store\r\n2) See result\r\n\r\n**Expected behavior**\r\nSuccessfull upload of the IPA to the App Store\r\n\r\n**Additional context**\r\nXCode version - 15.0\r\nHere are libs I used\r\n\r\n```\r\nval commonMain by getting {\r\n            dependencies {\r\n                implementation(compose.runtime)\r\n                implementation(compose.material3)\r\n                implementation(compose.materialIconsExtended)\r\n                implementation(\"io.realm.kotlin:library-base:1.11.0\")\r\n                implementation(\"com.arkivanov.decompose:extensions-compose-jetbrains:2.1.2-compose-experimental\")\r\n                implementation(\"com.arkivanov.decompose:decompose:2.1.2\")\r\n                implementation(\"org.jetbrains.kotlinx:kotlinx-datetime:0.4.1\")\r\n            }\r\n        }\r\n        val androidMain by getting {\r\n            dependencies {\r\n                implementation(\"androidx.activity:activity-compose:1.8.0\")\r\n            }\r\n        }\r\n        val iosSimulatorArm64Main by getting\r\n        val iosMain by getting {\r\n            dependsOn(commonMain)\r\n            iosSimulatorArm64Main.dependsOn(this)\r\n        }\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1781522342",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3840#issuecomment-1781522342",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3840",
                "id": 1781522342,
                "node_id": "IC_kwDOEX5ujM5qL9-m",
                "user": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T17:14:15Z",
                "updated_at": "2023-10-26T17:14:15Z",
                "author_association": "COLLABORATOR",
                "body": "I checked validation process with Xcode 15\r\nAll fine\r\n\r\n<img width=\"750\" alt=\"image\" src=\"https://github.com/JetBrains/compose-multiplatform/assets/99798741/ce0718f9-013b-4047-9b86-9709b7123131\">\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1781522342/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T17:14:16Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32876369227",
        "type": "WatchEvent",
        "actor": {
            "id": 9850798,
            "login": "Lunkentuss",
            "display_login": "Lunkentuss",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lunkentuss",
            "avatar_url": "https://avatars.githubusercontent.com/u/9850798?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T17:08:25Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32875323453",
        "type": "IssuesEvent",
        "actor": {
            "id": 1651939,
            "login": "jbruchanov",
            "display_login": "jbruchanov",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbruchanov",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651939?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3869",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3869/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3869/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3869/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3869",
                "id": 1963926256,
                "node_id": "I_kwDOEX5ujM51DyLw",
                "number": 3869,
                "title": "How to create a bitmap from xml drawable ?",
                "user": {
                    "login": "jbruchanov",
                    "id": 1651939,
                    "node_id": "MDQ6VXNlcjE2NTE5Mzk=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1651939?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jbruchanov",
                    "html_url": "https://github.com/jbruchanov",
                    "followers_url": "https://api.github.com/users/jbruchanov/followers",
                    "following_url": "https://api.github.com/users/jbruchanov/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jbruchanov/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jbruchanov/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jbruchanov/subscriptions",
                    "organizations_url": "https://api.github.com/users/jbruchanov/orgs",
                    "repos_url": "https://api.github.com/users/jbruchanov/repos",
                    "events_url": "https://api.github.com/users/jbruchanov/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jbruchanov/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T16:27:27Z",
                "updated_at": "2023-10-26T16:27:27Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Is there a way to get vector \"drawable\" xml and render it into some bitmap (png/jpg) ?\r\n\r\nFor example for generating some sharable content ?\r\n\r\nEverything seems to be exposed only into composable world...",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3869/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3869/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T16:27:28Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32873660231",
        "type": "IssuesEvent",
        "actor": {
            "id": 105666329,
            "login": "jdavisAR",
            "display_login": "jdavisAR",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jdavisAR",
            "avatar_url": "https://avatars.githubusercontent.com/u/105666329?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3867",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3867/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3867/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3867/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3867",
                "id": 1963830446,
                "node_id": "I_kwDOEX5ujM51Dayu",
                "number": 3867,
                "title": "Explicit control over iOS StatusBarStyle",
                "user": {
                    "login": "jdavisAR",
                    "id": 105666329,
                    "node_id": "U_kgDOBkxXGQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/105666329?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/jdavisAR",
                    "html_url": "https://github.com/jdavisAR",
                    "followers_url": "https://api.github.com/users/jdavisAR/followers",
                    "following_url": "https://api.github.com/users/jdavisAR/following{/other_user}",
                    "gists_url": "https://api.github.com/users/jdavisAR/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/jdavisAR/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/jdavisAR/subscriptions",
                    "organizations_url": "https://api.github.com/users/jdavisAR/orgs",
                    "repos_url": "https://api.github.com/users/jdavisAR/repos",
                    "events_url": "https://api.github.com/users/jdavisAR/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/jdavisAR/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029644,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjQ0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T15:29:28Z",
                "updated_at": "2023-10-26T15:29:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "It would be nice to be able to customize the icon color (light/dark) of the status bar icons. \r\n\r\nAs of right now there is no way to explicitly tint the status bar icons light/dark. On newer version, the system will automatically tint the icons but for apps that target older version of iOS it would be nice to be able to control this behavior. This could be as simple as taking another lambda parameter in `ComposeUIViewController(...)`.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3867/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3867/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T15:29:29Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32872944516",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 14835950,
            "login": "sunny-chung",
            "display_login": "sunny-chung",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunny-chung",
            "avatar_url": "https://avatars.githubusercontent.com/u/14835950?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3723",
                "id": 1909629117,
                "node_id": "I_kwDOEX5ujM5x0qC9",
                "number": 3723,
                "title": "The packaged code (mac M1 platform) cannot directly run the app application, and it will flash back when the app is started.",
                "user": {
                    "login": "dengdg",
                    "id": 43651799,
                    "node_id": "MDQ6VXNlcjQzNjUxNzk5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/43651799?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dengdg",
                    "html_url": "https://github.com/dengdg",
                    "followers_url": "https://api.github.com/users/dengdg/followers",
                    "following_url": "https://api.github.com/users/dengdg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dengdg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dengdg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dengdg/subscriptions",
                    "organizations_url": "https://api.github.com/users/dengdg/orgs",
                    "repos_url": "https://api.github.com/users/dengdg/repos",
                    "events_url": "https://api.github.com/users/dengdg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dengdg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 2330029654,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjU0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/wait%20for%20reply",
                        "name": "wait for reply",
                        "color": "7F16E9",
                        "default": false,
                        "description": "Further information is requested"
                    },
                    {
                        "id": 2783018584,
                        "node_id": "MDU6TGFiZWwyNzgzMDE4NTg0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/macos",
                        "name": "macos",
                        "color": "20F7A4",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2974296123,
                        "node_id": "MDU6TGFiZWwyOTc0Mjk2MTIz",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/desktop",
                        "name": "desktop",
                        "color": "53BCEC",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-09-22T23:55:13Z",
                "updated_at": "2023-10-26T15:06:56Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nThe packaged code (mac M1 platform) cannot directly run the app application, and it will flash back when the app is started.\r\n\r\n**Affected platforms**\r\nSelect one of the platforms below:\r\nDesktop\r\n\r\n\r\n**Versions**\r\n- Kotlin version*: 1.8\r\n- Compose Multiplatform version*: \"1.5.1\"\r\n- OS version(s)* (required for Desktop and iOS issues): Desktop\r\n- OS architecture (x86 or arm64): arm64\r\n- JDK (for desktop issues): Oracle JDK 17\r\n\r\n**To Reproduce**\r\nSteps and/or the code snippet to reproduce the behavior:\r\nN/A\r\n\r\n**Expected behavior**\r\nExpect the packaged app files to work as well as the Jar package\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Additional context**\r\nN/A\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1781316426",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3723#issuecomment-1781316426",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3723",
                "id": 1781316426,
                "node_id": "IC_kwDOEX5ujM5qLLtK",
                "user": {
                    "login": "sunny-chung",
                    "id": 14835950,
                    "node_id": "MDQ6VXNlcjE0ODM1OTUw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/14835950?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/sunny-chung",
                    "html_url": "https://github.com/sunny-chung",
                    "followers_url": "https://api.github.com/users/sunny-chung/followers",
                    "following_url": "https://api.github.com/users/sunny-chung/following{/other_user}",
                    "gists_url": "https://api.github.com/users/sunny-chung/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/sunny-chung/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/sunny-chung/subscriptions",
                    "organizations_url": "https://api.github.com/users/sunny-chung/orgs",
                    "repos_url": "https://api.github.com/users/sunny-chung/repos",
                    "events_url": "https://api.github.com/users/sunny-chung/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/sunny-chung/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T15:06:56Z",
                "updated_at": "2023-10-26T15:06:56Z",
                "author_association": "NONE",
                "body": "I also experienced immediate crashes without logs when running the executable on a M2 mac, but does not crash when running the jar file. This happens to compose 1.3.0, 1.5.2 and 1.5.10-beta02.\r\n\r\nHowever, I have another compose desktop project with compose 1.5.2 running fine on M2. Perhaps it relates to dependencies used by the application.\r\n\r\nBut we at least needs logs to make debug possible.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1781316426/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T15:06:56Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32871348394",
        "type": "IssuesEvent",
        "actor": {
            "id": 14835950,
            "login": "sunny-chung",
            "display_login": "sunny-chung",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunny-chung",
            "avatar_url": "https://avatars.githubusercontent.com/u/14835950?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3866",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3866/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3866/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3866/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3866",
                "id": 1963691632,
                "node_id": "I_kwDOEX5ujM51C45w",
                "number": 3866,
                "title": "Support removing spacing between paragraphs",
                "user": {
                    "login": "sunny-chung",
                    "id": 14835950,
                    "node_id": "MDQ6VXNlcjE0ODM1OTUw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/14835950?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/sunny-chung",
                    "html_url": "https://github.com/sunny-chung",
                    "followers_url": "https://api.github.com/users/sunny-chung/followers",
                    "following_url": "https://api.github.com/users/sunny-chung/following{/other_user}",
                    "gists_url": "https://api.github.com/users/sunny-chung/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/sunny-chung/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/sunny-chung/subscriptions",
                    "organizations_url": "https://api.github.com/users/sunny-chung/orgs",
                    "repos_url": "https://api.github.com/users/sunny-chung/repos",
                    "events_url": "https://api.github.com/users/sunny-chung/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/sunny-chung/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029644,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjQ0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-26T14:19:46Z",
                "updated_at": "2023-10-26T14:19:46Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "In Jetpack Compose, LineHeightStyle can be specified as an option to ParagraphStyle to remove additional spaces between paragraphs. According to the documentation:\r\n> `trim` feature is available only when PlatformParagraphStyle.includeFontPadding is false.\r\n\r\nhttps://developer.android.com/reference/kotlin/androidx/compose/ui/text/style/LineHeightStyle\r\n\r\nIn Compose Desktop, setting LineHeightStyle has no effect, and there is no `includeFontPadding` in the `PlatformParagraphStyle` class.\r\n\r\nThis is one of the blockers of implementing a soft-wrap-enabled code editor with line numbers.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3866/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3866/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T14:19:47Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32866783994",
        "type": "WatchEvent",
        "actor": {
            "id": 131217758,
            "login": "PSousadeSousa",
            "display_login": "PSousadeSousa",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PSousadeSousa",
            "avatar_url": "https://avatars.githubusercontent.com/u/131217758?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T11:59:31Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32866401135",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 72718339,
            "login": "NakiriYuuzu",
            "display_login": "NakiriYuuzu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NakiriYuuzu",
            "avatar_url": "https://avatars.githubusercontent.com/u/72718339?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3649",
                "id": 1888632190,
                "node_id": "I_kwDOEX5ujM5wkj1-",
                "number": 3649,
                "title": "Rebuild Project failed because iOS Composable Annotation and org.jetbrains.kotlin.ir.symbols.impl.IrTypeParameterPublicSymbolImpl is not supported yet.",
                "user": {
                    "login": "NakiriYuuzu",
                    "id": 72718339,
                    "node_id": "MDQ6VXNlcjcyNzE4MzM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/72718339?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NakiriYuuzu",
                    "html_url": "https://github.com/NakiriYuuzu",
                    "followers_url": "https://api.github.com/users/NakiriYuuzu/followers",
                    "following_url": "https://api.github.com/users/NakiriYuuzu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NakiriYuuzu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NakiriYuuzu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NakiriYuuzu/subscriptions",
                    "organizations_url": "https://api.github.com/users/NakiriYuuzu/orgs",
                    "repos_url": "https://api.github.com/users/NakiriYuuzu/repos",
                    "events_url": "https://api.github.com/users/NakiriYuuzu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NakiriYuuzu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 16,
                "created_at": "2023-09-09T07:52:24Z",
                "updated_at": "2023-10-26T11:44:56Z",
                "closed_at": "2023-09-11T11:43:09Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nWhen I rebuild the project and show this two error.\r\n1. Composable Annotation problem.\r\n\r\n**Affected platforms**\r\nSelect one of the platforms below:\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.10\r\n- Compose Multiplatform version*: 1.5.1\r\n- OS version(s)* (required for Desktop and iOS issues): 14.1\r\n\r\n**To Reproduce**\r\nSteps and/or the code snippet to reproduce the behavior:\r\n1. click the rebuild project\r\n2. waiting the rebuild and see this error\r\n\r\nAttachments:\r\n1. The first Error:\r\n```\r\nexpression.kt\r\nFile name: Main.ios.kt Physical: true Injected: false\r\nfun MainViewController(): UIViewController {\r\n    val navigator = Navigator()\r\n\r\n//    initKoin {\r\n//        modules(appModule)\r\n//    }\r\n\r\n    return <caret>PreComposeApplication {\r\n        MainView(navigator)\r\nCompilation failed: Exception while analyzing expression in (31,12) in /Users/yuuzu/HanaokaYuuzu/App/Android/KMM/Diary_Kmm/shared/src/iosMain/kotlin/net/yuuzu/diary_kmm/Main.ios.kt\r\n\r\nAttachments:\r\ncauseThrowable\r\njava.lang.NullPointerException\r\n\tat androidx.compose.compiler.plugins.kotlin.k1.AnnotationUtilsKt$makeComposableAnnotation$1.getType(AnnotationUtils.kt:38)\r\n\tat org.jetbrains.kotlin.resolve.descriptorUtil.DescriptorUtilsKt.getAnnotationClass(DescriptorUtils.kt:402)\r\n\tat org.jetbrains.kotlin.descriptors.annotations.AnnotationDescriptor$DefaultImpls.getFqName(AnnotationDescriptor.kt:34)\r\n\tat androidx.compose.compiler.plugins.kotlin.k1.AnnotationUtilsKt$makeComposableAnnotation$1.getFqName(AnnotationUtils.kt:36)\r\n\tat org.jetbrains.kotlin.descriptors.annotations.Annotations$DefaultImpls.findAnnotation(Annotations.kt:29)\r\n\tat org.jetbrains.kotlin.descriptors.annotations.AnnotationsImpl.findAnnotation(AnnotationsImpl.kt:22)\r\n\tat androidx.compose.compiler.plugins.kotlin.k1.AnnotationUtilsKt.hasComposableAnnotation(AnnotationUtils.kt:64)\r\n\tat androidx.compose.compiler.plugins.kotlin.k1.ComposableCallCheckerKt.isMarkedAsComposable(ComposableCallChecker.kt:547)\r\n\tat androidx.compose.compiler.plugins.kotlin.k1.ComposableCallCheckerKt.isComposableCallable(ComposableCallChecker.kt:554)\r\n\tat androidx.compose.compiler.plugins.kotlin.k1.ComposableCallChecker.checkType(ComposableCallChecker.kt:391)\r\n\tat org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer.checkType(DataFlowAnalyzer.java:354)\r\n\tat org.jetbrains.kotlin.types.expressions.DataFlowAnalyzer.checkType(DataFlowAnalyzer.java:277)\r\n\tat org.jetbrains.kotlin.resolve.calls.tower.KotlinToResolvedCallTransformer.updateRecordedType(KotlinToResolvedCallTransformer.kt:392)\r\n\tat org.jetbrains.kotlin.resolve.calls.tower.KotlinToResolvedCallTransformer.runArgumentsChecks(KotlinToResolvedCallTransformer.kt:337)\r\n\tat org.jetbrains.kotlin.resolve.calls.tower.ResolvedAtomCompleter.completeResolvedCall(ResolvedAtomCompleter.kt:198)\r\n\tat org.jetbrains.kotlin.resolve.calls.tower.KotlinToResolvedCallTransformer.transformAndReport(KotlinToResolvedCallTransformer.kt:142)\r\n\tat org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver.convertToOverloadResolutionResults(PSICallResolver.kt:257)\r\n\tat org.jetbrains.kotlin.resolve.calls.tower.PSICallResolver.runResolutionAndInference(PSICallResolver.kt:127)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallResolver.doResolveCallOrGetCachedResults(CallResolver.java:602)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallResolver.lambda$computeTasksAndResolveCall$0(CallResolver.java:213)\r\n\tat org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:90)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:211)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallResolver.computeTasksAndResolveCall(CallResolver.java:199)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallResolver.resolveFunctionCall(CallResolver.java:329)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getResolvedCallForFunction(CallExpressionResolver.kt:86)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfoWithoutFinalTypeCheck(CallExpressionResolver.kt:208)\r\n\tat org.jetbrains.kotlin.resolve.calls.CallExpressionResolver.getCallExpressionTypeInfo(CallExpressionResolver.kt:185)\r\n\tat org.jetbrains.kotlin.types.expressions.BasicExpressionTypingVisitor.visitCallExpression(BasicExpressionTypingVisitor.java:731)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitCallExpression(ExpressionTypingVisitorDispatcher.java:396)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForBlock.visitCallExpression(ExpressionTypingVisitorDispatcher.java:60)\r\n\tat org.jetbrains.kotlin.psi.KtCallExpression.accept(KtCallExpression.java:35)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(ExpressionTypingVisitorDispatcher.java:176)\r\n\tat org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:90)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:165)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:135)\r\n\tat org.jetbrains.kotlin.types.expressions.ControlStructureTypingVisitor.visitReturnExpression(ControlStructureTypingVisitor.java:914)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.visitReturnExpression(ExpressionTypingVisitorDispatcher.java:287)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher$ForBlock.visitReturnExpression(ExpressionTypingVisitorDispatcher.java:60)\r\n\tat org.jetbrains.kotlin.psi.KtReturnExpression.accept(KtReturnExpression.java:33)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(ExpressionTypingVisitorDispatcher.java:176)\r\n\tat org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:90)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:165)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:135)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorForStatements.visitExpression(ExpressionTypingVisitorForStatements.java:543)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorForStatements.visitExpression(ExpressionTypingVisitorForStatements.java:73)\r\n\tat org.jetbrains.kotlin.psi.KtVisitor.visitExpressionWithLabel(KtVisitor.java:230)\r\n\tat org.jetbrains.kotlin.psi.KtVisitor.visitReturnExpression(KtVisitor.java:226)\r\n\tat org.jetbrains.kotlin.psi.KtReturnExpression.accept(KtReturnExpression.java:33)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(ExpressionTypingVisitorDispatcher.java:176)\r\n\tat org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:90)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:165)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:148)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getTypeOfLastExpressionInBlock(ExpressionTypingServices.java:451)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getBlockReturnedTypeWithWritableScope(ExpressionTypingServices.java:328)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getBlockReturnedType(ExpressionTypingServices.java:207)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.getBlockReturnedType(ExpressionTypingServices.java:184)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorForStatements.visitBlockExpression(ExpressionTypingVisitorForStatements.java:586)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorForStatements.visitBlockExpression(ExpressionTypingVisitorForStatements.java:73)\r\n\tat org.jetbrains.kotlin.psi.KtBlockExpression.accept(KtBlockExpression.java:79)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.lambda$getTypeInfo$0(ExpressionTypingVisitorDispatcher.java:176)\r\n\tat org.jetbrains.kotlin.util.PerformanceCounter.time(PerformanceCounter.kt:90)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:165)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingVisitorDispatcher.getTypeInfo(ExpressionTypingVisitorDispatcher.java:148)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.checkFunctionReturnType(ExpressionTypingServices.java:179)\r\n\tat org.jetbrains.kotlin.types.expressions.ExpressionTypingServices.checkFunctionReturnType(ExpressionTypingServices.java:166)\r\n\tat org.jetbrains.kotlin.resolve.BodyResolver.resolveFunctionBody(BodyResolver.java:1049)\r\n\tat org.jetbrains.kotlin.resolve.BodyResolver.resolveFunctionBody(BodyResolver.java:992)\r\n\tat org.jetbrains.kotlin.resolve.BodyResolver.resolveFunctionBodies(BodyResolver.java:977)\r\n\tat org.jetbrains.kotlin.resolve.BodyResolver.resolveBehaviorDeclarationBodies(BodyResolver.java:129)\r\n\tat org.jetbrains.kotlin.resolve.BodyResolver.resolveBodies(BodyResolver.java:256)\r\n\tat org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations(LazyTopDownAnalyzer.kt:227)\r\n\tat org.jetbrains.kotlin.resolve.LazyTopDownAnalyzer.analyzeDeclarations$default(LazyTopDownAnalyzer.kt:58)\r\n\tat org.jetbrains.kotlin.backend.konan.TopDownAnalyzerFacadeForKonan.analyzeFilesWithGivenTrace(TopDownAnalyzerFacadeForKonan.kt:105)\r\n\tat org.jetbrains.kotlin.backend.konan.TopDownAnalyzerFacadeForKonan.analyzeFiles(TopDownAnalyzerFacadeForKonan.kt:66)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.FrontendKt$FrontendPhase$2$1.invoke(Frontend.kt:80)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.FrontendKt$FrontendPhase$2$1.invoke(Frontend.kt:79)\r\n\tat org.jetbrains.kotlin.cli.common.messages.AnalyzerWithCompilerReport.analyzeAndReport(AnalyzerWithCompilerReport.kt:115)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.FrontendKt$FrontendPhase$2.invoke(Frontend.kt:79)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.FrontendKt$FrontendPhase$2.invoke(Frontend.kt:44)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:32)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:207)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine.runPhase(Machinery.kt:139)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine.runPhase$default(Machinery.kt:130)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.TopLevelPhasesKt.runFrontend(TopLevelPhases.kt:34)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.serializeKlibK1(DynamicCompilerDriver.kt:116)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.produceKlib(DynamicCompilerDriver.kt:94)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.access$produceKlib(DynamicCompilerDriver.kt:31)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver$run$1$1$1.invoke(DynamicCompilerDriver.kt:43)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver$run$1$1$1.invoke(DynamicCompilerDriver.kt:36)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine$Companion$startTopLevel$topLevelPhase$1.phaseBody(Machinery.kt:98)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine$Companion$startTopLevel$topLevelPhase$1.phaseBody(Machinery.kt:92)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:207)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine$Companion.startTopLevel(Machinery.kt:105)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.run(DynamicCompilerDriver.kt:36)\r\n\tat org.jetbrains.kotlin.backend.konan.KonanDriver.run(KonanDriver.kt:80)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native.runKonanDriver(K2Native.kt:136)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native.doExecute(K2Native.kt:71)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native.doExecute(K2Native.kt:37)\r\n\tat org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:100)\r\n\tat org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:46)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:79)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:43)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool$Companion.doMainNoExit(CLITool.kt:180)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native$Companion$mainNoExitWithRenderer$1.invoke(K2Native.kt:173)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native$Companion$mainNoExitWithRenderer$1.invoke(K2Native.kt:172)\r\n\tat org.jetbrains.kotlin.util.UtilKt.profileIf(Util.kt:22)\r\n\tat org.jetbrains.kotlin.util.UtilKt.profile(Util.kt:16)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native$Companion.mainNoExitWithRenderer(K2Native.kt:172)\r\n\tat org.jetbrains.kotlin.cli.bc.K2NativeKt.mainNoExitWithGradleRenderer(K2Native.kt:190)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt$daemonMain$1.invoke(main.kt:51)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt$daemonMain$1.invoke(main.kt:51)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt.mainImpl(main.kt:20)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt.inProcessMain(main.kt:58)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt.daemonMain(main.kt:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.jetbrains.kotlin.compilerRunner.KotlinToolRunner.runInProcess(KotlinToolRunner.kt:189)\r\n\tat org.jetbrains.kotlin.compilerRunner.KotlinToolRunner.run(KotlinToolRunner.kt:132)\r\n\tat org.jetbrains.kotlin.gradle.tasks.KotlinNativeCompile.compile(KotlinNativeTasks.kt:525)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:125)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:242)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:227)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:210)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:193)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:166)\r\n\tat org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:93)\r\n\tat org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:44)\r\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:57)\r\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:54)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\r\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:54)\r\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:44)\r\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:67)\r\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:37)\r\n\tat org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)\r\n\tat org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)\r\n\tat org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)\r\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:50)\r\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:28)\r\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.executeDelegateBroadcastingChanges(CaptureStateAfterExecutionStep.java:100)\r\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:72)\r\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:50)\r\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:40)\r\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:29)\r\n\tat org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:166)\r\n\tat org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:70)\r\n\tat org.gradle.internal.Either$Right.fold(Either.java:175)\r\n\tat org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)\r\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:68)\r\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:46)\r\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:36)\r\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:25)\r\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)\r\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)\r\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:91)\r\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:55)\r\n\tat java.base/java.util.Optional.orElseGet(Unknown Source)\r\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:55)\r\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:37)\r\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:65)\r\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:36)\r\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)\r\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)\r\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:76)\r\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:37)\r\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:94)\r\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:49)\r\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:71)\r\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:45)\r\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.executeWithNonEmptySources(SkipEmptyWorkStep.java:177)\r\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:86)\r\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:53)\r\n\tat org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:32)\r\n\tat org.gradle.internal.execution.steps.RemoveUntrackedExecutionStateStep.execute(RemoveUntrackedExecutionStateStep.java:21)\r\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)\r\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:36)\r\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:23)\r\n\tat org.gradle.internal.execution.steps.CleanupStaleOutputsStep.execute(CleanupStaleOutputsStep.java:75)\r\n\tat org.gradle.internal.execution.steps.CleanupStaleOutputsStep.execute(CleanupStaleOutputsStep.java:41)\r\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:32)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$4.withWorkspace(TaskExecution.java:287)\r\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)\r\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:21)\r\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)\r\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)\r\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:42)\r\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:31)\r\n\tat org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:64)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:146)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:135)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:74)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)\r\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:42)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:338)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:325)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:318)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:304)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:463)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:380)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor.process(DefaultPlanExecutor.java:116)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph.executeWithServices(DefaultTaskExecutionGraph.java:136)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph.execute(DefaultTaskExecutionGraph.java:121)\r\n\tat org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:35)\r\n\tat org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:51)\r\n\tat org.gradle.execution.BuildOperationFiringBuildWorkerExecutor$ExecuteTasks.call(BuildOperationFiringBuildWorkerExecutor.java:54)\r\n\tat org.gradle.execution.BuildOperationFiringBuildWorkerExecutor$ExecuteTasks.call(BuildOperationFiringBuildWorkerExecutor.java:43)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\r\n\tat org.gradle.execution.BuildOperationFiringBuildWorkerExecutor.execute(BuildOperationFiringBuildWorkerExecutor.java:40)\r\n\tat org.gradle.internal.build.DefaultBuildLifecycleController.lambda$executeTasks$7(DefaultBuildLifecycleController.java:172)\r\n\tat org.gradle.internal.model.StateTransitionController.doTransition(StateTransitionController.java:258)\r\n\tat org.gradle.internal.model.StateTransitionController.lambda$tryTransition$8(StateTransitionController.java:185)\r\n\tat org.gradle.internal.work.DefaultSynchronizer.withLock(DefaultSynchronizer.java:44)\r\n\tat org.gradle.internal.model.StateTransitionController.tryTransition(StateTransitionController.java:185)\r\n\tat org.gradle.internal.build.DefaultBuildLifecycleController.executeTasks(DefaultBuildLifecycleController.java:172)\r\n\tat org.gradle.internal.build.DefaultBuildWorkGraphController$DefaultBuildWorkGraph.runWork(DefaultBuildWorkGraphController.java:209)\r\n\tat org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:249)\r\n\tat org.gradle.internal.work.DefaultWorkerLeaseService.runAsWorkerThread(DefaultWorkerLeaseService.java:109)\r\n\tat org.gradle.composite.internal.DefaultBuildController.doRun(DefaultBuildController.java:172)\r\n\tat org.gradle.composite.internal.DefaultBuildController.access$000(DefaultBuildController.java:47)\r\n\tat org.gradle.composite.internal.DefaultBuildController$BuildOpRunnable.run(DefaultBuildController.java:191)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.base/java.util.concurrent.FutureTask.run(Unknown Source)\r\n\r\n    }\r\n}\r\n```\r\n\r\n2. The Second Error:\r\n```\r\n: Compilation failed: Generation of stubs for class org.jetbrains.kotlin.ir.symbols.impl.IrTypeParameterPublicSymbolImpl is not supported yet\r\n\r\n * Source files: \r\n * Compiler version: 1.9.10\r\n * Output kind: FRAMEWORK\r\n\r\ne: kotlin.NotImplementedError: Generation of stubs for class org.jetbrains.kotlin.ir.symbols.impl.IrTypeParameterPublicSymbolImpl is not supported yet\r\n\tat org.jetbrains.kotlin.backend.common.linkage.partial.MissingDeclarationStubGenerator.getDeclaration(MissingDeclarationStubGenerator.kt:57)\r\n\tat org.jetbrains.kotlin.backend.common.linkage.partial.PartialLinkageSupportForLinkerImpl.generateStubsAndPatchUsagesInternal(PartialLinkageSupportForLinkerImpl.kt:72)\r\n\tat org.jetbrains.kotlin.backend.common.linkage.partial.PartialLinkageSupportForLinkerImpl.generateStubsAndPatchUsages(PartialLinkageSupportForLinkerImpl.kt:62)\r\n\tat org.jetbrains.kotlin.backend.common.serialization.KotlinIrLinker.postProcess(KotlinIrLinker.kt:231)\r\n\tat org.jetbrains.kotlin.backend.konan.serialization.KonanIrLinker.postProcess(KonanIrlinker.kt:412)\r\n\tat org.jetbrains.kotlin.psi2ir.Psi2IrTranslator.generateModuleFragment(Psi2IrTranslator.kt:104)\r\n\tat org.jetbrains.kotlin.psi2ir.Psi2IrTranslator.generateModuleFragment$default(Psi2IrTranslator.kt:84)\r\n\tat org.jetbrains.kotlin.backend.konan.PsiToIrKt.psiToIr(PsiToIr.kt:217)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.PsiToIrKt$PsiToIrPhase$2.invoke(PsiToIr.kt:102)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.PsiToIrKt$PsiToIrPhase$2.invoke(PsiToIr.kt:97)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:32)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:207)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine.runPhase(Machinery.kt:139)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine.runPhase$default(Machinery.kt:130)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.phases.TopLevelPhasesKt.runPsiToIr(TopLevelPhases.kt:53)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.produceObjCFramework(DynamicCompilerDriver.kt:67)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.access$produceObjCFramework(DynamicCompilerDriver.kt:31)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver$run$1$1$1.invoke(DynamicCompilerDriver.kt:42)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver$run$1$1$1.invoke(DynamicCompilerDriver.kt:36)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine$Companion$startTopLevel$topLevelPhase$1.phaseBody(Machinery.kt:98)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine$Companion$startTopLevel$topLevelPhase$1.phaseBody(Machinery.kt:92)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:207)\r\n\tat org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:94)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.PhaseEngine$Companion.startTopLevel(Machinery.kt:105)\r\n\tat org.jetbrains.kotlin.backend.konan.driver.DynamicCompilerDriver.run(DynamicCompilerDriver.kt:36)\r\n\tat org.jetbrains.kotlin.backend.konan.KonanDriver.run(KonanDriver.kt:80)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native.runKonanDriver(K2Native.kt:136)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native.doExecute(K2Native.kt:71)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native.doExecute(K2Native.kt:37)\r\n\tat org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:100)\r\n\tat org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:46)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:79)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:43)\r\n\tat org.jetbrains.kotlin.cli.common.CLITool$Companion.doMainNoExit(CLITool.kt:180)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native$Companion$mainNoExitWithRenderer$1.invoke(K2Native.kt:173)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native$Companion$mainNoExitWithRenderer$1.invoke(K2Native.kt:172)\r\n\tat org.jetbrains.kotlin.util.UtilKt.profileIf(Util.kt:22)\r\n\tat org.jetbrains.kotlin.util.UtilKt.profile(Util.kt:16)\r\n\tat org.jetbrains.kotlin.cli.bc.K2Native$Companion.mainNoExitWithRenderer(K2Native.kt:172)\r\n\tat org.jetbrains.kotlin.cli.bc.K2NativeKt.mainNoExitWithGradleRenderer(K2Native.kt:190)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt$daemonMain$1.invoke(main.kt:51)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt$daemonMain$1.invoke(main.kt:51)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt.mainImpl(main.kt:20)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt.inProcessMain(main.kt:58)\r\n\tat org.jetbrains.kotlin.cli.utilities.MainKt.daemonMain(main.kt:51)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.jetbrains.kotlin.compilerRunner.KotlinToolRunner.runInProcess(KotlinToolRunner.kt:189)\r\n\tat org.jetbrains.kotlin.compilerRunner.KotlinToolRunner.run(KotlinToolRunner.kt:132)\r\n\tat org.jetbrains.kotlin.gradle.tasks.KotlinNativeLink.compile(KotlinNativeLink.kt:364)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.base/java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:125)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:58)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)\r\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$3.run(TaskExecution.java:242)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)\r\nCompilation failed: Generation of stubs for class org.jetbrains.kotlin.ir.symbols.impl.IrTypeParameterPublicSymbolImpl is not supported yet\r\n```\r\n\r\nMy build.gradle.kts:\r\n```kotlin\r\nplugins {\r\n    kotlin(\"multiplatform\")\r\n    id(\"com.android.library\")\r\n\r\n    id(\"org.jetbrains.compose\")\r\n    id(\"com.squareup.sqldelight\")\r\n    kotlin(\"plugin.serialization\") version Deps.Version.kotlin\r\n}\r\n\r\nkotlin {\r\n    androidTarget()\r\n\r\n    listOf(\r\n        iosX64(),\r\n        iosArm64(),\r\n        iosSimulatorArm64()\r\n    ).forEach {\r\n        it.binaries.framework {\r\n            baseName = \"shared\"\r\n            isStatic = true\r\n        }\r\n    }\r\n\r\n    sourceSets {\r\n        val commonMain by getting {\r\n            dependencies {\r\n                // Compose Multiplatform\r\n                implementation(compose.ui)\r\n                implementation(compose.runtime)\r\n                implementation(compose.animation)\r\n                implementation(compose.animationGraphics)\r\n                implementation(compose.foundation)\r\n                implementation(compose.material3)\r\n                implementation(compose.materialIconsExtended)\r\n                @OptIn(org.jetbrains.compose.ExperimentalComposeLibrary::class)\r\n                implementation(compose.components.resources)\r\n\r\n                // DateTime\r\n                implementation(Deps.Kotlinx.DateTime.dateTime)\r\n\r\n                // SqlDelight\r\n                implementation(Deps.Sqldelight.runtime)\r\n                implementation(Deps.Sqldelight.coroutinesExtensions)\r\n\r\n                // Dependency Injection\r\n                implementation(Deps.Koin.core)\r\n                implementation(Deps.SharedPreferences.multiplatformArgs)\r\n\r\n                implementation(Deps.Moko.Media.media)\r\n                implementation(Deps.Moko.Location.geo)\r\n\r\n                with(Deps.Moko.Biometry) {\r\n                    api(biometry)\r\n                    api(biometryCompose)\r\n                }\r\n\r\n                // Network\r\n                with(Deps.Ktor) {\r\n                    api(core)\r\n                    api(logging)\r\n                    api(negotiation)\r\n                    api(serialization)\r\n                }\r\n\r\n                // Navigation & ViewModel\r\n                with(Deps.Precompose) {\r\n                    api(precompose)\r\n                    api(precomposeViewModel)\r\n                }\r\n            }\r\n        }\r\n        val commonTest by getting {\r\n            dependencies {\r\n                implementation(kotlin(\"test\"))\r\n            }\r\n        }\r\n        val androidMain by getting {\r\n            dependencies {\r\n                //put your android dependencies here\r\n                dependsOn(commonMain)\r\n\r\n                implementation(Deps.Android.appcompat)\r\n                implementation(Deps.Android.activityCompose)\r\n\r\n                implementation(Deps.Koin.android)\r\n                implementation(Deps.Sqldelight.androidDriver)\r\n\r\n                implementation(Deps.Ktor.ktorAndroid)\r\n            }\r\n        }\r\n        val iosX64Main by getting\r\n        val iosArm64Main by getting\r\n        val iosSimulatorArm64Main by getting\r\n        val iosMain by creating {\r\n            dependsOn(commonMain)\r\n            iosX64Main.dependsOn(this)\r\n            iosArm64Main.dependsOn(this)\r\n            iosSimulatorArm64Main.dependsOn(this)\r\n\r\n            dependencies {\r\n                // put your ios dependencies here\r\n                implementation(Deps.Sqldelight.iosDriver)\r\n\r\n                implementation(Deps.Ktor.ktorIOS)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nandroid {\r\n    namespace = Configurations.applicationId\r\n    compileSdk = Configurations.compileSdk\r\n    defaultConfig {\r\n        minSdk = Configurations.minSdk\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_17\r\n        targetCompatibility = JavaVersion.VERSION_17\r\n    }\r\n    kotlin {\r\n        jvmToolchain(17)\r\n    }\r\n}\r\n\r\nsqldelight {\r\n    database(\"DiaryDatabase\") {\r\n        packageName = Configurations.applicationId + \".data\"\r\n        sourceFolders = listOf(\"sqldelight\")\r\n    }\r\n}\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780952680",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3649#issuecomment-1780952680",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3649",
                "id": 1780952680,
                "node_id": "IC_kwDOEX5ujM5qJy5o",
                "user": {
                    "login": "NakiriYuuzu",
                    "id": 72718339,
                    "node_id": "MDQ6VXNlcjcyNzE4MzM5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/72718339?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NakiriYuuzu",
                    "html_url": "https://github.com/NakiriYuuzu",
                    "followers_url": "https://api.github.com/users/NakiriYuuzu/followers",
                    "following_url": "https://api.github.com/users/NakiriYuuzu/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NakiriYuuzu/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NakiriYuuzu/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NakiriYuuzu/subscriptions",
                    "organizations_url": "https://api.github.com/users/NakiriYuuzu/orgs",
                    "repos_url": "https://api.github.com/users/NakiriYuuzu/repos",
                    "events_url": "https://api.github.com/users/NakiriYuuzu/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NakiriYuuzu/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T11:44:56Z",
                "updated_at": "2023-10-26T11:44:56Z",
                "author_association": "NONE",
                "body": "> is this fixed?\r\n\r\nthis actually is view model problem.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780952680/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T11:44:57Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32865108137",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 85478014,
            "login": "ruslantsyganok",
            "display_login": "ruslantsyganok",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruslantsyganok",
            "avatar_url": "https://avatars.githubusercontent.com/u/85478014?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3856",
                "id": 1957959440,
                "node_id": "I_kwDOEX5ujM50tBcQ",
                "number": 3856,
                "title": "iOS keyboard loose focus when text field changes",
                "user": {
                    "login": "KostadinAlmishev",
                    "id": 26711314,
                    "node_id": "MDQ6VXNlcjI2NzExMzE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/26711314?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/KostadinAlmishev",
                    "html_url": "https://github.com/KostadinAlmishev",
                    "followers_url": "https://api.github.com/users/KostadinAlmishev/followers",
                    "following_url": "https://api.github.com/users/KostadinAlmishev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/KostadinAlmishev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/KostadinAlmishev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/KostadinAlmishev/subscriptions",
                    "organizations_url": "https://api.github.com/users/KostadinAlmishev/orgs",
                    "repos_url": "https://api.github.com/users/KostadinAlmishev/repos",
                    "events_url": "https://api.github.com/users/KostadinAlmishev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/KostadinAlmishev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5122565252,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQkhA",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/submitted",
                        "name": "submitted",
                        "color": "C1E04C",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-23T20:20:38Z",
                "updated_at": "2023-10-26T10:55:19Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nOn iOS keyboard moves down and up when focus is changed to next text field. I tried to change onFocusBehavior = OnFocusBehavior.DoNothing in ComposeUIViewController, but nothing changed. On android keyboard is static as expected.\r\n\r\n**Affected platforms**\r\n\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version: 1.9.10\r\n- Compose Multiplatform version: 1.5.3\r\n- iOS version: 17.0.3\r\n- OS architecture: arm64\r\n\r\n**To Reproduce**\r\n\r\n- click on first text field\r\n- click on second text field (keyboard goes down and up, but should not move)\r\n\r\n**Expected behavior**\r\nKeyboard should not move when text field focus is changed to next one like in android video.\r\n\r\n**Video**\r\n\r\nhttps://github.com/JetBrains/compose-multiplatform/assets/26711314/cdcf32a2-cdbd-4ebb-a653-297bd59c3aed\r\n\r\nhttps://github.com/JetBrains/compose-multiplatform/assets/26711314/79a64f38-92f9-49f8-8417-8857b7fb9f53\r\n\r\n**Additional context**\r\n[Sample code to reproduce](https://github.com/KostadinAlmishev/ios-keyboard-sample)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780885595",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3856#issuecomment-1780885595",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3856",
                "id": 1780885595,
                "node_id": "IC_kwDOEX5ujM5qJihb",
                "user": {
                    "login": "ruslantsyganok",
                    "id": 85478014,
                    "node_id": "MDQ6VXNlcjg1NDc4MDE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/85478014?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ruslantsyganok",
                    "html_url": "https://github.com/ruslantsyganok",
                    "followers_url": "https://api.github.com/users/ruslantsyganok/followers",
                    "following_url": "https://api.github.com/users/ruslantsyganok/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ruslantsyganok/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ruslantsyganok/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ruslantsyganok/subscriptions",
                    "organizations_url": "https://api.github.com/users/ruslantsyganok/orgs",
                    "repos_url": "https://api.github.com/users/ruslantsyganok/repos",
                    "events_url": "https://api.github.com/users/ruslantsyganok/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ruslantsyganok/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T10:55:18Z",
                "updated_at": "2023-10-26T10:55:18Z",
                "author_association": "NONE",
                "body": "Same here ",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780885595/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T10:55:19Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32863057250",
        "type": "IssuesEvent",
        "actor": {
            "id": 1836384,
            "login": "MatkovIvan",
            "display_login": "MatkovIvan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MatkovIvan",
            "avatar_url": "https://avatars.githubusercontent.com/u/1836384?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/739",
                "id": 909809838,
                "node_id": "MDU6SXNzdWU5MDk4MDk4Mzg=",
                "number": 739,
                "title": "Unable to set PopupProperties in DropdownMenu",
                "user": {
                    "login": "armay",
                    "id": 5882385,
                    "node_id": "MDQ6VXNlcjU4ODIzODU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5882385?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/armay",
                    "html_url": "https://github.com/armay",
                    "followers_url": "https://api.github.com/users/armay/followers",
                    "following_url": "https://api.github.com/users/armay/following{/other_user}",
                    "gists_url": "https://api.github.com/users/armay/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/armay/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/armay/subscriptions",
                    "organizations_url": "https://api.github.com/users/armay/orgs",
                    "repos_url": "https://api.github.com/users/armay/repos",
                    "events_url": "https://api.github.com/users/armay/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/armay/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029644,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjQ0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 2605256925,
                        "node_id": "MDU6TGFiZWwyNjA1MjU2OTI1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/api%20change",
                        "name": "api change",
                        "color": "B1B931",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2974296123,
                        "node_id": "MDU6TGFiZWwyOTc0Mjk2MTIz",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/desktop",
                        "name": "desktop",
                        "color": "53BCEC",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "Rsedaikin",
                    "id": 32446626,
                    "node_id": "MDQ6VXNlcjMyNDQ2NjI2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/32446626?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Rsedaikin",
                    "html_url": "https://github.com/Rsedaikin",
                    "followers_url": "https://api.github.com/users/Rsedaikin/followers",
                    "following_url": "https://api.github.com/users/Rsedaikin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Rsedaikin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Rsedaikin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Rsedaikin/subscriptions",
                    "organizations_url": "https://api.github.com/users/Rsedaikin/orgs",
                    "repos_url": "https://api.github.com/users/Rsedaikin/repos",
                    "events_url": "https://api.github.com/users/Rsedaikin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Rsedaikin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "Rsedaikin",
                        "id": 32446626,
                        "node_id": "MDQ6VXNlcjMyNDQ2NjI2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/32446626?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Rsedaikin",
                        "html_url": "https://github.com/Rsedaikin",
                        "followers_url": "https://api.github.com/users/Rsedaikin/followers",
                        "following_url": "https://api.github.com/users/Rsedaikin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Rsedaikin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Rsedaikin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Rsedaikin/subscriptions",
                        "organizations_url": "https://api.github.com/users/Rsedaikin/orgs",
                        "repos_url": "https://api.github.com/users/Rsedaikin/repos",
                        "events_url": "https://api.github.com/users/Rsedaikin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Rsedaikin/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 2,
                "created_at": "2021-06-02T19:15:13Z",
                "updated_at": "2023-10-26T09:43:10Z",
                "closed_at": "2023-10-26T09:43:10Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The API on Android and desktop differ for DropdownMenu component. In particular, PopupProperties can't be set. The property significantly simplifies building search bars and alike components as mentioned on [StackOverflow](https://stackoverflow.com/questions/66675748/auto-complete-text-view-in-compose). On Android one can write\r\n```kotlin\r\nDropdownMenu(\r\n  properties = PopupProperties(focusable = false),\r\n  // Some other properties...\r\n)\r\n```\r\nCurrently, on desktop such an API is not present, so opening a dropdown menu makes the currently used textfield uneditable.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-26T09:43:11Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32863057073",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1836384,
            "login": "MatkovIvan",
            "display_login": "MatkovIvan",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MatkovIvan",
            "avatar_url": "https://avatars.githubusercontent.com/u/1836384?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/739",
                "id": 909809838,
                "node_id": "MDU6SXNzdWU5MDk4MDk4Mzg=",
                "number": 739,
                "title": "Unable to set PopupProperties in DropdownMenu",
                "user": {
                    "login": "armay",
                    "id": 5882385,
                    "node_id": "MDQ6VXNlcjU4ODIzODU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5882385?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/armay",
                    "html_url": "https://github.com/armay",
                    "followers_url": "https://api.github.com/users/armay/followers",
                    "following_url": "https://api.github.com/users/armay/following{/other_user}",
                    "gists_url": "https://api.github.com/users/armay/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/armay/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/armay/subscriptions",
                    "organizations_url": "https://api.github.com/users/armay/orgs",
                    "repos_url": "https://api.github.com/users/armay/repos",
                    "events_url": "https://api.github.com/users/armay/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/armay/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029644,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjQ0",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 2605256925,
                        "node_id": "MDU6TGFiZWwyNjA1MjU2OTI1",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/api%20change",
                        "name": "api change",
                        "color": "B1B931",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 2974296123,
                        "node_id": "MDU6TGFiZWwyOTc0Mjk2MTIz",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/desktop",
                        "name": "desktop",
                        "color": "53BCEC",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "Rsedaikin",
                    "id": 32446626,
                    "node_id": "MDQ6VXNlcjMyNDQ2NjI2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/32446626?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Rsedaikin",
                    "html_url": "https://github.com/Rsedaikin",
                    "followers_url": "https://api.github.com/users/Rsedaikin/followers",
                    "following_url": "https://api.github.com/users/Rsedaikin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Rsedaikin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Rsedaikin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Rsedaikin/subscriptions",
                    "organizations_url": "https://api.github.com/users/Rsedaikin/orgs",
                    "repos_url": "https://api.github.com/users/Rsedaikin/repos",
                    "events_url": "https://api.github.com/users/Rsedaikin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Rsedaikin/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "Rsedaikin",
                        "id": 32446626,
                        "node_id": "MDQ6VXNlcjMyNDQ2NjI2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/32446626?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/Rsedaikin",
                        "html_url": "https://github.com/Rsedaikin",
                        "followers_url": "https://api.github.com/users/Rsedaikin/followers",
                        "following_url": "https://api.github.com/users/Rsedaikin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/Rsedaikin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/Rsedaikin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/Rsedaikin/subscriptions",
                        "organizations_url": "https://api.github.com/users/Rsedaikin/orgs",
                        "repos_url": "https://api.github.com/users/Rsedaikin/repos",
                        "events_url": "https://api.github.com/users/Rsedaikin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/Rsedaikin/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 2,
                "created_at": "2021-06-02T19:15:13Z",
                "updated_at": "2023-10-26T09:43:10Z",
                "closed_at": "2023-10-26T09:43:10Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "The API on Android and desktop differ for DropdownMenu component. In particular, PopupProperties can't be set. The property significantly simplifies building search bars and alike components as mentioned on [StackOverflow](https://stackoverflow.com/questions/66675748/auto-complete-text-view-in-compose). On Android one can write\r\n```kotlin\r\nDropdownMenu(\r\n  properties = PopupProperties(focusable = false),\r\n  // Some other properties...\r\n)\r\n```\r\nCurrently, on desktop such an API is not present, so opening a dropdown menu makes the currently used textfield uneditable.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780771954",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/739#issuecomment-1780771954",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/739",
                "id": 1780771954,
                "node_id": "IC_kwDOEX5ujM5qJGxy",
                "user": {
                    "login": "MatkovIvan",
                    "id": 1836384,
                    "node_id": "MDQ6VXNlcjE4MzYzODQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1836384?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/MatkovIvan",
                    "html_url": "https://github.com/MatkovIvan",
                    "followers_url": "https://api.github.com/users/MatkovIvan/followers",
                    "following_url": "https://api.github.com/users/MatkovIvan/following{/other_user}",
                    "gists_url": "https://api.github.com/users/MatkovIvan/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/MatkovIvan/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/MatkovIvan/subscriptions",
                    "organizations_url": "https://api.github.com/users/MatkovIvan/orgs",
                    "repos_url": "https://api.github.com/users/MatkovIvan/repos",
                    "events_url": "https://api.github.com/users/MatkovIvan/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/MatkovIvan/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T09:43:10Z",
                "updated_at": "2023-10-26T09:43:10Z",
                "author_association": "MEMBER",
                "body": "Compatible with Android overload was added in [1.5.0](https://github.com/JetBrains/compose-multiplatform/releases/tag/v1.5.0)",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780771954/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T09:43:11Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    },
    {
        "id": "32862583701",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 124871594,
            "login": "mazunin-v-jb",
            "display_login": "mazunin-v-jb",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mazunin-v-jb",
            "avatar_url": "https://avatars.githubusercontent.com/u/124871594?"
        },
        "repo": {
            "id": 293498508,
            "name": "JetBrains/compose-multiplatform",
            "url": "https://api.github.com/repos/JetBrains/compose-multiplatform"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621",
                "repository_url": "https://api.github.com/repos/JetBrains/compose-multiplatform",
                "labels_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621/labels{/name}",
                "comments_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621/comments",
                "events_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621/events",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3621",
                "id": 1881176767,
                "node_id": "I_kwDOEX5ujM5wIHq_",
                "number": 3621,
                "title": "Issues with `Keyboard` and `TextField` on iOS.",
                "user": {
                    "login": "robxyy",
                    "id": 9105106,
                    "node_id": "MDQ6VXNlcjkxMDUxMDY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9105106?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/robxyy",
                    "html_url": "https://github.com/robxyy",
                    "followers_url": "https://api.github.com/users/robxyy/followers",
                    "following_url": "https://api.github.com/users/robxyy/following{/other_user}",
                    "gists_url": "https://api.github.com/users/robxyy/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/robxyy/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/robxyy/subscriptions",
                    "organizations_url": "https://api.github.com/users/robxyy/orgs",
                    "repos_url": "https://api.github.com/users/robxyy/repos",
                    "events_url": "https://api.github.com/users/robxyy/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/robxyy/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 2330029630,
                        "node_id": "MDU6TGFiZWwyMzMwMDI5NjMw",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 4650581701,
                        "node_id": "LA_kwDOEX5ujM8AAAABFTI-xQ",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/ios",
                        "name": "ios",
                        "color": "0653EC",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 5122568153,
                        "node_id": "LA_kwDOEX5ujM8AAAABMVQv2Q",
                        "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/labels/reproduced",
                        "name": "reproduced",
                        "color": "D64154",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "dima-avdeev-jb",
                    "id": 99798741,
                    "node_id": "U_kgDOBfLO1Q",
                    "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dima-avdeev-jb",
                    "html_url": "https://github.com/dima-avdeev-jb",
                    "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                    "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                    "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                    "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "dima-avdeev-jb",
                        "id": 99798741,
                        "node_id": "U_kgDOBfLO1Q",
                        "avatar_url": "https://avatars.githubusercontent.com/u/99798741?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/dima-avdeev-jb",
                        "html_url": "https://github.com/dima-avdeev-jb",
                        "followers_url": "https://api.github.com/users/dima-avdeev-jb/followers",
                        "following_url": "https://api.github.com/users/dima-avdeev-jb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/dima-avdeev-jb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/dima-avdeev-jb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/dima-avdeev-jb/subscriptions",
                        "organizations_url": "https://api.github.com/users/dima-avdeev-jb/orgs",
                        "repos_url": "https://api.github.com/users/dima-avdeev-jb/repos",
                        "events_url": "https://api.github.com/users/dima-avdeev-jb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/dima-avdeev-jb/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    {
                        "login": "mazunin-v-jb",
                        "id": 124871594,
                        "node_id": "U_kgDOB3Fjqg",
                        "avatar_url": "https://avatars.githubusercontent.com/u/124871594?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/mazunin-v-jb",
                        "html_url": "https://github.com/mazunin-v-jb",
                        "followers_url": "https://api.github.com/users/mazunin-v-jb/followers",
                        "following_url": "https://api.github.com/users/mazunin-v-jb/following{/other_user}",
                        "gists_url": "https://api.github.com/users/mazunin-v-jb/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/mazunin-v-jb/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/mazunin-v-jb/subscriptions",
                        "organizations_url": "https://api.github.com/users/mazunin-v-jb/orgs",
                        "repos_url": "https://api.github.com/users/mazunin-v-jb/repos",
                        "events_url": "https://api.github.com/users/mazunin-v-jb/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/mazunin-v-jb/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 13,
                "created_at": "2023-09-05T04:47:21Z",
                "updated_at": "2023-10-26T09:27:14Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nHere are three issues about `Keyboard` And `TextField`:\r\n\r\n- [ ] Extra space between `Keyboard` and `TextField`.\r\n- [ ] When a `TextField` is included in a scrollable `Column`, if `TextField` is long enough, `TopAppBar` will exceed the edge of the screen. \r\n- [ ] No `TextField` on the screen, but the `Keyboard` is open.\r\n- [x] Crash when using Chinese input method on 1.5.10-beta02, caused by [SkikoUIView.kt#L513](https://github.com/JetBrains/compose-multiplatform-core/blob/jb-main/compose/ui/ui/src/uikitMain/kotlin/androidx/compose/ui/window/SkikoUIView.kt#L513)\r\n\r\n**Affected platforms**\r\nSelect one of the platforms below:\r\n- iOS\r\n\r\n**Versions**\r\n- Kotlin version*: 1.9.0\r\n- Compose Multiplatform version*: 1.5.0\r\n- OS version(s)* (required for Desktop and iOS issues): all\r\n- OS architecture (x86 or arm64): all\r\n\r\n**To Reproduce**\r\nSteps and/or the code snippet to reproduce the behavior:\r\n\r\nhttps://github.com/robxyy/keyboard-issues\r\n\r\n**Screenshots**\r\n\r\nhttps://github.com/JetBrains/compose-multiplatform/assets/9105106/1c2642be-dd92-4e9c-a3f9-8ef0c6a3427c\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780745891",
                "html_url": "https://github.com/JetBrains/compose-multiplatform/issues/3621#issuecomment-1780745891",
                "issue_url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/3621",
                "id": 1780745891,
                "node_id": "IC_kwDOEX5ujM5qJAaj",
                "user": {
                    "login": "mazunin-v-jb",
                    "id": 124871594,
                    "node_id": "U_kgDOB3Fjqg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/124871594?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/mazunin-v-jb",
                    "html_url": "https://github.com/mazunin-v-jb",
                    "followers_url": "https://api.github.com/users/mazunin-v-jb/followers",
                    "following_url": "https://api.github.com/users/mazunin-v-jb/following{/other_user}",
                    "gists_url": "https://api.github.com/users/mazunin-v-jb/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/mazunin-v-jb/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/mazunin-v-jb/subscriptions",
                    "organizations_url": "https://api.github.com/users/mazunin-v-jb/orgs",
                    "repos_url": "https://api.github.com/users/mazunin-v-jb/repos",
                    "events_url": "https://api.github.com/users/mazunin-v-jb/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/mazunin-v-jb/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T09:27:14Z",
                "updated_at": "2023-10-26T09:27:14Z",
                "author_association": "CONTRIBUTOR",
                "body": "@robxyy thank you for provided example.\r\nWe're planning to take it into work in the nearest future but for now I can't say anything specific about version where it is planned to be fixed.",
                "reactions": {
                    "url": "https://api.github.com/repos/JetBrains/compose-multiplatform/issues/comments/1780745891/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T09:27:15Z",
        "org": {
            "id": 878437,
            "login": "JetBrains",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/JetBrains",
            "avatar_url": "https://avatars.githubusercontent.com/u/878437?"
        }
    }
]