[
    {
        "id": "32897429786",
        "type": "PushEvent",
        "actor": {
            "id": 104205257,
            "login": "kwcanuck",
            "display_login": "kwcanuck",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwcanuck",
            "avatar_url": "https://avatars.githubusercontent.com/u/104205257?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15591118856,
            "size": 4,
            "distinct_size": 1,
            "ref": "refs/heads/about-gx",
            "head": "7bfe1f4c784a27ec06647f48597eedc362c02a42",
            "before": "bf794b8a43ea93ec490deef11a5e0251d3056182",
            "commits": [
                {
                    "sha": "705638199458e9fbd9c104555dea5976d0c789ea",
                    "author": {
                        "email": "49699333+dependabot[bot]@users.noreply.github.com",
                        "name": "dependabot[bot]"
                    },
                    "message": "[MAINTENANCE] Bump urllib3 from 1.26.17 to 1.26.18 in /docs_rtd (#8840)\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Nathan Farmer <NathanFarmer@users.noreply.github.com>\nCo-authored-by: T Pham <2117313+TrangPham@users.noreply.github.com>",
                    "distinct": false,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/705638199458e9fbd9c104555dea5976d0c789ea"
                },
                {
                    "sha": "fb1fbb0324391fbcdd3c54ea9af8e7d2e0dc75fa",
                    "author": {
                        "email": "NathanFarmer@users.noreply.github.com",
                        "name": "Nathan Farmer"
                    },
                    "message": "[MAINTENANCE] Cloud integration tests documentation (#8871)",
                    "distinct": false,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/fb1fbb0324391fbcdd3c54ea9af8e7d2e0dc75fa"
                },
                {
                    "sha": "38cace1f2fa991eb2e5022a00de66ae8b1a8b940",
                    "author": {
                        "email": "chetan@superconductive.com",
                        "name": "Chetan Kini"
                    },
                    "message": "[MAINTENANCE] Remove deprecated code in advance of v18 release (#8863)",
                    "distinct": false,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/38cace1f2fa991eb2e5022a00de66ae8b1a8b940"
                },
                {
                    "sha": "7bfe1f4c784a27ec06647f48597eedc362c02a42",
                    "author": {
                        "email": "104205257+kwcanuck@users.noreply.github.com",
                        "name": "Rob Gray"
                    },
                    "message": "Merge branch 'develop' into about-gx",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/7bfe1f4c784a27ec06647f48597eedc362c02a42"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T11:41:56Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897422901",
        "type": "PushEvent",
        "actor": {
            "id": 104205257,
            "login": "kwcanuck",
            "display_login": "kwcanuck",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwcanuck",
            "avatar_url": "https://avatars.githubusercontent.com/u/104205257?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15591115538,
            "size": 4,
            "distinct_size": 1,
            "ref": "refs/heads/m/_/add_precommit_badge",
            "head": "dcb741ad6140b5dba145fc7ac872eeac26d1db5f",
            "before": "9132d389d9025a9fe54b118ea55c4be5543a4604",
            "commits": [
                {
                    "sha": "705638199458e9fbd9c104555dea5976d0c789ea",
                    "author": {
                        "email": "49699333+dependabot[bot]@users.noreply.github.com",
                        "name": "dependabot[bot]"
                    },
                    "message": "[MAINTENANCE] Bump urllib3 from 1.26.17 to 1.26.18 in /docs_rtd (#8840)\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nCo-authored-by: Nathan Farmer <NathanFarmer@users.noreply.github.com>\nCo-authored-by: T Pham <2117313+TrangPham@users.noreply.github.com>",
                    "distinct": false,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/705638199458e9fbd9c104555dea5976d0c789ea"
                },
                {
                    "sha": "fb1fbb0324391fbcdd3c54ea9af8e7d2e0dc75fa",
                    "author": {
                        "email": "NathanFarmer@users.noreply.github.com",
                        "name": "Nathan Farmer"
                    },
                    "message": "[MAINTENANCE] Cloud integration tests documentation (#8871)",
                    "distinct": false,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/fb1fbb0324391fbcdd3c54ea9af8e7d2e0dc75fa"
                },
                {
                    "sha": "38cace1f2fa991eb2e5022a00de66ae8b1a8b940",
                    "author": {
                        "email": "chetan@superconductive.com",
                        "name": "Chetan Kini"
                    },
                    "message": "[MAINTENANCE] Remove deprecated code in advance of v18 release (#8863)",
                    "distinct": false,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/38cace1f2fa991eb2e5022a00de66ae8b1a8b940"
                },
                {
                    "sha": "dcb741ad6140b5dba145fc7ac872eeac26d1db5f",
                    "author": {
                        "email": "104205257+kwcanuck@users.noreply.github.com",
                        "name": "Rob Gray"
                    },
                    "message": "Merge branch 'develop' into m/_/add_precommit_badge",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/dcb741ad6140b5dba145fc7ac872eeac26d1db5f"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T11:41:38Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897394975",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 86324825,
            "login": "codesee-maps[bot]",
            "display_login": "codesee-maps",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codesee-maps[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/86324825?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/events",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8876",
                "id": 1965325520,
                "node_id": "PR_kwDOBiS_IM5d9lt6",
                "number": 8876,
                "title": "[MAINTENANCE] Add local verify step for pact tests",
                "user": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 5386289227,
                        "node_id": "LA_kwDOBiS_IM8AAAABQQxASw",
                        "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/core",
                        "name": "core",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "NathanFarmer",
                        "id": 19361723,
                        "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/NathanFarmer",
                        "html_url": "https://github.com/NathanFarmer",
                        "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                        "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                        "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                        "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                        "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T11:29:43Z",
                "updated_at": "2023-10-27T11:40:27Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876",
                    "html_url": "https://github.com/great-expectations/great_expectations/pull/8876",
                    "diff_url": "https://github.com/great-expectations/great_expectations/pull/8876.diff",
                    "patch_url": "https://github.com/great-expectations/great_expectations/pull/8876.patch",
                    "merged_at": null
                },
                "body": "Add local verify step for Pact tests\r\n\r\n- [x] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\r\n- [x] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\r\n- [x] Code is linted - run `invoke lint` (uses `black` + `ruff`)\r\n- [x] Appropriate tests and docs have been updated\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782768642",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8876#issuecomment-1782768642",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876",
                "id": 1782768642,
                "node_id": "IC_kwDOBiS_IM5qQuQC",
                "user": {
                    "login": "codesee-maps[bot]",
                    "id": 86324825,
                    "node_id": "MDM6Qm90ODYzMjQ4MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/122769?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/codesee-maps%5Bbot%5D",
                    "html_url": "https://github.com/apps/codesee-maps",
                    "followers_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:40:27Z",
                "updated_at": "2023-10-27T11:40:27Z",
                "author_association": "CONTRIBUTOR",
                "body": "<details open>\n<summary><b>\ud83d\udc47 <a href=\"https://app.codesee.io/r/reviews?pr=8876&src=https%3A%2F%2Fgithub.com%2Fgreat-expectations%2Fgreat_expectations\">Click on the image</a> for a new way to code review</b>\n</summary>\n\n####\n\n[![Review these changes using an interactive CodeSee Map](https://s3.us-east-2.amazonaws.com/maps.codesee.io/images/github/great-expectations/great_expectations/8876/f375d3a1/ad7412f976903cdfd21f94496d3ec58b9f135987.svg)](https://app.codesee.io/r/reviews?pr=8876&src=https%3A%2F%2Fgithub.com%2Fgreat-expectations%2Fgreat_expectations)\n\n#### Legend\n<img src=\"https://app.codesee.io/Legend_v3.png\" alt=\"CodeSee Map legend\" width=\"220\" height=\"156\">\n</details>",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782768642/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:40:27Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897239200",
        "type": "PushEvent",
        "actor": {
            "id": 104205257,
            "login": "kwcanuck",
            "display_login": "kwcanuck",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwcanuck",
            "avatar_url": "https://avatars.githubusercontent.com/u/104205257?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15591026525,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/about-gx",
            "head": "bf794b8a43ea93ec490deef11a5e0251d3056182",
            "before": "2612fe109e88e0b3a86f23818d751f52fb7daa2c",
            "commits": [
                {
                    "sha": "bf794b8a43ea93ec490deef11a5e0251d3056182",
                    "author": {
                        "email": "104205257+kwcanuck@users.noreply.github.com",
                        "name": "Rob Gray"
                    },
                    "message": "Minor edits.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/bf794b8a43ea93ec490deef11a5e0251d3056182"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T11:33:50Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897157164",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 40209326,
            "login": "netlify[bot]",
            "display_login": "netlify",
            "gravatar_id": "",
            "url": "https://api.github.com/users/netlify[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/40209326?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/events",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8876",
                "id": 1965325520,
                "node_id": "PR_kwDOBiS_IM5d9lt6",
                "number": 8876,
                "title": "[MAINTENANCE] Add local verify step for pact tests",
                "user": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 5386289227,
                        "node_id": "LA_kwDOBiS_IM8AAAABQQxASw",
                        "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/core",
                        "name": "core",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "NathanFarmer",
                        "id": 19361723,
                        "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/NathanFarmer",
                        "html_url": "https://github.com/NathanFarmer",
                        "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                        "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                        "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                        "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                        "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T11:29:43Z",
                "updated_at": "2023-10-27T11:30:19Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876",
                    "html_url": "https://github.com/great-expectations/great_expectations/pull/8876",
                    "diff_url": "https://github.com/great-expectations/great_expectations/pull/8876.diff",
                    "patch_url": "https://github.com/great-expectations/great_expectations/pull/8876.patch",
                    "merged_at": null
                },
                "body": "Add local verify step for Pact tests\r\n\r\n- [x] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\r\n- [x] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\r\n- [x] Code is linted - run `invoke lint` (uses `black` + `ruff`)\r\n- [x] Appropriate tests and docs have been updated\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782755215",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8876#issuecomment-1782755215",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876",
                "id": 1782755215,
                "node_id": "IC_kwDOBiS_IM5qQq-P",
                "user": {
                    "login": "netlify[bot]",
                    "id": 40209326,
                    "node_id": "MDM6Qm90NDAyMDkzMjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/13473?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/netlify%5Bbot%5D",
                    "html_url": "https://github.com/apps/netlify",
                    "followers_url": "https://api.github.com/users/netlify%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/netlify%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/netlify%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/netlify%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/netlify%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/netlify%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/netlify%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/netlify%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/netlify%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:30:18Z",
                "updated_at": "2023-10-27T11:30:18Z",
                "author_association": "NONE",
                "body": "### <span aria-hidden=\"true\">\ud83d\udc77</span> Deploy Preview for *niobium-lead-7998* processing.\n\n\n|  Name | Link |\n|:-:|------------------------|\n|<span aria-hidden=\"true\">\ud83d\udd28</span> Latest commit | ad7412f976903cdfd21f94496d3ec58b9f135987 |\n|<span aria-hidden=\"true\">\ud83d\udd0d</span> Latest deploy log | https://app.netlify.com/sites/niobium-lead-7998/deploys/653b9f2afa2b36000891a6f6 |",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782755215/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:30:19Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897143471",
        "type": "PullRequestEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "opened",
            "number": 8876,
            "pull_request": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876",
                "id": 1576426362,
                "node_id": "PR_kwDOBiS_IM5d9lt6",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8876",
                "diff_url": "https://github.com/great-expectations/great_expectations/pull/8876.diff",
                "patch_url": "https://github.com/great-expectations/great_expectations/pull/8876.patch",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876",
                "number": 8876,
                "state": "open",
                "locked": false,
                "title": "[MAINTENANCE] Add local verify step for pact tests",
                "user": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\r\n\r\n- [x] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\r\n- [x] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\r\n- [x] Code is linted - run `invoke lint` (uses `black` + `ruff`)\r\n- [x] Appropriate tests and docs have been updated\r\n",
                "created_at": "2023-10-27T11:29:43Z",
                "updated_at": "2023-10-27T11:29:43Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "NathanFarmer",
                        "id": 19361723,
                        "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/NathanFarmer",
                        "html_url": "https://github.com/NathanFarmer",
                        "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                        "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                        "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                        "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                        "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876/commits",
                "review_comments_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876/comments",
                "review_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/comments",
                "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/ad7412f976903cdfd21f94496d3ec58b9f135987",
                "head": {
                    "label": "great-expectations:m/PP-662/add-local-verify-step",
                    "ref": "m/PP-662/add-local-verify-step",
                    "sha": "ad7412f976903cdfd21f94496d3ec58b9f135987",
                    "user": {
                        "login": "great-expectations",
                        "id": 31670619,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/great-expectations",
                        "html_url": "https://github.com/great-expectations",
                        "followers_url": "https://api.github.com/users/great-expectations/followers",
                        "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                        "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                        "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                        "repos_url": "https://api.github.com/users/great-expectations/repos",
                        "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 103071520,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwNzE1MjA=",
                        "name": "great_expectations",
                        "full_name": "great-expectations/great_expectations",
                        "private": false,
                        "owner": {
                            "login": "great-expectations",
                            "id": 31670619,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/great-expectations",
                            "html_url": "https://github.com/great-expectations",
                            "followers_url": "https://api.github.com/users/great-expectations/followers",
                            "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                            "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                            "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                            "repos_url": "https://api.github.com/users/great-expectations/repos",
                            "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/great-expectations/great_expectations",
                        "description": "Always know what to expect from your data.",
                        "fork": false,
                        "url": "https://api.github.com/repos/great-expectations/great_expectations",
                        "forks_url": "https://api.github.com/repos/great-expectations/great_expectations/forks",
                        "keys_url": "https://api.github.com/repos/great-expectations/great_expectations/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/great-expectations/great_expectations/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/great-expectations/great_expectations/teams",
                        "hooks_url": "https://api.github.com/repos/great-expectations/great_expectations/hooks",
                        "issue_events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/great-expectations/great_expectations/events",
                        "assignees_url": "https://api.github.com/repos/great-expectations/great_expectations/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/great-expectations/great_expectations/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/great-expectations/great_expectations/tags",
                        "blobs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/great-expectations/great_expectations/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/great-expectations/great_expectations/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/great-expectations/great_expectations/languages",
                        "stargazers_url": "https://api.github.com/repos/great-expectations/great_expectations/stargazers",
                        "contributors_url": "https://api.github.com/repos/great-expectations/great_expectations/contributors",
                        "subscribers_url": "https://api.github.com/repos/great-expectations/great_expectations/subscribers",
                        "subscription_url": "https://api.github.com/repos/great-expectations/great_expectations/subscription",
                        "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/great-expectations/great_expectations/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/great-expectations/great_expectations/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/great-expectations/great_expectations/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/great-expectations/great_expectations/merges",
                        "archive_url": "https://api.github.com/repos/great-expectations/great_expectations/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/great-expectations/great_expectations/downloads",
                        "issues_url": "https://api.github.com/repos/great-expectations/great_expectations/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/great-expectations/great_expectations/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/great-expectations/great_expectations/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/labels{/name}",
                        "releases_url": "https://api.github.com/repos/great-expectations/great_expectations/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/great-expectations/great_expectations/deployments",
                        "created_at": "2017-09-11T00:18:46Z",
                        "updated_at": "2023-10-27T09:01:53Z",
                        "pushed_at": "2023-10-27T11:29:44Z",
                        "git_url": "git://github.com/great-expectations/great_expectations.git",
                        "ssh_url": "git@github.com:great-expectations/great_expectations.git",
                        "clone_url": "https://github.com/great-expectations/great_expectations.git",
                        "svn_url": "https://github.com/great-expectations/great_expectations",
                        "homepage": "https://docs.greatexpectations.io/",
                        "size": 173747,
                        "stargazers_count": 8932,
                        "watchers_count": 8932,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 1405,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 145,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cleandata",
                            "data-engineering",
                            "data-profilers",
                            "data-profiling",
                            "data-quality",
                            "data-science",
                            "data-unit-tests",
                            "datacleaner",
                            "datacleaning",
                            "dataquality",
                            "dataunittest",
                            "eda",
                            "exploratory-analysis",
                            "exploratory-data-analysis",
                            "exploratorydataanalysis",
                            "mlops",
                            "pipeline",
                            "pipeline-debt",
                            "pipeline-testing",
                            "pipeline-tests"
                        ],
                        "visibility": "public",
                        "forks": 1405,
                        "open_issues": 145,
                        "watchers": 8932,
                        "default_branch": "develop"
                    }
                },
                "base": {
                    "label": "great-expectations:develop",
                    "ref": "develop",
                    "sha": "38cace1f2fa991eb2e5022a00de66ae8b1a8b940",
                    "user": {
                        "login": "great-expectations",
                        "id": 31670619,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/great-expectations",
                        "html_url": "https://github.com/great-expectations",
                        "followers_url": "https://api.github.com/users/great-expectations/followers",
                        "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                        "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                        "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                        "repos_url": "https://api.github.com/users/great-expectations/repos",
                        "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 103071520,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwNzE1MjA=",
                        "name": "great_expectations",
                        "full_name": "great-expectations/great_expectations",
                        "private": false,
                        "owner": {
                            "login": "great-expectations",
                            "id": 31670619,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/great-expectations",
                            "html_url": "https://github.com/great-expectations",
                            "followers_url": "https://api.github.com/users/great-expectations/followers",
                            "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                            "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                            "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                            "repos_url": "https://api.github.com/users/great-expectations/repos",
                            "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/great-expectations/great_expectations",
                        "description": "Always know what to expect from your data.",
                        "fork": false,
                        "url": "https://api.github.com/repos/great-expectations/great_expectations",
                        "forks_url": "https://api.github.com/repos/great-expectations/great_expectations/forks",
                        "keys_url": "https://api.github.com/repos/great-expectations/great_expectations/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/great-expectations/great_expectations/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/great-expectations/great_expectations/teams",
                        "hooks_url": "https://api.github.com/repos/great-expectations/great_expectations/hooks",
                        "issue_events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/great-expectations/great_expectations/events",
                        "assignees_url": "https://api.github.com/repos/great-expectations/great_expectations/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/great-expectations/great_expectations/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/great-expectations/great_expectations/tags",
                        "blobs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/great-expectations/great_expectations/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/great-expectations/great_expectations/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/great-expectations/great_expectations/languages",
                        "stargazers_url": "https://api.github.com/repos/great-expectations/great_expectations/stargazers",
                        "contributors_url": "https://api.github.com/repos/great-expectations/great_expectations/contributors",
                        "subscribers_url": "https://api.github.com/repos/great-expectations/great_expectations/subscribers",
                        "subscription_url": "https://api.github.com/repos/great-expectations/great_expectations/subscription",
                        "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/great-expectations/great_expectations/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/great-expectations/great_expectations/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/great-expectations/great_expectations/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/great-expectations/great_expectations/merges",
                        "archive_url": "https://api.github.com/repos/great-expectations/great_expectations/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/great-expectations/great_expectations/downloads",
                        "issues_url": "https://api.github.com/repos/great-expectations/great_expectations/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/great-expectations/great_expectations/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/great-expectations/great_expectations/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/labels{/name}",
                        "releases_url": "https://api.github.com/repos/great-expectations/great_expectations/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/great-expectations/great_expectations/deployments",
                        "created_at": "2017-09-11T00:18:46Z",
                        "updated_at": "2023-10-27T09:01:53Z",
                        "pushed_at": "2023-10-27T11:29:44Z",
                        "git_url": "git://github.com/great-expectations/great_expectations.git",
                        "ssh_url": "git@github.com:great-expectations/great_expectations.git",
                        "clone_url": "https://github.com/great-expectations/great_expectations.git",
                        "svn_url": "https://github.com/great-expectations/great_expectations",
                        "homepage": "https://docs.greatexpectations.io/",
                        "size": 173747,
                        "stargazers_count": 8932,
                        "watchers_count": 8932,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 1405,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 145,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cleandata",
                            "data-engineering",
                            "data-profilers",
                            "data-profiling",
                            "data-quality",
                            "data-science",
                            "data-unit-tests",
                            "datacleaner",
                            "datacleaning",
                            "dataquality",
                            "dataunittest",
                            "eda",
                            "exploratory-analysis",
                            "exploratory-data-analysis",
                            "exploratorydataanalysis",
                            "mlops",
                            "pipeline",
                            "pipeline-debt",
                            "pipeline-testing",
                            "pipeline-tests"
                        ],
                        "visibility": "public",
                        "forks": 1405,
                        "open_issues": 145,
                        "watchers": 8932,
                        "default_branch": "develop"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876"
                    },
                    "html": {
                        "href": "https://github.com/great-expectations/great_expectations/pull/8876"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/issues/8876/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8876/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/statuses/ad7412f976903cdfd21f94496d3ec58b9f135987"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 2,
                "additions": 32,
                "deletions": 10,
                "changed_files": 2
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:29:45Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897130719",
        "type": "CreateEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "ref": "m/PP-662/add-local-verify-step",
            "ref_type": "branch",
            "master_branch": "develop",
            "description": "Always know what to expect from your data.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T11:29:12Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32897129819",
        "type": "PushEvent",
        "actor": {
            "id": 104205257,
            "login": "kwcanuck",
            "display_login": "kwcanuck",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kwcanuck",
            "avatar_url": "https://avatars.githubusercontent.com/u/104205257?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15590973073,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/about-gx",
            "head": "2612fe109e88e0b3a86f23818d751f52fb7daa2c",
            "before": "f9245616a4790b3b298071a9c30d4830b5d3f709",
            "commits": [
                {
                    "sha": "2612fe109e88e0b3a86f23818d751f52fb7daa2c",
                    "author": {
                        "email": "104205257+kwcanuck@users.noreply.github.com",
                        "name": "Rob Gray"
                    },
                    "message": "Updated link.",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/2612fe109e88e0b3a86f23818d751f52fb7daa2c"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T11:29:09Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32893585334",
        "type": "ForkEvent",
        "actor": {
            "id": 29813896,
            "login": "Pim-Claessens",
            "display_login": "Pim-Claessens",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pim-Claessens",
            "avatar_url": "https://avatars.githubusercontent.com/u/29813896?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "forkee": {
                "id": 710707042,
                "node_id": "R_kgDOKlyHYg",
                "name": "great_expectations",
                "full_name": "Pim-Claessens/great_expectations",
                "private": false,
                "owner": {
                    "login": "Pim-Claessens",
                    "id": 29813896,
                    "node_id": "MDQ6VXNlcjI5ODEzODk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29813896?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Pim-Claessens",
                    "html_url": "https://github.com/Pim-Claessens",
                    "followers_url": "https://api.github.com/users/Pim-Claessens/followers",
                    "following_url": "https://api.github.com/users/Pim-Claessens/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Pim-Claessens/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Pim-Claessens/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Pim-Claessens/subscriptions",
                    "organizations_url": "https://api.github.com/users/Pim-Claessens/orgs",
                    "repos_url": "https://api.github.com/users/Pim-Claessens/repos",
                    "events_url": "https://api.github.com/users/Pim-Claessens/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Pim-Claessens/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/Pim-Claessens/great_expectations",
                "description": "Always know what to expect from your data.",
                "fork": true,
                "url": "https://api.github.com/repos/Pim-Claessens/great_expectations",
                "forks_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/forks",
                "keys_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/teams",
                "hooks_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/hooks",
                "issue_events_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/issues/events{/number}",
                "events_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/events",
                "assignees_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/assignees{/user}",
                "branches_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/branches{/branch}",
                "tags_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/tags",
                "blobs_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/languages",
                "stargazers_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/stargazers",
                "contributors_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/contributors",
                "subscribers_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/subscribers",
                "subscription_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/subscription",
                "commits_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/contents/{+path}",
                "compare_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/merges",
                "archive_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/downloads",
                "issues_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/issues{/number}",
                "pulls_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/labels{/name}",
                "releases_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/releases{/id}",
                "deployments_url": "https://api.github.com/repos/Pim-Claessens/great_expectations/deployments",
                "created_at": "2023-10-27T09:09:57Z",
                "updated_at": "2023-10-27T09:09:57Z",
                "pushed_at": "2023-10-27T06:58:24Z",
                "git_url": "git://github.com/Pim-Claessens/great_expectations.git",
                "ssh_url": "git@github.com:Pim-Claessens/great_expectations.git",
                "clone_url": "https://github.com/Pim-Claessens/great_expectations.git",
                "svn_url": "https://github.com/Pim-Claessens/great_expectations",
                "homepage": "https://docs.greatexpectations.io/",
                "size": 173747,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:09:58Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32893459356",
        "type": "IssuesEvent",
        "actor": {
            "id": 29813896,
            "login": "Pim-Claessens",
            "display_login": "Pim-Claessens",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pim-Claessens",
            "avatar_url": "https://avatars.githubusercontent.com/u/29813896?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8875",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8875/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8875/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8875/events",
                "html_url": "https://github.com/great-expectations/great_expectations/issues/8875",
                "id": 1965089556,
                "node_id": "I_kwDOBiS_IM51IOMU",
                "number": 8875,
                "title": "AWS Athena regex",
                "user": {
                    "login": "Pim-Claessens",
                    "id": 29813896,
                    "node_id": "MDQ6VXNlcjI5ODEzODk2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29813896?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Pim-Claessens",
                    "html_url": "https://github.com/Pim-Claessens",
                    "followers_url": "https://api.github.com/users/Pim-Claessens/followers",
                    "following_url": "https://api.github.com/users/Pim-Claessens/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Pim-Claessens/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Pim-Claessens/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Pim-Claessens/subscriptions",
                    "organizations_url": "https://api.github.com/users/Pim-Claessens/orgs",
                    "repos_url": "https://api.github.com/users/Pim-Claessens/repos",
                    "events_url": "https://api.github.com/users/Pim-Claessens/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Pim-Claessens/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T09:05:11Z",
                "updated_at": "2023-10-27T09:05:11Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently, trying something like 'expect_column_values_to_match_regex' fails with the dialect not implemented error. But the regex expressions do have support for trino.\r\n\r\n**Describe the solution you'd like**\r\nGiven that Trino and AWS Athena are basically the same in this regard (and probably across the board for most cases). Can AWS Athena and Trino be treated similar? I'm not sure how that will break other stuff, but most of the basic regex matching and stuff is exactly the same\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8875/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8875/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:05:13Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32893371574",
        "type": "WatchEvent",
        "actor": {
            "id": 130202234,
            "login": "mortezahajipourworks",
            "display_login": "mortezahajipourworks",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mortezahajipourworks",
            "avatar_url": "https://avatars.githubusercontent.com/u/130202234?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:01:53Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32890344186",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15587656389,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "a150070b46588e3db5ebeb0b1e185cc3c8420c5c",
            "before": "832b08b954082b0a71d44d3ccf0e1de3c5d65430",
            "commits": [
                {
                    "sha": "a150070b46588e3db5ebeb0b1e185cc3c8420c5c",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Pass request_body to POST",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/a150070b46588e3db5ebeb0b1e185cc3c8420c5c"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T06:58:23Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32889949500",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15587461701,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "832b08b954082b0a71d44d3ccf0e1de3c5d65430",
            "before": "6e2674242a69646e4c2779a764e13791ed4a08e9",
            "commits": [
                {
                    "sha": "832b08b954082b0a71d44d3ccf0e1de3c5d65430",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Fix test",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/832b08b954082b0a71d44d3ccf0e1de3c5d65430"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T06:38:48Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32889394390",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15587174389,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "6e2674242a69646e4c2779a764e13791ed4a08e9",
            "before": "8863ad8e70d499e22600c9a8922375c385a076fd",
            "commits": [
                {
                    "sha": "6e2674242a69646e4c2779a764e13791ed4a08e9",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Don't allow request_headers to be passed at all",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/6e2674242a69646e4c2779a764e13791ed4a08e9"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T06:08:38Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32889117588",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15587028678,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "8863ad8e70d499e22600c9a8922375c385a076fd",
            "before": "ea4dd046130d8304261c2d947ce08bdf2e946fa8",
            "commits": [
                {
                    "sha": "8863ad8e70d499e22600c9a8922375c385a076fd",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Don't re-use gx_cloud_session.headers",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/8863ad8e70d499e22600c9a8922375c385a076fd"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T05:51:35Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32888795534",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15586861913,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "ea4dd046130d8304261c2d947ce08bdf2e946fa8",
            "before": "3fe57f92e5a89957d6ade3f77e8aa473628890a8",
            "commits": [
                {
                    "sha": "ea4dd046130d8304261c2d947ce08bdf2e946fa8",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Remove list in get datasource response",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/ea4dd046130d8304261c2d947ce08bdf2e946fa8"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T05:29:31Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32888562587",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15586730612,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "3fe57f92e5a89957d6ade3f77e8aa473628890a8",
            "before": "79c7be50d64bd07c36e8019e9c98ffdf339feaf6",
            "commits": [
                {
                    "sha": "3fe57f92e5a89957d6ade3f77e8aa473628890a8",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Re-use session for entire module",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/3fe57f92e5a89957d6ade3f77e8aa473628890a8"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T05:14:58Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32888180458",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15586526850,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "79c7be50d64bd07c36e8019e9c98ffdf339feaf6",
            "before": "9e39628dc2f964a3997952ba22a487a7b7b94342",
            "commits": [
                {
                    "sha": "79c7be50d64bd07c36e8019e9c98ffdf339feaf6",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Comment out broken test temporarily",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/79c7be50d64bd07c36e8019e9c98ffdf339feaf6"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T04:46:44Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32887995507",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15586427819,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "9e39628dc2f964a3997952ba22a487a7b7b94342",
            "before": "f7c14187f11cd60e3b62c9e1cd9b80a111fe621f",
            "commits": [
                {
                    "sha": "9e39628dc2f964a3997952ba22a487a7b7b94342",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Type checker",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/9e39628dc2f964a3997952ba22a487a7b7b94342"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T04:32:13Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32887886640",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15586368738,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "f7c14187f11cd60e3b62c9e1cd9b80a111fe621f",
            "before": "843fc469fdda2157a3d8c180142ca23d21e441be",
            "commits": [
                {
                    "sha": "f7c14187f11cd60e3b62c9e1cd9b80a111fe621f",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Fix issue with missing env var",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/f7c14187f11cd60e3b62c9e1cd9b80a111fe621f"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T04:23:31Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32887813942",
        "type": "PushEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "repository_id": 103071520,
            "push_id": 15586329387,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/m/PP-662/contract-test-add-datasource",
            "head": "843fc469fdda2157a3d8c180142ca23d21e441be",
            "before": "5483019238ed763a1502ebd4c85284a62484f67c",
            "commits": [
                {
                    "sha": "843fc469fdda2157a3d8c180142ca23d21e441be",
                    "author": {
                        "email": "nathan@greatexpectations.io",
                        "name": "Nathan Farmer"
                    },
                    "message": "Refactor ContractInteraction",
                    "distinct": true,
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/commits/843fc469fdda2157a3d8c180142ca23d21e441be"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-27T04:17:50Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32886098092",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 86324825,
            "login": "codesee-maps[bot]",
            "display_login": "codesee-maps",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codesee-maps[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/86324825?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/events",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8874",
                "id": 1964623058,
                "node_id": "PR_kwDOBiS_IM5d7Okc",
                "number": 8874,
                "title": "[MAINTENANCE] Add contract tests for GET and POST datasource",
                "user": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 5386289227,
                        "node_id": "LA_kwDOBiS_IM8AAAABQQxASw",
                        "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/core",
                        "name": "core",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "NathanFarmer",
                        "id": 19361723,
                        "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/NathanFarmer",
                        "html_url": "https://github.com/NathanFarmer",
                        "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                        "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                        "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                        "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                        "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T01:47:57Z",
                "updated_at": "2023-10-27T01:59:18Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874",
                    "html_url": "https://github.com/great-expectations/great_expectations/pull/8874",
                    "diff_url": "https://github.com/great-expectations/great_expectations/pull/8874.diff",
                    "patch_url": "https://github.com/great-expectations/great_expectations/pull/8874.patch",
                    "merged_at": null
                },
                "body": "\u26a0\ufe0f WIP PR - Converted from draft to test `cloud-tests` in CI\r\n\r\n- [X] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\r\n- [X] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\r\n- [X] Code is linted - run `invoke lint` (uses `black` + `ruff`)\r\n- [X] Appropriate tests and docs have been updated\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782171874",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8874#issuecomment-1782171874",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874",
                "id": 1782171874,
                "node_id": "IC_kwDOBiS_IM5qOcji",
                "user": {
                    "login": "codesee-maps[bot]",
                    "id": 86324825,
                    "node_id": "MDM6Qm90ODYzMjQ4MjU=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/122769?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/codesee-maps%5Bbot%5D",
                    "html_url": "https://github.com/apps/codesee-maps",
                    "followers_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/codesee-maps%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:59:17Z",
                "updated_at": "2023-10-27T01:59:17Z",
                "author_association": "CONTRIBUTOR",
                "body": "<details open>\n<summary><b>\ud83d\udc47 <a href=\"https://app.codesee.io/r/reviews?pr=8874&src=https%3A%2F%2Fgithub.com%2Fgreat-expectations%2Fgreat_expectations\">Click on the image</a> for a new way to code review</b>\n</summary>\n\n####\n\n[![Review these changes using an interactive CodeSee Map](https://s3.us-east-2.amazonaws.com/maps.codesee.io/images/github/great-expectations/great_expectations/8874/1ed9827f/5483019238ed763a1502ebd4c85284a62484f67c.svg)](https://app.codesee.io/r/reviews?pr=8874&src=https%3A%2F%2Fgithub.com%2Fgreat-expectations%2Fgreat_expectations)\n\n#### Legend\n<img src=\"https://app.codesee.io/Legend_v3.png\" alt=\"CodeSee Map legend\" width=\"220\" height=\"156\">\n</details>",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782171874/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:59:18Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32885937705",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 40209326,
            "login": "netlify[bot]",
            "display_login": "netlify",
            "gravatar_id": "",
            "url": "https://api.github.com/users/netlify[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/40209326?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/events",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8874",
                "id": 1964623058,
                "node_id": "PR_kwDOBiS_IM5d7Okc",
                "number": 8874,
                "title": "[MAINTENANCE] Add contract tests for GET and POST datasource",
                "user": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "NathanFarmer",
                        "id": 19361723,
                        "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/NathanFarmer",
                        "html_url": "https://github.com/NathanFarmer",
                        "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                        "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                        "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                        "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                        "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                        "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T01:47:57Z",
                "updated_at": "2023-10-27T01:48:02Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "draft": false,
                "pull_request": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874",
                    "html_url": "https://github.com/great-expectations/great_expectations/pull/8874",
                    "diff_url": "https://github.com/great-expectations/great_expectations/pull/8874.diff",
                    "patch_url": "https://github.com/great-expectations/great_expectations/pull/8874.patch",
                    "merged_at": null
                },
                "body": "\u26a0\ufe0f WIP PR - Converted from draft to test `cloud-tests` in CI\r\n\r\n- [X] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\r\n- [X] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\r\n- [X] Code is linted - run `invoke lint` (uses `black` + `ruff`)\r\n- [X] Appropriate tests and docs have been updated\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782164909",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8874#issuecomment-1782164909",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874",
                "id": 1782164909,
                "node_id": "IC_kwDOBiS_IM5qOa2t",
                "user": {
                    "login": "netlify[bot]",
                    "id": 40209326,
                    "node_id": "MDM6Qm90NDAyMDkzMjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/13473?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/netlify%5Bbot%5D",
                    "html_url": "https://github.com/apps/netlify",
                    "followers_url": "https://api.github.com/users/netlify%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/netlify%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/netlify%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/netlify%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/netlify%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/netlify%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/netlify%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/netlify%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/netlify%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T01:48:02Z",
                "updated_at": "2023-10-27T01:48:02Z",
                "author_association": "NONE",
                "body": "### <span aria-hidden=\"true\">\ud83d\udc77</span> Deploy Preview for *niobium-lead-7998* processing.\n\n\n|  Name | Link |\n|:-:|------------------------|\n|<span aria-hidden=\"true\">\ud83d\udd28</span> Latest commit | 5483019238ed763a1502ebd4c85284a62484f67c |\n|<span aria-hidden=\"true\">\ud83d\udd0d</span> Latest deploy log | https://app.netlify.com/sites/niobium-lead-7998/deploys/653b16d0f10c0e00088b2532 |",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782164909/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:48:02Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32885936909",
        "type": "PullRequestEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "opened",
            "number": 8874,
            "pull_request": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874",
                "id": 1575807260,
                "node_id": "PR_kwDOBiS_IM5d7Okc",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8874",
                "diff_url": "https://github.com/great-expectations/great_expectations/pull/8874.diff",
                "patch_url": "https://github.com/great-expectations/great_expectations/pull/8874.patch",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874",
                "number": 8874,
                "state": "open",
                "locked": false,
                "title": "[MAINTENANCE] Add contract tests for GET and POST datasource",
                "user": {
                    "login": "NathanFarmer",
                    "id": 19361723,
                    "node_id": "MDQ6VXNlcjE5MzYxNzIz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19361723?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/NathanFarmer",
                    "html_url": "https://github.com/NathanFarmer",
                    "followers_url": "https://api.github.com/users/NathanFarmer/followers",
                    "following_url": "https://api.github.com/users/NathanFarmer/following{/other_user}",
                    "gists_url": "https://api.github.com/users/NathanFarmer/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/NathanFarmer/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/NathanFarmer/subscriptions",
                    "organizations_url": "https://api.github.com/users/NathanFarmer/orgs",
                    "repos_url": "https://api.github.com/users/NathanFarmer/repos",
                    "events_url": "https://api.github.com/users/NathanFarmer/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/NathanFarmer/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\u26a0\ufe0f WIP PR - Converted from draft to test `cloud-tests` in CI\r\n\r\n- [X] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\r\n- [X] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\r\n- [X] Code is linted - run `invoke lint` (uses `black` + `ruff`)\r\n- [X] Appropriate tests and docs have been updated\r\n",
                "created_at": "2023-10-27T01:47:57Z",
                "updated_at": "2023-10-27T01:47:57Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874/commits",
                "review_comments_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874/comments",
                "review_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/comments",
                "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/5483019238ed763a1502ebd4c85284a62484f67c",
                "head": {
                    "label": "great-expectations:m/PP-662/contract-test-add-datasource",
                    "ref": "m/PP-662/contract-test-add-datasource",
                    "sha": "5483019238ed763a1502ebd4c85284a62484f67c",
                    "user": {
                        "login": "great-expectations",
                        "id": 31670619,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/great-expectations",
                        "html_url": "https://github.com/great-expectations",
                        "followers_url": "https://api.github.com/users/great-expectations/followers",
                        "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                        "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                        "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                        "repos_url": "https://api.github.com/users/great-expectations/repos",
                        "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 103071520,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwNzE1MjA=",
                        "name": "great_expectations",
                        "full_name": "great-expectations/great_expectations",
                        "private": false,
                        "owner": {
                            "login": "great-expectations",
                            "id": 31670619,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/great-expectations",
                            "html_url": "https://github.com/great-expectations",
                            "followers_url": "https://api.github.com/users/great-expectations/followers",
                            "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                            "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                            "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                            "repos_url": "https://api.github.com/users/great-expectations/repos",
                            "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/great-expectations/great_expectations",
                        "description": "Always know what to expect from your data.",
                        "fork": false,
                        "url": "https://api.github.com/repos/great-expectations/great_expectations",
                        "forks_url": "https://api.github.com/repos/great-expectations/great_expectations/forks",
                        "keys_url": "https://api.github.com/repos/great-expectations/great_expectations/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/great-expectations/great_expectations/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/great-expectations/great_expectations/teams",
                        "hooks_url": "https://api.github.com/repos/great-expectations/great_expectations/hooks",
                        "issue_events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/great-expectations/great_expectations/events",
                        "assignees_url": "https://api.github.com/repos/great-expectations/great_expectations/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/great-expectations/great_expectations/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/great-expectations/great_expectations/tags",
                        "blobs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/great-expectations/great_expectations/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/great-expectations/great_expectations/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/great-expectations/great_expectations/languages",
                        "stargazers_url": "https://api.github.com/repos/great-expectations/great_expectations/stargazers",
                        "contributors_url": "https://api.github.com/repos/great-expectations/great_expectations/contributors",
                        "subscribers_url": "https://api.github.com/repos/great-expectations/great_expectations/subscribers",
                        "subscription_url": "https://api.github.com/repos/great-expectations/great_expectations/subscription",
                        "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/great-expectations/great_expectations/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/great-expectations/great_expectations/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/great-expectations/great_expectations/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/great-expectations/great_expectations/merges",
                        "archive_url": "https://api.github.com/repos/great-expectations/great_expectations/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/great-expectations/great_expectations/downloads",
                        "issues_url": "https://api.github.com/repos/great-expectations/great_expectations/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/great-expectations/great_expectations/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/great-expectations/great_expectations/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/labels{/name}",
                        "releases_url": "https://api.github.com/repos/great-expectations/great_expectations/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/great-expectations/great_expectations/deployments",
                        "created_at": "2017-09-11T00:18:46Z",
                        "updated_at": "2023-10-26T12:40:48Z",
                        "pushed_at": "2023-10-27T01:47:58Z",
                        "git_url": "git://github.com/great-expectations/great_expectations.git",
                        "ssh_url": "git@github.com:great-expectations/great_expectations.git",
                        "clone_url": "https://github.com/great-expectations/great_expectations.git",
                        "svn_url": "https://github.com/great-expectations/great_expectations",
                        "homepage": "https://docs.greatexpectations.io/",
                        "size": 173687,
                        "stargazers_count": 8931,
                        "watchers_count": 8931,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 1404,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 143,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cleandata",
                            "data-engineering",
                            "data-profilers",
                            "data-profiling",
                            "data-quality",
                            "data-science",
                            "data-unit-tests",
                            "datacleaner",
                            "datacleaning",
                            "dataquality",
                            "dataunittest",
                            "eda",
                            "exploratory-analysis",
                            "exploratory-data-analysis",
                            "exploratorydataanalysis",
                            "mlops",
                            "pipeline",
                            "pipeline-debt",
                            "pipeline-testing",
                            "pipeline-tests"
                        ],
                        "visibility": "public",
                        "forks": 1404,
                        "open_issues": 143,
                        "watchers": 8931,
                        "default_branch": "develop"
                    }
                },
                "base": {
                    "label": "great-expectations:develop",
                    "ref": "develop",
                    "sha": "38cace1f2fa991eb2e5022a00de66ae8b1a8b940",
                    "user": {
                        "login": "great-expectations",
                        "id": 31670619,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/great-expectations",
                        "html_url": "https://github.com/great-expectations",
                        "followers_url": "https://api.github.com/users/great-expectations/followers",
                        "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                        "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                        "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                        "repos_url": "https://api.github.com/users/great-expectations/repos",
                        "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 103071520,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwNzE1MjA=",
                        "name": "great_expectations",
                        "full_name": "great-expectations/great_expectations",
                        "private": false,
                        "owner": {
                            "login": "great-expectations",
                            "id": 31670619,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/great-expectations",
                            "html_url": "https://github.com/great-expectations",
                            "followers_url": "https://api.github.com/users/great-expectations/followers",
                            "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                            "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                            "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                            "repos_url": "https://api.github.com/users/great-expectations/repos",
                            "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/great-expectations/great_expectations",
                        "description": "Always know what to expect from your data.",
                        "fork": false,
                        "url": "https://api.github.com/repos/great-expectations/great_expectations",
                        "forks_url": "https://api.github.com/repos/great-expectations/great_expectations/forks",
                        "keys_url": "https://api.github.com/repos/great-expectations/great_expectations/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/great-expectations/great_expectations/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/great-expectations/great_expectations/teams",
                        "hooks_url": "https://api.github.com/repos/great-expectations/great_expectations/hooks",
                        "issue_events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/great-expectations/great_expectations/events",
                        "assignees_url": "https://api.github.com/repos/great-expectations/great_expectations/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/great-expectations/great_expectations/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/great-expectations/great_expectations/tags",
                        "blobs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/great-expectations/great_expectations/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/great-expectations/great_expectations/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/great-expectations/great_expectations/languages",
                        "stargazers_url": "https://api.github.com/repos/great-expectations/great_expectations/stargazers",
                        "contributors_url": "https://api.github.com/repos/great-expectations/great_expectations/contributors",
                        "subscribers_url": "https://api.github.com/repos/great-expectations/great_expectations/subscribers",
                        "subscription_url": "https://api.github.com/repos/great-expectations/great_expectations/subscription",
                        "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/great-expectations/great_expectations/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/great-expectations/great_expectations/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/great-expectations/great_expectations/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/great-expectations/great_expectations/merges",
                        "archive_url": "https://api.github.com/repos/great-expectations/great_expectations/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/great-expectations/great_expectations/downloads",
                        "issues_url": "https://api.github.com/repos/great-expectations/great_expectations/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/great-expectations/great_expectations/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/great-expectations/great_expectations/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/labels{/name}",
                        "releases_url": "https://api.github.com/repos/great-expectations/great_expectations/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/great-expectations/great_expectations/deployments",
                        "created_at": "2017-09-11T00:18:46Z",
                        "updated_at": "2023-10-26T12:40:48Z",
                        "pushed_at": "2023-10-27T01:47:58Z",
                        "git_url": "git://github.com/great-expectations/great_expectations.git",
                        "ssh_url": "git@github.com:great-expectations/great_expectations.git",
                        "clone_url": "https://github.com/great-expectations/great_expectations.git",
                        "svn_url": "https://github.com/great-expectations/great_expectations",
                        "homepage": "https://docs.greatexpectations.io/",
                        "size": 173687,
                        "stargazers_count": 8931,
                        "watchers_count": 8931,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 1404,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 143,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cleandata",
                            "data-engineering",
                            "data-profilers",
                            "data-profiling",
                            "data-quality",
                            "data-science",
                            "data-unit-tests",
                            "datacleaner",
                            "datacleaning",
                            "dataquality",
                            "dataunittest",
                            "eda",
                            "exploratory-analysis",
                            "exploratory-data-analysis",
                            "exploratorydataanalysis",
                            "mlops",
                            "pipeline",
                            "pipeline-debt",
                            "pipeline-testing",
                            "pipeline-tests"
                        ],
                        "visibility": "public",
                        "forks": 1404,
                        "open_issues": 143,
                        "watchers": 8931,
                        "default_branch": "develop"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874"
                    },
                    "html": {
                        "href": "https://github.com/great-expectations/great_expectations/pull/8874"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/issues/8874/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8874/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/statuses/5483019238ed763a1502ebd4c85284a62484f67c"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 18,
                "additions": 179,
                "deletions": 48,
                "changed_files": 8
            }
        },
        "public": true,
        "created_at": "2023-10-27T01:47:59Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32885915975",
        "type": "CreateEvent",
        "actor": {
            "id": 19361723,
            "login": "NathanFarmer",
            "display_login": "NathanFarmer",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NathanFarmer",
            "avatar_url": "https://avatars.githubusercontent.com/u/19361723?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "ref": "m/PP-662/contract-test-add-datasource",
            "ref_type": "branch",
            "master_branch": "develop",
            "description": "Always know what to expect from your data.",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-27T01:46:18Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32884466406",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 78414814,
            "login": "matveykortsev",
            "display_login": "matveykortsev",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matveykortsev",
            "avatar_url": "https://avatars.githubusercontent.com/u/78414814?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537/events",
                "html_url": "https://github.com/great-expectations/great_expectations/issues/8537",
                "id": 1846703375,
                "node_id": "I_kwDOBiS_IM5uEnUP",
                "number": 8537,
                "title": "ClickHouse broken with expect_column_values_to_be_unique expectation",
                "user": {
                    "login": "ricardo-barreira",
                    "id": 129752909,
                    "node_id": "U_kgDOB7vfTQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/129752909?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ricardo-barreira",
                    "html_url": "https://github.com/ricardo-barreira",
                    "followers_url": "https://api.github.com/users/ricardo-barreira/followers",
                    "following_url": "https://api.github.com/users/ricardo-barreira/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ricardo-barreira/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ricardo-barreira/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ricardo-barreira/subscriptions",
                    "organizations_url": "https://api.github.com/users/ricardo-barreira/orgs",
                    "repos_url": "https://api.github.com/users/ricardo-barreira/repos",
                    "events_url": "https://api.github.com/users/ricardo-barreira/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ricardo-barreira/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-08-11T12:01:16Z",
                "updated_at": "2023-10-26T23:52:08Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Description**\r\nWhen using the expect_column_values_to_be_unique expectation with ClickHouse as the backend, I encountered an error related to the Decimal data type. The error message suggests there's an issue with how Great Expectations is generating the SQL query for this specific expectation. The issue seems to be related to the _sqlalchemy_window method in the column_values_unique.py Metric.\r\n\r\n**To Reproduce**\r\nRun the following code:\r\n```python\r\nimport great_expectations as gx\r\n\r\nusername = \"username\"\r\npassword = \"password\"\r\nhost = \"host\"\r\nnative_port = 11111\r\nschema = \"schema\"\r\n\r\nconnection_string = f\"clickhouse+native://{username}:{password}@{host}:{native_port}/{schema}?secure=True\"\r\n\r\ncontext = gx.get_context()\r\ndatasource = context.sources.add_sql(\r\n    name=\"test_datasource\", connection_string=connection_string\r\n)\r\n\r\ntable_asset = datasource.add_table_asset(name=\"test_table_asset\", table_name=\"target_table\")\r\nbatch_request = table_asset.build_batch_request()\r\n\r\nvalidator = context.get_validator(\r\n    batch_request=batch_request, expectation_suite_name=\"test_expectation_suite\"\r\n)\r\n\r\nvalidator.expect_column_values_to_be_unique(column=\"target_col\")\r\n\r\n```\r\nGenerated datasource in the great_expectations.yml: \r\n\r\n```yaml\r\n(...)\r\nfluent_datasources:\r\n  test_datasource:\r\n    type: sql\r\n    connection_string: clickhouse+native://username:password@host:11111/schema?secure=True\r\n```\r\nError stack trace:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nServerException                           Traceback (most recent call last)\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_sqlalchemy/drivers/native/connector.py:152](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_sqlalchemy/drivers/native/connector.py:152), in Cursor.execute(self, operation, parameters, context)\r\n    150     execute, execute_kwargs = self._prepare(context)\r\n--> 152     response = execute(\r\n    153         operation, params=parameters, with_column_types=True,\r\n    154         **execute_kwargs\r\n    155     )\r\n    157 except DriverError as orig:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:373](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:373), in Client.execute(self, query, params, with_column_types, external_tables, query_id, settings, types_check, columnar)\r\n    372 else:\r\n--> 373     rv = self.process_ordinary_query(\r\n    374         query, params=params, with_column_types=with_column_types,\r\n    375         external_tables=external_tables,\r\n    376         query_id=query_id, types_check=types_check,\r\n    377         columnar=columnar\r\n    378     )\r\n    379 self.last_query.store_elapsed(time() - start_time)\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:571](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:571), in Client.process_ordinary_query(self, query, params, with_column_types, external_tables, query_id, types_check, columnar)\r\n    569 self.connection.send_external_tables(external_tables,\r\n    570                                      types_check=types_check)\r\n--> 571 return self.receive_result(with_column_types=with_column_types,\r\n    572                            columnar=columnar)\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:204](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:204), in Client.receive_result(self, with_column_types, progress, columnar)\r\n    201 result = self.query_result_cls(\r\n    202     gen, with_column_types=with_column_types, columnar=columnar\r\n    203 )\r\n--> 204 return result.get_result()\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/result.py:50](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/result.py:50), in QueryResult.get_result(self)\r\n     46 \"\"\"\r\n     47 :return: stored query result.\r\n     48 \"\"\"\r\n---> 50 for packet in self.packet_generator:\r\n     51     self.store(packet)\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:220](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:220), in Client.packet_generator(self)\r\n    219 try:\r\n--> 220     packet = self.receive_packet()\r\n    221     if not packet:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:237](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_driver/client.py:237), in Client.receive_packet(self)\r\n    236 if packet.type == ServerPacketTypes.EXCEPTION:\r\n--> 237     raise packet.exception\r\n    239 elif packet.type == ServerPacketTypes.PROGRESS:\r\n\r\nServerException: Code: 43.\r\nDB::Exception: Decimal data type family must have two numbers as its arguments: While processing if((target_col IS NOT NULL) AND (target_col IN ((SELECT target_col FROM (SELECT * FROM target_table WHERE true) AS anon_2 GROUP BY target_col HAVING count(target_col) > 1) AS _subquery1912405)), CAST(1, 'Decimal(None, None)'), CAST(0, 'Decimal(None, None)')) AS condition. Stack trace:\r\n\r\n0. Poco::Exception::Exception(String const&, int) in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) in /usr/bin/clickhouse\r\n2. DB::Exception::Exception(int, char const (&) [64]) in /usr/bin/clickhouse\r\n3. DB::create(std::shared_ptr const&) in /usr/bin/clickhouse\r\n4. std::shared_ptr DB::DataTypeFactory::getImpl(String const&, std::shared_ptr const&) const in /usr/bin/clickhouse\r\n5. std::shared_ptr DB::DataTypeFactory::getImpl(String const&) const in /usr/bin/clickhouse\r\n6. DB::CastOverloadResolverImpl<(DB::CastType)0, false, DB::CastOverloadName, DB::CastName>::getReturnTypeImpl(std::vector> const&) const in /usr/bin/clickhouse\r\n7. DB::IFunctionOverloadResolver::getReturnTypeWithoutLowCardinality(std::vector> const&) const in /usr/bin/clickhouse\r\n8. DB::IFunctionOverloadResolver::getReturnType(std::vector> const&) const in /usr/bin/clickhouse\r\n9. DB::IFunctionOverloadResolver::build(std::vector> const&) const in /usr/bin/clickhouse\r\n10. DB::ActionsDAG::addFunction(std::shared_ptr const&, std::vector>, String) in /usr/bin/clickhouse\r\n11. DB::ScopeStack::addFunction(std::shared_ptr const&, std::vector> const&, String) in /usr/bin/clickhouse\r\n12. DB::ActionsMatcher::Data::addFunction(std::shared_ptr const&, std::vector> const&, String) in /usr/bin/clickhouse\r\n13. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n14. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n15. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n16. DB::InDepthNodeVisitor const>::doVisit(std::shared_ptr const&) in /usr/bin/clickhouse\r\n17. DB::ExpressionAnalyzer::getRootActions(std::shared_ptr const&, bool, std::shared_ptr&, bool) in /usr/bin/clickhouse\r\n18. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) in /usr/bin/clickhouse\r\n19. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::shared_ptr const&, bool, bool, bool, std::shared_ptr const&, std::shared_ptr const&, DB::Block const&) in /usr/bin/clickhouse\r\n20. DB::InterpreterSelectQuery::getSampleBlockImpl() in /usr/bin/clickhouse\r\n21. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr)::$_4::operator()(bool) const in /usr/bin/clickhouse\r\n22. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr) in /usr/bin/clickhouse\r\n23. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n24. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::shared_ptr const&, std::vector> const&) in /usr/bin/clickhouse\r\n25. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::shared_ptr const&, std::shared_ptr, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n26. DB::InterpreterSelectWithUnionQuery::getSampleBlock(std::shared_ptr const&, std::shared_ptr, bool, bool) in /usr/bin/clickhouse\r\n27. DB::getDatabaseAndTablesWithColumns(std::vector> const&, std::shared_ptr, bool, bool, bool) in /usr/bin/clickhouse\r\n28. DB::JoinedTables::resolveTables() in /usr/bin/clickhouse\r\n29. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr) in /usr/bin/clickhouse\r\n30. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n31. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::shared_ptr const&, std::vector> const&) in /usr/bin/clickhouse\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nDatabaseException                         Traceback (most recent call last)\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:546](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:546), in ExecutionEngine._process_direct_and_bundled_metric_computation_configurations(self, metric_fn_direct_configurations, metric_fn_bundle_configurations)\r\n    543 try:\r\n    544     resolved_metrics[\r\n    545         metric_computation_configuration.metric_configuration.id\r\n--> 546     ] = metric_computation_configuration.metric_fn(  # type: ignore[misc] # F not callable\r\n    547         **metric_computation_configuration.metric_provider_kwargs\r\n    548     )\r\n    549 except Exception as e:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/expectations/metrics/map_metric_provider/map_condition_auxilliary_methods.py:353](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/expectations/metrics/map_metric_provider/map_condition_auxilliary_methods.py:353), in _sqlalchemy_map_condition_unexpected_count_value(cls, execution_engine, metric_domain_kwargs, metric_value_kwargs, metrics, **kwargs)\r\n    346 unexpected_count_query: sqlalchemy.Select = (\r\n    347     sa.select(\r\n    348         sa.func.sum(sa.column(\"condition\")).label(\"unexpected_count\"),\r\n   (...)\r\n    351     .alias(\"UnexpectedCountSubquery\")\r\n    352 )\r\n--> 353 unexpected_count: Union[float, int] = execution_engine.execute_query(\r\n    354     sa.select(\r\n    355         unexpected_count_query.c[\r\n    356             f\"{SummarizationMetricNameSuffixes.UNEXPECTED_COUNT.value}\"\r\n    357         ],\r\n    358     )\r\n    359 ).scalar()\r\n    360 # Unexpected count can be None if the table is empty, in which case the count\r\n    361 # should default to zero.\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/sqlalchemy_execution_engine.py:1416](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/sqlalchemy_execution_engine.py:1416), in SqlAlchemyExecutionEngine.execute_query(self, query)\r\n   1415 with self.get_connection() as connection:\r\n-> 1416     result = connection.execute(query)\r\n   1418 return result\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1385](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1385), in Connection.execute(self, statement, *multiparams, **params)\r\n   1384 else:\r\n-> 1385     return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/sql/elements.py:334](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/sql/elements.py:334), in ClauseElement._execute_on_connection(self, connection, multiparams, params, execution_options, _force)\r\n    333 if _force or self.supports_execution:\r\n--> 334     return connection._execute_clauseelement(\r\n    335         self, multiparams, params, execution_options\r\n    336     )\r\n    337 else:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1577](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1577), in Connection._execute_clauseelement(self, elem, multiparams, params, execution_options)\r\n   1569 compiled_sql, extracted_params, cache_hit = elem._compile_w_cache(\r\n   1570     dialect=dialect,\r\n   1571     compiled_cache=compiled_cache,\r\n   (...)\r\n   1575     linting=self.dialect.compiler_linting | compiler.WARN_LINTING,\r\n   1576 )\r\n-> 1577 ret = self._execute_context(\r\n   1578     dialect,\r\n   1579     dialect.execution_ctx_cls._init_compiled,\r\n   1580     compiled_sql,\r\n   1581     distilled_params,\r\n   1582     execution_options,\r\n   1583     compiled_sql,\r\n   1584     distilled_params,\r\n   1585     elem,\r\n   1586     extracted_params,\r\n   1587     cache_hit=cache_hit,\r\n   1588 )\r\n   1589 if has_events:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1953](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1953), in Connection._execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\r\n   1952 except BaseException as e:\r\n-> 1953     self._handle_dbapi_exception(\r\n   1954         e, statement, parameters, cursor, context\r\n   1955     )\r\n   1957 return result\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:2138](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:2138), in Connection._handle_dbapi_exception(self, e, statement, parameters, cursor, context)\r\n   2137     else:\r\n-> 2138         util.raise_(exc_info[1], with_traceback=exc_info[2])\r\n   2140 finally:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py:211](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/util/compat.py:211), in raise_(***failed resolving arguments***)\r\n    210 try:\r\n--> 211     raise exception\r\n    212 finally:\r\n    213     # credit to\r\n    214     # https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/\r\n    215     # as the __traceback__ object creates a cycle\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1910](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1910), in Connection._execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)\r\n   1909     if not evt_handled:\r\n-> 1910         self.dialect.do_execute(\r\n   1911             cursor, statement, parameters, context\r\n   1912         )\r\n   1914 if self._has_events or self.engine._has_events:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_sqlalchemy/drivers/base.py:416](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_sqlalchemy/drivers/base.py:416), in ClickHouseDialect.do_execute(self, cursor, statement, parameters, context)\r\n    415 def do_execute(self, cursor, statement, parameters, context=None):\r\n--> 416     cursor.execute(statement, parameters, context=context)\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_sqlalchemy/drivers/native/connector.py:158](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/clickhouse_sqlalchemy/drivers/native/connector.py:158), in Cursor.execute(self, operation, parameters, context)\r\n    157 except DriverError as orig:\r\n--> 158     raise DatabaseException(orig)\r\n    160 self._process_response(response)\r\n\r\nDatabaseException: Orig exception: Code: 43.\r\nDB::Exception: Decimal data type family must have two numbers as its arguments: While processing if((target_col IS NOT NULL) AND (target_col IN ((SELECT target_col FROM (SELECT * FROM target_table WHERE true) AS anon_2 GROUP BY target_col HAVING count(target_col) > 1) AS _subquery1912405)), CAST(1, 'Decimal(None, None)'), CAST(0, 'Decimal(None, None)')) AS condition. Stack trace:\r\n\r\n0. Poco::Exception::Exception(String const&, int) in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) in /usr/bin/clickhouse\r\n2. DB::Exception::Exception(int, char const (&) [64]) in /usr/bin/clickhouse\r\n3. DB::create(std::shared_ptr const&) in /usr/bin/clickhouse\r\n4. std::shared_ptr DB::DataTypeFactory::getImpl(String const&, std::shared_ptr const&) const in /usr/bin/clickhouse\r\n5. std::shared_ptr DB::DataTypeFactory::getImpl(String const&) const in /usr/bin/clickhouse\r\n6. DB::CastOverloadResolverImpl<(DB::CastType)0, false, DB::CastOverloadName, DB::CastName>::getReturnTypeImpl(std::vector> const&) const in /usr/bin/clickhouse\r\n7. DB::IFunctionOverloadResolver::getReturnTypeWithoutLowCardinality(std::vector> const&) const in /usr/bin/clickhouse\r\n8. DB::IFunctionOverloadResolver::getReturnType(std::vector> const&) const in /usr/bin/clickhouse\r\n9. DB::IFunctionOverloadResolver::build(std::vector> const&) const in /usr/bin/clickhouse\r\n10. DB::ActionsDAG::addFunction(std::shared_ptr const&, std::vector>, String) in /usr/bin/clickhouse\r\n11. DB::ScopeStack::addFunction(std::shared_ptr const&, std::vector> const&, String) in /usr/bin/clickhouse\r\n12. DB::ActionsMatcher::Data::addFunction(std::shared_ptr const&, std::vector> const&, String) in /usr/bin/clickhouse\r\n13. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n14. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n15. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n16. DB::InDepthNodeVisitor const>::doVisit(std::shared_ptr const&) in /usr/bin/clickhouse\r\n17. DB::ExpressionAnalyzer::getRootActions(std::shared_ptr const&, bool, std::shared_ptr&, bool) in /usr/bin/clickhouse\r\n18. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) in /usr/bin/clickhouse\r\n19. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::shared_ptr const&, bool, bool, bool, std::shared_ptr const&, std::shared_ptr const&, DB::Block const&) in /usr/bin/clickhouse\r\n20. DB::InterpreterSelectQuery::getSampleBlockImpl() in /usr/bin/clickhouse\r\n21. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr)::$_4::operator()(bool) const in /usr/bin/clickhouse\r\n22. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr) in /usr/bin/clickhouse\r\n23. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n24. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::shared_ptr const&, std::vector> const&) in /usr/bin/clickhouse\r\n25. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::shared_ptr const&, std::shared_ptr, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n26. DB::InterpreterSelectWithUnionQuery::getSampleBlock(std::shared_ptr const&, std::shared_ptr, bool, bool) in /usr/bin/clickhouse\r\n27. DB::getDatabaseAndTablesWithColumns(std::vector> const&, std::shared_ptr, bool, bool, bool) in /usr/bin/clickhouse\r\n28. DB::JoinedTables::resolveTables() in /usr/bin/clickhouse\r\n29. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr) in /usr/bin/clickhouse\r\n30. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n31. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::shared_ptr const&, std::vector> const&) in /usr/bin/clickhouse\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nMetricResolutionError                     Traceback (most recent call last)\r\nCell In[10], line 1\r\n----> 1 validator.expect_column_values_to_be_unique(column=\"target_col\")\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:600](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:600), in Validator.validate_expectation..inst_expectation(*args, **kwargs)\r\n    594         validation_result = ExpectationValidationResult(\r\n    595             success=False,\r\n    596             exception_info=exception_info,\r\n    597             expectation_config=configuration,\r\n    598         )\r\n    599     else:\r\n--> 600         raise err\r\n    602 if self._include_rendered_content:\r\n    603     validation_result.render()\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:563](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:563), in Validator.validate_expectation..inst_expectation(*args, **kwargs)\r\n    559     validation_result = ExpectationValidationResult(\r\n    560         expectation_config=copy.deepcopy(expectation.configuration)\r\n    561     )\r\n    562 else:\r\n--> 563     validation_result = expectation.validate(\r\n    564         validator=self,\r\n    565         evaluation_parameters=self._expectation_suite.evaluation_parameters,\r\n    566         data_context=self._data_context,\r\n    567         runtime_configuration=basic_runtime_configuration,\r\n    568     )\r\n    570 # If validate has set active_validation to true, then we do not save the config to avoid\r\n    571 # saving updating expectation configs to the same suite during validation runs\r\n    572 if self._active_validation is True:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/expectations/expectation.py:1276](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/expectations/expectation.py:1276), in Expectation.validate(self, validator, configuration, evaluation_parameters, interactive_evaluation, data_context, runtime_configuration)\r\n   1267 self._warn_if_result_format_config_in_expectation_configuration(\r\n   1268     configuration=configuration\r\n   1269 )\r\n   1271 configuration.process_evaluation_parameters(\r\n   1272     evaluation_parameters, interactive_evaluation, data_context\r\n   1273 )\r\n   1274 expectation_validation_result_list: list[\r\n   1275     ExpectationValidationResult\r\n-> 1276 ] = validator.graph_validate(\r\n   1277     configurations=[configuration],\r\n   1278     runtime_configuration=runtime_configuration,\r\n   1279 )\r\n   1280 return expectation_validation_result_list[0]\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:1075](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:1075), in Validator.graph_validate(self, configurations, runtime_configuration)\r\n   1073         return evrs\r\n   1074     else:\r\n-> 1075         raise err\r\n   1077 configuration: ExpectationConfiguration\r\n   1078 result: ExpectationValidationResult\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:1054](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:1054), in Validator.graph_validate(self, configurations, runtime_configuration)\r\n   1047 resolved_metrics: _MetricsDict\r\n   1049 try:\r\n   1050     (\r\n   1051         resolved_metrics,\r\n   1052         evrs,\r\n   1053         processed_configurations,\r\n-> 1054     ) = self._resolve_suite_level_graph_and_process_metric_evaluation_errors(\r\n   1055         graph=graph,\r\n   1056         runtime_configuration=runtime_configuration,\r\n   1057         expectation_validation_graphs=expectation_validation_graphs,\r\n   1058         evrs=evrs,\r\n   1059         processed_configurations=processed_configurations,\r\n   1060         show_progress_bars=self._determine_progress_bars(),\r\n   1061     )\r\n   1062 except Exception as err:\r\n   1063     # If a general Exception occurs during the execution of \"ValidationGraph.resolve()\", then\r\n   1064     # all expectations in the suite are impacted, because it is impossible to attribute the failure to a metric.\r\n   1065     if catch_exceptions:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:1213](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validator.py:1213), in Validator._resolve_suite_level_graph_and_process_metric_evaluation_errors(self, graph, runtime_configuration, expectation_validation_graphs, evrs, processed_configurations, show_progress_bars)\r\n   1205 resolved_metrics: _MetricsDict\r\n   1206 aborted_metrics_info: Dict[\r\n   1207     _MetricKey,\r\n   1208     Dict[str, Union[MetricConfiguration, Set[ExceptionInfo], int]],\r\n   1209 ]\r\n   1210 (\r\n   1211     resolved_metrics,\r\n   1212     aborted_metrics_info,\r\n-> 1213 ) = self._metrics_calculator.resolve_validation_graph(\r\n   1214     graph=graph,\r\n   1215     runtime_configuration=runtime_configuration,\r\n   1216     min_graph_edges_pbar_enable=0,\r\n   1217 )\r\n   1219 # Trace MetricResolutionError occurrences to expectations relying on corresponding malfunctioning metrics.\r\n   1220 rejected_configurations: List[ExpectationConfiguration] = []\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/metrics_calculator.py:287](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/metrics_calculator.py:287), in MetricsCalculator.resolve_validation_graph(self, graph, runtime_configuration, min_graph_edges_pbar_enable)\r\n    282 resolved_metrics: _MetricsDict\r\n    283 aborted_metrics_info: Dict[\r\n    284     _MetricKey,\r\n    285     Dict[str, Union[MetricConfiguration, Set[ExceptionInfo], int]],\r\n    286 ]\r\n--> 287 resolved_metrics, aborted_metrics_info = graph.resolve(\r\n    288     runtime_configuration=runtime_configuration,\r\n    289     min_graph_edges_pbar_enable=min_graph_edges_pbar_enable,\r\n    290     show_progress_bars=self._show_progress_bars,\r\n    291 )\r\n    292 return resolved_metrics, aborted_metrics_info\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:207](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:207), in ValidationGraph.resolve(self, runtime_configuration, min_graph_edges_pbar_enable, show_progress_bars)\r\n    201 resolved_metrics: Dict[_MetricKey, MetricValue] = {}\r\n    203 # updates graph with aborted metrics\r\n    204 aborted_metrics_info: Dict[\r\n    205     _MetricKey,\r\n    206     Dict[str, Union[MetricConfiguration, Set[ExceptionInfo], int]],\r\n--> 207 ] = self._resolve(\r\n    208     metrics=resolved_metrics,\r\n    209     runtime_configuration=runtime_configuration,\r\n    210     min_graph_edges_pbar_enable=min_graph_edges_pbar_enable,\r\n    211     show_progress_bars=show_progress_bars,\r\n    212 )\r\n    214 return resolved_metrics, aborted_metrics_info\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:313](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:313), in ValidationGraph._resolve(self, metrics, runtime_configuration, min_graph_edges_pbar_enable, show_progress_bars)\r\n    309                 failed_metric_info[failed_metric.id][\"exception_info\"] = {\r\n    310                     exception_info\r\n    311                 }\r\n    312     else:\r\n--> 313         raise err\r\n    314 except Exception as e:\r\n    315     if catch_exceptions:\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:283](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:283), in ValidationGraph._resolve(self, metrics, runtime_configuration, min_graph_edges_pbar_enable, show_progress_bars)\r\n    278         computable_metrics.add(metric)\r\n    280 try:\r\n    281     # Access \"ExecutionEngine.resolve_metrics()\" method, to resolve missing \"MetricConfiguration\" objects.\r\n    282     metrics.update(\r\n--> 283         self._execution_engine.resolve_metrics(\r\n    284             metrics_to_resolve=computable_metrics,  # type: ignore[arg-type]  # Metric typing needs further refinement.\r\n    285             metrics=metrics,  # type: ignore[arg-type]  # Metric typing needs further refinement.\r\n    286             runtime_configuration=runtime_configuration,\r\n    287         )\r\n    288     )\r\n    289     progress_bar.update(len(computable_metrics))\r\n    290     progress_bar.refresh()\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:281](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:281), in ExecutionEngine.resolve_metrics(self, metrics_to_resolve, metrics, runtime_configuration)\r\n    272 metric_fn_bundle_configurations: List[MetricComputationConfiguration]\r\n    273 (\r\n    274     metric_fn_direct_configurations,\r\n    275     metric_fn_bundle_configurations,\r\n   (...)\r\n    279     runtime_configuration=runtime_configuration,\r\n    280 )\r\n--> 281 return self._process_direct_and_bundled_metric_computation_configurations(\r\n    282     metric_fn_direct_configurations=metric_fn_direct_configurations,\r\n    283     metric_fn_bundle_configurations=metric_fn_bundle_configurations,\r\n    284 )\r\n\r\nFile [/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:550](https://file+.vscode-resource.vscode-cdn.net/opt/homebrew/Caskroom/miniconda/base/envs/gx_env/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:550), in ExecutionEngine._process_direct_and_bundled_metric_computation_configurations(self, metric_fn_direct_configurations, metric_fn_bundle_configurations)\r\n    544         resolved_metrics[\r\n    545             metric_computation_configuration.metric_configuration.id\r\n    546         ] = metric_computation_configuration.metric_fn(  # type: ignore[misc] # F not callable\r\n    547             **metric_computation_configuration.metric_provider_kwargs\r\n    548         )\r\n    549     except Exception as e:\r\n--> 550         raise gx_exceptions.MetricResolutionError(\r\n    551             message=str(e),\r\n    552             failed_metrics=(\r\n    553                 metric_computation_configuration.metric_configuration,\r\n    554             ),\r\n    555         ) from e\r\n    557 try:\r\n    558     # an engine-specific way of computing metrics together\r\n    559     resolved_metric_bundle: Dict[\r\n    560         Tuple[str, str, str], MetricValue\r\n    561     ] = self.resolve_metric_bundle(\r\n    562         metric_fn_bundle=metric_fn_bundle_configurations\r\n    563     )\r\n\r\nMetricResolutionError: Orig exception: Code: 43.\r\nDB::Exception: Decimal data type family must have two numbers as its arguments: While processing if((target_col IS NOT NULL) AND (target_col IN ((SELECT target_col FROM (SELECT * FROM target_table WHERE true) AS anon_2 GROUP BY target_col HAVING count(target_col) > 1) AS _subquery1912405)), CAST(1, 'Decimal(None, None)'), CAST(0, 'Decimal(None, None)')) AS condition. Stack trace:\r\n\r\n0. Poco::Exception::Exception(String const&, int) in /usr/bin/clickhouse\r\n1. DB::Exception::Exception(DB::Exception::MessageMasked&&, int, bool) in /usr/bin/clickhouse\r\n2. DB::Exception::Exception(int, char const (&) [64]) in /usr/bin/clickhouse\r\n3. DB::create(std::shared_ptr const&) in /usr/bin/clickhouse\r\n4. std::shared_ptr DB::DataTypeFactory::getImpl(String const&, std::shared_ptr const&) const in /usr/bin/clickhouse\r\n5. std::shared_ptr DB::DataTypeFactory::getImpl(String const&) const in /usr/bin/clickhouse\r\n6. DB::CastOverloadResolverImpl<(DB::CastType)0, false, DB::CastOverloadName, DB::CastName>::getReturnTypeImpl(std::vector> const&) const in /usr/bin/clickhouse\r\n7. DB::IFunctionOverloadResolver::getReturnTypeWithoutLowCardinality(std::vector> const&) const in /usr/bin/clickhouse\r\n8. DB::IFunctionOverloadResolver::getReturnType(std::vector> const&) const in /usr/bin/clickhouse\r\n9. DB::IFunctionOverloadResolver::build(std::vector> const&) const in /usr/bin/clickhouse\r\n10. DB::ActionsDAG::addFunction(std::shared_ptr const&, std::vector>, String) in /usr/bin/clickhouse\r\n11. DB::ScopeStack::addFunction(std::shared_ptr const&, std::vector> const&, String) in /usr/bin/clickhouse\r\n12. DB::ActionsMatcher::Data::addFunction(std::shared_ptr const&, std::vector> const&, String) in /usr/bin/clickhouse\r\n13. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n14. DB::ActionsMatcher::visit(DB::ASTFunction const&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n15. DB::ActionsMatcher::visit(DB::ASTExpressionList&, std::shared_ptr const&, DB::ActionsMatcher::Data&) in /usr/bin/clickhouse\r\n16. DB::InDepthNodeVisitor const>::doVisit(std::shared_ptr const&) in /usr/bin/clickhouse\r\n17. DB::ExpressionAnalyzer::getRootActions(std::shared_ptr const&, bool, std::shared_ptr&, bool) in /usr/bin/clickhouse\r\n18. DB::SelectQueryExpressionAnalyzer::appendSelect(DB::ExpressionActionsChain&, bool) in /usr/bin/clickhouse\r\n19. DB::ExpressionAnalysisResult::ExpressionAnalysisResult(DB::SelectQueryExpressionAnalyzer&, std::shared_ptr const&, bool, bool, bool, std::shared_ptr const&, std::shared_ptr const&, DB::Block const&) in /usr/bin/clickhouse\r\n20. DB::InterpreterSelectQuery::getSampleBlockImpl() in /usr/bin/clickhouse\r\n21. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr)::$_4::operator()(bool) const in /usr/bin/clickhouse\r\n22. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr) in /usr/bin/clickhouse\r\n23. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n24. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::shared_ptr const&, std::vector> const&) in /usr/bin/clickhouse\r\n25. DB::InterpreterSelectWithUnionQuery::InterpreterSelectWithUnionQuery(std::shared_ptr const&, std::shared_ptr, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n26. DB::InterpreterSelectWithUnionQuery::getSampleBlock(std::shared_ptr const&, std::shared_ptr, bool, bool) in /usr/bin/clickhouse\r\n27. DB::getDatabaseAndTablesWithColumns(std::vector> const&, std::shared_ptr, bool, bool, bool) in /usr/bin/clickhouse\r\n28. DB::JoinedTables::resolveTables() in /usr/bin/clickhouse\r\n29. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, std::optional, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&, std::shared_ptr const&, std::shared_ptr) in /usr/bin/clickhouse\r\n30. DB::InterpreterSelectQuery::InterpreterSelectQuery(std::shared_ptr const&, std::shared_ptr const&, DB::SelectQueryOptions const&, std::vector> const&) in /usr/bin/clickhouse\r\n31. DB::InterpreterSelectWithUnionQuery::buildCurrentChildInterpreter(std::shared_ptr const&, std::vector> const&) in /usr/bin/clickhouse\r\n```\r\n**Expected behavior**\r\nThe expectation should run without any errors.\r\n\r\n**Environment:**\r\n - Operating System: MacOS\r\n - Great Expectations Version: 0.17.7\r\n - Data Source: ClickHouse\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782084904",
                "html_url": "https://github.com/great-expectations/great_expectations/issues/8537#issuecomment-1782084904",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8537",
                "id": 1782084904,
                "node_id": "IC_kwDOBiS_IM5qOHUo",
                "user": {
                    "login": "matveykortsev",
                    "id": 78414814,
                    "node_id": "MDQ6VXNlcjc4NDE0ODE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/78414814?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/matveykortsev",
                    "html_url": "https://github.com/matveykortsev",
                    "followers_url": "https://api.github.com/users/matveykortsev/followers",
                    "following_url": "https://api.github.com/users/matveykortsev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/matveykortsev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/matveykortsev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/matveykortsev/subscriptions",
                    "organizations_url": "https://api.github.com/users/matveykortsev/orgs",
                    "repos_url": "https://api.github.com/users/matveykortsev/repos",
                    "events_url": "https://api.github.com/users/matveykortsev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/matveykortsev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T23:52:08Z",
                "updated_at": "2023-10-26T23:52:08Z",
                "author_association": "NONE",
                "body": "Hi, I am facing the same error with another expectation:\r\n\r\nexpect_column_pair_values_to_be_equal\r\nexpect_compound_columns_to_be_unique\r\nexpect_select_column_values_to_be_unique_within_record\r\n\r\nIt will be really helpful to fix it",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782084904/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T23:52:09Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32883802606",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 78414814,
            "login": "matveykortsev",
            "display_login": "matveykortsev",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matveykortsev",
            "avatar_url": "https://avatars.githubusercontent.com/u/78414814?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446",
                "repository_url": "https://api.github.com/repos/great-expectations/great_expectations",
                "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446/labels{/name}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446/comments",
                "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446/events",
                "html_url": "https://github.com/great-expectations/great_expectations/issues/8446",
                "id": 1826363313,
                "node_id": "I_kwDOBiS_IM5s3Bex",
                "number": 8446,
                "title": "Clickhouse broken with like-pattern expectations",
                "user": {
                    "login": "matveykortsev",
                    "id": 78414814,
                    "node_id": "MDQ6VXNlcjc4NDE0ODE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/78414814?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/matveykortsev",
                    "html_url": "https://github.com/matveykortsev",
                    "followers_url": "https://api.github.com/users/matveykortsev/followers",
                    "following_url": "https://api.github.com/users/matveykortsev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/matveykortsev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/matveykortsev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/matveykortsev/subscriptions",
                    "organizations_url": "https://api.github.com/users/matveykortsev/orgs",
                    "repos_url": "https://api.github.com/users/matveykortsev/repos",
                    "events_url": "https://api.github.com/users/matveykortsev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/matveykortsev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-07-28T12:44:58Z",
                "updated_at": "2023-10-26T22:59:02Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the bug**\r\nI'm attempting to use GE with the newly released ClickHouse support, but it appears that the  like-pattern expectations are not functioning properly. Another expectations works well.\r\n\r\n**To Reproduce**\r\nRun the following code:\r\n```python\r\nimport great_expectations as gx\r\ncontext = gx.get_context(context_root_dir='/home/jovyan/work')\r\ncontext.add_or_update_expectation_suite(expectation_suite_name=\"test_suite\")\r\ndatasource=context.sources.add_or_update_sql(name='fluent_clickhouse',connection_string='clickhouse+http://user:password@server_address')\r\nasset = datasource.add_table_asset(name=asset_name, table_name=table_name, schema_name=schema_name)\r\nasset.add_splitter_column_value(column_name='pdate')\r\nmy_batch_request = asset.build_batch_request(batch_slice = \"[-1:]\")\r\nvalidator = context.get_validator(\r\n    batch_request=my_batch_request, expectation_suite_name=\"test_suite\"\r\n)\r\nvalidator.expect_column_values_to_match_like_pattern(column='customer_user_id', like_pattern='kch%')\r\n```\r\nPart of great_expectations.yml with datasources setup:\r\n```yml\r\ndatasources:\r\n  clickhouse_test:\r\n    name: clickhouse_test\r\n    class_name: Datasource\r\n    module_name: great_expectations.datasource\r\n    execution_engine:\r\n      class_name: SqlAlchemyExecutionEngine\r\n      module_name: great_expectations.execution_engine\r\n      connection_string: clickhouse+http://user:password@server_address\r\n      create_temp_table: true\r\n    data_connectors:\r\n      inferred_data_connector_single_batch_asset:\r\n        name: inferred_data_connector_single_batch_asset\r\n        class_name: InferredAssetSqlDataConnector\r\n        module_name: great_expectations.datasource.data_connector\r\n        include_schema_name: true\r\n  fluent_clickhouse:\r\n    type: sql\r\n    assets:\r\n      asset_name:\r\n        type: table\r\n        order_by: []\r\n        batch_metadata: {}\r\n        splitter:\r\n          column_name: pdate\r\n          method_name: split_on_column_value\r\n        table_name: table_name\r\n        schema_name: schema_name\r\n    connection_string: clickhouse+http://user:passowrd@server_address\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:546, in ExecutionEngine._process_direct_and_bundled_metric_computation_configurations(self, metric_fn_direct_configurations, metric_fn_bundle_configurations)\r\n    543 try:\r\n    544     resolved_metrics[\r\n    545         metric_computation_configuration.metric_configuration.id\r\n--> 546     ] = metric_computation_configuration.metric_fn(  # type: ignore[misc] # F not callable\r\n    547         **metric_computation_configuration.metric_provider_kwargs\r\n    548     )\r\n    549 except Exception as e:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/expectations/metrics/metric_provider.py:90, in metric_partial.<locals>.wrapper.<locals>.inner_func(*args, **kwargs)\r\n     88 @wraps(metric_fn)\r\n     89 def inner_func(*args, **kwargs):\r\n---> 90     return metric_fn(*args, **kwargs)\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/expectations/metrics/map_metric_provider/column_condition_partial.py:186, in column_condition_partial.<locals>.wrapper.<locals>.inner_func(cls, execution_engine, metric_domain_kwargs, metric_value_kwargs, metrics, runtime_configuration)\r\n    184         dialect = sqlalchemy_engine.dialect\r\n--> 186 expected_condition = metric_fn(\r\n    187     cls,\r\n    188     sa.column(column_name),\r\n    189     **metric_value_kwargs,\r\n    190     _dialect=dialect,\r\n    191     _table=selectable,\r\n    192     _execution_engine=execution_engine,\r\n    193     _sqlalchemy_engine=sqlalchemy_engine,\r\n    194     _metrics=metrics,\r\n    195 )\r\n    197 filter_column_isnull = kwargs.get(\r\n    198     \"filter_column_isnull\", getattr(cls, \"filter_column_isnull\", True)\r\n    199 )\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/expectations/metrics/column_map_metrics/column_values_match_like_pattern.py:28, in ColumnValuesMatchLikePattern._sqlalchemy(cls, column, like_pattern, _dialect, **kwargs)\r\n     26 if like_pattern_expression is None:\r\n     27     logger.warning(\r\n---> 28         f\"Like patterns are not supported for dialect {str(_dialect.name)}\"\r\n     29     )\r\n     30     raise NotImplementedError\r\n\r\nAttributeError: module 'clickhouse_sqlalchemy.drivers.base' has no attribute 'name'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nMetricResolutionError                     Traceback (most recent call last)\r\nCell In[168], line 1\r\n----> 1 validator.expect_column_values_to_match_like_pattern(column='customer_user_id', like_pattern='kch%')\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validator.py:597, in Validator.validate_expectation.<locals>.inst_expectation(*args, **kwargs)\r\n    591         validation_result = ExpectationValidationResult(\r\n    592             success=False,\r\n    593             exception_info=exception_info,\r\n    594             expectation_config=configuration,\r\n    595         )\r\n    596     else:\r\n--> 597         raise err\r\n    599 if self._include_rendered_content:\r\n    600     validation_result.render()\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validator.py:560, in Validator.validate_expectation.<locals>.inst_expectation(*args, **kwargs)\r\n    556     validation_result = ExpectationValidationResult(\r\n    557         expectation_config=copy.deepcopy(expectation.configuration)\r\n    558     )\r\n    559 else:\r\n--> 560     validation_result = expectation.validate(\r\n    561         validator=self,\r\n    562         evaluation_parameters=self._expectation_suite.evaluation_parameters,\r\n    563         data_context=self._data_context,\r\n    564         runtime_configuration=basic_runtime_configuration,\r\n    565     )\r\n    567 # If validate has set active_validation to true, then we do not save the config to avoid\r\n    568 # saving updating expectation configs to the same suite during validation runs\r\n    569 if self._active_validation is True:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/expectations/expectation.py:1276, in Expectation.validate(self, validator, configuration, evaluation_parameters, interactive_evaluation, data_context, runtime_configuration)\r\n   1267 self._warn_if_result_format_config_in_expectation_configuration(\r\n   1268     configuration=configuration\r\n   1269 )\r\n   1271 configuration.process_evaluation_parameters(\r\n   1272     evaluation_parameters, interactive_evaluation, data_context\r\n   1273 )\r\n   1274 expectation_validation_result_list: list[\r\n   1275     ExpectationValidationResult\r\n-> 1276 ] = validator.graph_validate(\r\n   1277     configurations=[configuration],\r\n   1278     runtime_configuration=runtime_configuration,\r\n   1279 )\r\n   1280 return expectation_validation_result_list[0]\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validator.py:1072, in Validator.graph_validate(self, configurations, runtime_configuration)\r\n   1070         return evrs\r\n   1071     else:\r\n-> 1072         raise err\r\n   1074 configuration: ExpectationConfiguration\r\n   1075 result: ExpectationValidationResult\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validator.py:1051, in Validator.graph_validate(self, configurations, runtime_configuration)\r\n   1044 resolved_metrics: Dict[Tuple[str, str, str], MetricValue]\r\n   1046 try:\r\n   1047     (\r\n   1048         resolved_metrics,\r\n   1049         evrs,\r\n   1050         processed_configurations,\r\n-> 1051     ) = self._resolve_suite_level_graph_and_process_metric_evaluation_errors(\r\n   1052         graph=graph,\r\n   1053         runtime_configuration=runtime_configuration,\r\n   1054         expectation_validation_graphs=expectation_validation_graphs,\r\n   1055         evrs=evrs,\r\n   1056         processed_configurations=processed_configurations,\r\n   1057         show_progress_bars=self._determine_progress_bars(),\r\n   1058     )\r\n   1059 except Exception as err:\r\n   1060     # If a general Exception occurs during the execution of \"ValidationGraph.resolve()\", then\r\n   1061     # all expectations in the suite are impacted, because it is impossible to attribute the failure to a metric.\r\n   1062     if catch_exceptions:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validator.py:1210, in Validator._resolve_suite_level_graph_and_process_metric_evaluation_errors(self, graph, runtime_configuration, expectation_validation_graphs, evrs, processed_configurations, show_progress_bars)\r\n   1202 resolved_metrics: Dict[Tuple[str, str, str], MetricValue]\r\n   1203 aborted_metrics_info: Dict[\r\n   1204     Tuple[str, str, str],\r\n   1205     Dict[str, Union[MetricConfiguration, Set[ExceptionInfo], int]],\r\n   1206 ]\r\n   1207 (\r\n   1208     resolved_metrics,\r\n   1209     aborted_metrics_info,\r\n-> 1210 ) = self._metrics_calculator.resolve_validation_graph(\r\n   1211     graph=graph,\r\n   1212     runtime_configuration=runtime_configuration,\r\n   1213     min_graph_edges_pbar_enable=0,\r\n   1214 )\r\n   1216 # Trace MetricResolutionError occurrences to expectations relying on corresponding malfunctioning metrics.\r\n   1217 rejected_configurations: List[ExpectationConfiguration] = []\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/metrics_calculator.py:283, in MetricsCalculator.resolve_validation_graph(self, graph, runtime_configuration, min_graph_edges_pbar_enable)\r\n    278 resolved_metrics: Dict[Tuple[str, str, str], MetricValue]\r\n    279 aborted_metrics_info: Dict[\r\n    280     Tuple[str, str, str],\r\n    281     Dict[str, Union[MetricConfiguration, Set[ExceptionInfo], int]],\r\n    282 ]\r\n--> 283 resolved_metrics, aborted_metrics_info = graph.resolve(\r\n    284     runtime_configuration=runtime_configuration,\r\n    285     min_graph_edges_pbar_enable=min_graph_edges_pbar_enable,\r\n    286     show_progress_bars=self._show_progress_bars,\r\n    287 )\r\n    288 return resolved_metrics, aborted_metrics_info\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:206, in ValidationGraph.resolve(self, runtime_configuration, min_graph_edges_pbar_enable, show_progress_bars)\r\n    200 resolved_metrics: Dict[Tuple[str, str, str], MetricValue] = {}\r\n    202 # updates graph with aborted metrics\r\n    203 aborted_metrics_info: Dict[\r\n    204     Tuple[str, str, str],\r\n    205     Dict[str, Union[MetricConfiguration, Set[ExceptionInfo], int]],\r\n--> 206 ] = self._resolve(\r\n    207     metrics=resolved_metrics,\r\n    208     runtime_configuration=runtime_configuration,\r\n    209     min_graph_edges_pbar_enable=min_graph_edges_pbar_enable,\r\n    210     show_progress_bars=show_progress_bars,\r\n    211 )\r\n    213 return resolved_metrics, aborted_metrics_info\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:312, in ValidationGraph._resolve(self, metrics, runtime_configuration, min_graph_edges_pbar_enable, show_progress_bars)\r\n    308                 failed_metric_info[failed_metric.id][\"exception_info\"] = {\r\n    309                     exception_info\r\n    310                 }\r\n    311     else:\r\n--> 312         raise err\r\n    313 except Exception as e:\r\n    314     if catch_exceptions:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/validator/validation_graph.py:282, in ValidationGraph._resolve(self, metrics, runtime_configuration, min_graph_edges_pbar_enable, show_progress_bars)\r\n    277         computable_metrics.add(metric)\r\n    279 try:\r\n    280     # Access \"ExecutionEngine.resolve_metrics()\" method, to resolve missing \"MetricConfiguration\" objects.\r\n    281     metrics.update(\r\n--> 282         self._execution_engine.resolve_metrics(\r\n    283             metrics_to_resolve=computable_metrics,\r\n    284             metrics=metrics,\r\n    285             runtime_configuration=runtime_configuration,\r\n    286         )\r\n    287     )\r\n    288     progress_bar.update(len(computable_metrics))\r\n    289     progress_bar.refresh()\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:281, in ExecutionEngine.resolve_metrics(self, metrics_to_resolve, metrics, runtime_configuration)\r\n    272 metric_fn_bundle_configurations: List[MetricComputationConfiguration]\r\n    273 (\r\n    274     metric_fn_direct_configurations,\r\n    275     metric_fn_bundle_configurations,\r\n   (...)\r\n    279     runtime_configuration=runtime_configuration,\r\n    280 )\r\n--> 281 return self._process_direct_and_bundled_metric_computation_configurations(\r\n    282     metric_fn_direct_configurations=metric_fn_direct_configurations,\r\n    283     metric_fn_bundle_configurations=metric_fn_bundle_configurations,\r\n    284 )\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/great_expectations/execution_engine/execution_engine.py:550, in ExecutionEngine._process_direct_and_bundled_metric_computation_configurations(self, metric_fn_direct_configurations, metric_fn_bundle_configurations)\r\n    544         resolved_metrics[\r\n    545             metric_computation_configuration.metric_configuration.id\r\n    546         ] = metric_computation_configuration.metric_fn(  # type: ignore[misc] # F not callable\r\n    547             **metric_computation_configuration.metric_provider_kwargs\r\n    548         )\r\n    549     except Exception as e:\r\n--> 550         raise gx_exceptions.MetricResolutionError(\r\n    551             message=str(e),\r\n    552             failed_metrics=(\r\n    553                 metric_computation_configuration.metric_configuration,\r\n    554             ),\r\n    555         ) from e\r\n    557 try:\r\n    558     # an engine-specific way of computing metrics together\r\n    559     resolved_metric_bundle: Dict[\r\n    560         Tuple[str, str, str], MetricValue\r\n    561     ] = self.resolve_metric_bundle(\r\n    562         metric_fn_bundle=metric_fn_bundle_configurations\r\n    563     )\r\n\r\nMetricResolutionError: module 'clickhouse_sqlalchemy.drivers.base' has no attribute 'name'\r\n```\r\nBut as I can see in clickhouse_sqlalchemy package here https://github.com/xzkostyan/clickhouse-sqlalchemy/blob/060c60131a7a830cb691c23bc9c9931f5e3e19cc/clickhouse_sqlalchemy/drivers/base.py#L78\r\nAttribute 'name' exists.\r\nI have the thought that there is mistyping here https://github.com/great-expectations/great_expectations/blob/3aacc5c4309ca6ee5f3291d0840bd16a9ee0ae76/great_expectations/expectations/metrics/util.py#L849 and by that reason, it can be broken?\r\nIm also looking for this part of code https://github.com/great-expectations/great_expectations/blob/3aacc5c4309ca6ee5f3291d0840bd16a9ee0ae76/great_expectations/expectations/metrics/map_metric_provider/column_condition_partial.py#L188C3-L188C3 maybe some problem here with ClickHouseDialect?\r\n\r\n**Expected behavior**\r\nExpecting that like-pattern expectation will work as usual.\r\n\r\n**Environment (please complete the following information):**\r\n - Operating System: docker container on MacOS jupyter/pyspark-notebook image\r\n - Great Expectations Version: great-expectations==0.17.6, great-expectations-experimental==0.1.20230725070\r\n - Datasource: ClickHouse\r\n   clickhouse-cityhash==1.0.2.4\r\n   clickhouse-driver==0.2.6\r\n   clickhouse-sqlalchemy==0.2.4\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782016768",
                "html_url": "https://github.com/great-expectations/great_expectations/issues/8446#issuecomment-1782016768",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8446",
                "id": 1782016768,
                "node_id": "IC_kwDOBiS_IM5qN2sA",
                "user": {
                    "login": "matveykortsev",
                    "id": 78414814,
                    "node_id": "MDQ6VXNlcjc4NDE0ODE0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/78414814?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/matveykortsev",
                    "html_url": "https://github.com/matveykortsev",
                    "followers_url": "https://api.github.com/users/matveykortsev/followers",
                    "following_url": "https://api.github.com/users/matveykortsev/following{/other_user}",
                    "gists_url": "https://api.github.com/users/matveykortsev/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/matveykortsev/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/matveykortsev/subscriptions",
                    "organizations_url": "https://api.github.com/users/matveykortsev/orgs",
                    "repos_url": "https://api.github.com/users/matveykortsev/repos",
                    "events_url": "https://api.github.com/users/matveykortsev/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/matveykortsev/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T22:59:02Z",
                "updated_at": "2023-10-26T22:59:02Z",
                "author_association": "NONE",
                "body": "@HaebichanGX Have you checked this issue?",
                "reactions": {
                    "url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments/1782016768/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:59:02Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32882956941",
        "type": "DeleteEvent",
        "actor": {
            "id": 118344674,
            "login": "github-merge-queue[bot]",
            "display_login": "github-merge-queue",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-merge-queue[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/118344674?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "ref": "gh-readonly-queue/develop/pr-8863-fb1fbb0324391fbcdd3c54ea9af8e7d2e0dc75fa",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-26T22:04:57Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32882957221",
        "type": "DeleteEvent",
        "actor": {
            "id": 49923762,
            "login": "cdkini",
            "display_login": "cdkini",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdkini",
            "avatar_url": "https://avatars.githubusercontent.com/u/49923762?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "ref": "m/_/delete_deprecated_code_for_v18",
            "ref_type": "branch",
            "pusher_type": "user"
        },
        "public": true,
        "created_at": "2023-10-26T22:04:58Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    },
    {
        "id": "32882956777",
        "type": "PullRequestEvent",
        "actor": {
            "id": 49923762,
            "login": "cdkini",
            "display_login": "cdkini",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdkini",
            "avatar_url": "https://avatars.githubusercontent.com/u/49923762?"
        },
        "repo": {
            "id": 103071520,
            "name": "great-expectations/great_expectations",
            "url": "https://api.github.com/repos/great-expectations/great_expectations"
        },
        "payload": {
            "action": "closed",
            "number": 8863,
            "pull_request": {
                "url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8863",
                "id": 1571482199,
                "node_id": "PR_kwDOBiS_IM5dqupX",
                "html_url": "https://github.com/great-expectations/great_expectations/pull/8863",
                "diff_url": "https://github.com/great-expectations/great_expectations/pull/8863.diff",
                "patch_url": "https://github.com/great-expectations/great_expectations/pull/8863.patch",
                "issue_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8863",
                "number": 8863,
                "state": "closed",
                "locked": false,
                "title": "[MAINTENANCE] Remove deprecated code in advance of v18 release",
                "user": {
                    "login": "cdkini",
                    "id": 49923762,
                    "node_id": "MDQ6VXNlcjQ5OTIzNzYy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/49923762?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cdkini",
                    "html_url": "https://github.com/cdkini",
                    "followers_url": "https://api.github.com/users/cdkini/followers",
                    "following_url": "https://api.github.com/users/cdkini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cdkini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cdkini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cdkini/subscriptions",
                    "organizations_url": "https://api.github.com/users/cdkini/orgs",
                    "repos_url": "https://api.github.com/users/cdkini/repos",
                    "events_url": "https://api.github.com/users/cdkini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cdkini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "\n- [x] Description of PR changes above includes a link to [an existing GitHub issue](https://github.com/great-expectations/great_expectations/issues)\n- [x] PR title is prefixed with one of: [BUGFIX], [FEATURE], [DOCS], [MAINTENANCE], [CONTRIB]\n- [x] Code is linted - run `invoke lint` (uses `black` + `ruff`)\n- [x] Appropriate tests and docs have been updated\n\nFor more information about contributing, see [Contribute](https://docs.greatexpectations.io/docs/contributing/contributing_checklist).\n\nAfter you submit your PR, keep the page open and **monitor the statuses of the various checks made by our continuous integration process at the bottom of the page. Please fix any issues that come up** and [reach out on Slack](https://greatexpectations.io/slack) if you need help. Thanks for contributing!\n",
                "created_at": "2023-10-24T17:44:17Z",
                "updated_at": "2023-10-26T22:04:56Z",
                "closed_at": "2023-10-26T22:04:56Z",
                "merged_at": "2023-10-26T22:04:55Z",
                "merge_commit_sha": "38cace1f2fa991eb2e5022a00de66ae8b1a8b940",
                "assignee": {
                    "login": "cdkini",
                    "id": 49923762,
                    "node_id": "MDQ6VXNlcjQ5OTIzNzYy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/49923762?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cdkini",
                    "html_url": "https://github.com/cdkini",
                    "followers_url": "https://api.github.com/users/cdkini/followers",
                    "following_url": "https://api.github.com/users/cdkini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cdkini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cdkini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cdkini/subscriptions",
                    "organizations_url": "https://api.github.com/users/cdkini/orgs",
                    "repos_url": "https://api.github.com/users/cdkini/repos",
                    "events_url": "https://api.github.com/users/cdkini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cdkini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "cdkini",
                        "id": 49923762,
                        "node_id": "MDQ6VXNlcjQ5OTIzNzYy",
                        "avatar_url": "https://avatars.githubusercontent.com/u/49923762?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/cdkini",
                        "html_url": "https://github.com/cdkini",
                        "followers_url": "https://api.github.com/users/cdkini/followers",
                        "following_url": "https://api.github.com/users/cdkini/following{/other_user}",
                        "gists_url": "https://api.github.com/users/cdkini/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/cdkini/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/cdkini/subscriptions",
                        "organizations_url": "https://api.github.com/users/cdkini/orgs",
                        "repos_url": "https://api.github.com/users/cdkini/repos",
                        "events_url": "https://api.github.com/users/cdkini/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/cdkini/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [
                    {
                        "id": 5386289227,
                        "node_id": "LA_kwDOBiS_IM8AAAABQQxASw",
                        "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/core",
                        "name": "core",
                        "color": "ededed",
                        "default": false,
                        "description": null
                    }
                ],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8863/commits",
                "review_comments_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8863/comments",
                "review_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/8863/comments",
                "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/130c9991df504c4c7d435aa982f0d4f32bcd50bc",
                "head": {
                    "label": "great-expectations:m/_/delete_deprecated_code_for_v18",
                    "ref": "m/_/delete_deprecated_code_for_v18",
                    "sha": "130c9991df504c4c7d435aa982f0d4f32bcd50bc",
                    "user": {
                        "login": "great-expectations",
                        "id": 31670619,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/great-expectations",
                        "html_url": "https://github.com/great-expectations",
                        "followers_url": "https://api.github.com/users/great-expectations/followers",
                        "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                        "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                        "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                        "repos_url": "https://api.github.com/users/great-expectations/repos",
                        "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 103071520,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwNzE1MjA=",
                        "name": "great_expectations",
                        "full_name": "great-expectations/great_expectations",
                        "private": false,
                        "owner": {
                            "login": "great-expectations",
                            "id": 31670619,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/great-expectations",
                            "html_url": "https://github.com/great-expectations",
                            "followers_url": "https://api.github.com/users/great-expectations/followers",
                            "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                            "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                            "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                            "repos_url": "https://api.github.com/users/great-expectations/repos",
                            "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/great-expectations/great_expectations",
                        "description": "Always know what to expect from your data.",
                        "fork": false,
                        "url": "https://api.github.com/repos/great-expectations/great_expectations",
                        "forks_url": "https://api.github.com/repos/great-expectations/great_expectations/forks",
                        "keys_url": "https://api.github.com/repos/great-expectations/great_expectations/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/great-expectations/great_expectations/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/great-expectations/great_expectations/teams",
                        "hooks_url": "https://api.github.com/repos/great-expectations/great_expectations/hooks",
                        "issue_events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/great-expectations/great_expectations/events",
                        "assignees_url": "https://api.github.com/repos/great-expectations/great_expectations/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/great-expectations/great_expectations/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/great-expectations/great_expectations/tags",
                        "blobs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/great-expectations/great_expectations/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/great-expectations/great_expectations/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/great-expectations/great_expectations/languages",
                        "stargazers_url": "https://api.github.com/repos/great-expectations/great_expectations/stargazers",
                        "contributors_url": "https://api.github.com/repos/great-expectations/great_expectations/contributors",
                        "subscribers_url": "https://api.github.com/repos/great-expectations/great_expectations/subscribers",
                        "subscription_url": "https://api.github.com/repos/great-expectations/great_expectations/subscription",
                        "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/great-expectations/great_expectations/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/great-expectations/great_expectations/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/great-expectations/great_expectations/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/great-expectations/great_expectations/merges",
                        "archive_url": "https://api.github.com/repos/great-expectations/great_expectations/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/great-expectations/great_expectations/downloads",
                        "issues_url": "https://api.github.com/repos/great-expectations/great_expectations/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/great-expectations/great_expectations/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/great-expectations/great_expectations/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/labels{/name}",
                        "releases_url": "https://api.github.com/repos/great-expectations/great_expectations/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/great-expectations/great_expectations/deployments",
                        "created_at": "2017-09-11T00:18:46Z",
                        "updated_at": "2023-10-26T12:40:48Z",
                        "pushed_at": "2023-10-26T22:04:56Z",
                        "git_url": "git://github.com/great-expectations/great_expectations.git",
                        "ssh_url": "git@github.com:great-expectations/great_expectations.git",
                        "clone_url": "https://github.com/great-expectations/great_expectations.git",
                        "svn_url": "https://github.com/great-expectations/great_expectations",
                        "homepage": "https://docs.greatexpectations.io/",
                        "size": 173747,
                        "stargazers_count": 8931,
                        "watchers_count": 8931,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 1404,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 142,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cleandata",
                            "data-engineering",
                            "data-profilers",
                            "data-profiling",
                            "data-quality",
                            "data-science",
                            "data-unit-tests",
                            "datacleaner",
                            "datacleaning",
                            "dataquality",
                            "dataunittest",
                            "eda",
                            "exploratory-analysis",
                            "exploratory-data-analysis",
                            "exploratorydataanalysis",
                            "mlops",
                            "pipeline",
                            "pipeline-debt",
                            "pipeline-testing",
                            "pipeline-tests"
                        ],
                        "visibility": "public",
                        "forks": 1404,
                        "open_issues": 142,
                        "watchers": 8931,
                        "default_branch": "develop"
                    }
                },
                "base": {
                    "label": "great-expectations:develop",
                    "ref": "develop",
                    "sha": "f1257eb17ddb9306c5ab143cfccac4ff4b04cf58",
                    "user": {
                        "login": "great-expectations",
                        "id": 31670619,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                        "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/great-expectations",
                        "html_url": "https://github.com/great-expectations",
                        "followers_url": "https://api.github.com/users/great-expectations/followers",
                        "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                        "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                        "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                        "repos_url": "https://api.github.com/users/great-expectations/repos",
                        "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 103071520,
                        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwNzE1MjA=",
                        "name": "great_expectations",
                        "full_name": "great-expectations/great_expectations",
                        "private": false,
                        "owner": {
                            "login": "great-expectations",
                            "id": 31670619,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjcwNjE5",
                            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/great-expectations",
                            "html_url": "https://github.com/great-expectations",
                            "followers_url": "https://api.github.com/users/great-expectations/followers",
                            "following_url": "https://api.github.com/users/great-expectations/following{/other_user}",
                            "gists_url": "https://api.github.com/users/great-expectations/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/great-expectations/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/great-expectations/subscriptions",
                            "organizations_url": "https://api.github.com/users/great-expectations/orgs",
                            "repos_url": "https://api.github.com/users/great-expectations/repos",
                            "events_url": "https://api.github.com/users/great-expectations/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/great-expectations/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/great-expectations/great_expectations",
                        "description": "Always know what to expect from your data.",
                        "fork": false,
                        "url": "https://api.github.com/repos/great-expectations/great_expectations",
                        "forks_url": "https://api.github.com/repos/great-expectations/great_expectations/forks",
                        "keys_url": "https://api.github.com/repos/great-expectations/great_expectations/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/great-expectations/great_expectations/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/great-expectations/great_expectations/teams",
                        "hooks_url": "https://api.github.com/repos/great-expectations/great_expectations/hooks",
                        "issue_events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/great-expectations/great_expectations/events",
                        "assignees_url": "https://api.github.com/repos/great-expectations/great_expectations/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/great-expectations/great_expectations/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/great-expectations/great_expectations/tags",
                        "blobs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/great-expectations/great_expectations/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/great-expectations/great_expectations/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/great-expectations/great_expectations/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/great-expectations/great_expectations/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/great-expectations/great_expectations/languages",
                        "stargazers_url": "https://api.github.com/repos/great-expectations/great_expectations/stargazers",
                        "contributors_url": "https://api.github.com/repos/great-expectations/great_expectations/contributors",
                        "subscribers_url": "https://api.github.com/repos/great-expectations/great_expectations/subscribers",
                        "subscription_url": "https://api.github.com/repos/great-expectations/great_expectations/subscription",
                        "commits_url": "https://api.github.com/repos/great-expectations/great_expectations/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/great-expectations/great_expectations/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/great-expectations/great_expectations/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/great-expectations/great_expectations/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/great-expectations/great_expectations/merges",
                        "archive_url": "https://api.github.com/repos/great-expectations/great_expectations/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/great-expectations/great_expectations/downloads",
                        "issues_url": "https://api.github.com/repos/great-expectations/great_expectations/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/great-expectations/great_expectations/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/great-expectations/great_expectations/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/great-expectations/great_expectations/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/labels{/name}",
                        "releases_url": "https://api.github.com/repos/great-expectations/great_expectations/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/great-expectations/great_expectations/deployments",
                        "created_at": "2017-09-11T00:18:46Z",
                        "updated_at": "2023-10-26T12:40:48Z",
                        "pushed_at": "2023-10-26T22:04:56Z",
                        "git_url": "git://github.com/great-expectations/great_expectations.git",
                        "ssh_url": "git@github.com:great-expectations/great_expectations.git",
                        "clone_url": "https://github.com/great-expectations/great_expectations.git",
                        "svn_url": "https://github.com/great-expectations/great_expectations",
                        "homepage": "https://docs.greatexpectations.io/",
                        "size": 173747,
                        "stargazers_count": 8931,
                        "watchers_count": 8931,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 1404,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 142,
                        "license": {
                            "key": "apache-2.0",
                            "name": "Apache License 2.0",
                            "spdx_id": "Apache-2.0",
                            "url": "https://api.github.com/licenses/apache-2.0",
                            "node_id": "MDc6TGljZW5zZTI="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "cleandata",
                            "data-engineering",
                            "data-profilers",
                            "data-profiling",
                            "data-quality",
                            "data-science",
                            "data-unit-tests",
                            "datacleaner",
                            "datacleaning",
                            "dataquality",
                            "dataunittest",
                            "eda",
                            "exploratory-analysis",
                            "exploratory-data-analysis",
                            "exploratorydataanalysis",
                            "mlops",
                            "pipeline",
                            "pipeline-debt",
                            "pipeline-testing",
                            "pipeline-tests"
                        ],
                        "visibility": "public",
                        "forks": 1404,
                        "open_issues": 142,
                        "watchers": 8931,
                        "default_branch": "develop"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8863"
                    },
                    "html": {
                        "href": "https://github.com/great-expectations/great_expectations/pull/8863"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/issues/8863"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/issues/8863/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8863/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/pulls/8863/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/great-expectations/great_expectations/statuses/130c9991df504c4c7d435aa982f0d4f32bcd50bc"
                    }
                },
                "author_association": "MEMBER",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": true,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": {
                    "login": "cdkini",
                    "id": 49923762,
                    "node_id": "MDQ6VXNlcjQ5OTIzNzYy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/49923762?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/cdkini",
                    "html_url": "https://github.com/cdkini",
                    "followers_url": "https://api.github.com/users/cdkini/followers",
                    "following_url": "https://api.github.com/users/cdkini/following{/other_user}",
                    "gists_url": "https://api.github.com/users/cdkini/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/cdkini/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/cdkini/subscriptions",
                    "organizations_url": "https://api.github.com/users/cdkini/orgs",
                    "repos_url": "https://api.github.com/users/cdkini/repos",
                    "events_url": "https://api.github.com/users/cdkini/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/cdkini/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "comments": 2,
                "review_comments": 1,
                "maintainer_can_modify": false,
                "commits": 26,
                "additions": 35,
                "deletions": 1581,
                "changed_files": 22
            }
        },
        "public": true,
        "created_at": "2023-10-26T22:04:57Z",
        "org": {
            "id": 31670619,
            "login": "great-expectations",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/great-expectations",
            "avatar_url": "https://avatars.githubusercontent.com/u/31670619?"
        }
    }
]