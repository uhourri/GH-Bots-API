[
    {
        "id": "32882094615",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 14304128,
            "login": "Fernandomr88",
            "display_login": "Fernandomr88",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fernandomr88",
            "avatar_url": "https://avatars.githubusercontent.com/u/14304128?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4791",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4791",
                "id": 1957879837,
                "node_id": "I_kwDOAb2yTs50suAd",
                "number": 4791,
                "title": "rule type_literal_in_constant_pattern in switch cases",
                "user": {
                    "login": "Fernandomr88",
                    "id": 14304128,
                    "node_id": "MDQ6VXNlcjE0MzA0MTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/14304128?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Fernandomr88",
                    "html_url": "https://github.com/Fernandomr88",
                    "followers_url": "https://api.github.com/users/Fernandomr88/followers",
                    "following_url": "https://api.github.com/users/Fernandomr88/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Fernandomr88/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Fernandomr88/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Fernandomr88/subscriptions",
                    "organizations_url": "https://api.github.com/users/Fernandomr88/orgs",
                    "repos_url": "https://api.github.com/users/Fernandomr88/repos",
                    "events_url": "https://api.github.com/users/Fernandomr88/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Fernandomr88/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-23T19:04:42Z",
                "updated_at": "2023-10-26T21:15:56Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "so I have a function that basically is this\r\n\r\n```\r\nget<T>() {\r\n switch(T) {\r\n  case Person:\r\n   //code\r\n  case Dog:\r\n   //code\r\n  }\r\n}\r\n```\r\n\r\nwhich is called like `get<Person>();`\r\n\r\nand by using the notation suggested by this rule (`Person _`), it does not work.\r\n\r\nHow am I supposed to change my code to be adequate to this linter rule?\r\n\r\n_Originally posted by @Fernandomr88 in https://github.com/dart-lang/lints/issues/117#issuecomment-1775789382_\r\n            ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4791/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1781906174",
                "html_url": "https://github.com/dart-lang/linter/issues/4791#issuecomment-1781906174",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4791",
                "id": 1781906174,
                "node_id": "IC_kwDOAb2yTs5qNbr-",
                "user": {
                    "login": "Fernandomr88",
                    "id": 14304128,
                    "node_id": "MDQ6VXNlcjE0MzA0MTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/14304128?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Fernandomr88",
                    "html_url": "https://github.com/Fernandomr88",
                    "followers_url": "https://api.github.com/users/Fernandomr88/followers",
                    "following_url": "https://api.github.com/users/Fernandomr88/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Fernandomr88/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Fernandomr88/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Fernandomr88/subscriptions",
                    "organizations_url": "https://api.github.com/users/Fernandomr88/orgs",
                    "repos_url": "https://api.github.com/users/Fernandomr88/repos",
                    "events_url": "https://api.github.com/users/Fernandomr88/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Fernandomr88/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T21:15:55Z",
                "updated_at": "2023-10-26T21:15:55Z",
                "author_association": "NONE",
                "body": "> I'd still recommend changing to one of:\r\n> \r\n> * `case const Person:`, or\r\n> * `case == Dog:`\r\n> \r\n> Now that type patterns _exist_, it's easy to misread `case Person:` as doing a type check against `Person`.\r\n> \r\n> And I'd not make exceptions in the lint.\r\n\r\n`case const Person:` doesnt work\r\n`case == Dog:` works\r\n\r\nbut the suggestion made by the linter is either `case const (Person)` or `case Person _`, and both of those are not suitable for this case",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1781906174/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T21:15:56Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32871714645",
        "type": "IssuesEvent",
        "actor": {
            "id": 103167,
            "login": "srawlins",
            "display_login": "srawlins",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srawlins",
            "avatar_url": "https://avatars.githubusercontent.com/u/103167?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4794",
                "id": 1961850794,
                "node_id": "I_kwDOAb2yTs5073eq",
                "number": 4794,
                "title": "use_build_context_synchronously false positive when using switch",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4318241337,
                        "node_id": "LA_kwDOAb2yTs8AAAABAWMiOQ",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-flutter",
                        "name": "set-flutter",
                        "color": "C51574",
                        "default": false,
                        "description": "Affects a rule in the recommended Flutter rule set"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-25T16:57:54Z",
                "updated_at": "2023-10-26T14:30:08Z",
                "closed_at": "2023-10-26T14:30:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using `switch` with the given example, although there is no async gap.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nenum State { one, two, three }\r\n\r\nFuture<void> myMethod(BuildContext context, State state) async {\r\n  switch (state) {\r\n    case State.one:\r\n      final size = MediaQuery.of(context).size; // No warning\r\n    case State.two:\r\n      await doSomething();\r\n    case State.three:\r\n      final size = MediaQuery.of(context).size; // Lint warning\r\n  }\r\n}\r\n```\r\n**Expected behavior**\r\nNo lint warning for `case State.three`.\r\n\r\n**Versions**\r\n- Dart 3.1.4\r\n- Flutter 3.13.8\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4794/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-26T14:30:09Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32871714357",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 103167,
            "login": "srawlins",
            "display_login": "srawlins",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srawlins",
            "avatar_url": "https://avatars.githubusercontent.com/u/103167?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4794",
                "id": 1961850794,
                "node_id": "I_kwDOAb2yTs5073eq",
                "number": 4794,
                "title": "use_build_context_synchronously false positive when using switch",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4318241337,
                        "node_id": "LA_kwDOAb2yTs8AAAABAWMiOQ",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-flutter",
                        "name": "set-flutter",
                        "color": "C51574",
                        "default": false,
                        "description": "Affects a rule in the recommended Flutter rule set"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-25T16:57:54Z",
                "updated_at": "2023-10-26T14:30:08Z",
                "closed_at": "2023-10-26T14:30:07Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using `switch` with the given example, although there is no async gap.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nenum State { one, two, three }\r\n\r\nFuture<void> myMethod(BuildContext context, State state) async {\r\n  switch (state) {\r\n    case State.one:\r\n      final size = MediaQuery.of(context).size; // No warning\r\n    case State.two:\r\n      await doSomething();\r\n    case State.three:\r\n      final size = MediaQuery.of(context).size; // Lint warning\r\n  }\r\n}\r\n```\r\n**Expected behavior**\r\nNo lint warning for `case State.three`.\r\n\r\n**Versions**\r\n- Dart 3.1.4\r\n- Flutter 3.13.8\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4794/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1781248420",
                "html_url": "https://github.com/dart-lang/linter/issues/4794#issuecomment-1781248420",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "id": 1781248420,
                "node_id": "IC_kwDOAb2yTs5qK7Gk",
                "user": {
                    "login": "srawlins",
                    "id": 103167,
                    "node_id": "MDQ6VXNlcjEwMzE2Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/103167?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/srawlins",
                    "html_url": "https://github.com/srawlins",
                    "followers_url": "https://api.github.com/users/srawlins/followers",
                    "following_url": "https://api.github.com/users/srawlins/following{/other_user}",
                    "gists_url": "https://api.github.com/users/srawlins/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/srawlins/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/srawlins/subscriptions",
                    "organizations_url": "https://api.github.com/users/srawlins/orgs",
                    "repos_url": "https://api.github.com/users/srawlins/repos",
                    "events_url": "https://api.github.com/users/srawlins/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/srawlins/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T14:30:07Z",
                "updated_at": "2023-10-26T14:30:07Z",
                "author_association": "MEMBER",
                "body": "Thank you! This was fixed with https://github.com/dart-lang/linter/pull/4547 and should be available in Dart 3.2.0.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1781248420/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T14:30:08Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32857347013",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 93118554,
            "login": "quoc-huynh-cosee",
            "display_login": "quoc-huynh-cosee",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quoc-huynh-cosee",
            "avatar_url": "https://avatars.githubusercontent.com/u/93118554?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4794",
                "id": 1961850794,
                "node_id": "I_kwDOAb2yTs5073eq",
                "number": 4794,
                "title": "use_build_context_synchronously false positive when using switch",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4318241337,
                        "node_id": "LA_kwDOAb2yTs8AAAABAWMiOQ",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-flutter",
                        "name": "set-flutter",
                        "color": "C51574",
                        "default": false,
                        "description": "Affects a rule in the recommended Flutter rule set"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-25T16:57:54Z",
                "updated_at": "2023-10-26T06:02:58Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using `switch` with the given example, although there is no async gap.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nenum State { one, two, three }\r\n\r\nFuture<void> myMethod(BuildContext context, State state) async {\r\n  switch (state) {\r\n    case State.one:\r\n      final size = MediaQuery.of(context).size; // No warning\r\n    case State.two:\r\n      await doSomething();\r\n    case State.three:\r\n      final size = MediaQuery.of(context).size; // Lint warning\r\n  }\r\n}\r\n```\r\n**Expected behavior**\r\nNo lint warning for `case State.three`.\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4794/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1780466122",
                "html_url": "https://github.com/dart-lang/linter/issues/4794#issuecomment-1780466122",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "id": 1780466122,
                "node_id": "IC_kwDOAb2yTs5qH8HK",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-26T06:02:58Z",
                "updated_at": "2023-10-26T06:02:58Z",
                "author_association": "NONE",
                "body": "Hi @srawlins, I'm using Dart 3.1.4 and Flutter 3.13.8.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1780466122/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-26T06:02:59Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32847804745",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 103167,
            "login": "srawlins",
            "display_login": "srawlins",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srawlins",
            "avatar_url": "https://avatars.githubusercontent.com/u/103167?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4793",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4793",
                "id": 1960657304,
                "node_id": "I_kwDOAb2yTs503UGY",
                "number": 4793,
                "title": "proposal: `unintented_html_in_doc_comment`",
                "user": {
                    "login": "srawlins",
                    "id": 103167,
                    "node_id": "MDQ6VXNlcjEwMzE2Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/103167?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/srawlins",
                    "html_url": "https://github.com/srawlins",
                    "followers_url": "https://api.github.com/users/srawlins/followers",
                    "following_url": "https://api.github.com/users/srawlins/following{/other_user}",
                    "gists_url": "https://api.github.com/users/srawlins/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/srawlins/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/srawlins/subscriptions",
                    "organizations_url": "https://api.github.com/users/srawlins/orgs",
                    "repos_url": "https://api.github.com/users/srawlins/repos",
                    "events_url": "https://api.github.com/users/srawlins/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/srawlins/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T06:41:09Z",
                "updated_at": "2023-10-25T19:55:23Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## `unintented_html_in_doc_comment`\r\n\r\n## Description\r\n\r\nSometimes a developer may neglect to put a code reference with angle brackets in backticks, within a doc comment, and write something like `/// Returns a List<int>`. The angle brackets are interpreted as HTML, and so the type argument(s) generally get swallowed by the browser, and not displayed.\r\n\r\nThe lint rule would catch angle brackets not contained within [a code block](https://spec.commonmark.org/0.30/#indented-code-blocks), contained within [a code span](https://spec.commonmark.org/0.30/#code-spans), or used as the delimiters in [an autolink](https://spec.commonmark.org/0.30/#autolinks).\r\n\r\n## Details\r\n\r\nI am recommending a linter rule rather than a static warning because there is a fair bit of opportunity for false positives, unless linter parses with the markdown package. This may or may not be on the table...\r\n\r\nWithout the markdown package, and rigorous parsing of doc comments, things will slip through.\r\n\r\nIn any case, I think the lint rule would catch any `<` which was determined to not be in a code block, code span, or autolink. We might need to allow [HTML blocks](https://spec.commonmark.org/0.30/#html-blocks) and [raw HTML](https://spec.commonmark.org/0.30/#raw-html), which are allowed by Markdown broadly, and I believe we allow some raw HTML; it might be an allowlist of tag names.\r\n\r\n## Kind\r\n\r\nGuards against errors in documentation.\r\n\r\n## Bad Examples\r\n\r\n```\r\n/// Text List<int>.\r\n/// Text [List<int>].\r\n/// <assignment> -> <variable> = <expression> \r\n```\r\n\r\n## Good Examples \r\n\r\n```\r\n/// Text `List<int>`.\r\n/// `<assignment -> <variable> = <expression>`\r\n```\r\n\r\n## Discussion\r\n\r\n\r\n### Discussion checklist\r\n\r\n- [ ] List any existing rules this proposal modifies, complements, overlaps or conflicts with.\r\n- [ ] List any relevant issues (reported here, the [SDK Tracker], or elsewhere).\r\n- [ ] If there's any prior art (e.g., in other linters), please add references here.\r\n- [ ] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?)\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n\r\n<!-- Links -->\r\n[Writing Lints]: https://github.com/dart-lang/linter/blob/main/doc/writing-lints.md\r\n[Effective Dart]: https://dart.dev/effective-dart\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[SDK Tracker]: https://github.com/dart-lang/sdk/issues\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4793/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779957877",
                "html_url": "https://github.com/dart-lang/linter/issues/4793#issuecomment-1779957877",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4793",
                "id": 1779957877,
                "node_id": "IC_kwDOAb2yTs5qGAB1",
                "user": {
                    "login": "srawlins",
                    "id": 103167,
                    "node_id": "MDQ6VXNlcjEwMzE2Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/103167?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/srawlins",
                    "html_url": "https://github.com/srawlins",
                    "followers_url": "https://api.github.com/users/srawlins/followers",
                    "following_url": "https://api.github.com/users/srawlins/following{/other_user}",
                    "gists_url": "https://api.github.com/users/srawlins/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/srawlins/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/srawlins/subscriptions",
                    "organizations_url": "https://api.github.com/users/srawlins/orgs",
                    "repos_url": "https://api.github.com/users/srawlins/repos",
                    "events_url": "https://api.github.com/users/srawlins/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/srawlins/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T19:55:23Z",
                "updated_at": "2023-10-25T19:55:23Z",
                "author_association": "MEMBER",
                "body": "> You mention a potential allow list of HTML tags. What tags are you thinking?\r\n\r\nI don't think there is any design or decision-making here, just some investigation:\r\n\r\n* If GitHub allows some tags to be used in an HTML block, then pub.dev should allow the same for package READMEs, and dartdoc should allow the same for doc comments; I think this is implemented already.\r\n* Same with inline HTML. It might be the same allowlist.\r\n* I think all of this might be implemented in package:markdown...\r\n\r\nGiven that state, the lint rule should just report on text that looks like an HTML tag, which does not match the allowlist. So presumably `<script>` won't pass, and `<int>` in `List<int>` won't pass.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779957877/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T19:55:23Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32847681130",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 103167,
            "login": "srawlins",
            "display_login": "srawlins",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srawlins",
            "avatar_url": "https://avatars.githubusercontent.com/u/103167?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4794",
                "id": 1961850794,
                "node_id": "I_kwDOAb2yTs5073eq",
                "number": 4794,
                "title": "use_build_context_synchronously false positive when using switch",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4318241337,
                        "node_id": "LA_kwDOAb2yTs8AAAABAWMiOQ",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-flutter",
                        "name": "set-flutter",
                        "color": "C51574",
                        "default": false,
                        "description": "Affects a rule in the recommended Flutter rule set"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-25T16:57:54Z",
                "updated_at": "2023-10-25T19:50:10Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using `switch` with the given example, although there is no async gap.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nenum State { one, two, three }\r\n\r\nFuture<void> myMethod(BuildContext context, State state) async {\r\n  switch (state) {\r\n    case State.one:\r\n      final size = MediaQuery.of(context).size; // No warning\r\n    case State.two:\r\n      await doSomething();\r\n    case State.three:\r\n      final size = MediaQuery.of(context).size; // Lint warning\r\n  }\r\n}\r\n```\r\n**Expected behavior**\r\nNo lint warning for `case State.three`.\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4794/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779950585",
                "html_url": "https://github.com/dart-lang/linter/issues/4794#issuecomment-1779950585",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "id": 1779950585,
                "node_id": "IC_kwDOAb2yTs5qF-P5",
                "user": {
                    "login": "srawlins",
                    "id": 103167,
                    "node_id": "MDQ6VXNlcjEwMzE2Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/103167?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/srawlins",
                    "html_url": "https://github.com/srawlins",
                    "followers_url": "https://api.github.com/users/srawlins/followers",
                    "following_url": "https://api.github.com/users/srawlins/following{/other_user}",
                    "gists_url": "https://api.github.com/users/srawlins/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/srawlins/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/srawlins/subscriptions",
                    "organizations_url": "https://api.github.com/users/srawlins/orgs",
                    "repos_url": "https://api.github.com/users/srawlins/repos",
                    "events_url": "https://api.github.com/users/srawlins/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/srawlins/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T19:50:10Z",
                "updated_at": "2023-10-25T19:50:10Z",
                "author_association": "MEMBER",
                "body": "@quoc-huynh-cosee thanks for the report, can you say what version of Flutter or Dart you are using?",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779950585/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T19:50:10Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32846070583",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 67586,
            "login": "pq",
            "display_login": "pq",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pq",
            "avatar_url": "https://avatars.githubusercontent.com/u/67586?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4794",
                "id": 1961850794,
                "node_id": "I_kwDOAb2yTs5073eq",
                "number": 4794,
                "title": "use_build_context_synchronously false positive when using switch",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4318241337,
                        "node_id": "LA_kwDOAb2yTs8AAAABAWMiOQ",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-flutter",
                        "name": "set-flutter",
                        "color": "C51574",
                        "default": false,
                        "description": "Affects a rule in the recommended Flutter rule set"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T16:57:54Z",
                "updated_at": "2023-10-25T18:43:15Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using `switch` with the given example, although there is no async gap.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nenum State { one, two, three }\r\n\r\nFuture<void> myMethod(BuildContext context, State state) async {\r\n  switch (state) {\r\n    case State.one:\r\n      final size = MediaQuery.of(context).size; // No warning\r\n    case State.two:\r\n      await doSomething();\r\n    case State.three:\r\n      final size = MediaQuery.of(context).size; // Lint warning\r\n  }\r\n}\r\n```\r\n**Expected behavior**\r\nNo lint warning for `case State.three`.\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4794/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779849591",
                "html_url": "https://github.com/dart-lang/linter/issues/4794#issuecomment-1779849591",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "id": 1779849591,
                "node_id": "IC_kwDOAb2yTs5qFll3",
                "user": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T18:43:15Z",
                "updated_at": "2023-10-25T18:43:15Z",
                "author_association": "MEMBER",
                "body": "/fyi @stereotype441 ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779849591/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T18:43:15Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32846065976",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 67586,
            "login": "pq",
            "display_login": "pq",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pq",
            "avatar_url": "https://avatars.githubusercontent.com/u/67586?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4795",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4795",
                "id": 1961862671,
                "node_id": "I_kwDOAb2yTs5076YP",
                "number": 4795,
                "title": "use_build_context_synchronously false positive when using if case",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4318241337,
                        "node_id": "LA_kwDOAb2yTs8AAAABAWMiOQ",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-flutter",
                        "name": "set-flutter",
                        "color": "C51574",
                        "default": false,
                        "description": "Affects a rule in the recommended Flutter rule set"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T17:04:54Z",
                "updated_at": "2023-10-25T18:43:04Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using if case with the given example, although there is a `context.mounted` check.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nFuture<void> myMethod(BuildContext context, dynamic value) async {\r\n  await doSomething();\r\n\r\n  if (value case final int value when context.mounted) {\r\n    final size = MediaQuery.of(context);\r\n  }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nNo lint warning.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4795/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779849306",
                "html_url": "https://github.com/dart-lang/linter/issues/4795#issuecomment-1779849306",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4795",
                "id": 1779849306,
                "node_id": "IC_kwDOAb2yTs5qFlha",
                "user": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T18:43:03Z",
                "updated_at": "2023-10-25T18:43:03Z",
                "author_association": "MEMBER",
                "body": "/fyi @stereotype441 ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779849306/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T18:43:04Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32844968441",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 18372958,
            "login": "parlough",
            "display_login": "parlough",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parlough",
            "avatar_url": "https://avatars.githubusercontent.com/u/18372958?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4793",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4793",
                "id": 1960657304,
                "node_id": "I_kwDOAb2yTs503UGY",
                "number": 4793,
                "title": "proposal: `unintented_html_in_doc_comment`",
                "user": {
                    "login": "srawlins",
                    "id": 103167,
                    "node_id": "MDQ6VXNlcjEwMzE2Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/103167?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/srawlins",
                    "html_url": "https://github.com/srawlins",
                    "followers_url": "https://api.github.com/users/srawlins/followers",
                    "following_url": "https://api.github.com/users/srawlins/following{/other_user}",
                    "gists_url": "https://api.github.com/users/srawlins/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/srawlins/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/srawlins/subscriptions",
                    "organizations_url": "https://api.github.com/users/srawlins/orgs",
                    "repos_url": "https://api.github.com/users/srawlins/repos",
                    "events_url": "https://api.github.com/users/srawlins/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/srawlins/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T06:41:09Z",
                "updated_at": "2023-10-25T17:59:10Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## `unintented_html_in_doc_comment`\r\n\r\n## Description\r\n\r\nSometimes a developer may neglect to put a code reference with angle brackets in backticks, within a doc comment, and write something like `/// Returns a List<int>`. The angle brackets are interpreted as HTML, and so the type argument(s) generally get swallowed by the browser, and not displayed.\r\n\r\nThe lint rule would catch angle brackets not contained within [a code block](https://spec.commonmark.org/0.30/#indented-code-blocks), contained within [a code span](https://spec.commonmark.org/0.30/#code-spans), or used as the delimiters in [an autolink](https://spec.commonmark.org/0.30/#autolinks).\r\n\r\n## Details\r\n\r\nI am recommending a linter rule rather than a static warning because there is a fair bit of opportunity for false positives, unless linter parses with the markdown package. This may or may not be on the table...\r\n\r\nWithout the markdown package, and rigorous parsing of doc comments, things will slip through.\r\n\r\nIn any case, I think the lint rule would catch any `<` which was determined to not be in a code block, code span, or autolink. We might need to allow [HTML blocks](https://spec.commonmark.org/0.30/#html-blocks) and [raw HTML](https://spec.commonmark.org/0.30/#raw-html), which are allowed by Markdown broadly, and I believe we allow some raw HTML; it might be an allowlist of tag names.\r\n\r\n## Kind\r\n\r\nGuards against errors in documentation.\r\n\r\n## Bad Examples\r\n\r\n```\r\n/// Text List<int>.\r\n/// Text [List<int>].\r\n/// <assignment> -> <variable> = <expression> \r\n```\r\n\r\n## Good Examples \r\n\r\n```\r\n/// Text `List<int>`.\r\n/// `<assignment -> <variable> = <expression>`\r\n```\r\n\r\n## Discussion\r\n\r\n\r\n### Discussion checklist\r\n\r\n- [ ] List any existing rules this proposal modifies, complements, overlaps or conflicts with.\r\n- [ ] List any relevant issues (reported here, the [SDK Tracker], or elsewhere).\r\n- [ ] If there's any prior art (e.g., in other linters), please add references here.\r\n- [ ] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?)\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n\r\n<!-- Links -->\r\n[Writing Lints]: https://github.com/dart-lang/linter/blob/main/doc/writing-lints.md\r\n[Effective Dart]: https://dart.dev/effective-dart\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[SDK Tracker]: https://github.com/dart-lang/sdk/issues\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4793/reactions",
                    "total_count": 2,
                    "+1": 2,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779783362",
                "html_url": "https://github.com/dart-lang/linter/issues/4793#issuecomment-1779783362",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4793",
                "id": 1779783362,
                "node_id": "IC_kwDOAb2yTs5qFVbC",
                "user": {
                    "login": "parlough",
                    "id": 18372958,
                    "node_id": "MDQ6VXNlcjE4MzcyOTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/18372958?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/parlough",
                    "html_url": "https://github.com/parlough",
                    "followers_url": "https://api.github.com/users/parlough/followers",
                    "following_url": "https://api.github.com/users/parlough/following{/other_user}",
                    "gists_url": "https://api.github.com/users/parlough/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/parlough/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/parlough/subscriptions",
                    "organizations_url": "https://api.github.com/users/parlough/orgs",
                    "repos_url": "https://api.github.com/users/parlough/repos",
                    "events_url": "https://api.github.com/users/parlough/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/parlough/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T17:59:10Z",
                "updated_at": "2023-10-25T17:59:10Z",
                "author_association": "MEMBER",
                "body": "I think this makes sense! \r\n\r\nYou mention a potential allow list of HTML tags. What tags are you thinking? I personally think doc comments shouldn't have any raw HTML _(without some very specific opt-in such as the `{@inject-html}` directive or synax that can be converted to another format)_ as they can be and are rendered in non-HTML environments.\r\n\r\nNote on the name. I guess you mean <code>uninten<strong>ded</strong>_html_in_doc_comment</code> :) ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779783362/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T17:59:11Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32844681931",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 18372958,
            "login": "parlough",
            "display_login": "parlough",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parlough",
            "avatar_url": "https://avatars.githubusercontent.com/u/18372958?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4796",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4796",
                "id": 1961908434,
                "node_id": "I_kwDOAb2yTs508FjS",
                "number": 4796,
                "title": "Wording of `unnecessary_null_comparison`",
                "user": {
                    "login": "Levi-Lesches",
                    "id": 20747538,
                    "node_id": "MDQ6VXNlcjIwNzQ3NTM4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/20747538?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Levi-Lesches",
                    "html_url": "https://github.com/Levi-Lesches",
                    "followers_url": "https://api.github.com/users/Levi-Lesches/followers",
                    "following_url": "https://api.github.com/users/Levi-Lesches/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Levi-Lesches/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Levi-Lesches/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Levi-Lesches/subscriptions",
                    "organizations_url": "https://api.github.com/users/Levi-Lesches/orgs",
                    "repos_url": "https://api.github.com/users/Levi-Lesches/repos",
                    "events_url": "https://api.github.com/users/Levi-Lesches/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Levi-Lesches/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-25T17:33:23Z",
                "updated_at": "2023-10-25T17:47:26Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nThe `unnecessary_null_comparison` lint has an incorrect message.\r\n\r\n**To Reproduce**\r\n```dart\r\nvoid main() {\r\n  int? something;\r\n  if (something == null) {  // Warning: The operand can't be null, so the condition is always 'true'.\r\n    print(\"This always prints\");\r\n  }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nI believe the correct message should be: `The operand is always null, so the condition is always 'true'.`\r\n\r\nAlso, the \"fix\" message is `Remove the condition.` which may be a bit harsh compared to the other messages. How about `Try removing the condition.`? Obviously not as important compared to the real issue.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4796/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779765856",
                "html_url": "https://github.com/dart-lang/linter/issues/4796#issuecomment-1779765856",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4796",
                "id": 1779765856,
                "node_id": "IC_kwDOAb2yTs5qFRJg",
                "user": {
                    "login": "parlough",
                    "id": 18372958,
                    "node_id": "MDQ6VXNlcjE4MzcyOTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/18372958?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/parlough",
                    "html_url": "https://github.com/parlough",
                    "followers_url": "https://api.github.com/users/parlough/followers",
                    "following_url": "https://api.github.com/users/parlough/following{/other_user}",
                    "gists_url": "https://api.github.com/users/parlough/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/parlough/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/parlough/subscriptions",
                    "organizations_url": "https://api.github.com/users/parlough/orgs",
                    "repos_url": "https://api.github.com/users/parlough/repos",
                    "events_url": "https://api.github.com/users/parlough/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/parlough/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T17:47:26Z",
                "updated_at": "2023-10-25T17:47:26Z",
                "author_association": "MEMBER",
                "body": "This one is actually a built-in diagnostic warning in the SDK rather than a lint. Looks like https://github.com/dart-lang/sdk/commit/b33058488c7c059e6aea1724f25e9e66443af78d implemented the diagnostic triggering in this case, but didn't customize the message for the new case.\r\n\r\n\\cc @bwilkerson To move to SDK.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1779765856/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T17:47:26Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32844343008",
        "type": "IssuesEvent",
        "actor": {
            "id": 20747538,
            "login": "Levi-Lesches",
            "display_login": "Levi-Lesches",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Levi-Lesches",
            "avatar_url": "https://avatars.githubusercontent.com/u/20747538?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4796",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4796",
                "id": 1961908434,
                "node_id": "I_kwDOAb2yTs508FjS",
                "number": 4796,
                "title": "Wording of `unnecessary_null_comparison`",
                "user": {
                    "login": "Levi-Lesches",
                    "id": 20747538,
                    "node_id": "MDQ6VXNlcjIwNzQ3NTM4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/20747538?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Levi-Lesches",
                    "html_url": "https://github.com/Levi-Lesches",
                    "followers_url": "https://api.github.com/users/Levi-Lesches/followers",
                    "following_url": "https://api.github.com/users/Levi-Lesches/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Levi-Lesches/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Levi-Lesches/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Levi-Lesches/subscriptions",
                    "organizations_url": "https://api.github.com/users/Levi-Lesches/orgs",
                    "repos_url": "https://api.github.com/users/Levi-Lesches/repos",
                    "events_url": "https://api.github.com/users/Levi-Lesches/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Levi-Lesches/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T17:33:23Z",
                "updated_at": "2023-10-25T17:33:23Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nThe `unnecessary_null_comparison` lint has an incorrect message.\r\n\r\n**To Reproduce**\r\n```dart\r\nvoid main() {\r\n  int? something;\r\n  if (something == null) {  // Warning: The operand can't be null, so the condition is always 'true'.\r\n    print(\"This always prints\");\r\n  }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nI believe the correct message should be: `The operand is always null, so the condition is always 'true'.`\r\n\r\nAlso, the \"fix\" message is `Remove the condition.` which may be a bit harsh compared to the other messages. How about `Try removing the condition.`? Obviously not as important compared to the real issue.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4796/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4796/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T17:33:25Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32843585101",
        "type": "IssuesEvent",
        "actor": {
            "id": 93118554,
            "login": "quoc-huynh-cosee",
            "display_login": "quoc-huynh-cosee",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quoc-huynh-cosee",
            "avatar_url": "https://avatars.githubusercontent.com/u/93118554?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4795",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4795",
                "id": 1961862671,
                "node_id": "I_kwDOAb2yTs5076YP",
                "number": 4795,
                "title": "use_build_context_synchronously false positive when using if case",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T17:04:54Z",
                "updated_at": "2023-10-25T17:04:54Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using if case with the given example, although there is a `context.mounted` check.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nFuture<void> myMethod(BuildContext context, dynamic value) async {\r\n  await doSomething();\r\n\r\n  if (value case final int value when context.mounted) {\r\n    final size = MediaQuery.of(context);\r\n  }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nNo lint warning.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4795/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4795/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T17:04:56Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32843397873",
        "type": "IssuesEvent",
        "actor": {
            "id": 93118554,
            "login": "quoc-huynh-cosee",
            "display_login": "quoc-huynh-cosee",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quoc-huynh-cosee",
            "avatar_url": "https://avatars.githubusercontent.com/u/93118554?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4794",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4794",
                "id": 1961850794,
                "node_id": "I_kwDOAb2yTs5073eq",
                "number": 4794,
                "title": "use_build_context_synchronously false positive when using switch",
                "user": {
                    "login": "quoc-huynh-cosee",
                    "id": 93118554,
                    "node_id": "U_kgDOBYzgWg",
                    "avatar_url": "https://avatars.githubusercontent.com/u/93118554?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/quoc-huynh-cosee",
                    "html_url": "https://github.com/quoc-huynh-cosee",
                    "followers_url": "https://api.github.com/users/quoc-huynh-cosee/followers",
                    "following_url": "https://api.github.com/users/quoc-huynh-cosee/following{/other_user}",
                    "gists_url": "https://api.github.com/users/quoc-huynh-cosee/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/quoc-huynh-cosee/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/quoc-huynh-cosee/subscriptions",
                    "organizations_url": "https://api.github.com/users/quoc-huynh-cosee/orgs",
                    "repos_url": "https://api.github.com/users/quoc-huynh-cosee/repos",
                    "events_url": "https://api.github.com/users/quoc-huynh-cosee/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/quoc-huynh-cosee/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T16:57:54Z",
                "updated_at": "2023-10-25T16:57:54Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nI'm receiving a `use_build_context_synchronously` lint warning using `switch` with the given example, although there is no async gap.\r\n\r\n**To Reproduce**\r\n```dart\r\nFuture<void> doSomething() async {}\r\n\r\nenum State { one, two, three }\r\n\r\nFuture<void> myMethod(BuildContext context, State state) async {\r\n  switch (state) {\r\n    case State.one:\r\n      final size = MediaQuery.of(context).size; // No warning\r\n    case State.two:\r\n      await doSomething();\r\n    case State.three:\r\n      final size = MediaQuery.of(context).size; // Lint warning\r\n  }\r\n}\r\n```\r\n**Expected behavior**\r\nNo lint warning for `case State.three`.\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4794/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4794/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T16:57:56Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32825035313",
        "type": "IssuesEvent",
        "actor": {
            "id": 103167,
            "login": "srawlins",
            "display_login": "srawlins",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srawlins",
            "avatar_url": "https://avatars.githubusercontent.com/u/103167?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4793",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4793",
                "id": 1960657304,
                "node_id": "I_kwDOAb2yTs503UGY",
                "number": 4793,
                "title": "proposal: `unintented_html_in_doc_comment`",
                "user": {
                    "login": "srawlins",
                    "id": 103167,
                    "node_id": "MDQ6VXNlcjEwMzE2Nw==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/103167?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/srawlins",
                    "html_url": "https://github.com/srawlins",
                    "followers_url": "https://api.github.com/users/srawlins/followers",
                    "following_url": "https://api.github.com/users/srawlins/following{/other_user}",
                    "gists_url": "https://api.github.com/users/srawlins/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/srawlins/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/srawlins/subscriptions",
                    "organizations_url": "https://api.github.com/users/srawlins/orgs",
                    "repos_url": "https://api.github.com/users/srawlins/repos",
                    "events_url": "https://api.github.com/users/srawlins/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/srawlins/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-25T06:41:09Z",
                "updated_at": "2023-10-25T06:41:09Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## `unintented_html_in_doc_comment`\r\n\r\n## Description\r\n\r\nSometimes a developer may neglect to put a code reference with angle brackets in backticks, within a doc comment, and write something like `/// Returns a List<int>`. The angle brackets are interpreted as HTML, and so the type argument(s) generally get swallowed by the browser, and not displayed.\r\n\r\nThe lint rule would catch angle brackets not contained within [a code block](https://spec.commonmark.org/0.30/#indented-code-blocks), contained within [a code span](https://spec.commonmark.org/0.30/#code-spans), or used as the delimiters in [an autolink](https://spec.commonmark.org/0.30/#autolinks).\r\n\r\n## Details\r\n\r\nI am recommending a linter rule rather than a static warning because there is a fair bit of opportunity for false positives, unless linter parses with the markdown package. This may or may not be on the table...\r\n\r\nWithout the markdown package, and rigorous parsing of doc comments, things will slip through.\r\n\r\nIn any case, I think the lint rule would catch any `<` which was determined to not be in a code block, code span, or autolink. We might need to allow [HTML blocks](https://spec.commonmark.org/0.30/#html-blocks) and [raw HTML](https://spec.commonmark.org/0.30/#raw-html), which are allowed by Markdown broadly, and I believe we allow some raw HTML; it might be an allowlist of tag names.\r\n\r\n## Kind\r\n\r\nGuards against errors in documentation.\r\n\r\n## Bad Examples\r\n\r\n```\r\n/// Text List<int>.\r\n/// Text [List<int>].\r\n/// <assignment> -> <variable> = <expression> \r\n```\r\n\r\n## Good Examples \r\n\r\n```\r\n/// Text `List<int>`.\r\n/// `<assignment -> <variable> = <expression>`\r\n```\r\n\r\n## Discussion\r\n\r\n\r\n### Discussion checklist\r\n\r\n- [ ] List any existing rules this proposal modifies, complements, overlaps or conflicts with.\r\n- [ ] List any relevant issues (reported here, the [SDK Tracker], or elsewhere).\r\n- [ ] If there's any prior art (e.g., in other linters), please add references here.\r\n- [ ] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?)\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n\r\n<!-- Links -->\r\n[Writing Lints]: https://github.com/dart-lang/linter/blob/main/doc/writing-lints.md\r\n[Effective Dart]: https://dart.dev/effective-dart\r\n[Flutter Style Guide]: https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo\r\n[SDK Tracker]: https://github.com/dart-lang/sdk/issues\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4793/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4793/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T06:41:10Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32807308735",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5840555,
            "login": "bwilkerson",
            "display_login": "bwilkerson",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwilkerson",
            "avatar_url": "https://avatars.githubusercontent.com/u/5840555?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/events",
                "html_url": "https://github.com/dart-lang/linter/issues/1542",
                "id": 437382882,
                "node_id": "MDU6SXNzdWU0MzczODI4ODI=",
                "number": 1542,
                "title": "new lint: sort_child_properties_last",
                "user": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 177178374,
                        "node_id": "MDU6TGFiZWwxNzcxNzgzNzQ=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-request",
                        "name": "lint-request",
                        "color": "006b75",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 378527981,
                        "node_id": "MDU6TGFiZWwzNzg1Mjc5ODE=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/customer-flutter",
                        "name": "customer-flutter",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/dart-lang/linter/milestones/10",
                    "html_url": "https://github.com/dart-lang/linter/milestone/10",
                    "labels_url": "https://api.github.com/repos/dart-lang/linter/milestones/10/labels",
                    "id": 3123505,
                    "node_id": "MDk6TWlsZXN0b25lMzEyMzUwNQ==",
                    "number": 10,
                    "title": "On Deck",
                    "description": "",
                    "creator": {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 19,
                    "state": "open",
                    "created_at": "2018-02-16T23:24:07Z",
                    "updated_at": "2023-04-05T17:39:45Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 20,
                "created_at": "2019-04-25T20:27:10Z",
                "updated_at": "2023-10-24T15:01:32Z",
                "closed_at": "2019-04-29T17:02:50Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Name TBD but the idea is to nudge people to sorting child/children properties last in their build methods to improve UI-as-Code feature readability.\r\n\r\n@jacob314: could you add some more context?  Maybe some concrete exemplars?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/1542/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1777428287",
                "html_url": "https://github.com/dart-lang/linter/issues/1542#issuecomment-1777428287",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "id": 1777428287,
                "node_id": "IC_kwDOAb2yTs5p8Wc_",
                "user": {
                    "login": "bwilkerson",
                    "id": 5840555,
                    "node_id": "MDQ6VXNlcjU4NDA1NTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5840555?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bwilkerson",
                    "html_url": "https://github.com/bwilkerson",
                    "followers_url": "https://api.github.com/users/bwilkerson/followers",
                    "following_url": "https://api.github.com/users/bwilkerson/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bwilkerson/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bwilkerson/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bwilkerson/subscriptions",
                    "organizations_url": "https://api.github.com/users/bwilkerson/orgs",
                    "repos_url": "https://api.github.com/users/bwilkerson/repos",
                    "events_url": "https://api.github.com/users/bwilkerson/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bwilkerson/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T15:01:31Z",
                "updated_at": "2023-10-24T15:01:31Z",
                "author_association": "MEMBER",
                "body": "I believe that there is a misunderstanding. The [sort_child_properties_last](https://dart.dev/tools/linter-rules/sort_child_properties_last) lint enforces an order for named arguments in the invocation of constructors of Flutter `Widget` subclasses. It doesn't enforce an ordering of members in a class.\r\n\r\nThere is a 'Sort Members' command in the IDEs that will sort the members in classes, as well as top-level declarations, in a predefined order, but there is no lint to enforce that order.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1777428287/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T15:01:32Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32799945356",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4865287,
            "login": "lrhn",
            "display_login": "lrhn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lrhn",
            "avatar_url": "https://avatars.githubusercontent.com/u/4865287?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4787",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4787",
                "id": 1953284277,
                "node_id": "I_kwDOAb2yTs50bMC1",
                "number": 4787,
                "title": "async within sync call warning and override",
                "user": {
                    "login": "bsz0206",
                    "id": 11778358,
                    "node_id": "MDQ6VXNlcjExNzc4MzU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11778358?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bsz0206",
                    "html_url": "https://github.com/bsz0206",
                    "followers_url": "https://api.github.com/users/bsz0206/followers",
                    "following_url": "https://api.github.com/users/bsz0206/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bsz0206/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bsz0206/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bsz0206/subscriptions",
                    "organizations_url": "https://api.github.com/users/bsz0206/orgs",
                    "repos_url": "https://api.github.com/users/bsz0206/repos",
                    "events_url": "https://api.github.com/users/bsz0206/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bsz0206/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 4309992631,
                        "node_id": "LA_kwDOAb2yTs8AAAABAOVEtw",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/P4",
                        "name": "P4",
                        "color": "BFD4F2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-20T00:47:56Z",
                "updated_at": "2023-10-24T10:49:20Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "when an async method is called from a sync function it should warn and the developer should specify it is an informed decision:\r\n\r\nBad:\r\nclass B {\r\n   vod doTheJob() async { ... }\r\n}\r\nvoid f() {\r\n  B.get();\r\n}\r\n\r\nGood:\r\nclass B {\r\n   vod doTheJob() async { ... }\r\n}\r\nvoid f() {\r\n  awaited(B.get());\r\n}\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4787/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776974316",
                "html_url": "https://github.com/dart-lang/linter/issues/4787#issuecomment-1776974316",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4787",
                "id": 1776974316,
                "node_id": "IC_kwDOAb2yTs5p6nns",
                "user": {
                    "login": "lrhn",
                    "id": 4865287,
                    "node_id": "MDQ6VXNlcjQ4NjUyODc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4865287?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lrhn",
                    "html_url": "https://github.com/lrhn",
                    "followers_url": "https://api.github.com/users/lrhn/followers",
                    "following_url": "https://api.github.com/users/lrhn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lrhn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lrhn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lrhn/subscriptions",
                    "organizations_url": "https://api.github.com/users/lrhn/orgs",
                    "repos_url": "https://api.github.com/users/lrhn/repos",
                    "events_url": "https://api.github.com/users/lrhn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lrhn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T10:49:20Z",
                "updated_at": "2023-10-24T10:49:20Z",
                "author_association": "MEMBER",
                "body": "There is no lint which does for `sync` functions what `unawaited_futures` does for `async` functions.\r\nIt would probably be nice to have one.\r\n\r\nThe `discarded_futures` lint is something else. It's misnamed, but it really is \"no calling async functions from a `sync` function\" ... at all! The remedies are converting the `sync` function to an `async` function (which enables `unawaited_futures`), not calling the `async` function at all, or using `// ignore`. (According to the documentation, which is as close to a specification as we have.)\r\n\r\nI agree that `// ignore:` should only be for exceptional cases. If you have many instances, then the lint is probably not a good match for your code. (Which is likely for `discared_futures`.)\r\n\r\nAbout the original example:\r\n```drt\r\nclass B {\r\n  void doTheJob() async { ... }\r\n}\r\n```\r\nThis `doTheJob` method returns `void`, so it's unlikely and undesirable that the calling method should consider the method asynchronous. It's *written* to make everybody ignore the returned future, and the linter should consider that a good enough reason to actually ignore it.\r\n\r\n\r\nThere are no plans to change `unawaited`. It's designed for `unawaited_futures`, and makes it so that there is no expression evaluating to a `Future`, which isn't also used in some way. If it returned a `Future`, it wouldn't work for that purpose. (Returning `dynamic` is right out. People don't want `dynamic`.)\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776974316/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T10:49:21Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32799711154",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4865287,
            "login": "lrhn",
            "display_login": "lrhn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lrhn",
            "avatar_url": "https://avatars.githubusercontent.com/u/4865287?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4790",
                "id": 1957685483,
                "node_id": "I_kwDOAb2yTs50r-jr",
                "number": 4790,
                "title": "proposal: `useless_nullable_extension_type`",
                "user": {
                    "login": "eernstg",
                    "id": 9606994,
                    "node_id": "MDQ6VXNlcjk2MDY5OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9606994?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eernstg",
                    "html_url": "https://github.com/eernstg",
                    "followers_url": "https://api.github.com/users/eernstg/followers",
                    "following_url": "https://api.github.com/users/eernstg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eernstg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eernstg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eernstg/subscriptions",
                    "organizations_url": "https://api.github.com/users/eernstg/orgs",
                    "repos_url": "https://api.github.com/users/eernstg/repos",
                    "events_url": "https://api.github.com/users/eernstg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eernstg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-23T17:41:59Z",
                "updated_at": "2023-10-24T10:39:27Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## useless_nullable_extension_type\r\n\r\n## Description\r\n\r\nWarn that a given extension type of the form `E?` is useless because a value of type `E` can already be null.\r\n\r\n## Details\r\n\r\nThis lint warns against using a type of the form `E?` when `E` is an extension type that refers to an extension type declaration whose representation type is nullable.\r\n\r\n## Kind\r\n\r\nThis lint guards against code which is less useful than it could be.\r\n\r\n## Bad Examples\r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE? e = ...; // LINT\r\nvoid bar(E? e) {} // LINT\r\nList<E?> es = ...; // LINT\r\n```\r\n\r\n## Good Examples \r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE e = ...;\r\nvoid bar(E e) {}\r\nList<E> es = ...;\r\n```\r\n\r\n## Discussion\r\n\r\nAssume that `E` is an extension type that refers to an extension type declaration whose representation type is nullable. We would then warn against using the type `E?`.\r\n\r\nThe point is that the value of an expression of type `E` can already be null (it is not just possible, it is guaranteed that it can be null), and this means that the set of objects whose type can correctly be `E?` is no larger than the set of objects whose type can be `E`. In other words, the `?` makes absolutely no difference to the set of objects that have the given type.\r\n\r\nUsing `E?` _does_ make a difference in a different manner, though, because a receiver of type `E?` can only invoke the members of `Object` (`toString`, `==`, `hashCode`, `runtimeType`, `noSuchMethod`). In contrast, a receiver of type `E` can invoke all members declared or \"inherited\" by `E` (including the 5 `Object` members). So the use of the type `E?` will prevent invocation of basically all members of the interface of `E` (if that's really what you want then just use the type `Object?` or a type variable with that bound).\r\n\r\nNext, promotion from `E?` to `E` is guaranteed to succeed (because the value of an expression of type `E?` is guaranteed to have a run-time type which is a subtype of the representation type of `E`). This is somewhat misleading, because a developer who sees `if (myE is E) ...` (where `myE` is a local variable with type `E?` before the test) might assume that something was tested, even though that type test is a 100% no-op. So it's a pointless exercise to promote anything from `E?` to `E`.\r\n\r\nAll in all, the type `E?` is simply not useful when `E` is an extension type whose representation type is nullable.\r\n\r\nWe could consider broadening this lint such that it also warns against using a type of the form `E?` when `E` is potentially nullable. However, in that case we would not know for sure that an expression of type `E` can have the value null, we just know that it can't be shown to be impossible. I do not think we can extract much value from a generalization in this direction.\r\n\r\n### Discussion checklist\r\n\r\n- [x] List any existing rules this proposal modifies, complements, overlaps or conflicts with. _To my knowledge: None._\r\n- [x] List any relevant issues (reported here, the [SDK Tracker], or elsewhere). _The topic came up here: https://github.com/dart-lang/sdk/issues/53822._\r\n- [x] If there's any prior art (e.g., in other linters), please add references here. _To my knowledge: No, extension types and nullability in Dart does not correspond so precisely to any features in other languages._\r\n- [x] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?) _To my knowledge: No such advice exists. It shouldn't hurt to add it._\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4790/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776960894",
                "html_url": "https://github.com/dart-lang/linter/issues/4790#issuecomment-1776960894",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "id": 1776960894,
                "node_id": "IC_kwDOAb2yTs5p6kV-",
                "user": {
                    "login": "lrhn",
                    "id": 4865287,
                    "node_id": "MDQ6VXNlcjQ4NjUyODc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4865287?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lrhn",
                    "html_url": "https://github.com/lrhn",
                    "followers_url": "https://api.github.com/users/lrhn/followers",
                    "following_url": "https://api.github.com/users/lrhn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lrhn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lrhn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lrhn/subscriptions",
                    "organizations_url": "https://api.github.com/users/lrhn/orgs",
                    "repos_url": "https://api.github.com/users/lrhn/repos",
                    "events_url": "https://api.github.com/users/lrhn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lrhn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T10:39:27Z",
                "updated_at": "2023-10-24T10:39:27Z",
                "author_association": "MEMBER",
                "body": "One thing you can do with `E?` and not with `E` *is* assigning `null` to it. \r\nYou suggest to use `E(null)` instead, which is probably fine *if such a constructor is available*.\r\nIf it isn't ... that might also be suggesting that you shouldn't be using `null`, since the extension type can contain it, but seems to be reserving it for its own use.\r\n\r\nA nullable type can be used to have an uninitialized variable, `E? e;`.\r\n\r\nA declaration of `E e;` is always invalid, because `E` is not a nullable type. You have to initialize the variable with an `E` value.\r\nYou can choose to use `E? e;` to avoid initializing, or you can do `E e = null as E;`, but since there is also a push against doing `as E`, that may also not be viable. Then we're back at `E(null)`, if that exists.\r\n\r\nWhich summarizes to: There is probably always either a viable alternative, or there is a good reason to not initialize with a `null` representation value at all.\r\n\r\nJust have to sure to only count representation types which are definitely nullable. \r\n```dart\r\nextension type E<T>(T v) {\r\n  E<T> maybeChange([E<T>? other]) =>\r\n    switch (other) {E<T> v2 => v2, _ => this};\r\n}\r\n```\r\nHere the `T?` is not *definitely* on a nullable representation type, only potentially, so it shouldn't be warned about.\r\n    ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776960894/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T10:39:27Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32799162074",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 4865287,
            "login": "lrhn",
            "display_login": "lrhn",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lrhn",
            "avatar_url": "https://avatars.githubusercontent.com/u/4865287?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4791",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4791",
                "id": 1957879837,
                "node_id": "I_kwDOAb2yTs50suAd",
                "number": 4791,
                "title": "rule type_literal_in_constant_pattern in switch cases",
                "user": {
                    "login": "Fernandomr88",
                    "id": 14304128,
                    "node_id": "MDQ6VXNlcjE0MzA0MTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/14304128?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Fernandomr88",
                    "html_url": "https://github.com/Fernandomr88",
                    "followers_url": "https://api.github.com/users/Fernandomr88/followers",
                    "following_url": "https://api.github.com/users/Fernandomr88/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Fernandomr88/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Fernandomr88/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Fernandomr88/subscriptions",
                    "organizations_url": "https://api.github.com/users/Fernandomr88/orgs",
                    "repos_url": "https://api.github.com/users/Fernandomr88/repos",
                    "events_url": "https://api.github.com/users/Fernandomr88/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Fernandomr88/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-23T19:04:42Z",
                "updated_at": "2023-10-24T10:18:12Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "so I have a function that basically is this\r\n\r\n```\r\nget<T>() {\r\n switch(T) {\r\n  case Person:\r\n   //code\r\n  case Dog:\r\n   //code\r\n  }\r\n}\r\n```\r\n\r\nwhich is called like `get<Person>();`\r\n\r\nand by using the notation suggested by this rule (`Person _`), it does not work.\r\n\r\nHow am I supposed to change my code to be adequate to this linter rule?\r\n\r\n_Originally posted by @Fernandomr88 in https://github.com/dart-lang/lints/issues/117#issuecomment-1775789382_\r\n            ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4791/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776927598",
                "html_url": "https://github.com/dart-lang/linter/issues/4791#issuecomment-1776927598",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4791",
                "id": 1776927598,
                "node_id": "IC_kwDOAb2yTs5p6cNu",
                "user": {
                    "login": "lrhn",
                    "id": 4865287,
                    "node_id": "MDQ6VXNlcjQ4NjUyODc=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4865287?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/lrhn",
                    "html_url": "https://github.com/lrhn",
                    "followers_url": "https://api.github.com/users/lrhn/followers",
                    "following_url": "https://api.github.com/users/lrhn/following{/other_user}",
                    "gists_url": "https://api.github.com/users/lrhn/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/lrhn/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/lrhn/subscriptions",
                    "organizations_url": "https://api.github.com/users/lrhn/orgs",
                    "repos_url": "https://api.github.com/users/lrhn/repos",
                    "events_url": "https://api.github.com/users/lrhn/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/lrhn/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T10:18:11Z",
                "updated_at": "2023-10-24T10:18:11Z",
                "author_association": "MEMBER",
                "body": "I'd still recommend changing to one of:\n- `case const Person:`, or\n- `case == Dog:`",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776927598/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T10:18:12Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32798430825",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 15137276,
            "login": "Yetispapa",
            "display_login": "Yetispapa",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yetispapa",
            "avatar_url": "https://avatars.githubusercontent.com/u/15137276?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/events",
                "html_url": "https://github.com/dart-lang/linter/issues/1542",
                "id": 437382882,
                "node_id": "MDU6SXNzdWU0MzczODI4ODI=",
                "number": 1542,
                "title": "new lint: sort_child_properties_last",
                "user": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 177178374,
                        "node_id": "MDU6TGFiZWwxNzcxNzgzNzQ=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-request",
                        "name": "lint-request",
                        "color": "006b75",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 378527981,
                        "node_id": "MDU6TGFiZWwzNzg1Mjc5ODE=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/customer-flutter",
                        "name": "customer-flutter",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/dart-lang/linter/milestones/10",
                    "html_url": "https://github.com/dart-lang/linter/milestone/10",
                    "labels_url": "https://api.github.com/repos/dart-lang/linter/milestones/10/labels",
                    "id": 3123505,
                    "node_id": "MDk6TWlsZXN0b25lMzEyMzUwNQ==",
                    "number": 10,
                    "title": "On Deck",
                    "description": "",
                    "creator": {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 19,
                    "state": "open",
                    "created_at": "2018-02-16T23:24:07Z",
                    "updated_at": "2023-04-05T17:39:45Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 19,
                "created_at": "2019-04-25T20:27:10Z",
                "updated_at": "2023-10-24T09:50:37Z",
                "closed_at": "2019-04-29T17:02:50Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Name TBD but the idea is to nudge people to sorting child/children properties last in their build methods to improve UI-as-Code feature readability.\r\n\r\n@jacob314: could you add some more context?  Maybe some concrete exemplars?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/1542/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776885508",
                "html_url": "https://github.com/dart-lang/linter/issues/1542#issuecomment-1776885508",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "id": 1776885508,
                "node_id": "IC_kwDOAb2yTs5p6R8E",
                "user": {
                    "login": "Yetispapa",
                    "id": 15137276,
                    "node_id": "MDQ6VXNlcjE1MTM3Mjc2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15137276?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Yetispapa",
                    "html_url": "https://github.com/Yetispapa",
                    "followers_url": "https://api.github.com/users/Yetispapa/followers",
                    "following_url": "https://api.github.com/users/Yetispapa/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Yetispapa/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Yetispapa/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Yetispapa/subscriptions",
                    "organizations_url": "https://api.github.com/users/Yetispapa/orgs",
                    "repos_url": "https://api.github.com/users/Yetispapa/repos",
                    "events_url": "https://api.github.com/users/Yetispapa/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Yetispapa/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-24T09:50:37Z",
                "updated_at": "2023-10-24T09:50:37Z",
                "author_association": "NONE",
                "body": "I learned this order back then and I apply it ever since then. The order for me is:\r\n\r\n```\r\nprivate properties\r\npublic properties\r\nconstructor\r\npublic functions\r\nprivate functions\r\n```\r\n\r\nor\r\n\r\n```\r\npublic properties\r\nconstructor\r\npublic functions\r\nprivate properties\r\nprivate functions\r\n```\r\n\r\nI think, back then in most schools / universities the order was always properties first and then functions and that's where i'm coming from.\r\n\r\nWas just asking, maybe I will used to the new one :)",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1776885508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-24T09:50:38Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32783387020",
        "type": "IssuesEvent",
        "actor": {
            "id": 50967056,
            "login": "naipofo",
            "display_login": "naipofo",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naipofo",
            "avatar_url": "https://avatars.githubusercontent.com/u/50967056?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4792",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4792/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4792/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4792/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4792",
                "id": 1957917687,
                "node_id": "I_kwDOAb2yTs50s3P3",
                "number": 4792,
                "title": "False-negative `unnecessary_cast` when making a type nullable.",
                "user": {
                    "login": "naipofo",
                    "id": 50967056,
                    "node_id": "MDQ6VXNlcjUwOTY3MDU2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/50967056?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/naipofo",
                    "html_url": "https://github.com/naipofo",
                    "followers_url": "https://api.github.com/users/naipofo/followers",
                    "following_url": "https://api.github.com/users/naipofo/following{/other_user}",
                    "gists_url": "https://api.github.com/users/naipofo/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/naipofo/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/naipofo/subscriptions",
                    "organizations_url": "https://api.github.com/users/naipofo/orgs",
                    "repos_url": "https://api.github.com/users/naipofo/repos",
                    "events_url": "https://api.github.com/users/naipofo/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/naipofo/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-23T19:53:27Z",
                "updated_at": "2023-10-23T19:53:27Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "**Describe the issue**\r\nLinter gives `unnecessary_cast` despite the cast fixing a type error.\r\n\r\n**To Reproduce**\r\n\r\n```dart\r\nvoid main() {\r\n  final list = [1,2,3,4];\r\n\r\n  // type error: The return type 'Null' isn't a 'int', as required by the closure's context.\r\n  final maybeFound1 = list.firstWhere((e) => e == 5, orElse: () => null);\r\n\r\n  // error fixed but lint says that there is an unnecessary cast\r\n  final maybeFound2 = (list as List<int?>).firstWhere((e) => e == 5, orElse: () => null);\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nNo lint message, as the cast is not unnecessary.\r\n\r\n**Additional context**\r\nApplying the lint fix as suggested causes a type error and dart refuses to compile.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4792/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4792/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T19:53:28Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32782776945",
        "type": "IssuesEvent",
        "actor": {
            "id": 14304128,
            "login": "Fernandomr88",
            "display_login": "Fernandomr88",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fernandomr88",
            "avatar_url": "https://avatars.githubusercontent.com/u/14304128?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4791",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4791",
                "id": 1957879837,
                "node_id": "I_kwDOAb2yTs50suAd",
                "number": 4791,
                "title": "rule type_literal_in_constant_pattern in switch cases",
                "user": {
                    "login": "Fernandomr88",
                    "id": 14304128,
                    "node_id": "MDQ6VXNlcjE0MzA0MTI4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/14304128?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Fernandomr88",
                    "html_url": "https://github.com/Fernandomr88",
                    "followers_url": "https://api.github.com/users/Fernandomr88/followers",
                    "following_url": "https://api.github.com/users/Fernandomr88/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Fernandomr88/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Fernandomr88/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Fernandomr88/subscriptions",
                    "organizations_url": "https://api.github.com/users/Fernandomr88/orgs",
                    "repos_url": "https://api.github.com/users/Fernandomr88/repos",
                    "events_url": "https://api.github.com/users/Fernandomr88/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Fernandomr88/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-23T19:04:42Z",
                "updated_at": "2023-10-23T19:27:24Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "so I have a function that basically is this\r\n\r\n```\r\nget<T>() {\r\n switch(T) {\r\n  case Person:\r\n   //code\r\n  case Dog:\r\n   //code\r\n  }\r\n}\r\n```\r\n\r\nwhich is called like `get<Person>();`\r\n\r\nand by using the notation suggested by this rule (`Person _`), it does not work.\r\n\r\nHow am I supposed to change my code to be adequate to this linter rule?\r\n\r\n_Originally posted by @Fernandomr88 in https://github.com/dart-lang/lints/issues/117#issuecomment-1775789382_\r\n            ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4791/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4791/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T19:27:26Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32782059686",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5840555,
            "login": "bwilkerson",
            "display_login": "bwilkerson",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwilkerson",
            "avatar_url": "https://avatars.githubusercontent.com/u/5840555?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4790",
                "id": 1957685483,
                "node_id": "I_kwDOAb2yTs50r-jr",
                "number": 4790,
                "title": "proposal: `useless_nullable_extension_type`",
                "user": {
                    "login": "eernstg",
                    "id": 9606994,
                    "node_id": "MDQ6VXNlcjk2MDY5OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9606994?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eernstg",
                    "html_url": "https://github.com/eernstg",
                    "followers_url": "https://api.github.com/users/eernstg/followers",
                    "following_url": "https://api.github.com/users/eernstg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eernstg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eernstg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eernstg/subscriptions",
                    "organizations_url": "https://api.github.com/users/eernstg/orgs",
                    "repos_url": "https://api.github.com/users/eernstg/repos",
                    "events_url": "https://api.github.com/users/eernstg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eernstg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-23T17:41:59Z",
                "updated_at": "2023-10-23T18:57:43Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## useless_nullable_extension_type\r\n\r\n## Description\r\n\r\nWarn that a given extension type of the form `E?` is useless because a value of type `E` can already be null.\r\n\r\n## Details\r\n\r\nThis lint warns against using a type of the form `E?` when `E` is an extension type that refers to an extension type declaration whose representation type is nullable.\r\n\r\n## Kind\r\n\r\nThis lint guards against code which is less useful than it could be.\r\n\r\n## Bad Examples\r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE? e = ...; // LINT\r\nvoid bar(E? e) {} // LINT\r\nList<E?> es = ...; // LINT\r\n```\r\n\r\n## Good Examples \r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE e = ...;\r\nvoid bar(E e) {}\r\nList<E> es = ...;\r\n```\r\n\r\n## Discussion\r\n\r\nAssume that `E` is an extension type that refers to an extension type declaration whose representation type is nullable. We would then warn against using the type `E?`.\r\n\r\nThe point is that the value of an expression of type `E` can already be null (it is not just possible, it is guaranteed that it can be null), and this means that the set of objects whose type can correctly be `E?` is no larger than the set of objects whose type can be `E`. In other words, the `?` makes absolutely no difference to the set of objects that have the given type.\r\n\r\nUsing `E?` _does_ make a difference in a different manner, though, because a receiver of type `E?` can only invoke the members of `Object` (`toString`, `==`, `hashCode`, `runtimeType`, `noSuchMethod`). In contrast, a receiver of type `E` can invoke all members declared or \"inherited\" by `E` (including the 5 `Object` members). So the use of the type `E?` will prevent invocation of basically all members of the interface of `E` (if that's really what you want then just use the type `Object?` or a type variable with that bound).\r\n\r\nNext, promotion from `E?` to `E` is guaranteed to succeed (because the value of an expression of type `E?` is guaranteed to have a run-time type which is a subtype of the representation type of `E`). This is somewhat misleading, because a developer who sees `if (myE is E) ...` (where `myE` is a local variable with type `E?` before the test) might assume that something was tested, even though that type test is a 100% no-op. So it's a pointless exercise to promote anything from `E?` to `E`.\r\n\r\nAll in all, the type `E?` is simply not useful when `E` is an extension type whose representation type is nullable.\r\n\r\nWe could consider broadening this lint such that it also warns against using a type of the form `E?` when `E` is potentially nullable. However, in that case we would not know for sure that an expression of type `E` can have the value null, we just know that it can't be shown to be impossible. I do not think we can extract much value from a generalization in this direction.\r\n\r\n### Discussion checklist\r\n\r\n- [x] List any existing rules this proposal modifies, complements, overlaps or conflicts with. _To my knowledge: None._\r\n- [x] List any relevant issues (reported here, the [SDK Tracker], or elsewhere). _The topic came up here: https://github.com/dart-lang/sdk/issues/53822._\r\n- [x] If there's any prior art (e.g., in other linters), please add references here. _To my knowledge: No, extension types and nullability in Dart does not correspond so precisely to any features in other languages._\r\n- [x] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?) _To my knowledge: No such advice exists. It shouldn't hurt to add it._\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4790/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775835405",
                "html_url": "https://github.com/dart-lang/linter/issues/4790#issuecomment-1775835405",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "id": 1775835405,
                "node_id": "IC_kwDOAb2yTs5p2RkN",
                "user": {
                    "login": "bwilkerson",
                    "id": 5840555,
                    "node_id": "MDQ6VXNlcjU4NDA1NTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5840555?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bwilkerson",
                    "html_url": "https://github.com/bwilkerson",
                    "followers_url": "https://api.github.com/users/bwilkerson/followers",
                    "following_url": "https://api.github.com/users/bwilkerson/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bwilkerson/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bwilkerson/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bwilkerson/subscriptions",
                    "organizations_url": "https://api.github.com/users/bwilkerson/orgs",
                    "repos_url": "https://api.github.com/users/bwilkerson/repos",
                    "events_url": "https://api.github.com/users/bwilkerson/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bwilkerson/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T18:57:42Z",
                "updated_at": "2023-10-23T18:57:42Z",
                "author_association": "MEMBER",
                "body": "We can tell that the type is inferred by noting that there is no explicit type annotation, and we can tell that the nullability is useless by looking at the representation type. That just leaves the question of whether it became nullable because one of the then- or else-expressions was `null`.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775835405/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T18:57:43Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32781985560",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 9606994,
            "login": "eernstg",
            "display_login": "eernstg",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eernstg",
            "avatar_url": "https://avatars.githubusercontent.com/u/9606994?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4790",
                "id": 1957685483,
                "node_id": "I_kwDOAb2yTs50r-jr",
                "number": 4790,
                "title": "proposal: `useless_nullable_extension_type`",
                "user": {
                    "login": "eernstg",
                    "id": 9606994,
                    "node_id": "MDQ6VXNlcjk2MDY5OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9606994?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eernstg",
                    "html_url": "https://github.com/eernstg",
                    "followers_url": "https://api.github.com/users/eernstg/followers",
                    "following_url": "https://api.github.com/users/eernstg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eernstg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eernstg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eernstg/subscriptions",
                    "organizations_url": "https://api.github.com/users/eernstg/orgs",
                    "repos_url": "https://api.github.com/users/eernstg/repos",
                    "events_url": "https://api.github.com/users/eernstg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eernstg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-23T17:41:59Z",
                "updated_at": "2023-10-23T18:54:40Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## useless_nullable_extension_type\r\n\r\n## Description\r\n\r\nWarn that a given extension type of the form `E?` is useless because a value of type `E` can already be null.\r\n\r\n## Details\r\n\r\nThis lint warns against using a type of the form `E?` when `E` is an extension type that refers to an extension type declaration whose representation type is nullable.\r\n\r\n## Kind\r\n\r\nThis lint guards against code which is less useful than it could be.\r\n\r\n## Bad Examples\r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE? e = ...; // LINT\r\nvoid bar(E? e) {} // LINT\r\nList<E?> es = ...; // LINT\r\n```\r\n\r\n## Good Examples \r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE e = ...;\r\nvoid bar(E e) {}\r\nList<E> es = ...;\r\n```\r\n\r\n## Discussion\r\n\r\nAssume that `E` is an extension type that refers to an extension type declaration whose representation type is nullable. We would then warn against using the type `E?`.\r\n\r\nThe point is that the value of an expression of type `E` can already be null (it is not just possible, it is guaranteed that it can be null), and this means that the set of objects whose type can correctly be `E?` is no larger than the set of objects whose type can be `E`. In other words, the `?` makes absolutely no difference to the set of objects that have the given type.\r\n\r\nUsing `E?` _does_ make a difference in a different manner, though, because a receiver of type `E?` can only invoke the members of `Object` (`toString`, `==`, `hashCode`, `runtimeType`, `noSuchMethod`). In contrast, a receiver of type `E` can invoke all members declared or \"inherited\" by `E` (including the 5 `Object` members). So the use of the type `E?` will prevent invocation of basically all members of the interface of `E` (if that's really what you want then just use the type `Object?` or a type variable with that bound).\r\n\r\nNext, promotion from `E?` to `E` is guaranteed to succeed (because the value of an expression of type `E?` is guaranteed to have a run-time type which is a subtype of the representation type of `E`). This is somewhat misleading, because a developer who sees `if (myE is E) ...` (where `myE` is a local variable with type `E?` before the test) might assume that something was tested, even though that type test is a 100% no-op. So it's a pointless exercise to promote anything from `E?` to `E`.\r\n\r\nAll in all, the type `E?` is simply not useful when `E` is an extension type whose representation type is nullable.\r\n\r\nWe could consider broadening this lint such that it also warns against using a type of the form `E?` when `E` is potentially nullable. However, in that case we would not know for sure that an expression of type `E` can have the value null, we just know that it can't be shown to be impossible. I do not think we can extract much value from a generalization in this direction.\r\n\r\n### Discussion checklist\r\n\r\n- [x] List any existing rules this proposal modifies, complements, overlaps or conflicts with. _To my knowledge: None._\r\n- [x] List any relevant issues (reported here, the [SDK Tracker], or elsewhere). _The topic came up here: https://github.com/dart-lang/sdk/issues/53822._\r\n- [x] If there's any prior art (e.g., in other linters), please add references here. _To my knowledge: No, extension types and nullability in Dart does not correspond so precisely to any features in other languages._\r\n- [x] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?) _To my knowledge: No such advice exists. It shouldn't hurt to add it._\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4790/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775828949",
                "html_url": "https://github.com/dart-lang/linter/issues/4790#issuecomment-1775828949",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "id": 1775828949,
                "node_id": "IC_kwDOAb2yTs5p2P_V",
                "user": {
                    "login": "eernstg",
                    "id": 9606994,
                    "node_id": "MDQ6VXNlcjk2MDY5OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9606994?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eernstg",
                    "html_url": "https://github.com/eernstg",
                    "followers_url": "https://api.github.com/users/eernstg/followers",
                    "following_url": "https://api.github.com/users/eernstg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eernstg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eernstg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eernstg/subscriptions",
                    "organizations_url": "https://api.github.com/users/eernstg/orgs",
                    "repos_url": "https://api.github.com/users/eernstg/repos",
                    "events_url": "https://api.github.com/users/eernstg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eernstg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T18:54:40Z",
                "updated_at": "2023-10-23T18:54:40Z",
                "author_association": "MEMBER",
                "body": "> enabled by default\r\n\r\nI think yes, but it would be great to hear if anyone can come up with a use case where that type is useful. The situations where a type of the form `E?` is inferred is of course of special interest, and it may be non-trivial to handle.\r\n\r\n```dart\r\nvoid f(bool b, E e) {\r\n  var x = b ? e : null;\r\n}\r\n\r\nextension type E(int? i) {}\r\n```\r\n\r\nIn this case I'd love to have a static analysis where the advice is given that `null` should have been `E(null)`, but I'm not quite sure how the general rule would arrive at that result.\r\n\r\nStill, warning against `E?` per se could be useful, even though it isn't very helpful when the type is inferred.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775828949/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T18:54:41Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32780735078",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 11778358,
            "login": "bsz0206",
            "display_login": "bsz0206",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bsz0206",
            "avatar_url": "https://avatars.githubusercontent.com/u/11778358?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4787",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4787",
                "id": 1953284277,
                "node_id": "I_kwDOAb2yTs50bMC1",
                "number": 4787,
                "title": "async within sync call warning and override",
                "user": {
                    "login": "bsz0206",
                    "id": 11778358,
                    "node_id": "MDQ6VXNlcjExNzc4MzU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11778358?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bsz0206",
                    "html_url": "https://github.com/bsz0206",
                    "followers_url": "https://api.github.com/users/bsz0206/followers",
                    "following_url": "https://api.github.com/users/bsz0206/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bsz0206/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bsz0206/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bsz0206/subscriptions",
                    "organizations_url": "https://api.github.com/users/bsz0206/orgs",
                    "repos_url": "https://api.github.com/users/bsz0206/repos",
                    "events_url": "https://api.github.com/users/bsz0206/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bsz0206/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 4309992631,
                        "node_id": "LA_kwDOAb2yTs8AAAABAOVEtw",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/P4",
                        "name": "P4",
                        "color": "BFD4F2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-20T00:47:56Z",
                "updated_at": "2023-10-23T18:04:43Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "when an async method is called from a sync function it should warn and the developer should specify it is an informed decision:\r\n\r\nBad:\r\nclass B {\r\n   vod doTheJob() async { ... }\r\n}\r\nvoid f() {\r\n  B.get();\r\n}\r\n\r\nGood:\r\nclass B {\r\n   vod doTheJob() async { ... }\r\n}\r\nvoid f() {\r\n  awaited(B.get());\r\n}\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4787/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775738076",
                "html_url": "https://github.com/dart-lang/linter/issues/4787#issuecomment-1775738076",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4787",
                "id": 1775738076,
                "node_id": "IC_kwDOAb2yTs5p15zc",
                "user": {
                    "login": "bsz0206",
                    "id": 11778358,
                    "node_id": "MDQ6VXNlcjExNzc4MzU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11778358?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bsz0206",
                    "html_url": "https://github.com/bsz0206",
                    "followers_url": "https://api.github.com/users/bsz0206/followers",
                    "following_url": "https://api.github.com/users/bsz0206/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bsz0206/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bsz0206/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bsz0206/subscriptions",
                    "organizations_url": "https://api.github.com/users/bsz0206/orgs",
                    "repos_url": "https://api.github.com/users/bsz0206/repos",
                    "events_url": "https://api.github.com/users/bsz0206/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bsz0206/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T18:04:43Z",
                "updated_at": "2023-10-23T18:04:43Z",
                "author_association": "NONE",
                "body": "unawaid currently is a \"void unwaited(...) and needs to turn into a \"dynamic unwaited(...)\" to provide support.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775738076/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T18:04:43Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32780699290",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 11778358,
            "login": "bsz0206",
            "display_login": "bsz0206",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bsz0206",
            "avatar_url": "https://avatars.githubusercontent.com/u/11778358?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4787",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4787",
                "id": 1953284277,
                "node_id": "I_kwDOAb2yTs50bMC1",
                "number": 4787,
                "title": "async within sync call warning and override",
                "user": {
                    "login": "bsz0206",
                    "id": 11778358,
                    "node_id": "MDQ6VXNlcjExNzc4MzU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11778358?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bsz0206",
                    "html_url": "https://github.com/bsz0206",
                    "followers_url": "https://api.github.com/users/bsz0206/followers",
                    "following_url": "https://api.github.com/users/bsz0206/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bsz0206/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bsz0206/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bsz0206/subscriptions",
                    "organizations_url": "https://api.github.com/users/bsz0206/orgs",
                    "repos_url": "https://api.github.com/users/bsz0206/repos",
                    "events_url": "https://api.github.com/users/bsz0206/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bsz0206/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 4309992631,
                        "node_id": "LA_kwDOAb2yTs8AAAABAOVEtw",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/P4",
                        "name": "P4",
                        "color": "BFD4F2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-20T00:47:56Z",
                "updated_at": "2023-10-23T18:03:17Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "when an async method is called from a sync function it should warn and the developer should specify it is an informed decision:\r\n\r\nBad:\r\nclass B {\r\n   vod doTheJob() async { ... }\r\n}\r\nvoid f() {\r\n  B.get();\r\n}\r\n\r\nGood:\r\nclass B {\r\n   vod doTheJob() async { ... }\r\n}\r\nvoid f() {\r\n  awaited(B.get());\r\n}\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4787/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4787/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775735531",
                "html_url": "https://github.com/dart-lang/linter/issues/4787#issuecomment-1775735531",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4787",
                "id": 1775735531,
                "node_id": "IC_kwDOAb2yTs5p15Lr",
                "user": {
                    "login": "bsz0206",
                    "id": 11778358,
                    "node_id": "MDQ6VXNlcjExNzc4MzU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11778358?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bsz0206",
                    "html_url": "https://github.com/bsz0206",
                    "followers_url": "https://api.github.com/users/bsz0206/followers",
                    "following_url": "https://api.github.com/users/bsz0206/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bsz0206/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bsz0206/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bsz0206/subscriptions",
                    "organizations_url": "https://api.github.com/users/bsz0206/orgs",
                    "repos_url": "https://api.github.com/users/bsz0206/repos",
                    "events_url": "https://api.github.com/users/bsz0206/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bsz0206/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T18:03:16Z",
                "updated_at": "2023-10-23T18:03:16Z",
                "author_association": "NONE",
                "body": "> Ah, that would be a comment like `// ignore: discared_futures`.\r\n\r\nSuch comments are for exceptional or temporary basis. This is a real case and needs support.",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775735531/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T18:03:17Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32780478780",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5840555,
            "login": "bwilkerson",
            "display_login": "bwilkerson",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwilkerson",
            "avatar_url": "https://avatars.githubusercontent.com/u/5840555?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4790",
                "id": 1957685483,
                "node_id": "I_kwDOAb2yTs50r-jr",
                "number": 4790,
                "title": "proposal: `useless_nullable_extension_type`",
                "user": {
                    "login": "eernstg",
                    "id": 9606994,
                    "node_id": "MDQ6VXNlcjk2MDY5OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9606994?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eernstg",
                    "html_url": "https://github.com/eernstg",
                    "followers_url": "https://api.github.com/users/eernstg/followers",
                    "following_url": "https://api.github.com/users/eernstg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eernstg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eernstg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eernstg/subscriptions",
                    "organizations_url": "https://api.github.com/users/eernstg/orgs",
                    "repos_url": "https://api.github.com/users/eernstg/repos",
                    "events_url": "https://api.github.com/users/eernstg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eernstg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-23T17:41:59Z",
                "updated_at": "2023-10-23T17:54:29Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## useless_nullable_extension_type\r\n\r\n## Description\r\n\r\nWarn that a given extension type of the form `E?` is useless because a value of type `E` can already be null.\r\n\r\n## Details\r\n\r\nThis lint warns against using a type of the form `E?` when `E` is an extension type that refers to an extension type declaration whose representation type is nullable.\r\n\r\n## Kind\r\n\r\nThis lint guards against code which is less useful than it could be.\r\n\r\n## Bad Examples\r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE? e = ...; // LINT\r\nvoid bar(E? e) {} // LINT\r\nList<E?> es = ...; // LINT\r\n```\r\n\r\n## Good Examples \r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE e = ...;\r\nvoid bar(E e) {}\r\nList<E> es = ...;\r\n```\r\n\r\n## Discussion\r\n\r\nAssume that `E` is an extension type that refers to an extension type declaration whose representation type is nullable. We would then warn against using the type `E?`.\r\n\r\nThe point is that the value of an expression of type `E` can already be null (it is not just possible, it is guaranteed that it can be null), and this means that the set of objects whose type can correctly be `E?` is no larger than the set of objects whose type can be `E`. In other words, the `?` makes absolutely no difference to the set of objects that have the given type.\r\n\r\nUsing `E?` _does_ make a difference in a different manner, though, because a receiver of type `E?` can only invoke the members of `Object` (`toString`, `==`, `hashCode`, `runtimeType`, `noSuchMethod`). In contrast, a receiver of type `E` can invoke all members declared or \"inherited\" by `E` (including the 5 `Object` members). So the use of the type `E?` will prevent invocation of basically all members of the interface of `E` (if that's really what you want then just use the type `Object?` or a type variable with that bound).\r\n\r\nNext, promotion from `E?` to `E` is guaranteed to succeed (because the value of an expression of type `E?` is guaranteed to have a run-time type which is a subtype of the representation type of `E`). This is somewhat misleading, because a developer who sees `if (myE is E) ...` (where `myE` is a local variable with type `E?` before the test) might assume that something was tested, even though that type test is a 100% no-op. So it's a pointless exercise to promote anything from `E?` to `E`.\r\n\r\nAll in all, the type `E?` is simply not useful when `E` is an extension type whose representation type is nullable.\r\n\r\nWe could consider broadening this lint such that it also warns against using a type of the form `E?` when `E` is potentially nullable. However, in that case we would not know for sure that an expression of type `E` can have the value null, we just know that it can't be shown to be impossible. I do not think we can extract much value from a generalization in this direction.\r\n\r\n### Discussion checklist\r\n\r\n- [x] List any existing rules this proposal modifies, complements, overlaps or conflicts with. _To my knowledge: None._\r\n- [x] List any relevant issues (reported here, the [SDK Tracker], or elsewhere). _The topic came up here: https://github.com/dart-lang/sdk/issues/53822._\r\n- [x] If there's any prior art (e.g., in other linters), please add references here. _To my knowledge: No, extension types and nullability in Dart does not correspond so precisely to any features in other languages._\r\n- [x] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?) _To my knowledge: No such advice exists. It shouldn't hurt to add it._\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4790/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775720711",
                "html_url": "https://github.com/dart-lang/linter/issues/4790#issuecomment-1775720711",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "id": 1775720711,
                "node_id": "IC_kwDOAb2yTs5p11kH",
                "user": {
                    "login": "bwilkerson",
                    "id": 5840555,
                    "node_id": "MDQ6VXNlcjU4NDA1NTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5840555?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bwilkerson",
                    "html_url": "https://github.com/bwilkerson",
                    "followers_url": "https://api.github.com/users/bwilkerson/followers",
                    "following_url": "https://api.github.com/users/bwilkerson/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bwilkerson/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bwilkerson/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bwilkerson/subscriptions",
                    "organizations_url": "https://api.github.com/users/bwilkerson/orgs",
                    "repos_url": "https://api.github.com/users/bwilkerson/repos",
                    "events_url": "https://api.github.com/users/bwilkerson/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bwilkerson/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T17:54:29Z",
                "updated_at": "2023-10-23T17:54:29Z",
                "author_association": "MEMBER",
                "body": "If it's always useless, should we just make this an (enabled by default) warning?\r\n\r\nGiven the following:\r\n```dart\r\nvoid f(bool b, E e) {\r\n  var x = b ? e : null;\r\n}\r\n\r\nextension type E(int? i) {}\r\n```\r\nWill `x` have the inferred type `E?`? If so, do we want to flag such situations? Or change type inference?",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775720711/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T17:54:30Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32780172011",
        "type": "IssuesEvent",
        "actor": {
            "id": 9606994,
            "login": "eernstg",
            "display_login": "eernstg",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eernstg",
            "avatar_url": "https://avatars.githubusercontent.com/u/9606994?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4790",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4790",
                "id": 1957685483,
                "node_id": "I_kwDOAb2yTs50r-jr",
                "number": 4790,
                "title": "proposal: `useless_nullable_extension_type`",
                "user": {
                    "login": "eernstg",
                    "id": 9606994,
                    "node_id": "MDQ6VXNlcjk2MDY5OTQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9606994?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/eernstg",
                    "html_url": "https://github.com/eernstg",
                    "followers_url": "https://api.github.com/users/eernstg/followers",
                    "following_url": "https://api.github.com/users/eernstg/following{/other_user}",
                    "gists_url": "https://api.github.com/users/eernstg/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/eernstg/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/eernstg/subscriptions",
                    "organizations_url": "https://api.github.com/users/eernstg/orgs",
                    "repos_url": "https://api.github.com/users/eernstg/repos",
                    "events_url": "https://api.github.com/users/eernstg/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/eernstg/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 3425021835,
                        "node_id": "LA_kwDOAb2yTs7MJa-L",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-proposal",
                        "name": "lint-proposal",
                        "color": "D36A27",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 3428130062,
                        "node_id": "LA_kwDOAb2yTs7MVR0O",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/status-pending",
                        "name": "status-pending",
                        "color": "FDCD56",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-23T17:41:59Z",
                "updated_at": "2023-10-23T17:41:59Z",
                "closed_at": null,
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "## useless_nullable_extension_type\r\n\r\n## Description\r\n\r\nWarn that a given extension type of the form `E?` is useless because a value of type `E` can already be null.\r\n\r\n## Details\r\n\r\nThis lint warns against using a type of the form `E?` when `E` is an extension type declaration whose representation type is nullable.\r\n\r\n## Kind\r\n\r\nThis lint guards against code which is less useful than it could be.\r\n\r\n## Bad Examples\r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE? e = ...; // LINT\r\nvoid bar(E? e) {} // LINT\r\nList<E?> es = ...; // LINT\r\n```\r\n\r\n## Good Examples \r\n\r\n```dart\r\nextension type E(int? i) {\r\n  void foo() {}\r\n}\r\n\r\nE e = ...;\r\nvoid bar(E e) {}\r\nList<E> es = ...;\r\n```\r\n\r\n## Discussion\r\n\r\nAssume that `E` is an extension type whose representation type is nullable. We would then warn against using the type `E?`.\r\n\r\nThe point is that the value of an expression of type `E` can already be null (it is not just possible, it is guaranteed that it can be null), and this means that the set of objects whose type can correctly be `E?` is no larger than the set of objects whose type can be `E`. In other words, the `?` makes absolutely no difference to the set of objects that have the given type.\r\n\r\nUsing `E?` _does_ make a difference in a different manner, though, because a receiver of type `E?` can only invoke the members of `Object` (`toString`, `==`, `hashCode`, `runtimeType`, `noSuchMethod`). In contrast, a receiver of type `E` can invoke all members declared or \"inherited\" by `E` (including the 5 `Object` members). So the use of the type `E?` will prevent invocation of basically all members of the interface of `E` (if that's really what you want then just use the type `Object?` or a type variable with that bound).\r\n\r\nNext, promotion from `E?` to `E` is guaranteed to succeed (because the value of an expression of type `E?` is guaranteed to have a run-time type which is a subtype of the representation type of `E`). This is somewhat misleading, because a developer who sees `if (myE is E) ...` (where `myE` is a local variable with type `E?` before the test) might assume that something was tested, even though that type test is a 100% no-op. So it's a pointless exercise to promote anything from `E?` to `E`.\r\n\r\nAll in all, the type `E?` is simply not useful when `E` is an extension type whose representation type is nullable.\r\n\r\nWe could consider broadening this lint such that it also warns against using a type of the form `E?` when `E` is potentially nullable. However, in that case we would not know for sure that an expression of type `E` can have the value null, we just know that it can't be shown to be impossible. I do not think we can extract much value from a generalization in this direction.\r\n\r\n### Discussion checklist\r\n\r\n- [x] List any existing rules this proposal modifies, complements, overlaps or conflicts with. _To my knowledge: None._\r\n- [x] List any relevant issues (reported here, the [SDK Tracker], or elsewhere). _The topic came up here: https://github.com/dart-lang/sdk/issues/53822._\r\n- [x] If there's any prior art (e.g., in other linters), please add references here. _To my knowledge: No, extension types and nullability in Dart does not correspond so precisely to any features in other languages._\r\n- [x] If this proposal corresponds to [Effective Dart] or [Flutter Style Guide] advice, please call it out. (If there isn't any corresponding advice, should there be?) _To my knowledge: No such advice exists._\r\n- [ ] If this proposal is motivated by real-world examples, please provide as many details as you can.  Demonstrating potential impact is _especially valuable_.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4790/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4790/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T17:42:00Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32776974655",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 5840555,
            "login": "bwilkerson",
            "display_login": "bwilkerson",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bwilkerson",
            "avatar_url": "https://avatars.githubusercontent.com/u/5840555?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/events",
                "html_url": "https://github.com/dart-lang/linter/issues/1542",
                "id": 437382882,
                "node_id": "MDU6SXNzdWU0MzczODI4ODI=",
                "number": 1542,
                "title": "new lint: sort_child_properties_last",
                "user": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 177178374,
                        "node_id": "MDU6TGFiZWwxNzcxNzgzNzQ=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-request",
                        "name": "lint-request",
                        "color": "006b75",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 378527981,
                        "node_id": "MDU6TGFiZWwzNzg1Mjc5ODE=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/customer-flutter",
                        "name": "customer-flutter",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/dart-lang/linter/milestones/10",
                    "html_url": "https://github.com/dart-lang/linter/milestone/10",
                    "labels_url": "https://api.github.com/repos/dart-lang/linter/milestones/10/labels",
                    "id": 3123505,
                    "node_id": "MDk6TWlsZXN0b25lMzEyMzUwNQ==",
                    "number": 10,
                    "title": "On Deck",
                    "description": "",
                    "creator": {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 19,
                    "state": "open",
                    "created_at": "2018-02-16T23:24:07Z",
                    "updated_at": "2023-04-05T17:39:45Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 18,
                "created_at": "2019-04-25T20:27:10Z",
                "updated_at": "2023-10-23T15:43:11Z",
                "closed_at": "2019-04-29T17:02:50Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Name TBD but the idea is to nudge people to sorting child/children properties last in their build methods to improve UI-as-Code feature readability.\r\n\r\n@jacob314: could you add some more context?  Maybe some concrete exemplars?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/1542/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775490059",
                "html_url": "https://github.com/dart-lang/linter/issues/1542#issuecomment-1775490059",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "id": 1775490059,
                "node_id": "IC_kwDOAb2yTs5p09QL",
                "user": {
                    "login": "bwilkerson",
                    "id": 5840555,
                    "node_id": "MDQ6VXNlcjU4NDA1NTU=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/5840555?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/bwilkerson",
                    "html_url": "https://github.com/bwilkerson",
                    "followers_url": "https://api.github.com/users/bwilkerson/followers",
                    "following_url": "https://api.github.com/users/bwilkerson/following{/other_user}",
                    "gists_url": "https://api.github.com/users/bwilkerson/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/bwilkerson/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/bwilkerson/subscriptions",
                    "organizations_url": "https://api.github.com/users/bwilkerson/orgs",
                    "repos_url": "https://api.github.com/users/bwilkerson/repos",
                    "events_url": "https://api.github.com/users/bwilkerson/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/bwilkerson/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T15:43:11Z",
                "updated_at": "2023-10-23T15:43:11Z",
                "author_association": "MEMBER",
                "body": "No, there isn't. Is there a motivation for such a rule?",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775490059/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T15:43:12Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32776374598",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 15137276,
            "login": "Yetispapa",
            "display_login": "Yetispapa",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yetispapa",
            "avatar_url": "https://avatars.githubusercontent.com/u/15137276?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/events",
                "html_url": "https://github.com/dart-lang/linter/issues/1542",
                "id": 437382882,
                "node_id": "MDU6SXNzdWU0MzczODI4ODI=",
                "number": 1542,
                "title": "new lint: sort_child_properties_last",
                "user": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917059,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNTk=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-enhancement",
                        "name": "type-enhancement",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A request for a change that isn't a bug"
                    },
                    {
                        "id": 177178374,
                        "node_id": "MDU6TGFiZWwxNzcxNzgzNzQ=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/lint-request",
                        "name": "lint-request",
                        "color": "006b75",
                        "default": false,
                        "description": ""
                    },
                    {
                        "id": 378527981,
                        "node_id": "MDU6TGFiZWwzNzg1Mjc5ODE=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/customer-flutter",
                        "name": "customer-flutter",
                        "color": "bfd4f2",
                        "default": false,
                        "description": ""
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": {
                    "login": "pq",
                    "id": 67586,
                    "node_id": "MDQ6VXNlcjY3NTg2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pq",
                    "html_url": "https://github.com/pq",
                    "followers_url": "https://api.github.com/users/pq/followers",
                    "following_url": "https://api.github.com/users/pq/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                    "organizations_url": "https://api.github.com/users/pq/orgs",
                    "repos_url": "https://api.github.com/users/pq/repos",
                    "events_url": "https://api.github.com/users/pq/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pq/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "assignees": [
                    {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    }
                ],
                "milestone": {
                    "url": "https://api.github.com/repos/dart-lang/linter/milestones/10",
                    "html_url": "https://github.com/dart-lang/linter/milestone/10",
                    "labels_url": "https://api.github.com/repos/dart-lang/linter/milestones/10/labels",
                    "id": 3123505,
                    "node_id": "MDk6TWlsZXN0b25lMzEyMzUwNQ==",
                    "number": 10,
                    "title": "On Deck",
                    "description": "",
                    "creator": {
                        "login": "pq",
                        "id": 67586,
                        "node_id": "MDQ6VXNlcjY3NTg2",
                        "avatar_url": "https://avatars.githubusercontent.com/u/67586?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/pq",
                        "html_url": "https://github.com/pq",
                        "followers_url": "https://api.github.com/users/pq/followers",
                        "following_url": "https://api.github.com/users/pq/following{/other_user}",
                        "gists_url": "https://api.github.com/users/pq/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/pq/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/pq/subscriptions",
                        "organizations_url": "https://api.github.com/users/pq/orgs",
                        "repos_url": "https://api.github.com/users/pq/repos",
                        "events_url": "https://api.github.com/users/pq/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/pq/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "open_issues": 0,
                    "closed_issues": 19,
                    "state": "open",
                    "created_at": "2018-02-16T23:24:07Z",
                    "updated_at": "2023-04-05T17:39:45Z",
                    "due_on": null,
                    "closed_at": null
                },
                "comments": 17,
                "created_at": "2019-04-25T20:27:10Z",
                "updated_at": "2023-10-23T15:23:25Z",
                "closed_at": "2019-04-29T17:02:50Z",
                "author_association": "MEMBER",
                "active_lock_reason": null,
                "body": "Name TBD but the idea is to nudge people to sorting child/children properties last in their build methods to improve UI-as-Code feature readability.\r\n\r\n@jacob314: could you add some more context?  Maybe some concrete exemplars?\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/1542/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/1542/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775452327",
                "html_url": "https://github.com/dart-lang/linter/issues/1542#issuecomment-1775452327",
                "issue_url": "https://api.github.com/repos/dart-lang/linter/issues/1542",
                "id": 1775452327,
                "node_id": "IC_kwDOAb2yTs5p00Cn",
                "user": {
                    "login": "Yetispapa",
                    "id": 15137276,
                    "node_id": "MDQ6VXNlcjE1MTM3Mjc2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/15137276?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Yetispapa",
                    "html_url": "https://github.com/Yetispapa",
                    "followers_url": "https://api.github.com/users/Yetispapa/followers",
                    "following_url": "https://api.github.com/users/Yetispapa/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Yetispapa/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Yetispapa/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Yetispapa/subscriptions",
                    "organizations_url": "https://api.github.com/users/Yetispapa/orgs",
                    "repos_url": "https://api.github.com/users/Yetispapa/repos",
                    "events_url": "https://api.github.com/users/Yetispapa/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Yetispapa/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-23T15:23:24Z",
                "updated_at": "2023-10-23T15:23:24Z",
                "author_association": "NONE",
                "body": "Is there a lint rule, to have the complete opposite, so that the child_properties are first? ",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/comments/1775452327/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-23T15:23:25Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    },
    {
        "id": "32774872772",
        "type": "IssuesEvent",
        "actor": {
            "id": 103167,
            "login": "srawlins",
            "display_login": "srawlins",
            "gravatar_id": "",
            "url": "https://api.github.com/users/srawlins",
            "avatar_url": "https://avatars.githubusercontent.com/u/103167?"
        },
        "repo": {
            "id": 29209166,
            "name": "dart-lang/linter",
            "url": "https://api.github.com/repos/dart-lang/linter"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/dart-lang/linter/issues/4789",
                "repository_url": "https://api.github.com/repos/dart-lang/linter",
                "labels_url": "https://api.github.com/repos/dart-lang/linter/issues/4789/labels{/name}",
                "comments_url": "https://api.github.com/repos/dart-lang/linter/issues/4789/comments",
                "events_url": "https://api.github.com/repos/dart-lang/linter/issues/4789/events",
                "html_url": "https://github.com/dart-lang/linter/issues/4789",
                "id": 1956589599,
                "node_id": "I_kwDOAb2yTs50nzAf",
                "number": 4789,
                "title": "Shouldn't `late` fields be exempted from `overridden_fields` lint?",
                "user": {
                    "login": "AlexanderFarkas",
                    "id": 35890159,
                    "node_id": "MDQ6VXNlcjM1ODkwMTU5",
                    "avatar_url": "https://avatars.githubusercontent.com/u/35890159?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/AlexanderFarkas",
                    "html_url": "https://github.com/AlexanderFarkas",
                    "followers_url": "https://api.github.com/users/AlexanderFarkas/followers",
                    "following_url": "https://api.github.com/users/AlexanderFarkas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/AlexanderFarkas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/AlexanderFarkas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/AlexanderFarkas/subscriptions",
                    "organizations_url": "https://api.github.com/users/AlexanderFarkas/orgs",
                    "repos_url": "https://api.github.com/users/AlexanderFarkas/repos",
                    "events_url": "https://api.github.com/users/AlexanderFarkas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/AlexanderFarkas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 165917062,
                        "node_id": "MDU6TGFiZWwxNjU5MTcwNjI=",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/type-question",
                        "name": "type-question",
                        "color": "fff9e3",
                        "default": false,
                        "description": "A question about expected behavior or functionality"
                    },
                    {
                        "id": 3049407720,
                        "node_id": "MDU6TGFiZWwzMDQ5NDA3NzIw",
                        "url": "https://api.github.com/repos/dart-lang/linter/labels/set-recommended",
                        "name": "set-recommended",
                        "color": "4ED56E",
                        "default": false,
                        "description": "Affects a rule in the recommended Dart rule set"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-22T15:22:51Z",
                "updated_at": "2023-10-23T14:37:47Z",
                "closed_at": "2023-10-23T14:37:46Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "[Lint rule](https://dart.dev/tools/linter-rules/overridden_fields)\r\n\r\nI believe, the only concern is having both `super.field` and `this.field` initialized without `super.field` being used or garbage collected. But if they are defined as `late`, I don't see a reason to lint it.\r\n\r\n\r\nThe following:\r\n```dart\r\nclass A {\r\n  final number = () {\r\n    print(\"A init\");\r\n    return 1;\r\n  }();\r\n  \r\n  \r\n  void printNumber() {\r\n    print(number);\r\n  }\r\n}\r\n\r\nclass B extends A {\r\n  final number = () {\r\n    print(\"B init\");\r\n    return 2;\r\n  }();\r\n}\r\n\r\n\r\nvoid main() {\r\n  final b = B();\r\n  b.printNumber();\r\n}\r\n```\r\n\r\nPrints:\r\n```shell\r\nB init\r\nA init\r\n2\r\n```\r\n\r\nBut, if I change `number` in both classes to `late`, like that:\r\n```dart\r\nclass A {\r\n  late final number = () {\r\n    print(\"A init\");\r\n    return 1;\r\n  }();\r\n  \r\n  \r\n  void printNumber() {\r\n    print(number);\r\n  }\r\n}\r\n\r\nclass B extends A {\r\n  late final number = () {\r\n    print(\"B init\");\r\n    return 2;\r\n  }();\r\n}\r\n```\r\n\r\nIt prints only:\r\n```\r\nB init\r\n2\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/dart-lang/linter/issues/4789/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/dart-lang/linter/issues/4789/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-23T14:37:48Z",
        "org": {
            "id": 1609975,
            "login": "dart-lang",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/dart-lang",
            "avatar_url": "https://avatars.githubusercontent.com/u/1609975?"
        }
    }
]