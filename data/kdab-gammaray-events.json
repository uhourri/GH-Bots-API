[
    {
        "id": "32895200496",
        "type": "WatchEvent",
        "actor": {
            "id": 29817247,
            "login": "Harold2017",
            "display_login": "Harold2017",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Harold2017",
            "avatar_url": "https://avatars.githubusercontent.com/u/29817247?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T10:11:03Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32875087383",
        "type": "WatchEvent",
        "actor": {
            "id": 2965415,
            "login": "mar04",
            "display_login": "mar04",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mar04",
            "avatar_url": "https://avatars.githubusercontent.com/u/2965415?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T16:18:41Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32872199713",
        "type": "WatchEvent",
        "actor": {
            "id": 8784918,
            "login": "workingjoe",
            "display_login": "workingjoe",
            "gravatar_id": "",
            "url": "https://api.github.com/users/workingjoe",
            "avatar_url": "https://avatars.githubusercontent.com/u/8784918?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T14:44:39Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32854879205",
        "type": "WatchEvent",
        "actor": {
            "id": 90163099,
            "login": "fbiv007",
            "display_login": "fbiv007",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fbiv007",
            "avatar_url": "https://avatars.githubusercontent.com/u/90163099?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-26T03:09:39Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32832462129",
        "type": "WatchEvent",
        "actor": {
            "id": 20349281,
            "login": "Xie-Long-0",
            "display_login": "Xie-Long-0",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Xie-Long-0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20349281?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-25T11:07:46Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32824911124",
        "type": "IssuesEvent",
        "actor": {
            "id": 7696024,
            "login": "Waqar144",
            "display_login": "Waqar144",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Waqar144",
            "avatar_url": "https://avatars.githubusercontent.com/u/7696024?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/833",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/833",
                "id": 1885996882,
                "node_id": "I_kwDOACfom85wagdS",
                "number": 833,
                "title": "Crash when opening popup in a debugged app",
                "user": {
                    "login": "ratijas",
                    "id": 6737986,
                    "node_id": "MDQ6VXNlcjY3Mzc5ODY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6737986?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ratijas",
                    "html_url": "https://github.com/ratijas",
                    "followers_url": "https://api.github.com/users/ratijas/followers",
                    "following_url": "https://api.github.com/users/ratijas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ratijas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ratijas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ratijas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ratijas/orgs",
                    "repos_url": "https://api.github.com/users/ratijas/repos",
                    "events_url": "https://api.github.com/users/ratijas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ratijas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-09-07T14:16:54Z",
                "updated_at": "2023-10-25T06:35:10Z",
                "closed_at": "2023-10-25T06:35:10Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "1. Launch an app, like KNewStuff dialog\r\n2. Attach to it, and go to Quick Scenes tab\r\n3. In the app window open screenshots gallery popup\r\n\r\nGammaRay instantly crashes.\r\n\r\n<details>\r\n<summary>gdb stacktrace</summary>\r\n\r\n```\r\nCore was generated by `/usr/local/kde6/lib/gammaray/libexec/gammaray-client tcp://127.0.0.1:11732'.\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=11, no_tid=no_tid@entry=0)\r\n    at pthread_kill.c:44\r\nDownloading source file /usr/src/debug/glibc/glibc/nptl/pthread_kill.c\r\n44            return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;                             \r\n[Current thread is 1 (Thread 0x7efcba8e4140 (LWP 24113))]\r\n(gdb) bt\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=11, no_tid=no_tid@entry=0)\r\n    at pthread_kill.c:44\r\n#1  0x00007efcbea8e8a3 in __pthread_kill_internal (signo=11, threadid=<optimized out>) at pthread_kill.c:78\r\n#2  0x00007efcbea3e668 in __GI_raise (sig=11) at ../sysdeps/posix/raise.c:26\r\n#3  0x00007efcb353e989 in KCrash::defaultCrashHandler(int) (sig=11)\r\n    at /home/ratijas/kde/src6/kcrash/src/kcrash.cpp:612\r\n#4  0x00007efcbea3e710 in <signal handler called> () at /usr/lib/libc.so.6\r\n#5  0x00007efcc0a341b0 in GammaRay::RemoteModel::parent(QModelIndex const&) const\r\n    (this=0x56350adcd760, index=<optimized out>) at /home/ratijas/kde/src6/gammaray/client/remotemodel.cpp:141\r\n#6  0x00007efcbf50a2ce in QModelIndex::parent() const (this=0x7fff2fc03110, this=<optimized out>)\r\n    at /usr/src/debug/qt6-base/build/include/QtCore/../../../qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.h:481\r\n#7  QIdentityProxyModel::parent(QModelIndex const&) const (this=0x56350adcde30, child=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qidentityproxymodel.cpp:219\r\n#8  0x00007efcc0493f3e in QModelIndex::parent() const (this=<optimized out>)\r\n    at /usr/src/debug/qt6-base/build/include/QtCore/../../../qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.h:481\r\n#9  0x00007efcc06a526e in QTreeView::indexRowSizeHint(QModelIndex const&) const\r\n    (this=this@entry=0x56350ad6bd60, index=...)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:2960\r\n#10 0x00007efcc06a5f5d in QTreeViewPrivate::layout(int, bool, bool)\r\n    (this=0x56350b43e980, i=<optimized out>, recursiveExpanding=false, afterIsUninitialized=false)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:3363\r\n#11 0x00007efcc069d2c1 in QTreeView::doItemsLayout() (this=0x56350ad6bd60)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:2115\r\n#12 0x00007efcc06a3e0d in QAbstractItemViewPrivate::executePostedLayout() const (this=0x56350b43e980)\r\n    at /usr/src/debug/qt6-base/build/include/QtWidgets/6.5.2/QtWidgets/private/../../../../../../qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qabstractitemview_p.h:58\r\n#13 QAbstractItemViewPrivate::executePostedLayout() const (this=0x56350b43e980)\r\n    at /usr/src/debug/qt6-base/build/include/QtWidgets/6.5.2/QtWidgets/private/../../../../../../qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qabstractitemview_p.h:194\r\n#14 QTreeView::resizeColumnToContents(int) (this=0x56350ad6bd60, column=0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:2585\r\n#15 0x00007efcbf39134a in QtPrivate::QSlotObjectBase::call(QObject*, void**)\r\n    (a=0x7fff2fc03640, r=0x56350ade3750, this=0x56350ade3720, this=<optimized out>, r=<optimized out>, a=<optimized out>) at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobjectdefs_impl.h:363\r\n#16 doActivate<false>(QObject*, int, void**) (sender=0x56350adcde30, signal_index=13, argv=0x7fff2fc03640)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobject.cpp:3992\r\n#17 0x00007efcbf4e8027 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int, QAbstractItemModel::QPrivateSignal) (_t4=..., _t3=<optimized out>, _t2=<optimized out>, _t1=..., this=0x56350adcde30)\r\n    at /usr/src/debug/qt6-base/build/src/corelib/Core_autogen/include/moc_qabstractitemmodel.cpp:1352\r\n#18 QAbstractItemModel::endInsertRows() (this=0x56350adcde30)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.cpp:2896\r\n#19 0x00007efcbf391543 in doActivate<false>(QObject*, int, void**)\r\n    (sender=0x56350adcd760, signal_index=13, argv=0x7fff2fc037d0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobject.cpp:4004\r\n#20 0x00007efcbf4e8027 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int, QAbstractItemModel::QPrivateSignal) (_t4=..., _t3=<optimized out>, _t2=<optimized out>, _t1=..., this=0x56350adcd760)\r\n    at /usr/src/debug/qt6-base/build/src/corelib/Core_autogen/include/moc_qabstractitemmodel.cpp:1352\r\n#21 QAbstractItemModel::endInsertRows() (this=this@entry=0x56350adcd760)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.cpp:2896\r\n#22 0x00007efcc0a35d88 in GammaRay::RemoteModel::doInsertRows(GammaRay::RemoteModel::Node*, int, int)\r\n    (this=this@entry=0x56350adcd760, parentNode=0x56350adcd8f0, first=<optimized out>, last=1)\r\n    at /home/ratijas/kde/src6/gammaray/client/remotemodel.cpp:957\r\n#23 0x00007efcc0a3a085 in GammaRay::RemoteModel::newMessage(GammaRay::Message const&)\r\n    (this=0x56350adcd760, msg=...) at /home/ratijas/kde/src6/gammaray/client/remotemodel.cpp:516\r\n#24 0x00007efcbf3500a5 in QMetaMethodInvoker::invokeImpl(QMetaMethod, void*, Qt::ConnectionType, long long, void const* const*, char const* const*, QtPrivate::QMetaTypeInterface const* const*)\r\n    (self=..., target=<optimized out>, connectionType=Qt::DirectConnection, \r\n    connectionType@entry=Qt::AutoConnection, paramCount=paramCount@entry=2, parameters=parameters@entry=0x7fff2fc03d20, typeNames=0x7fff2fc03d30, metaTypes=0x7fff2fc03d40)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qmetaobject.cpp:2704\r\n#25 0x00007efcbf35040c in QMetaMethod::invokeImpl(QMetaMethod, void*, Qt::ConnectionType, long long, void const* const*, char const* const*, QtPrivate::QMetaTypeInterface const* const*)\r\n    (self=..., target=<optimized out>, connectionType=connectionType@entry=Qt::AutoConnection, paramCount=paramCount@entry=2, parameters=parameters@entry=0x7fff2fc03d20, typeNames=0x7fff2fc03d30, metaTypes=0x7fff2fc03d40)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qmetaobject.cpp:2542\r\n#26 0x00007efcc09cd67a in QMetaMethod::invoke<QMetaMethodArgument>(QObject*, Qt::ConnectionType, QMetaMethodReturnArgument, QMetaMethodArgument&&) const (r=..., c=Qt::AutoConnection, obj=<optimized out>, this=0x56350ad0bb00)\r\n    at /usr/include/qt6/QtCore/qmetaobject.h:148\r\n#27 QMetaMethod::invoke<QMetaMethodArgument>(QObject*, Qt::ConnectionType, QMetaMethodArgument&&) const\r\n    (c=Qt::AutoConnection, obj=<optimized out>, this=0x56350ad0bb00) at /usr/include/qt6/QtCore/qmetaobject.h:160\r\n#28 QMetaMethod::invoke<QMetaMethodArgument>(QObject*, QMetaMethodArgument&&) const\r\n    (obj=<optimized out>, this=0x56350ad0bb00) at /usr/include/qt6/QtCore/qmetaobject.h:182\r\n#29 GammaRay::Endpoint::dispatchMessage(GammaRay::Message const&) (this=<optimized out>, msg=...)\r\n    at /home/ratijas/kde/src6/gammaray/common/endpoint.cpp:352\r\n#30 0x00007efcc09c91d0 in GammaRay::Endpoint::readyRead() (this=0x56350a6decf0)\r\n    at /home/ratijas/kde/src6/gammaray/common/endpoint.cpp:159\r\n#31 0x00007efcbf39134a in QtPrivate::QSlotObjectBase::call(QObject*, void**)\r\n    (a=0x7fff2fc03e88, r=0x56350a6decf0, this=0x7efcb4013190, this=<optimized out>, r=<optimized out>, a=<optimized out>) at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobjectdefs_impl.h:363\r\n#32 doActivate<false>(QObject*, int, void**) (sender=0x56350ac6a660, signal_index=3, argv=0x7fff2fc03e88)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobject.cpp:3992\r\n#33 0x00007efcbed01fd8 in QAbstractSocketPrivate::emitReadyRead(int) (channel=0, this=0x56350acab5f0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qabstractsocket.cpp:1212\r\n#34 QAbstractSocketPrivate::canReadNotification() (this=0x56350acab5f0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qabstractsocket.cpp:646\r\n#35 0x00007efcbed0dfca in QAbstractSocketEngine::readNotification() (this=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qabstractsocketengine.cpp:120\r\n#36 QReadNotifier::event(QEvent*) (this=<optimized out>, e=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qnativesocketengine.cpp:1238\r\n#37 0x00007efcc037136b in QApplicationPrivate::notify_helper(QObject*, QEvent*)\r\n    (this=<optimized out>, receiver=0x56350ac82590, e=0x7fff2fc03fa0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/kernel/qapplication.cpp:3287\r\n#38 0x00007efcbf33b718 in QCoreApplication::notifyInternal2(QObject*, QEvent*)\r\n    (receiver=0x56350ac82590, event=0x7fff2fc03fa0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qcoreapplication.cpp:1118\r\n#39 0x00007efcbf534481 in QCoreApplication::sendEvent(QObject*, QEvent*)\r\n    (event=0x7fff2fc03fa0, receiver=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qcoreapplication.cpp:1536\r\n#40 socketNotifierSourceDispatch(GSource*, GSourceFunc, gpointer) (source=0x56350a7cf050)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventdispatcher_glib.cpp:73\r\n#41 0x00007efcbe510a61 in g_main_dispatch (context=0x7efcb4000f10) at ../glib/glib/gmain.c:3460\r\n#42 g_main_context_dispatch (context=0x7efcb4000f10) at ../glib/glib/gmain.c:4200\r\n#43 0x00007efcbe56dc29 in g_main_context_iterate.isra.0\r\n    (context=context@entry=0x7efcb4000f10, block=block@entry=1, dispatch=dispatch@entry=1, self=<optimized out>)\r\n    at ../glib/glib/gmain.c:4276\r\n#44 0x00007efcbe50e112 in g_main_context_iteration (context=0x7efcb4000f10, may_block=1)\r\n    at ../glib/glib/gmain.c:4343\r\n#45 0x00007efcbf532794 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)\r\n    (this=0x56350a7c3b60, flags=...)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventdispatcher_glib.cpp:393\r\n#46 0x00007efcbf345623 in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)\r\n    (flags=..., this=0x7fff2fc04240)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventloop.cpp:100\r\n#47 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) (this=0x7fff2fc04240, flags=...)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventloop.cpp:182\r\n#48 0x00007efcbf33f1f8 in QCoreApplication::exec() ()\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/global/qflags.h:74\r\n#49 0x00007efcc036defa in QApplication::exec() ()\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/kernel/qapplication.cpp:2566\r\n#50 0x000056350a0968a9 in main(int, char**) (argc=<optimized out>, argv=<optimized out>)\r\n    at /home/ratijas/kde/src6/gammaray/client/main.cpp:66\r\n(gdb) \r\n```\r\n\r\n</details>\r\n\r\n### Versions\r\n\r\nOS: Arch Linux\r\nQt: 6.5.2-1\r\nGammaRay: built from master @ e09556b69dd41849830820c35bc48114161d5d9a\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-25T06:35:11Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32824911024",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 7696024,
            "login": "Waqar144",
            "display_login": "Waqar144",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Waqar144",
            "avatar_url": "https://avatars.githubusercontent.com/u/7696024?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/833",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/833",
                "id": 1885996882,
                "node_id": "I_kwDOACfom85wagdS",
                "number": 833,
                "title": "Crash when opening popup in a debugged app",
                "user": {
                    "login": "ratijas",
                    "id": 6737986,
                    "node_id": "MDQ6VXNlcjY3Mzc5ODY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/6737986?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ratijas",
                    "html_url": "https://github.com/ratijas",
                    "followers_url": "https://api.github.com/users/ratijas/followers",
                    "following_url": "https://api.github.com/users/ratijas/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ratijas/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ratijas/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ratijas/subscriptions",
                    "organizations_url": "https://api.github.com/users/ratijas/orgs",
                    "repos_url": "https://api.github.com/users/ratijas/repos",
                    "events_url": "https://api.github.com/users/ratijas/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ratijas/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-09-07T14:16:54Z",
                "updated_at": "2023-10-25T06:35:10Z",
                "closed_at": "2023-10-25T06:35:10Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "1. Launch an app, like KNewStuff dialog\r\n2. Attach to it, and go to Quick Scenes tab\r\n3. In the app window open screenshots gallery popup\r\n\r\nGammaRay instantly crashes.\r\n\r\n<details>\r\n<summary>gdb stacktrace</summary>\r\n\r\n```\r\nCore was generated by `/usr/local/kde6/lib/gammaray/libexec/gammaray-client tcp://127.0.0.1:11732'.\r\nProgram terminated with signal SIGSEGV, Segmentation fault.\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=11, no_tid=no_tid@entry=0)\r\n    at pthread_kill.c:44\r\nDownloading source file /usr/src/debug/glibc/glibc/nptl/pthread_kill.c\r\n44            return INTERNAL_SYSCALL_ERROR_P (ret) ? INTERNAL_SYSCALL_ERRNO (ret) : 0;                             \r\n[Current thread is 1 (Thread 0x7efcba8e4140 (LWP 24113))]\r\n(gdb) bt\r\n#0  __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=11, no_tid=no_tid@entry=0)\r\n    at pthread_kill.c:44\r\n#1  0x00007efcbea8e8a3 in __pthread_kill_internal (signo=11, threadid=<optimized out>) at pthread_kill.c:78\r\n#2  0x00007efcbea3e668 in __GI_raise (sig=11) at ../sysdeps/posix/raise.c:26\r\n#3  0x00007efcb353e989 in KCrash::defaultCrashHandler(int) (sig=11)\r\n    at /home/ratijas/kde/src6/kcrash/src/kcrash.cpp:612\r\n#4  0x00007efcbea3e710 in <signal handler called> () at /usr/lib/libc.so.6\r\n#5  0x00007efcc0a341b0 in GammaRay::RemoteModel::parent(QModelIndex const&) const\r\n    (this=0x56350adcd760, index=<optimized out>) at /home/ratijas/kde/src6/gammaray/client/remotemodel.cpp:141\r\n#6  0x00007efcbf50a2ce in QModelIndex::parent() const (this=0x7fff2fc03110, this=<optimized out>)\r\n    at /usr/src/debug/qt6-base/build/include/QtCore/../../../qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.h:481\r\n#7  QIdentityProxyModel::parent(QModelIndex const&) const (this=0x56350adcde30, child=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qidentityproxymodel.cpp:219\r\n#8  0x00007efcc0493f3e in QModelIndex::parent() const (this=<optimized out>)\r\n    at /usr/src/debug/qt6-base/build/include/QtCore/../../../qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.h:481\r\n#9  0x00007efcc06a526e in QTreeView::indexRowSizeHint(QModelIndex const&) const\r\n    (this=this@entry=0x56350ad6bd60, index=...)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:2960\r\n#10 0x00007efcc06a5f5d in QTreeViewPrivate::layout(int, bool, bool)\r\n    (this=0x56350b43e980, i=<optimized out>, recursiveExpanding=false, afterIsUninitialized=false)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:3363\r\n#11 0x00007efcc069d2c1 in QTreeView::doItemsLayout() (this=0x56350ad6bd60)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:2115\r\n#12 0x00007efcc06a3e0d in QAbstractItemViewPrivate::executePostedLayout() const (this=0x56350b43e980)\r\n    at /usr/src/debug/qt6-base/build/include/QtWidgets/6.5.2/QtWidgets/private/../../../../../../qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qabstractitemview_p.h:58\r\n#13 QAbstractItemViewPrivate::executePostedLayout() const (this=0x56350b43e980)\r\n    at /usr/src/debug/qt6-base/build/include/QtWidgets/6.5.2/QtWidgets/private/../../../../../../qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qabstractitemview_p.h:194\r\n#14 QTreeView::resizeColumnToContents(int) (this=0x56350ad6bd60, column=0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/itemviews/qtreeview.cpp:2585\r\n#15 0x00007efcbf39134a in QtPrivate::QSlotObjectBase::call(QObject*, void**)\r\n    (a=0x7fff2fc03640, r=0x56350ade3750, this=0x56350ade3720, this=<optimized out>, r=<optimized out>, a=<optimized out>) at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobjectdefs_impl.h:363\r\n#16 doActivate<false>(QObject*, int, void**) (sender=0x56350adcde30, signal_index=13, argv=0x7fff2fc03640)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobject.cpp:3992\r\n#17 0x00007efcbf4e8027 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int, QAbstractItemModel::QPrivateSignal) (_t4=..., _t3=<optimized out>, _t2=<optimized out>, _t1=..., this=0x56350adcde30)\r\n    at /usr/src/debug/qt6-base/build/src/corelib/Core_autogen/include/moc_qabstractitemmodel.cpp:1352\r\n#18 QAbstractItemModel::endInsertRows() (this=0x56350adcde30)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.cpp:2896\r\n#19 0x00007efcbf391543 in doActivate<false>(QObject*, int, void**)\r\n    (sender=0x56350adcd760, signal_index=13, argv=0x7fff2fc037d0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobject.cpp:4004\r\n#20 0x00007efcbf4e8027 in QAbstractItemModel::rowsInserted(QModelIndex const&, int, int, QAbstractItemModel::QPrivateSignal) (_t4=..., _t3=<optimized out>, _t2=<optimized out>, _t1=..., this=0x56350adcd760)\r\n    at /usr/src/debug/qt6-base/build/src/corelib/Core_autogen/include/moc_qabstractitemmodel.cpp:1352\r\n#21 QAbstractItemModel::endInsertRows() (this=this@entry=0x56350adcd760)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/itemmodels/qabstractitemmodel.cpp:2896\r\n#22 0x00007efcc0a35d88 in GammaRay::RemoteModel::doInsertRows(GammaRay::RemoteModel::Node*, int, int)\r\n    (this=this@entry=0x56350adcd760, parentNode=0x56350adcd8f0, first=<optimized out>, last=1)\r\n    at /home/ratijas/kde/src6/gammaray/client/remotemodel.cpp:957\r\n#23 0x00007efcc0a3a085 in GammaRay::RemoteModel::newMessage(GammaRay::Message const&)\r\n    (this=0x56350adcd760, msg=...) at /home/ratijas/kde/src6/gammaray/client/remotemodel.cpp:516\r\n#24 0x00007efcbf3500a5 in QMetaMethodInvoker::invokeImpl(QMetaMethod, void*, Qt::ConnectionType, long long, void const* const*, char const* const*, QtPrivate::QMetaTypeInterface const* const*)\r\n    (self=..., target=<optimized out>, connectionType=Qt::DirectConnection, \r\n    connectionType@entry=Qt::AutoConnection, paramCount=paramCount@entry=2, parameters=parameters@entry=0x7fff2fc03d20, typeNames=0x7fff2fc03d30, metaTypes=0x7fff2fc03d40)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qmetaobject.cpp:2704\r\n#25 0x00007efcbf35040c in QMetaMethod::invokeImpl(QMetaMethod, void*, Qt::ConnectionType, long long, void const* const*, char const* const*, QtPrivate::QMetaTypeInterface const* const*)\r\n    (self=..., target=<optimized out>, connectionType=connectionType@entry=Qt::AutoConnection, paramCount=paramCount@entry=2, parameters=parameters@entry=0x7fff2fc03d20, typeNames=0x7fff2fc03d30, metaTypes=0x7fff2fc03d40)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qmetaobject.cpp:2542\r\n#26 0x00007efcc09cd67a in QMetaMethod::invoke<QMetaMethodArgument>(QObject*, Qt::ConnectionType, QMetaMethodReturnArgument, QMetaMethodArgument&&) const (r=..., c=Qt::AutoConnection, obj=<optimized out>, this=0x56350ad0bb00)\r\n    at /usr/include/qt6/QtCore/qmetaobject.h:148\r\n#27 QMetaMethod::invoke<QMetaMethodArgument>(QObject*, Qt::ConnectionType, QMetaMethodArgument&&) const\r\n    (c=Qt::AutoConnection, obj=<optimized out>, this=0x56350ad0bb00) at /usr/include/qt6/QtCore/qmetaobject.h:160\r\n#28 QMetaMethod::invoke<QMetaMethodArgument>(QObject*, QMetaMethodArgument&&) const\r\n    (obj=<optimized out>, this=0x56350ad0bb00) at /usr/include/qt6/QtCore/qmetaobject.h:182\r\n#29 GammaRay::Endpoint::dispatchMessage(GammaRay::Message const&) (this=<optimized out>, msg=...)\r\n    at /home/ratijas/kde/src6/gammaray/common/endpoint.cpp:352\r\n#30 0x00007efcc09c91d0 in GammaRay::Endpoint::readyRead() (this=0x56350a6decf0)\r\n    at /home/ratijas/kde/src6/gammaray/common/endpoint.cpp:159\r\n#31 0x00007efcbf39134a in QtPrivate::QSlotObjectBase::call(QObject*, void**)\r\n    (a=0x7fff2fc03e88, r=0x56350a6decf0, this=0x7efcb4013190, this=<optimized out>, r=<optimized out>, a=<optimized out>) at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobjectdefs_impl.h:363\r\n#32 doActivate<false>(QObject*, int, void**) (sender=0x56350ac6a660, signal_index=3, argv=0x7fff2fc03e88)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qobject.cpp:3992\r\n#33 0x00007efcbed01fd8 in QAbstractSocketPrivate::emitReadyRead(int) (channel=0, this=0x56350acab5f0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qabstractsocket.cpp:1212\r\n#34 QAbstractSocketPrivate::canReadNotification() (this=0x56350acab5f0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qabstractsocket.cpp:646\r\n#35 0x00007efcbed0dfca in QAbstractSocketEngine::readNotification() (this=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qabstractsocketengine.cpp:120\r\n#36 QReadNotifier::event(QEvent*) (this=<optimized out>, e=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/network/socket/qnativesocketengine.cpp:1238\r\n#37 0x00007efcc037136b in QApplicationPrivate::notify_helper(QObject*, QEvent*)\r\n    (this=<optimized out>, receiver=0x56350ac82590, e=0x7fff2fc03fa0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/kernel/qapplication.cpp:3287\r\n#38 0x00007efcbf33b718 in QCoreApplication::notifyInternal2(QObject*, QEvent*)\r\n    (receiver=0x56350ac82590, event=0x7fff2fc03fa0)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qcoreapplication.cpp:1118\r\n#39 0x00007efcbf534481 in QCoreApplication::sendEvent(QObject*, QEvent*)\r\n    (event=0x7fff2fc03fa0, receiver=<optimized out>)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qcoreapplication.cpp:1536\r\n#40 socketNotifierSourceDispatch(GSource*, GSourceFunc, gpointer) (source=0x56350a7cf050)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventdispatcher_glib.cpp:73\r\n#41 0x00007efcbe510a61 in g_main_dispatch (context=0x7efcb4000f10) at ../glib/glib/gmain.c:3460\r\n#42 g_main_context_dispatch (context=0x7efcb4000f10) at ../glib/glib/gmain.c:4200\r\n#43 0x00007efcbe56dc29 in g_main_context_iterate.isra.0\r\n    (context=context@entry=0x7efcb4000f10, block=block@entry=1, dispatch=dispatch@entry=1, self=<optimized out>)\r\n    at ../glib/glib/gmain.c:4276\r\n#44 0x00007efcbe50e112 in g_main_context_iteration (context=0x7efcb4000f10, may_block=1)\r\n    at ../glib/glib/gmain.c:4343\r\n#45 0x00007efcbf532794 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)\r\n    (this=0x56350a7c3b60, flags=...)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventdispatcher_glib.cpp:393\r\n#46 0x00007efcbf345623 in QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)\r\n    (flags=..., this=0x7fff2fc04240)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventloop.cpp:100\r\n#47 QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) (this=0x7fff2fc04240, flags=...)\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/kernel/qeventloop.cpp:182\r\n#48 0x00007efcbf33f1f8 in QCoreApplication::exec() ()\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/corelib/global/qflags.h:74\r\n#49 0x00007efcc036defa in QApplication::exec() ()\r\n    at /usr/src/debug/qt6-base/qtbase-everywhere-src-6.5.2/src/widgets/kernel/qapplication.cpp:2566\r\n#50 0x000056350a0968a9 in main(int, char**) (argc=<optimized out>, argv=<optimized out>)\r\n    at /home/ratijas/kde/src6/gammaray/client/main.cpp:66\r\n(gdb) \r\n```\r\n\r\n</details>\r\n\r\n### Versions\r\n\r\nOS: Arch Linux\r\nQt: 6.5.2-1\r\nGammaRay: built from master @ e09556b69dd41849830820c35bc48114161d5d9a\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1778604839",
                "html_url": "https://github.com/KDAB/GammaRay/issues/833#issuecomment-1778604839",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/833",
                "id": 1778604839,
                "node_id": "IC_kwDOACfom85qA1sn",
                "user": {
                    "login": "Waqar144",
                    "id": 7696024,
                    "node_id": "MDQ6VXNlcjc2OTYwMjQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7696024?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Waqar144",
                    "html_url": "https://github.com/Waqar144",
                    "followers_url": "https://api.github.com/users/Waqar144/followers",
                    "following_url": "https://api.github.com/users/Waqar144/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Waqar144/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Waqar144/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Waqar144/subscriptions",
                    "organizations_url": "https://api.github.com/users/Waqar144/orgs",
                    "repos_url": "https://api.github.com/users/Waqar144/repos",
                    "events_url": "https://api.github.com/users/Waqar144/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Waqar144/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T06:35:10Z",
                "updated_at": "2023-10-25T06:35:10Z",
                "author_association": "CONTRIBUTOR",
                "body": "Can't reproduce it anymore after the knewstuff fix. Please reopen if you can still reproduce a crash with gammaray.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1778604839/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T06:35:10Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32824829499",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 7696024,
            "login": "Waqar144",
            "display_login": "Waqar144",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Waqar144",
            "avatar_url": "https://avatars.githubusercontent.com/u/7696024?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/842",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/842/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/842/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/842/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/842",
                "id": 1924332701,
                "node_id": "I_kwDOACfom85ysvyd",
                "number": 842,
                "title": "Object/Widget inspector Search Bar doesn't Select anything in Large Applications",
                "user": {
                    "login": "psacawa",
                    "id": 21274063,
                    "node_id": "MDQ6VXNlcjIxMjc0MDYz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/21274063?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/psacawa",
                    "html_url": "https://github.com/psacawa",
                    "followers_url": "https://api.github.com/users/psacawa/followers",
                    "following_url": "https://api.github.com/users/psacawa/following{/other_user}",
                    "gists_url": "https://api.github.com/users/psacawa/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/psacawa/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/psacawa/subscriptions",
                    "organizations_url": "https://api.github.com/users/psacawa/orgs",
                    "repos_url": "https://api.github.com/users/psacawa/repos",
                    "events_url": "https://api.github.com/users/psacawa/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/psacawa/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-03T14:55:33Z",
                "updated_at": "2023-10-25T06:31:14Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "Thanks for your work on this invaluable inspection tool.\r\n\r\nWhen inspecting widgets on large applications, e.g. `wireshark`, the search bar in the object inspector and widget inspector do not work. It you enter a filter there, the QTreeView will just show all the widgets in the whole application, irrespective of the query.\r\n\r\nIn smaller applications, this functionality works fine. But it's in large applications where it's actually necessary. I guess the issue is  an operation timed out in the search bar. I can see in the source `ui/searchlinecontroller.cpp` there are QTimers used, but I can't investigate further because `gammaray` can't inspect itself.\r\n\r\nI observed the regression with:\r\n\r\n```\r\nGammaRay version 2.99.50 (revision: 8f2dfd4eb)\r\nCopyright (C) 2010-2023 Klaralvdalens Datakonsult AB, a KDAB Group company, info@kdab.com\r\nProtocol version 38\r\nBroadcast version 2\r\n```\r\n\r\nUsing probe `qt5_15-x86_64 (Qt 5.15 (x86_64))` on `Ubuntu 22.10` to probe wireshark.\r\n\r\nI *did not* observe the regression with:\r\n\r\n```\r\nGammaRay version 2.11.3\r\nCopyright (C) 2010-2021 Klaralvdalens Datakonsult AB, a KDAB Group company, info@kdab.com\r\nProtocol version 36\r\nBroadcast version 2\r\n```\r\n\r\nusing the same probe on the same client.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/842/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/842/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1778600252",
                "html_url": "https://github.com/KDAB/GammaRay/issues/842#issuecomment-1778600252",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/842",
                "id": 1778600252,
                "node_id": "IC_kwDOACfom85qA0k8",
                "user": {
                    "login": "Waqar144",
                    "id": 7696024,
                    "node_id": "MDQ6VXNlcjc2OTYwMjQ=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7696024?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/Waqar144",
                    "html_url": "https://github.com/Waqar144",
                    "followers_url": "https://api.github.com/users/Waqar144/followers",
                    "following_url": "https://api.github.com/users/Waqar144/following{/other_user}",
                    "gists_url": "https://api.github.com/users/Waqar144/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/Waqar144/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/Waqar144/subscriptions",
                    "organizations_url": "https://api.github.com/users/Waqar144/orgs",
                    "repos_url": "https://api.github.com/users/Waqar144/repos",
                    "events_url": "https://api.github.com/users/Waqar144/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/Waqar144/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-25T06:31:14Z",
                "updated_at": "2023-10-25T06:31:14Z",
                "author_association": "CONTRIBUTOR",
                "body": "In the latest version (3.0) the filter tries to search + expand the tree, perhaps something is broken there.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1778600252/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-25T06:31:14Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32814581770",
        "type": "PullRequestEvent",
        "actor": {
            "id": 479187,
            "login": "winterz",
            "display_login": "winterz",
            "gravatar_id": "",
            "url": "https://api.github.com/users/winterz",
            "avatar_url": "https://avatars.githubusercontent.com/u/479187?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "closed",
            "number": 844,
            "pull_request": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/pulls/844",
                "id": 1548448063,
                "node_id": "PR_kwDOACfom85cS3E_",
                "html_url": "https://github.com/KDAB/GammaRay/pull/844",
                "diff_url": "https://github.com/KDAB/GammaRay/pull/844.diff",
                "patch_url": "https://github.com/KDAB/GammaRay/pull/844.patch",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/844",
                "number": 844,
                "state": "closed",
                "locked": false,
                "title": "[pre-commit.ci] pre-commit autoupdate",
                "user": {
                    "login": "pre-commit-ci[bot]",
                    "id": 66853113,
                    "node_id": "MDM6Qm90NjY4NTMxMTM=",
                    "avatar_url": "https://avatars.githubusercontent.com/in/68672?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D",
                    "html_url": "https://github.com/apps/pre-commit-ci",
                    "followers_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/pre-commit-ci%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 \u2192 v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\n- [github.com/pre-commit/mirrors-clang-format: v16.0.6 \u2192 v17.0.3](https://github.com/pre-commit/mirrors-clang-format/compare/v16.0.6...v17.0.3)\n- [github.com/PyCQA/pylint: v3.0.0 \u2192 v3.0.1](https://github.com/PyCQA/pylint/compare/v3.0.0...v3.0.1)\n- https://github.com/pre-commit/mirrors-autopep8 \u2192 https://github.com/hhatto/autopep8\n<!--pre-commit.ci end-->",
                "created_at": "2023-10-09T20:13:53Z",
                "updated_at": "2023-10-24T19:41:16Z",
                "closed_at": "2023-10-24T19:41:16Z",
                "merged_at": null,
                "merge_commit_sha": "04362b1e6c1adedc38c2f0cab301f78da92bd5f1",
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/KDAB/GammaRay/pulls/844/commits",
                "review_comments_url": "https://api.github.com/repos/KDAB/GammaRay/pulls/844/comments",
                "review_comment_url": "https://api.github.com/repos/KDAB/GammaRay/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/844/comments",
                "statuses_url": "https://api.github.com/repos/KDAB/GammaRay/statuses/a57af4aa29c4682cf70169647d6927939abeb5d2",
                "head": {
                    "label": "KDAB:pre-commit-ci-update-config",
                    "ref": "pre-commit-ci-update-config",
                    "sha": "a57af4aa29c4682cf70169647d6927939abeb5d2",
                    "user": {
                        "login": "KDAB",
                        "id": 402842,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQwMjg0Mg==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/402842?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/KDAB",
                        "html_url": "https://github.com/KDAB",
                        "followers_url": "https://api.github.com/users/KDAB/followers",
                        "following_url": "https://api.github.com/users/KDAB/following{/other_user}",
                        "gists_url": "https://api.github.com/users/KDAB/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/KDAB/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/KDAB/subscriptions",
                        "organizations_url": "https://api.github.com/users/KDAB/orgs",
                        "repos_url": "https://api.github.com/users/KDAB/repos",
                        "events_url": "https://api.github.com/users/KDAB/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/KDAB/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 2615451,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyNjE1NDUx",
                        "name": "GammaRay",
                        "full_name": "KDAB/GammaRay",
                        "private": false,
                        "owner": {
                            "login": "KDAB",
                            "id": 402842,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQwMjg0Mg==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/402842?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/KDAB",
                            "html_url": "https://github.com/KDAB",
                            "followers_url": "https://api.github.com/users/KDAB/followers",
                            "following_url": "https://api.github.com/users/KDAB/following{/other_user}",
                            "gists_url": "https://api.github.com/users/KDAB/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/KDAB/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/KDAB/subscriptions",
                            "organizations_url": "https://api.github.com/users/KDAB/orgs",
                            "repos_url": "https://api.github.com/users/KDAB/repos",
                            "events_url": "https://api.github.com/users/KDAB/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/KDAB/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/KDAB/GammaRay",
                        "description": "GammaRay is a tool to poke around in a Qt-application and also to manipulate the application to some extent.",
                        "fork": false,
                        "url": "https://api.github.com/repos/KDAB/GammaRay",
                        "forks_url": "https://api.github.com/repos/KDAB/GammaRay/forks",
                        "keys_url": "https://api.github.com/repos/KDAB/GammaRay/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/KDAB/GammaRay/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/KDAB/GammaRay/teams",
                        "hooks_url": "https://api.github.com/repos/KDAB/GammaRay/hooks",
                        "issue_events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/KDAB/GammaRay/events",
                        "assignees_url": "https://api.github.com/repos/KDAB/GammaRay/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/KDAB/GammaRay/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/KDAB/GammaRay/tags",
                        "blobs_url": "https://api.github.com/repos/KDAB/GammaRay/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/KDAB/GammaRay/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/KDAB/GammaRay/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/KDAB/GammaRay/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/KDAB/GammaRay/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/KDAB/GammaRay/languages",
                        "stargazers_url": "https://api.github.com/repos/KDAB/GammaRay/stargazers",
                        "contributors_url": "https://api.github.com/repos/KDAB/GammaRay/contributors",
                        "subscribers_url": "https://api.github.com/repos/KDAB/GammaRay/subscribers",
                        "subscription_url": "https://api.github.com/repos/KDAB/GammaRay/subscription",
                        "commits_url": "https://api.github.com/repos/KDAB/GammaRay/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/KDAB/GammaRay/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/KDAB/GammaRay/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/KDAB/GammaRay/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/KDAB/GammaRay/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/KDAB/GammaRay/merges",
                        "archive_url": "https://api.github.com/repos/KDAB/GammaRay/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/KDAB/GammaRay/downloads",
                        "issues_url": "https://api.github.com/repos/KDAB/GammaRay/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/KDAB/GammaRay/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/KDAB/GammaRay/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/KDAB/GammaRay/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/KDAB/GammaRay/labels{/name}",
                        "releases_url": "https://api.github.com/repos/KDAB/GammaRay/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/KDAB/GammaRay/deployments",
                        "created_at": "2011-10-20T19:00:06Z",
                        "updated_at": "2023-10-24T10:00:33Z",
                        "pushed_at": "2023-10-24T19:41:09Z",
                        "git_url": "git://github.com/KDAB/GammaRay.git",
                        "ssh_url": "git@github.com:KDAB/GammaRay.git",
                        "clone_url": "https://github.com/KDAB/GammaRay.git",
                        "svn_url": "https://github.com/KDAB/GammaRay",
                        "homepage": "https://www.kdab.com/gammaray",
                        "size": 34788,
                        "stargazers_count": 1439,
                        "watchers_count": 1439,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 273,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 111,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "kdab",
                            "qt"
                        ],
                        "visibility": "public",
                        "forks": 273,
                        "open_issues": 111,
                        "watchers": 1439,
                        "default_branch": "3.0"
                    }
                },
                "base": {
                    "label": "KDAB:3.0",
                    "ref": "3.0",
                    "sha": "93428a9da835c04162fa817678e44795d0f80033",
                    "user": {
                        "login": "KDAB",
                        "id": 402842,
                        "node_id": "MDEyOk9yZ2FuaXphdGlvbjQwMjg0Mg==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/402842?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/KDAB",
                        "html_url": "https://github.com/KDAB",
                        "followers_url": "https://api.github.com/users/KDAB/followers",
                        "following_url": "https://api.github.com/users/KDAB/following{/other_user}",
                        "gists_url": "https://api.github.com/users/KDAB/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/KDAB/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/KDAB/subscriptions",
                        "organizations_url": "https://api.github.com/users/KDAB/orgs",
                        "repos_url": "https://api.github.com/users/KDAB/repos",
                        "events_url": "https://api.github.com/users/KDAB/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/KDAB/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 2615451,
                        "node_id": "MDEwOlJlcG9zaXRvcnkyNjE1NDUx",
                        "name": "GammaRay",
                        "full_name": "KDAB/GammaRay",
                        "private": false,
                        "owner": {
                            "login": "KDAB",
                            "id": 402842,
                            "node_id": "MDEyOk9yZ2FuaXphdGlvbjQwMjg0Mg==",
                            "avatar_url": "https://avatars.githubusercontent.com/u/402842?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/KDAB",
                            "html_url": "https://github.com/KDAB",
                            "followers_url": "https://api.github.com/users/KDAB/followers",
                            "following_url": "https://api.github.com/users/KDAB/following{/other_user}",
                            "gists_url": "https://api.github.com/users/KDAB/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/KDAB/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/KDAB/subscriptions",
                            "organizations_url": "https://api.github.com/users/KDAB/orgs",
                            "repos_url": "https://api.github.com/users/KDAB/repos",
                            "events_url": "https://api.github.com/users/KDAB/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/KDAB/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/KDAB/GammaRay",
                        "description": "GammaRay is a tool to poke around in a Qt-application and also to manipulate the application to some extent.",
                        "fork": false,
                        "url": "https://api.github.com/repos/KDAB/GammaRay",
                        "forks_url": "https://api.github.com/repos/KDAB/GammaRay/forks",
                        "keys_url": "https://api.github.com/repos/KDAB/GammaRay/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/KDAB/GammaRay/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/KDAB/GammaRay/teams",
                        "hooks_url": "https://api.github.com/repos/KDAB/GammaRay/hooks",
                        "issue_events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/KDAB/GammaRay/events",
                        "assignees_url": "https://api.github.com/repos/KDAB/GammaRay/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/KDAB/GammaRay/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/KDAB/GammaRay/tags",
                        "blobs_url": "https://api.github.com/repos/KDAB/GammaRay/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/KDAB/GammaRay/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/KDAB/GammaRay/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/KDAB/GammaRay/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/KDAB/GammaRay/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/KDAB/GammaRay/languages",
                        "stargazers_url": "https://api.github.com/repos/KDAB/GammaRay/stargazers",
                        "contributors_url": "https://api.github.com/repos/KDAB/GammaRay/contributors",
                        "subscribers_url": "https://api.github.com/repos/KDAB/GammaRay/subscribers",
                        "subscription_url": "https://api.github.com/repos/KDAB/GammaRay/subscription",
                        "commits_url": "https://api.github.com/repos/KDAB/GammaRay/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/KDAB/GammaRay/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/KDAB/GammaRay/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/KDAB/GammaRay/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/KDAB/GammaRay/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/KDAB/GammaRay/merges",
                        "archive_url": "https://api.github.com/repos/KDAB/GammaRay/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/KDAB/GammaRay/downloads",
                        "issues_url": "https://api.github.com/repos/KDAB/GammaRay/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/KDAB/GammaRay/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/KDAB/GammaRay/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/KDAB/GammaRay/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/KDAB/GammaRay/labels{/name}",
                        "releases_url": "https://api.github.com/repos/KDAB/GammaRay/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/KDAB/GammaRay/deployments",
                        "created_at": "2011-10-20T19:00:06Z",
                        "updated_at": "2023-10-24T10:00:33Z",
                        "pushed_at": "2023-10-24T19:41:09Z",
                        "git_url": "git://github.com/KDAB/GammaRay.git",
                        "ssh_url": "git@github.com:KDAB/GammaRay.git",
                        "clone_url": "https://github.com/KDAB/GammaRay.git",
                        "svn_url": "https://github.com/KDAB/GammaRay",
                        "homepage": "https://www.kdab.com/gammaray",
                        "size": 34788,
                        "stargazers_count": 1439,
                        "watchers_count": 1439,
                        "language": "C++",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 273,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 111,
                        "license": {
                            "key": "other",
                            "name": "Other",
                            "spdx_id": "NOASSERTION",
                            "url": null,
                            "node_id": "MDc6TGljZW5zZTA="
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "kdab",
                            "qt"
                        ],
                        "visibility": "public",
                        "forks": 273,
                        "open_issues": 111,
                        "watchers": 1439,
                        "default_branch": "3.0"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/pulls/844"
                    },
                    "html": {
                        "href": "https://github.com/KDAB/GammaRay/pull/844"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/issues/844"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/issues/844/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/pulls/844/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/pulls/844/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/KDAB/GammaRay/statuses/a57af4aa29c4682cf70169647d6927939abeb5d2"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": true,
                "rebaseable": false,
                "mergeable_state": "clean",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": false,
                "commits": 1,
                "additions": 4,
                "deletions": 4,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-24T19:41:18Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32814578852",
        "type": "PushEvent",
        "actor": {
            "id": 479187,
            "login": "winterz",
            "display_login": "winterz",
            "gravatar_id": "",
            "url": "https://api.github.com/users/winterz",
            "avatar_url": "https://avatars.githubusercontent.com/u/479187?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "repository_id": 2615451,
            "push_id": 15549687170,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/master",
            "head": "b0a19455a86489b0d3fbb48f166867c09bc501cc",
            "before": "c5a30b0e52bb415b36bd8156d0f2e4e6b91c4aa3",
            "commits": [
                {
                    "sha": "b0a19455a86489b0d3fbb48f166867c09bc501cc",
                    "author": {
                        "email": "allen.winter@kdab.com",
                        "name": "Allen Winter"
                    },
                    "message": "pre-commit autoupdate",
                    "distinct": true,
                    "url": "https://api.github.com/repos/KDAB/GammaRay/commits/b0a19455a86489b0d3fbb48f166867c09bc501cc"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-24T19:41:10Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32798696683",
        "type": "WatchEvent",
        "actor": {
            "id": 39572092,
            "login": "FloSchmidt",
            "display_login": "FloSchmidt",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FloSchmidt",
            "avatar_url": "https://avatars.githubusercontent.com/u/39572092?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-24T10:00:33Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32783758081",
        "type": "PushEvent",
        "actor": {
            "id": 66853113,
            "login": "pre-commit-ci[bot]",
            "display_login": "pre-commit-ci",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pre-commit-ci[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/66853113?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "repository_id": 2615451,
            "push_id": 15534378600,
            "size": 1,
            "distinct_size": 1,
            "ref": "refs/heads/pre-commit-ci-update-config",
            "head": "a57af4aa29c4682cf70169647d6927939abeb5d2",
            "before": "d47e7fbdd31bdb1f9a20c8f0465e8f56afca78b8",
            "commits": [
                {
                    "sha": "a57af4aa29c4682cf70169647d6927939abeb5d2",
                    "author": {
                        "email": "66853113+pre-commit-ci[bot]@users.noreply.github.com",
                        "name": "pre-commit-ci[bot]"
                    },
                    "message": "[pre-commit.ci] pre-commit autoupdate\n\nupdates:\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 \u2192 v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\n- [github.com/pre-commit/mirrors-clang-format: v16.0.6 \u2192 v17.0.3](https://github.com/pre-commit/mirrors-clang-format/compare/v16.0.6...v17.0.3)\n- [github.com/PyCQA/pylint: v3.0.0 \u2192 v3.0.1](https://github.com/PyCQA/pylint/compare/v3.0.0...v3.0.1)\n- https://github.com/pre-commit/mirrors-autopep8 \u2192 https://github.com/hhatto/autopep8",
                    "distinct": true,
                    "url": "https://api.github.com/repos/KDAB/GammaRay/commits/a57af4aa29c4682cf70169647d6927939abeb5d2"
                }
            ]
        },
        "public": true,
        "created_at": "2023-10-23T20:08:53Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32760831224",
        "type": "WatchEvent",
        "actor": {
            "id": 16596257,
            "login": "Pokerpoke",
            "display_login": "Pokerpoke",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pokerpoke",
            "avatar_url": "https://avatars.githubusercontent.com/u/16596257?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-23T06:08:23Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32758403069",
        "type": "WatchEvent",
        "actor": {
            "id": 128737619,
            "login": "faithbookHu",
            "display_login": "faithbookHu",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faithbookHu",
            "avatar_url": "https://avatars.githubusercontent.com/u/128737619?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-23T03:02:05Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32726192942",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29507,
            "login": "dantti",
            "display_login": "dantti",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dantti",
            "avatar_url": "https://avatars.githubusercontent.com/u/29507?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 12,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T15:02:11Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772910302",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772910302",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772910302,
                "node_id": "IC_kwDOACfom85prHbe",
                "user": {
                    "login": "dantti",
                    "id": 29507,
                    "node_id": "MDQ6VXNlcjI5NTA3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29507?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dantti",
                    "html_url": "https://github.com/dantti",
                    "followers_url": "https://api.github.com/users/dantti/followers",
                    "following_url": "https://api.github.com/users/dantti/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dantti/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dantti/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dantti/subscriptions",
                    "organizations_url": "https://api.github.com/users/dantti/orgs",
                    "repos_url": "https://api.github.com/users/dantti/repos",
                    "events_url": "https://api.github.com/users/dantti/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dantti/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T15:02:11Z",
                "updated_at": "2023-10-20T15:02:11Z",
                "author_association": "MEMBER",
                "body": "QtCreator used to create projects like:\r\nfind_package(QT NAMES Qt5 Qt6)\r\nfind_package(Qt{$QT_VERSION_MAJOR)\r\nhere you provide CMAKE_PREFIX_PATH to the Qt you want, but if you want to force a Qt version you can't.\r\n\r\nThis is why I added the check to only try to find whatever version it can if QT_VERSION_MAJOR is not defined, this allows you to still pick a Kit in QtCreator and it will use the Qt version from the KIT.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772910302/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T15:02:12Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32726126823",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29507,
            "login": "dantti",
            "display_login": "dantti",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dantti",
            "avatar_url": "https://avatars.githubusercontent.com/u/29507?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 11,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T14:59:58Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772906641",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772906641",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772906641,
                "node_id": "IC_kwDOACfom85prGiR",
                "user": {
                    "login": "dantti",
                    "id": 29507,
                    "node_id": "MDQ6VXNlcjI5NTA3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29507?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dantti",
                    "html_url": "https://github.com/dantti",
                    "followers_url": "https://api.github.com/users/dantti/followers",
                    "following_url": "https://api.github.com/users/dantti/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dantti/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dantti/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dantti/subscriptions",
                    "organizations_url": "https://api.github.com/users/dantti/orgs",
                    "repos_url": "https://api.github.com/users/dantti/repos",
                    "events_url": "https://api.github.com/users/dantti/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dantti/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T14:59:58Z",
                "updated_at": "2023-10-20T14:59:58Z",
                "author_association": "MEMBER",
                "body": "Please understand that you are doing it wrong, you don't call find_package(NAMES) if you have your QT_VERSION_MAJOR set, it will simply ignore that, and GammaRay doesn't do that, instead we only find_package( without names) to get the required modules.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772906641/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T14:59:59Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32726022589",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1181826,
            "login": "krop",
            "display_login": "krop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krop",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181826?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 10,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T14:56:25Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772898434",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772898434",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772898434,
                "node_id": "IC_kwDOACfom85prEiC",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T14:56:24Z",
                "updated_at": "2023-10-20T14:56:24Z",
                "author_association": "CONTRIBUTOR",
                "body": "There's more than the random behavior for default builds:\r\nConsidering both the Qt5 and 6 plugins must be built to load _any_ Qt app, gammaray should look for both. and the choice should only be about which Qt version to use for the UI.\r\n\r\nCurrently, it has to be built twice to have /usr/lib64/gammaray/3.0/qt5_xx-x86_64/* and /usr/lib64/gammaray/3.0/qt6_xx-x86_64/*\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772898434/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T14:56:25Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32725527020",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 538020,
            "login": "ferdnyc",
            "display_login": "ferdnyc",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ferdnyc",
            "avatar_url": "https://avatars.githubusercontent.com/u/538020?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T14:38:53Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772865023",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772865023",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772865023,
                "node_id": "IC_kwDOACfom85pq8X_",
                "user": {
                    "login": "ferdnyc",
                    "id": 538020,
                    "node_id": "MDQ6VXNlcjUzODAyMA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/538020?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ferdnyc",
                    "html_url": "https://github.com/ferdnyc",
                    "followers_url": "https://api.github.com/users/ferdnyc/followers",
                    "following_url": "https://api.github.com/users/ferdnyc/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ferdnyc/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ferdnyc/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ferdnyc/subscriptions",
                    "organizations_url": "https://api.github.com/users/ferdnyc/orgs",
                    "repos_url": "https://api.github.com/users/ferdnyc/repos",
                    "events_url": "https://api.github.com/users/ferdnyc/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ferdnyc/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T14:38:53Z",
                "updated_at": "2023-10-20T14:38:53Z",
                "author_association": "CONTRIBUTOR",
                "body": "\r\n@dantti\r\n> It does, setting QT_VERSION_MAJOR will skip the find_package(NAMES),\r\n\r\nOK, _technically_ in that sense, yes I concede it does have an effect.\r\n\r\n> find_package(QT .. NAMES) is what produces QT_VERSION_MAJOR\r\n\r\nThat's true, but check this out, on Fedora with both installed:\r\n\r\nMy `CMakeLists.txt`:\r\n```cmake\r\ncmake_minimum_required(VERSION 3.16)\r\n\r\nproject(test VERSION 0.1 LANGUAGES CXX)\r\n\r\nset(QT_VERSION_MAJOR 5)\r\nfind_package(QT${QT_VERSION_MAJOR} 5.5 NAMES Qt5 Qt6 COMPONENTS Core NO_MODULE REQUIRED)\r\n\r\nmessage(STATUS \"QT_VERSION_MAJOR: ${QT_VERSION_MAJOR}\")\r\nmessage(STATUS \"QT6_VERSION_MAJOR: ${QT6_VERSION_MAJOR}\")\r\nmessage(STATUS \"QT5_VERSION_MAJOR: ${QT5_VERSION_MAJOR}\")\r\n```\r\n\r\nUsing it...\r\n\r\n```console\r\n$ cmake -B _test -S .\r\n-- The CXX compiler identification is GNU 13.2.1\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Check for working CXX compiler: /usr/lib64/ccache/c++ - skipped\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\r\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\r\n-- Found Threads: TRUE  \r\n-- QT_VERSION_MAJOR: 5\r\n-- QT6_VERSION_MAJOR: \r\n-- QT5_VERSION_MAJOR: 6\r\n-- Configuring done (0.5s)\r\n-- Generating done (0.0s)\r\n-- Build files have been written to: /tmp/_test\r\n```\r\n\r\n`QT5_VERSION_MAJOR = 6`!??!\r\n\r\nIt seems `find(<foo> NAMES Qt5 Qt6 ...)` will blindly just set `<foo>_VERSION_MAJOR`, and it _really_ won't be told which of the `NAMES` to prefer. (The outcome is the same if I explicitly set `QT5_VERSION_MAJOR` to `5`, as well.)\r\n\r\nBut, hey, that's OK, I can't even get ECM's Qt tools to properly force a Qt version anymore. It _used_ to work, but I think Kitware have tightened up CMake's scoping recently. Because  now, I can load the ECM modules, _watch_ them default to Qt5 (with `--trace --trace-expand`), and _**still**_ both `QT_MAJOR_VERSION` and `QT_VERSION_MAJOR` remain unset in my calling scope, which will instead continue to default to Qt6 if at all permitted to.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772865023/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T14:38:54Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32724495625",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29507,
            "login": "dantti",
            "display_login": "dantti",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dantti",
            "avatar_url": "https://avatars.githubusercontent.com/u/29507?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 8,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T14:04:31Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772802397",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772802397",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772802397,
                "node_id": "IC_kwDOACfom85pqtFd",
                "user": {
                    "login": "dantti",
                    "id": 29507,
                    "node_id": "MDQ6VXNlcjI5NTA3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29507?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dantti",
                    "html_url": "https://github.com/dantti",
                    "followers_url": "https://api.github.com/users/dantti/followers",
                    "following_url": "https://api.github.com/users/dantti/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dantti/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dantti/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dantti/subscriptions",
                    "organizations_url": "https://api.github.com/users/dantti/orgs",
                    "repos_url": "https://api.github.com/users/dantti/repos",
                    "events_url": "https://api.github.com/users/dantti/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dantti/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T14:04:31Z",
                "updated_at": "2023-10-20T14:04:31Z",
                "author_association": "MEMBER",
                "body": "find_package(QT .. NAMES) is what produces QT_VERSION_MAJOR, so if one set it before running cmake it is defined and will do what find_package(QT NAMES) would do that is setting this variable.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772802397/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T14:04:32Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32724447520",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29507,
            "login": "dantti",
            "display_login": "dantti",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dantti",
            "avatar_url": "https://avatars.githubusercontent.com/u/29507?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 7,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T14:02:54Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772799468",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772799468",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772799468,
                "node_id": "IC_kwDOACfom85pqsXs",
                "user": {
                    "login": "dantti",
                    "id": 29507,
                    "node_id": "MDQ6VXNlcjI5NTA3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29507?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dantti",
                    "html_url": "https://github.com/dantti",
                    "followers_url": "https://api.github.com/users/dantti/followers",
                    "following_url": "https://api.github.com/users/dantti/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dantti/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dantti/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dantti/subscriptions",
                    "organizations_url": "https://api.github.com/users/dantti/orgs",
                    "repos_url": "https://api.github.com/users/dantti/repos",
                    "events_url": "https://api.github.com/users/dantti/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dantti/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T14:02:54Z",
                "updated_at": "2023-10-20T14:02:54Z",
                "author_association": "MEMBER",
                "body": " > has absolutely no effect on which Qt version will be found.\r\n\r\nIt does, setting QT_VERSION_MAJOR will skip the find_package(NAMES), and will instead try to find \r\nQtX `-DQT_VERSION_MAJOR=6`, if NOT defined then it will find the first Qt that it can, which you can force to the one of your liking using what QtCreator does that is setting CMAKE_PREFIX_PATH.\r\n\r\nECM handling is another story tho...",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772799468/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T14:02:55Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32724068014",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 538020,
            "login": "ferdnyc",
            "display_login": "ferdnyc",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ferdnyc",
            "avatar_url": "https://avatars.githubusercontent.com/u/538020?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 6,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T13:50:06Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772777316",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772777316",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772777316,
                "node_id": "IC_kwDOACfom85pqm9k",
                "user": {
                    "login": "ferdnyc",
                    "id": 538020,
                    "node_id": "MDQ6VXNlcjUzODAyMA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/538020?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ferdnyc",
                    "html_url": "https://github.com/ferdnyc",
                    "followers_url": "https://api.github.com/users/ferdnyc/followers",
                    "following_url": "https://api.github.com/users/ferdnyc/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ferdnyc/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ferdnyc/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ferdnyc/subscriptions",
                    "organizations_url": "https://api.github.com/users/ferdnyc/orgs",
                    "repos_url": "https://api.github.com/users/ferdnyc/repos",
                    "events_url": "https://api.github.com/users/ferdnyc/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ferdnyc/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T13:50:05Z",
                "updated_at": "2023-10-20T13:50:05Z",
                "author_association": "CONTRIBUTOR",
                "body": "> That's not what this report is about, the code is broken. find_package(QT NAMES ...) doesn't do what you think.\r\n\r\nWell, it _does_ correctly discover either Qt5 or Qt6, if one of them is installed on the system. It's just that when they're _both_ installed, the behavior is ambiguous.\r\n\r\n@krop is correct, though, that setting `QT_VERSION_MAJOR` to 5 or 6 before running `find_package(QT 5.5 NAMES Qt6 Qt5 COMPONENTS Core NO_MODULE)` has absolutely no effect on which Qt version will be found. `QT_VERSION_MAJOR` is an _output_ variable for the configuration.\r\n\r\nThe ECM scripts that were included into the dist _could_ allow Qt selection, by setting `QT_MAJOR_VERSION` (note the difference in variable name), if they were explicitly called **before** running `find_package(QT ...)`.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772777316/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T13:50:06Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32722337231",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1181826,
            "login": "krop",
            "display_login": "krop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krop",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181826?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T12:50:38Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772683865",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772683865",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772683865,
                "node_id": "IC_kwDOACfom85pqQJZ",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T12:50:38Z",
                "updated_at": "2023-10-20T12:50:38Z",
                "author_association": "CONTRIBUTOR",
                "body": "That's not what this report is about, the code is broken. find_package(QT NAMES ...) doesn't do what you think.\r\n\r\nFor some reason, on fedora, the sorting is done differently than on openSUSE, but the issue is the same.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772683865/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T12:50:38Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32721958989",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 29507,
            "login": "dantti",
            "display_login": "dantti",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dantti",
            "avatar_url": "https://avatars.githubusercontent.com/u/29507?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T12:36:45Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772664128",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772664128",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772664128,
                "node_id": "IC_kwDOACfom85pqLVA",
                "user": {
                    "login": "dantti",
                    "id": 29507,
                    "node_id": "MDQ6VXNlcjI5NTA3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/29507?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dantti",
                    "html_url": "https://github.com/dantti",
                    "followers_url": "https://api.github.com/users/dantti/followers",
                    "following_url": "https://api.github.com/users/dantti/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dantti/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dantti/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dantti/subscriptions",
                    "organizations_url": "https://api.github.com/users/dantti/orgs",
                    "repos_url": "https://api.github.com/users/dantti/repos",
                    "events_url": "https://api.github.com/users/dantti/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dantti/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T12:36:45Z",
                "updated_at": "2023-10-20T12:36:45Z",
                "author_association": "MEMBER",
                "body": "If you don't want it to look for Qt5 just set what you want `cmake -DQT_VERSION_MAJOR` else provide the Qt you want using the standard method of CMAKE_PREFIX_PATH, we just check for QT_VERSION_MAJOR being defined so we don't need yet another variable like GAMMARAY_QT6 to have it explicit on the configure.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772664128/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T12:36:45Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32720915003",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 538020,
            "login": "ferdnyc",
            "display_login": "ferdnyc",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ferdnyc",
            "avatar_url": "https://avatars.githubusercontent.com/u/538020?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T11:57:26Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772601189",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772601189",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772601189,
                "node_id": "IC_kwDOACfom85pp79l",
                "user": {
                    "login": "ferdnyc",
                    "id": 538020,
                    "node_id": "MDQ6VXNlcjUzODAyMA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/538020?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ferdnyc",
                    "html_url": "https://github.com/ferdnyc",
                    "followers_url": "https://api.github.com/users/ferdnyc/followers",
                    "following_url": "https://api.github.com/users/ferdnyc/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ferdnyc/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ferdnyc/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ferdnyc/subscriptions",
                    "organizations_url": "https://api.github.com/users/ferdnyc/orgs",
                    "repos_url": "https://api.github.com/users/ferdnyc/repos",
                    "events_url": "https://api.github.com/users/ferdnyc/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ferdnyc/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T11:57:26Z",
                "updated_at": "2023-10-20T11:57:26Z",
                "author_association": "CONTRIBUTOR",
                "body": "The other problem / unfortunate disparity is that ECM supports Qt version pre-selection by setting the variable `QT_MAJOR_VERSION` \u2014 _not_ the `QT_VERSION_MAJOR` that the GammaRay configs support/set.\r\n\r\n(`QT_VERSION_MAJOR` is _meant_ to be set by the Qt configs themselves when they're loaded. So I actually kind of understand why KDE chose a different input variable for selection using `QtVersionOption.cmake`.)",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772601189/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T11:57:26Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32720721414",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 538020,
            "login": "ferdnyc",
            "display_login": "ferdnyc",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ferdnyc",
            "avatar_url": "https://avatars.githubusercontent.com/u/538020?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T11:49:19Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772591411",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772591411",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772591411,
                "node_id": "IC_kwDOACfom85pp5kz",
                "user": {
                    "login": "ferdnyc",
                    "id": 538020,
                    "node_id": "MDQ6VXNlcjUzODAyMA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/538020?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ferdnyc",
                    "html_url": "https://github.com/ferdnyc",
                    "followers_url": "https://api.github.com/users/ferdnyc/followers",
                    "following_url": "https://api.github.com/users/ferdnyc/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ferdnyc/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ferdnyc/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ferdnyc/subscriptions",
                    "organizations_url": "https://api.github.com/users/ferdnyc/orgs",
                    "repos_url": "https://api.github.com/users/ferdnyc/repos",
                    "events_url": "https://api.github.com/users/ferdnyc/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ferdnyc/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T11:49:19Z",
                "updated_at": "2023-10-20T11:49:19Z",
                "author_association": "CONTRIBUTOR",
                "body": "(I'm speaking of discovery in isolation, here. In the GammaRay `CMakeLists.txt`, there's also the ``cmake/ECM/modules` files from Extra CMake Modules in play \u2014 primarily `QtVersionOption.cmake` and `ECMQueryQt.cmake` \u2014 **those** will default to Qt5, if its discovery is triggered without first setting an explicit version.\r\n\r\nI had to jump through some hoops, in the Fedora packaging definition, to avoid accidentally triggering ECM auto-versioning of Qt too early. Since, IMHO, the GammaRay `CMakeLists.txt` leaves the Qt version decision until _way_ too late in the process, leaving ample time for ECM's version selection to be triggered.\r\n\r\nSpecifically, ECM will choose a Qt version (always defaulting to Qt5) as soon as the `include(ECMGeneratePriFile)` command is executed, which comes _way_ before the `find_package(QT ...)` command that's meant to perform auto-discovery.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772591411/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T11:49:19Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32720551224",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 538020,
            "login": "ferdnyc",
            "display_login": "ferdnyc",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ferdnyc",
            "avatar_url": "https://avatars.githubusercontent.com/u/538020?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T11:42:06Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in #830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n(the status message will print `Control: 5 /  / 5.15.11 / `)\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nQt6/Qt6Config* is never tested.\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n```\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n```\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, feature_summary() won't complain.\r\nAdding something with a totally bogus name would behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772583197",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845#issuecomment-1772583197",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "id": 1772583197,
                "node_id": "IC_kwDOACfom85pp3kd",
                "user": {
                    "login": "ferdnyc",
                    "id": 538020,
                    "node_id": "MDQ6VXNlcjUzODAyMA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/538020?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ferdnyc",
                    "html_url": "https://github.com/ferdnyc",
                    "followers_url": "https://api.github.com/users/ferdnyc/followers",
                    "following_url": "https://api.github.com/users/ferdnyc/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ferdnyc/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ferdnyc/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ferdnyc/subscriptions",
                    "organizations_url": "https://api.github.com/users/ferdnyc/orgs",
                    "repos_url": "https://api.github.com/users/ferdnyc/repos",
                    "events_url": "https://api.github.com/users/ferdnyc/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ferdnyc/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T11:42:06Z",
                "updated_at": "2023-10-20T11:42:06Z",
                "author_association": "CONTRIBUTOR",
                "body": "@krop \r\n\r\nI don't think this is correct. On my Fedora 38 system, the logic supplied always finds Qt6, regardless of the order the NAMES are listed  in (`Qt5 Qt6` or `Qt6 Qt5`).\r\n\r\nThere's a variable the Qt CMake configurations for both `Qt5Core` and `Qt6Core`  will look for, `QT_DEFAULT_MAJOR_VERSION`. They'll both set it (to their own major version) if it's _not_ set, so I'm still not 100% clear on what determines which config will be picked up if it's _unset_. It may be CMake's (complex) discovery rules that ultimately decide, but at least on my system they don't seem to prevent Qt6 being chosen over Qt5.",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772583197/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T11:42:07Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32716881349",
        "type": "IssuesEvent",
        "actor": {
            "id": 1181826,
            "login": "krop",
            "display_login": "krop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krop",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181826?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/845",
                "id": 1953879156,
                "node_id": "I_kwDOACfom850ddR0",
                "number": 845,
                "title": "Wrong Qt logic when looking for Qt",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-20T09:18:43Z",
                "updated_at": "2023-10-20T09:18:43Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "This was mentioned in issues/830 but deserves its own report\r\n\r\nhttps://github.com/KDAB/GammaRay/blob/3.0/CMakeLists.txt#L424-L439 has multiple issues.\r\n\r\n1 - It can't find Qt 6\r\n2 - the set package properties line does nothing\r\n\r\nTo verify both, we'll use a trimmed test:```\r\n\r\ncmake_minimum_required(VERSION 3.16)\r\nproject(test CXX)\r\n\r\ninclude(FeatureSummary)\r\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED)\r\nmessage(STATUS \"Control: ${QT_VERSION_MAJOR} / ${Qt_VERSION_MAJOR} / ${QT_VERSION} / ${Qt_VERSION} / ${Qt${QT_VERSION_MAJOR}Core_FOUND}\")\r\n\r\nset_package_properties(Qt${QT_VERSION_MAJOR}Core PROPERTIES TYPE REQUIRED PURPOSE \"Testing what feature_summary would print\")\r\nfeature_summary(WHAT ALL INCLUDE_QUIET_PACKAGES FATAL_ON_MISSING_REQUIRED_PACKAGES)\r\n```\r\n\r\n1- This can't find Qt6. Unlike find_library, find_file and so on, the CMake config modules specified with NAME are sorted. It will always look for Qt5ConfigVersion.cmake first.\r\n\r\nThis can be verified with cmake --trace:\r\n```\r\n/data/kde/src/TESTS/find_package_with_NAME/CMakeLists.txt(5):  find_package(QT NAMES Qt6 Qt5 COMPONENTS Core CONFIG REQUIRED )\r\n/usr/lib64/cmake/Qt5/Qt5ConfigVersion.cmake(2):  set(PACKAGE_VERSION 5.15.11 )\r\n```\r\n\r\nThere's no way around that. `NO_MODULE` is also unneeded, this signature can't work with anything but cmake config files.\r\n\r\n2- the feature_summary line will only print:\r\n-- The following REQUIRED packages have been found:\r\n\r\n * QT\r\n\r\nInvalid entries are ignored. Since Qt${QT_VERSION_MAJOR}Core is never evaluated, CMake won't complain.\r\nAdding something with a totally bogus name will behave the same way.\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/845/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T09:18:44Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32715685042",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1181826,
            "login": "krop",
            "display_login": "krop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krop",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181826?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/830",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/830",
                "id": 1881679819,
                "node_id": "I_kwDOACfom85wKCfL",
                "number": 830,
                "title": "Help tools are misdetected on recent Qt version",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-09-05T10:27:45Z",
                "updated_at": "2023-10-20T08:33:50Z",
                "closed_at": "2023-09-05T16:20:03Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "qtattributionscanner and qhelpgenerator are libexec tools with recent Qt6 version.\r\n\r\nThis could fix it, I'll make a PR after testing it\r\n\r\n```\r\ndiff --git a/docs/CMakeLists.txt b/docs/CMakeLists.txt\r\nindex 20c663211..e448e76dc 100644\r\n--- a/docs/CMakeLists.txt\r\n+++ b/docs/CMakeLists.txt\r\n@@ -25,13 +25,13 @@ if(TARGET Qt::qhelpgenerator)\r\n     # Required for Doxygen\r\n     get_target_property(QHELPGEN_EXECUTABLE Qt::qhelpgenerator IMPORTED_LOCATION)\r\n else()\r\n-    find_program(QHELPGEN_EXECUTABLE qhelpgenerator HINTS ${QT_INSTALL_BINS})\r\n+    find_program(QHELPGEN_EXECUTABLE qhelpgenerator HINTS ${QT_INSTALL_BINS} ${QT_INSTALL_LIBEXECS})\r\n endif()\r\n \r\n if(TARGET Qt::qtattributionsscanner)\r\n     set(QTATTRIBUTIONSSCANNER_EXECUTABLE Qt::qtattributionsscanner)\r\n else()\r\n-    find_program(QTATTRIBUTIONSSCANNER_EXECUTABLE qtattributionsscanner HINTS ${QT_INSTALL_BINS})\r\n+    find_program(QTATTRIBUTIONSSCANNER_EXECUTABLE qtattributionsscanner HINTS ${QT_INSTALL_BINS} ${QT_INSTALL_LIBEXECS})\r\n endif()\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772312136",
                "html_url": "https://github.com/KDAB/GammaRay/issues/830#issuecomment-1772312136",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830",
                "id": 1772312136,
                "node_id": "IC_kwDOACfom85po1ZI",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T08:33:49Z",
                "updated_at": "2023-10-20T08:33:49Z",
                "author_association": "CONTRIBUTOR",
                "body": "> Since these commits are not part of the 3.0.0 release, can you create a new issue with your findings please? (I'll complete with mines, I see 3 different issues in this code)\r\n\r\nCorrection, they are. I'll submit the report.\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772312136/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T08:33:50Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32713633565",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1181826,
            "login": "krop",
            "display_login": "krop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krop",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181826?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/830",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/830",
                "id": 1881679819,
                "node_id": "I_kwDOACfom85wKCfL",
                "number": 830,
                "title": "Help tools are misdetected on recent Qt version",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-09-05T10:27:45Z",
                "updated_at": "2023-10-20T07:10:39Z",
                "closed_at": "2023-09-05T16:20:03Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "qtattributionscanner and qhelpgenerator are libexec tools with recent Qt6 version.\r\n\r\nThis could fix it, I'll make a PR after testing it\r\n\r\n```\r\ndiff --git a/docs/CMakeLists.txt b/docs/CMakeLists.txt\r\nindex 20c663211..e448e76dc 100644\r\n--- a/docs/CMakeLists.txt\r\n+++ b/docs/CMakeLists.txt\r\n@@ -25,13 +25,13 @@ if(TARGET Qt::qhelpgenerator)\r\n     # Required for Doxygen\r\n     get_target_property(QHELPGEN_EXECUTABLE Qt::qhelpgenerator IMPORTED_LOCATION)\r\n else()\r\n-    find_program(QHELPGEN_EXECUTABLE qhelpgenerator HINTS ${QT_INSTALL_BINS})\r\n+    find_program(QHELPGEN_EXECUTABLE qhelpgenerator HINTS ${QT_INSTALL_BINS} ${QT_INSTALL_LIBEXECS})\r\n endif()\r\n \r\n if(TARGET Qt::qtattributionsscanner)\r\n     set(QTATTRIBUTIONSSCANNER_EXECUTABLE Qt::qtattributionsscanner)\r\n else()\r\n-    find_program(QTATTRIBUTIONSSCANNER_EXECUTABLE qtattributionsscanner HINTS ${QT_INSTALL_BINS})\r\n+    find_program(QTATTRIBUTIONSSCANNER_EXECUTABLE qtattributionsscanner HINTS ${QT_INSTALL_BINS} ${QT_INSTALL_LIBEXECS})\r\n endif()\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772203070",
                "html_url": "https://github.com/KDAB/GammaRay/issues/830#issuecomment-1772203070",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830",
                "id": 1772203070,
                "node_id": "IC_kwDOACfom85poaw-",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T07:10:39Z",
                "updated_at": "2023-10-20T07:10:39Z",
                "author_association": "CONTRIBUTOR",
                "body": "> @krop\r\n> \r\n> > Check the pull request, there was another issue that has also been fixed.\r\n> \r\n> Yeah, I saw that part... I guess it's because the **very first** Qt probe GammaRay does is for \"`QT`\" in all caps:\r\n> \r\n\r\nDeleted my previous comment. See https://cmake.org/cmake/help/latest/command/find_package.html#full-signature\r\n\r\n` If the NAMES option is given, the names following it are used instead of <PackageName>.`\r\n\r\nCMake will search for Qt5Config.cmake, then Qt6Config.cmake.\r\n\r\nSince these commits are not part of the 3.0.0 release, can you create a new issue with your findings please?\r\n\r\n\r\n\r\n\r\n\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772203070/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T07:10:40Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    },
    {
        "id": "32713360588",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 1181826,
            "login": "krop",
            "display_login": "krop",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krop",
            "avatar_url": "https://avatars.githubusercontent.com/u/1181826?"
        },
        "repo": {
            "id": 2615451,
            "name": "KDAB/GammaRay",
            "url": "https://api.github.com/repos/KDAB/GammaRay"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/830",
                "repository_url": "https://api.github.com/repos/KDAB/GammaRay",
                "labels_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/labels{/name}",
                "comments_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/comments",
                "events_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/events",
                "html_url": "https://github.com/KDAB/GammaRay/issues/830",
                "id": 1881679819,
                "node_id": "I_kwDOACfom85wKCfL",
                "number": 830,
                "title": "Help tools are misdetected on recent Qt version",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-09-05T10:27:45Z",
                "updated_at": "2023-10-20T06:58:30Z",
                "closed_at": "2023-09-05T16:20:03Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "qtattributionscanner and qhelpgenerator are libexec tools with recent Qt6 version.\r\n\r\nThis could fix it, I'll make a PR after testing it\r\n\r\n```\r\ndiff --git a/docs/CMakeLists.txt b/docs/CMakeLists.txt\r\nindex 20c663211..e448e76dc 100644\r\n--- a/docs/CMakeLists.txt\r\n+++ b/docs/CMakeLists.txt\r\n@@ -25,13 +25,13 @@ if(TARGET Qt::qhelpgenerator)\r\n     # Required for Doxygen\r\n     get_target_property(QHELPGEN_EXECUTABLE Qt::qhelpgenerator IMPORTED_LOCATION)\r\n else()\r\n-    find_program(QHELPGEN_EXECUTABLE qhelpgenerator HINTS ${QT_INSTALL_BINS})\r\n+    find_program(QHELPGEN_EXECUTABLE qhelpgenerator HINTS ${QT_INSTALL_BINS} ${QT_INSTALL_LIBEXECS})\r\n endif()\r\n \r\n if(TARGET Qt::qtattributionsscanner)\r\n     set(QTATTRIBUTIONSSCANNER_EXECUTABLE Qt::qtattributionsscanner)\r\n else()\r\n-    find_program(QTATTRIBUTIONSSCANNER_EXECUTABLE qtattributionsscanner HINTS ${QT_INSTALL_BINS})\r\n+    find_program(QTATTRIBUTIONSSCANNER_EXECUTABLE qtattributionsscanner HINTS ${QT_INSTALL_BINS} ${QT_INSTALL_LIBEXECS})\r\n endif()\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/reactions",
                    "total_count": 1,
                    "+1": 1,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772189909",
                "html_url": "https://github.com/KDAB/GammaRay/issues/830#issuecomment-1772189909",
                "issue_url": "https://api.github.com/repos/KDAB/GammaRay/issues/830",
                "id": 1772189909,
                "node_id": "IC_kwDOACfom85poXjV",
                "user": {
                    "login": "krop",
                    "id": 1181826,
                    "node_id": "MDQ6VXNlcjExODE4MjY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1181826?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/krop",
                    "html_url": "https://github.com/krop",
                    "followers_url": "https://api.github.com/users/krop/followers",
                    "following_url": "https://api.github.com/users/krop/following{/other_user}",
                    "gists_url": "https://api.github.com/users/krop/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/krop/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/krop/subscriptions",
                    "organizations_url": "https://api.github.com/users/krop/orgs",
                    "repos_url": "https://api.github.com/users/krop/repos",
                    "events_url": "https://api.github.com/users/krop/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/krop/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-20T06:58:30Z",
                "updated_at": "2023-10-20T06:58:30Z",
                "author_association": "CONTRIBUTOR",
                "body": "> @krop\r\n> \r\n> > Check the pull request, there was another issue that has also been fixed.\r\n> \r\n> Yeah, I saw that part... I guess it's because the **very first** Qt probe GammaRay does is for \"`QT`\" in all caps:\r\n> \r\n> https://github.com/KDAB/GammaRay/blob/93428a9da835c04162fa817678e44795d0f80033/CMakeLists.txt#L428-L436\r\n> \r\n\r\nThat's wrong, indeed. But this change was pushed after the 3.0.0 release.\r\n\r\n@winterz https://github.com/KDAB/GammaRay/commit/56cbf79e6 replaced 'Qt' with 'QT'",
                "reactions": {
                    "url": "https://api.github.com/repos/KDAB/GammaRay/issues/comments/1772189909/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-20T06:58:31Z",
        "org": {
            "id": 402842,
            "login": "KDAB",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/KDAB",
            "avatar_url": "https://avatars.githubusercontent.com/u/402842?"
        }
    }
]