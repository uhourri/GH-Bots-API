[
    {
        "id": "32897620170",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 131922026,
            "login": "dosubot[bot]",
            "display_login": "dosubot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosubot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/131922026?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8511",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8511",
                "id": 1964409000,
                "node_id": "I_kwDOIWuq5851FoCo",
                "number": 8511,
                "title": "[Bug]: Not able to use BM25Retriever with ElasticSearch Vector DB",
                "user": {
                    "login": "amitguptadumka",
                    "id": 39477047,
                    "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/amitguptadumka",
                    "html_url": "https://github.com/amitguptadumka",
                    "followers_url": "https://api.github.com/users/amitguptadumka/followers",
                    "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
                    "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
                    "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
                    "repos_url": "https://api.github.com/users/amitguptadumka/repos",
                    "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 5,
                "created_at": "2023-10-26T21:40:38Z",
                "updated_at": "2023-10-27T11:49:56Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\n\nHi,\r\nBM25 retriever works fine if i store the embeddings in local or Faiss vector db. But when i am storing it in ES vector db it starts giving below error:\r\n\r\nfrom llama_index.retrievers import BM25Retriever\r\nbm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/39477047/5069400e-7683-484a-a09f-5af38330dcb9)\r\n\r\nHow to fix this please?\n\n### Version\n\n8.48\n\n### Steps to Reproduce\n\nfrom llama_index.retrievers import BM25Retriever\r\nbm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\nwith ElasticSearch vector DB\n\n### Relevant Logs/Tracbacks\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782780921",
                "html_url": "https://github.com/run-llama/llama_index/issues/8511#issuecomment-1782780921",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511",
                "id": 1782780921,
                "node_id": "IC_kwDOIWuq585qQxP5",
                "user": {
                    "login": "dosubot[bot]",
                    "id": 131922026,
                    "node_id": "BOT_kgDOB9z4ag",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7771049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dosubot%5Bbot%5D",
                    "html_url": "https://github.com/apps/dosubot",
                    "followers_url": "https://api.github.com/users/dosubot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/dosubot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dosubot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dosubot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dosubot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/dosubot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/dosubot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/dosubot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dosubot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:49:56Z",
                "updated_at": "2023-10-27T11:49:56Z",
                "author_association": "NONE",
                "body": "_\ud83e\udd16_\n<!-- Answer -->\nI'm sorry to hear that you're encountering a `ZeroDivisionError` when using the `BM25Retriever` with ElasticSearch Vector DB in LlamaIndex version 8.48. This error typically occurs when the corpus is empty or none of the documents in the corpus contain the query terms. It might be worth checking if your `docstore` is correctly set up and contains documents.\n\nAs for creating a hybrid retriever for lexical and semantic retrieval, you can follow the steps provided in the context. Here's a brief summary:\n\n1. Define a custom retriever class that combines the results from a vector retriever and a BM25 retriever.\n2. Instantiate the custom retriever with the vector and BM25 retrievers.\n3. Use the hybrid retriever to retrieve nodes.\n4. Optionally, you can re-rank the retrieved nodes using a postprocessor.\n5. Finally, you can use the hybrid retriever in a query engine.\n\nPlease note that you need to have the `vector_retriever` and `bm25_retriever` instances ready before you can create the `HybridRetriever` instance. In the context shared, the `VectorIndexAutoRetriever` is used for auto-retrieval from a vector database, which can be used as the `vector_retriever` in the `HybridRetriever`.\n\nRegarding the changes made to the `BM25Retriever` class between LlamaIndex version 8.48 and the latest version v0.8.53.post3, I'm afraid I don't have that information at the moment. I recommend checking the release notes or the commit history of the LlamaIndex repository for this information.\n\nI hope this helps! If you have any more questions or need further clarification, feel free to ask.\n\n## Sources\n- [docs/examples/retrievers/bm25_retriever.ipynb](https://github.com/run-llama/llama_index/blob/main/docs/examples/retrievers/bm25_retriever.ipynb)\n- [docs/examples/vector_stores/elasticsearch_auto_retriever.ipynb](https://github.com/run-llama/llama_index/blob/main/docs/examples/vector_stores/elasticsearch_auto_retriever.ipynb)\n- [docs/examples/retrievers/auto_merging_retriever.ipynb](https://github.com/run-llama/llama_index/blob/main/docs/examples/retrievers/auto_merging_retriever.ipynb)\n\n---\nThis response is meant to be useful and save you time. It is **not meant to be a precise solution**, but rather a starting point for your own research.\n\nHelp me be more useful! Please leave a \ud83d\udc4d if this is helpful and \ud83d\udc4e if it is irrelevant.\n\nIf you want to continue the conversation, start your reply with @dosu-bot.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782780921/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:49:56Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32897270025",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 39477047,
            "login": "amitguptadumka",
            "display_login": "amitguptadumka",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitguptadumka",
            "avatar_url": "https://avatars.githubusercontent.com/u/39477047?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8511",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8511",
                "id": 1964409000,
                "node_id": "I_kwDOIWuq5851FoCo",
                "number": 8511,
                "title": "[Bug]: Not able to use BM25Retriever with ElasticSearch Vector DB",
                "user": {
                    "login": "amitguptadumka",
                    "id": 39477047,
                    "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/amitguptadumka",
                    "html_url": "https://github.com/amitguptadumka",
                    "followers_url": "https://api.github.com/users/amitguptadumka/followers",
                    "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
                    "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
                    "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
                    "repos_url": "https://api.github.com/users/amitguptadumka/repos",
                    "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-26T21:40:38Z",
                "updated_at": "2023-10-27T11:35:06Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\n\nHi,\r\nBM25 retriever works fine if i store the embeddings in local or Faiss vector db. But when i am storing it in ES vector db it starts giving below error:\r\n\r\nfrom llama_index.retrievers import BM25Retriever\r\nbm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/39477047/5069400e-7683-484a-a09f-5af38330dcb9)\r\n\r\nHow to fix this please?\n\n### Version\n\n8.48\n\n### Steps to Reproduce\n\nfrom llama_index.retrievers import BM25Retriever\r\nbm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\nwith ElasticSearch vector DB\n\n### Relevant Logs/Tracbacks\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782761721",
                "html_url": "https://github.com/run-llama/llama_index/issues/8511#issuecomment-1782761721",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8511",
                "id": 1782761721,
                "node_id": "IC_kwDOIWuq585qQsj5",
                "user": {
                    "login": "amitguptadumka",
                    "id": 39477047,
                    "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/amitguptadumka",
                    "html_url": "https://github.com/amitguptadumka",
                    "followers_url": "https://api.github.com/users/amitguptadumka/followers",
                    "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
                    "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
                    "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
                    "repos_url": "https://api.github.com/users/amitguptadumka/repos",
                    "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:35:05Z",
                "updated_at": "2023-10-27T11:35:05Z",
                "author_association": "NONE",
                "body": "@dosu-bot\r\nThe exact error message is as below:\r\nZeroDivisionError                         Traceback (most recent call last)\r\nCell In[6], line 4\r\n      1 from llama_index.retrievers import BM25Retriever\r\n      2 #nodes = service_context.node_parser.get_nodes_from_documents(documents)\r\n      3 #nodes = service_context.node_parser.get_nodes_from_documents(documents)\r\n----> 4 bm25_retriever = BM25Retriever.from_defaults(docstore=index_ins_es.docstore, similarity_top_k=3)\r\n\r\nFile ~/anaconda3/envs/llama_index_venv/lib/python3.10/site-packages/llama_index/retrievers/bm25_retriever.py:58, in BM25Retriever.from_defaults(cls, index, nodes, docstore, tokenizer, similarity_top_k)\r\n     53 assert (\r\n     54     nodes is not None\r\n     55 ), \"Please pass exactly one of index, nodes, or docstore.\"\r\n     57 tokenizer = tokenizer or globals_helper.tokenizer\r\n---> 58 return cls(\r\n     59     nodes=nodes,\r\n     60     tokenizer=tokenizer,\r\n     61     similarity_top_k=similarity_top_k,\r\n     62 )\r\n\r\nFile ~/anaconda3/envs/llama_index_venv/lib/python3.10/site-packages/llama_index/retrievers/bm25_retriever.py:32, in BM25Retriever.__init__(self, nodes, tokenizer, similarity_top_k)\r\n     29 self._similarity_top_k = similarity_top_k\r\n     30 self._corpus = [self._tokenizer(node.get_content()) for node in self._nodes]\r\n---> 32 self.bm25 = BM25Okapi(self._corpus)\r\n\r\nFile ~/anaconda3/envs/llama_index_venv/lib/python3.10/site-packages/rank_bm25.py:83, in BM25Okapi.__init__(self, corpus, tokenizer, k1, b, epsilon)\r\n     81 self.b = b\r\n     82 self.epsilon = epsilon\r\n---> 83 super().__init__(corpus, tokenizer)\r\n\r\nFile ~/anaconda3/envs/llama_index_venv/lib/python3.10/site-packages/rank_bm25.py:27, in BM25.__init__(self, corpus, tokenizer)\r\n     24 if tokenizer:\r\n     25     corpus = self._tokenize_corpus(corpus)\r\n---> 27 nd = self._initialize(corpus)\r\n     28 self._calc_idf(nd)\r\n\r\nFile ~/anaconda3/envs/llama_index_venv/lib/python3.10/site-packages/rank_bm25.py:52, in BM25._initialize(self, corpus)\r\n     48             nd[word] = 1\r\n     50     self.corpus_size += 1\r\n---> 52 self.avgdl = num_doc / self.corpus_size\r\n     53 return nd\r\n\r\nZeroDivisionError: division by zero",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782761721/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:35:06Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32897138159",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 69962,
            "login": "daaain",
            "display_login": "daaain",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daaain",
            "avatar_url": "https://avatars.githubusercontent.com/u/69962?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8161",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8161",
                "id": 1946961024,
                "node_id": "I_kwDOIWuq5850DESA",
                "number": 8161,
                "title": "[Feature Request]: ChatML support with LlamaCPP",
                "user": {
                    "login": "daaain",
                    "id": 69962,
                    "node_id": "MDQ6VXNlcjY5OTYy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/69962?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/daaain",
                    "html_url": "https://github.com/daaain",
                    "followers_url": "https://api.github.com/users/daaain/followers",
                    "following_url": "https://api.github.com/users/daaain/following{/other_user}",
                    "gists_url": "https://api.github.com/users/daaain/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/daaain/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/daaain/subscriptions",
                    "organizations_url": "https://api.github.com/users/daaain/orgs",
                    "repos_url": "https://api.github.com/users/daaain/repos",
                    "events_url": "https://api.github.com/users/daaain/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/daaain/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318869,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 9,
                "created_at": "2023-10-17T09:23:41Z",
                "updated_at": "2023-10-27T11:29:31Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Feature Description\r\n\r\nI've been using the [GGUF version](https://huggingface.co/TheBloke/dolphin-2.1-mistral-7B-GGUF) of [Eric Hartford's Dolphin 2.1 Mistral 7B](https://huggingface.co/ehartford/dolphin-2.1-mistral-7b) which is an incredibly good model for RAG even at 4bit.\r\n\r\nIt's using ChatML prompt format though, so with the Llama ones I sometimes got `[/INST]` or `<</SYS>>` at the end of output (but to the model's credit it still works otherwise).\r\n\r\nSo I spent some time figuring out what I need to change and it seems mostly just the constants that feed into the default prompt functions.\r\n\r\nWith `ServiceContext.from_defaults`, `VectorStoreIndex.from_documents` and `index.as_query_engine` it seems `completion_to_prompt` is used only, not `messages_to_prompt`, so haven't tested the latter.\r\n\r\nIt would be great to have some proper support for these, so if you think this is useful and should be part of the library I can try to make it into a pull request.\r\n\r\n```python \r\n# Replacing these\r\n# from llama_index.llms.llama_utils import messages_to_prompt, completion_to_prompt\r\n\r\n# LLama instructions\r\n# <s>[INST] <<SYS>>\r\n# {your_system_message}\r\n# <</SYS>>\r\n\r\n# {user_message_1} [/INST]\r\n\r\n# ChatML instructions\r\n# <|im_start|>system\r\n# You are Dolphin, a helpful AI assistant.<|im_end|>\r\n# <|im_start|>user\r\n# {prompt}<|im_end|>\r\n# <|im_start|>assistant\r\n\r\n# BOS, EOS = \"<s>\", \"</s>\"\r\n# I wasn't sure if the <s> tokens are needed, but the model did report them in verbose mode\r\nBOS, EOS = \"<s>\", \"<|im_end|></s>\"\r\n# B_INST, E_INST = \"[INST]\", \"[/INST]\"\r\n# In theory we need this assistant bit, but it was confusing the model and it printed `<|im_end|>` at the end of the output so not using\r\n# B_INST, E_INST = \"\", \"<|im_end|>\\n<|im_start|>assistant: \"\r\nB_INST, E_INST = \"\", \"<|im_end|>\"\r\n# B_SYS, E_SYS = \"<<SYS>>\\n\", \"\\n<</SYS>>\\n\\n\"\r\nB_SYS, E_SYS = \"<|im_start|>system\\n\", \"<|im_end|>\\n<|im_start|>user\\n\"\r\nDEFAULT_SYSTEM_PROMPT = \"\"\"\\\r\nYou are a helpful, respectful and honest assistant. \\\r\nAlways answer as helpfully as possible and follow ALL given instructions. \\\r\nDo not speculate or make up information. \\\r\nDo not reference any given instructions or context. \\\r\n\"\"\"\r\n\r\n# This is unchanged from messages_to_prompt, just renamed\r\ndef chatml_messages_to_prompt(\r\n    messages: Sequence[ChatMessage], system_prompt: Optional[str] = None\r\n) -> str:\r\n    string_messages: List[str] = []\r\n    if messages[0].role == MessageRole.SYSTEM:\r\n        # pull out the system message (if it exists in messages)\r\n        system_message_str = messages[0].content or \"\"\r\n        messages = messages[1:]\r\n    else:\r\n        system_message_str = system_prompt or DEFAULT_SYSTEM_PROMPT\r\n\r\n    system_message_str = f\"{B_SYS} {system_message_str.strip()} {E_SYS}\"\r\n\r\n    for i in range(0, len(messages), 2):\r\n        # first message should always be a user\r\n        user_message = messages[i]\r\n        assert user_message.role == MessageRole.USER\r\n\r\n        if i == 0:\r\n            # make sure system prompt is included at the start\r\n            str_message = f\"{BOS} {B_INST} {system_message_str} \"\r\n        else:\r\n            # end previous user-assistant interaction\r\n            string_messages[-1] += f\" {EOS}\"\r\n            # no need to include system prompt\r\n            str_message = f\"{BOS} {B_INST} \"\r\n\r\n        # include user message content\r\n        str_message += f\"{user_message.content} {E_INST}\"\r\n\r\n        if len(messages) > (i + 1):\r\n            # if assistant message exists, add to str_message\r\n            assistant_message = messages[i + 1]\r\n            assert assistant_message.role == MessageRole.ASSISTANT\r\n            str_message += f\" {assistant_message.content}\"\r\n\r\n        string_messages.append(str_message)\r\n\r\n    final_message = \"\".join(string_messages)\r\n    # log(final_message)\r\n    return final_message\r\n\r\n# This has whitespace removed from completion_to_prompt, but maybe it doesn't matter\r\ndef chatml_completion_to_prompt(completion: str, system_prompt: Optional[str] = None) -> str:\r\n    system_prompt_str = system_prompt or DEFAULT_SYSTEM_PROMPT\r\n\r\n    final_prompt = (\r\n        f\"{B_INST}{B_SYS}{system_prompt_str.strip()}{E_SYS}\" f\"{completion.strip()}{E_INST}\"\r\n    )\r\n    # log(final_prompt)\r\n    return final_prompt\r\n```\r\n\r\n### Reason\r\n\r\nThere isn't a clean way of changing these prompt tokens, without copy pasting the whole section from the source code.\r\n\r\n### Value of Feature\r\n\r\nThere are more and more open models using ChatML format, so would be good to support it, as especially smaller models get confused if they get the Llama templates.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782754166",
                "html_url": "https://github.com/run-llama/llama_index/issues/8161#issuecomment-1782754166",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8161",
                "id": 1782754166,
                "node_id": "IC_kwDOIWuq585qQqt2",
                "user": {
                    "login": "daaain",
                    "id": 69962,
                    "node_id": "MDQ6VXNlcjY5OTYy",
                    "avatar_url": "https://avatars.githubusercontent.com/u/69962?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/daaain",
                    "html_url": "https://github.com/daaain",
                    "followers_url": "https://api.github.com/users/daaain/followers",
                    "following_url": "https://api.github.com/users/daaain/following{/other_user}",
                    "gists_url": "https://api.github.com/users/daaain/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/daaain/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/daaain/subscriptions",
                    "organizations_url": "https://api.github.com/users/daaain/orgs",
                    "repos_url": "https://api.github.com/users/daaain/repos",
                    "events_url": "https://api.github.com/users/daaain/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/daaain/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T11:29:31Z",
                "updated_at": "2023-10-27T11:29:31Z",
                "author_association": "NONE",
                "body": "> If I'm following this thread correctly, then it seems to me that the output of this issue is a potential example notebook on how to customise `completion_to_prompt`?\r\n\r\nYes, either a notebook or just an inline example in the documentation that shows:\r\n1. **Where to find the original functions and constants to copy as a starting point** \u2013 ie llama_index/llms/llama_utils.py\r\n2. **How to customise them for a certain purpose** \u2013 I'm partial to show how to change the prompt template to ChatML, but could be some other use case\r\n3. **How to use them** \u2013 ie passing as kwargs to a new LLM instance\r\n4. **Why you need them** \u2013 what are the reasons you might want / need to customise, see below.\r\n\r\nI'm admittedly pretty new to the library and the field, but was experimenting with smaller (7B / 3B) models and with those, using the right prompt template can be the difference between getting a decent answer or some garbled nonsense and you wouldn't know what you've done wrong or if the model is completely useless for your use case.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782754166/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:29:32Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32896876044",
        "type": "PullRequestEvent",
        "actor": {
            "id": 51911434,
            "login": "david20571015",
            "display_login": "david20571015",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "opened",
            "number": 8526,
            "pull_request": {
                "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8526",
                "id": 1576410787,
                "node_id": "PR_kwDOIWuq585d9h6j",
                "html_url": "https://github.com/run-llama/llama_index/pull/8526",
                "diff_url": "https://github.com/run-llama/llama_index/pull/8526.diff",
                "patch_url": "https://github.com/run-llama/llama_index/pull/8526.patch",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8526",
                "number": 8526,
                "state": "open",
                "locked": false,
                "title": "fix: testing instruction in `CONTRIBUTING.md`",
                "user": {
                    "login": "david20571015",
                    "id": 51911434,
                    "node_id": "MDQ6VXNlcjUxOTExNDM0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/david20571015",
                    "html_url": "https://github.com/david20571015",
                    "followers_url": "https://api.github.com/users/david20571015/followers",
                    "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
                    "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
                    "organizations_url": "https://api.github.com/users/david20571015/orgs",
                    "repos_url": "https://api.github.com/users/david20571015/repos",
                    "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/david20571015/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "# Description\r\n\r\nFixes #8508 (cause by #8501)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
                "created_at": "2023-10-27T11:18:29Z",
                "updated_at": "2023-10-27T11:18:29Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/run-llama/llama_index/pulls/8526/commits",
                "review_comments_url": "https://api.github.com/repos/run-llama/llama_index/pulls/8526/comments",
                "review_comment_url": "https://api.github.com/repos/run-llama/llama_index/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8526/comments",
                "statuses_url": "https://api.github.com/repos/run-llama/llama_index/statuses/765e95e33d1ee57b5092074c9b07b3cedf09de95",
                "head": {
                    "label": "david20571015:contributing",
                    "ref": "contributing",
                    "sha": "765e95e33d1ee57b5092074c9b07b3cedf09de95",
                    "user": {
                        "login": "david20571015",
                        "id": 51911434,
                        "node_id": "MDQ6VXNlcjUxOTExNDM0",
                        "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/david20571015",
                        "html_url": "https://github.com/david20571015",
                        "followers_url": "https://api.github.com/users/david20571015/followers",
                        "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
                        "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
                        "organizations_url": "https://api.github.com/users/david20571015/orgs",
                        "repos_url": "https://api.github.com/users/david20571015/repos",
                        "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/david20571015/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 701202265,
                        "node_id": "R_kgDOKct_WQ",
                        "name": "llama_index",
                        "full_name": "david20571015/llama_index",
                        "private": false,
                        "owner": {
                            "login": "david20571015",
                            "id": 51911434,
                            "node_id": "MDQ6VXNlcjUxOTExNDM0",
                            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/david20571015",
                            "html_url": "https://github.com/david20571015",
                            "followers_url": "https://api.github.com/users/david20571015/followers",
                            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
                            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
                            "organizations_url": "https://api.github.com/users/david20571015/orgs",
                            "repos_url": "https://api.github.com/users/david20571015/repos",
                            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/david20571015/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/david20571015/llama_index",
                        "description": "LlamaIndex (GPT Index) is a data framework for your LLM applications",
                        "fork": true,
                        "url": "https://api.github.com/repos/david20571015/llama_index",
                        "forks_url": "https://api.github.com/repos/david20571015/llama_index/forks",
                        "keys_url": "https://api.github.com/repos/david20571015/llama_index/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/david20571015/llama_index/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/david20571015/llama_index/teams",
                        "hooks_url": "https://api.github.com/repos/david20571015/llama_index/hooks",
                        "issue_events_url": "https://api.github.com/repos/david20571015/llama_index/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/david20571015/llama_index/events",
                        "assignees_url": "https://api.github.com/repos/david20571015/llama_index/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/david20571015/llama_index/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/david20571015/llama_index/tags",
                        "blobs_url": "https://api.github.com/repos/david20571015/llama_index/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/david20571015/llama_index/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/david20571015/llama_index/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/david20571015/llama_index/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/david20571015/llama_index/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/david20571015/llama_index/languages",
                        "stargazers_url": "https://api.github.com/repos/david20571015/llama_index/stargazers",
                        "contributors_url": "https://api.github.com/repos/david20571015/llama_index/contributors",
                        "subscribers_url": "https://api.github.com/repos/david20571015/llama_index/subscribers",
                        "subscription_url": "https://api.github.com/repos/david20571015/llama_index/subscription",
                        "commits_url": "https://api.github.com/repos/david20571015/llama_index/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/david20571015/llama_index/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/david20571015/llama_index/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/david20571015/llama_index/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/david20571015/llama_index/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/david20571015/llama_index/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/david20571015/llama_index/merges",
                        "archive_url": "https://api.github.com/repos/david20571015/llama_index/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/david20571015/llama_index/downloads",
                        "issues_url": "https://api.github.com/repos/david20571015/llama_index/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/david20571015/llama_index/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/david20571015/llama_index/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/david20571015/llama_index/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/david20571015/llama_index/labels{/name}",
                        "releases_url": "https://api.github.com/repos/david20571015/llama_index/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/david20571015/llama_index/deployments",
                        "created_at": "2023-10-06T06:32:15Z",
                        "updated_at": "2023-10-06T07:01:18Z",
                        "pushed_at": "2023-10-27T11:16:36Z",
                        "git_url": "git://github.com/david20571015/llama_index.git",
                        "ssh_url": "git@github.com:david20571015/llama_index.git",
                        "clone_url": "https://github.com/david20571015/llama_index.git",
                        "svn_url": "https://github.com/david20571015/llama_index",
                        "homepage": "https://gpt-index.readthedocs.io/en/latest/",
                        "size": 79465,
                        "stargazers_count": 0,
                        "watchers_count": 0,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 0,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 0,
                        "open_issues": 0,
                        "watchers": 0,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "run-llama:main",
                    "ref": "main",
                    "sha": "3021eb169ffff784de7f1715967ccc3f59c6fefc",
                    "user": {
                        "login": "run-llama",
                        "id": 130722866,
                        "node_id": "O_kgDOB8qsMg",
                        "avatar_url": "https://avatars.githubusercontent.com/u/130722866?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/run-llama",
                        "html_url": "https://github.com/run-llama",
                        "followers_url": "https://api.github.com/users/run-llama/followers",
                        "following_url": "https://api.github.com/users/run-llama/following{/other_user}",
                        "gists_url": "https://api.github.com/users/run-llama/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/run-llama/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/run-llama/subscriptions",
                        "organizations_url": "https://api.github.com/users/run-llama/orgs",
                        "repos_url": "https://api.github.com/users/run-llama/repos",
                        "events_url": "https://api.github.com/users/run-llama/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/run-llama/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560704231,
                        "node_id": "R_kgDOIWuq5w",
                        "name": "llama_index",
                        "full_name": "run-llama/llama_index",
                        "private": false,
                        "owner": {
                            "login": "run-llama",
                            "id": 130722866,
                            "node_id": "O_kgDOB8qsMg",
                            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/run-llama",
                            "html_url": "https://github.com/run-llama",
                            "followers_url": "https://api.github.com/users/run-llama/followers",
                            "following_url": "https://api.github.com/users/run-llama/following{/other_user}",
                            "gists_url": "https://api.github.com/users/run-llama/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/run-llama/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/run-llama/subscriptions",
                            "organizations_url": "https://api.github.com/users/run-llama/orgs",
                            "repos_url": "https://api.github.com/users/run-llama/repos",
                            "events_url": "https://api.github.com/users/run-llama/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/run-llama/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/run-llama/llama_index",
                        "description": "LlamaIndex (formerly GPT Index) is a data framework for your LLM applications",
                        "fork": false,
                        "url": "https://api.github.com/repos/run-llama/llama_index",
                        "forks_url": "https://api.github.com/repos/run-llama/llama_index/forks",
                        "keys_url": "https://api.github.com/repos/run-llama/llama_index/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/run-llama/llama_index/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/run-llama/llama_index/teams",
                        "hooks_url": "https://api.github.com/repos/run-llama/llama_index/hooks",
                        "issue_events_url": "https://api.github.com/repos/run-llama/llama_index/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/run-llama/llama_index/events",
                        "assignees_url": "https://api.github.com/repos/run-llama/llama_index/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/run-llama/llama_index/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/run-llama/llama_index/tags",
                        "blobs_url": "https://api.github.com/repos/run-llama/llama_index/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/run-llama/llama_index/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/run-llama/llama_index/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/run-llama/llama_index/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/run-llama/llama_index/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/run-llama/llama_index/languages",
                        "stargazers_url": "https://api.github.com/repos/run-llama/llama_index/stargazers",
                        "contributors_url": "https://api.github.com/repos/run-llama/llama_index/contributors",
                        "subscribers_url": "https://api.github.com/repos/run-llama/llama_index/subscribers",
                        "subscription_url": "https://api.github.com/repos/run-llama/llama_index/subscription",
                        "commits_url": "https://api.github.com/repos/run-llama/llama_index/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/run-llama/llama_index/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/run-llama/llama_index/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/run-llama/llama_index/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/run-llama/llama_index/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/run-llama/llama_index/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/run-llama/llama_index/merges",
                        "archive_url": "https://api.github.com/repos/run-llama/llama_index/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/run-llama/llama_index/downloads",
                        "issues_url": "https://api.github.com/repos/run-llama/llama_index/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/run-llama/llama_index/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/run-llama/llama_index/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/run-llama/llama_index/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/run-llama/llama_index/labels{/name}",
                        "releases_url": "https://api.github.com/repos/run-llama/llama_index/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/run-llama/llama_index/deployments",
                        "created_at": "2022-11-02T04:24:54Z",
                        "updated_at": "2023-10-27T10:37:44Z",
                        "pushed_at": "2023-10-27T11:18:29Z",
                        "git_url": "git://github.com/run-llama/llama_index.git",
                        "ssh_url": "git@github.com:run-llama/llama_index.git",
                        "clone_url": "https://github.com/run-llama/llama_index.git",
                        "svn_url": "https://github.com/run-llama/llama_index",
                        "homepage": "https://docs.llamaindex.ai",
                        "size": 84477,
                        "stargazers_count": 22927,
                        "watchers_count": 22927,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2772,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 207,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "agents",
                            "application",
                            "data",
                            "fine-tuning",
                            "framework",
                            "llamaindex",
                            "llm",
                            "rag",
                            "vector-database"
                        ],
                        "visibility": "public",
                        "forks": 2772,
                        "open_issues": 207,
                        "watchers": 22927,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/8526"
                    },
                    "html": {
                        "href": "https://github.com/run-llama/llama_index/pull/8526"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/issues/8526"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/issues/8526/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/8526/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/8526/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/statuses/765e95e33d1ee57b5092074c9b07b3cedf09de95"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 6,
                "deletions": 1,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-27T11:18:30Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895974207",
        "type": "PullRequestEvent",
        "actor": {
            "id": 12198101,
            "login": "ravi03071991",
            "display_login": "ravi03071991",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "opened",
            "number": 8525,
            "pull_request": {
                "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8525",
                "id": 1576359182,
                "node_id": "PR_kwDOIWuq585d9VUO",
                "html_url": "https://github.com/run-llama/llama_index/pull/8525",
                "diff_url": "https://github.com/run-llama/llama_index/pull/8525.diff",
                "patch_url": "https://github.com/run-llama/llama_index/pull/8525.patch",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8525",
                "number": 8525,
                "state": "open",
                "locked": false,
                "title": "Update pull request template with google colab support inclusion",
                "user": {
                    "login": "ravi03071991",
                    "id": 12198101,
                    "node_id": "MDQ6VXNlcjEyMTk4MTAx",
                    "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ravi03071991",
                    "html_url": "https://github.com/ravi03071991",
                    "followers_url": "https://api.github.com/users/ravi03071991/followers",
                    "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
                    "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
                    "repos_url": "https://api.github.com/users/ravi03071991/repos",
                    "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "body": "# Description\r\n\r\nAdded Google colab support as a suggested checklist in the pull request template.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
                "created_at": "2023-10-27T10:41:04Z",
                "updated_at": "2023-10-27T10:41:04Z",
                "closed_at": null,
                "merged_at": null,
                "merge_commit_sha": null,
                "assignee": null,
                "assignees": [],
                "requested_reviewers": [],
                "requested_teams": [],
                "labels": [],
                "milestone": null,
                "draft": false,
                "commits_url": "https://api.github.com/repos/run-llama/llama_index/pulls/8525/commits",
                "review_comments_url": "https://api.github.com/repos/run-llama/llama_index/pulls/8525/comments",
                "review_comment_url": "https://api.github.com/repos/run-llama/llama_index/pulls/comments{/number}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8525/comments",
                "statuses_url": "https://api.github.com/repos/run-llama/llama_index/statuses/e19d6633a9b7f20867b100b74d17615e6d4f41c7",
                "head": {
                    "label": "ravi03071991:ravi/pr_template_change",
                    "ref": "ravi/pr_template_change",
                    "sha": "e19d6633a9b7f20867b100b74d17615e6d4f41c7",
                    "user": {
                        "login": "ravi03071991",
                        "id": 12198101,
                        "node_id": "MDQ6VXNlcjEyMTk4MTAx",
                        "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/ravi03071991",
                        "html_url": "https://github.com/ravi03071991",
                        "followers_url": "https://api.github.com/users/ravi03071991/followers",
                        "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
                        "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
                        "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
                        "repos_url": "https://api.github.com/users/ravi03071991/repos",
                        "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
                        "type": "User",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 587843025,
                        "node_id": "R_kgDOIwnF0Q",
                        "name": "gpt_index",
                        "full_name": "ravi03071991/gpt_index",
                        "private": false,
                        "owner": {
                            "login": "ravi03071991",
                            "id": 12198101,
                            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
                            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/ravi03071991",
                            "html_url": "https://github.com/ravi03071991",
                            "followers_url": "https://api.github.com/users/ravi03071991/followers",
                            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
                            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
                            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
                            "repos_url": "https://api.github.com/users/ravi03071991/repos",
                            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
                            "type": "User",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/ravi03071991/gpt_index",
                        "description": "An index created by GPT to organize external information and answer queries!",
                        "fork": true,
                        "url": "https://api.github.com/repos/ravi03071991/gpt_index",
                        "forks_url": "https://api.github.com/repos/ravi03071991/gpt_index/forks",
                        "keys_url": "https://api.github.com/repos/ravi03071991/gpt_index/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/ravi03071991/gpt_index/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/ravi03071991/gpt_index/teams",
                        "hooks_url": "https://api.github.com/repos/ravi03071991/gpt_index/hooks",
                        "issue_events_url": "https://api.github.com/repos/ravi03071991/gpt_index/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/ravi03071991/gpt_index/events",
                        "assignees_url": "https://api.github.com/repos/ravi03071991/gpt_index/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/ravi03071991/gpt_index/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/ravi03071991/gpt_index/tags",
                        "blobs_url": "https://api.github.com/repos/ravi03071991/gpt_index/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/ravi03071991/gpt_index/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/ravi03071991/gpt_index/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/ravi03071991/gpt_index/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/ravi03071991/gpt_index/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/ravi03071991/gpt_index/languages",
                        "stargazers_url": "https://api.github.com/repos/ravi03071991/gpt_index/stargazers",
                        "contributors_url": "https://api.github.com/repos/ravi03071991/gpt_index/contributors",
                        "subscribers_url": "https://api.github.com/repos/ravi03071991/gpt_index/subscribers",
                        "subscription_url": "https://api.github.com/repos/ravi03071991/gpt_index/subscription",
                        "commits_url": "https://api.github.com/repos/ravi03071991/gpt_index/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/ravi03071991/gpt_index/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/ravi03071991/gpt_index/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/ravi03071991/gpt_index/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/ravi03071991/gpt_index/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/ravi03071991/gpt_index/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/ravi03071991/gpt_index/merges",
                        "archive_url": "https://api.github.com/repos/ravi03071991/gpt_index/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/ravi03071991/gpt_index/downloads",
                        "issues_url": "https://api.github.com/repos/ravi03071991/gpt_index/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/ravi03071991/gpt_index/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/ravi03071991/gpt_index/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/ravi03071991/gpt_index/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/ravi03071991/gpt_index/labels{/name}",
                        "releases_url": "https://api.github.com/repos/ravi03071991/gpt_index/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/ravi03071991/gpt_index/deployments",
                        "created_at": "2023-01-11T18:05:37Z",
                        "updated_at": "2023-10-02T09:41:21Z",
                        "pushed_at": "2023-10-27T10:39:47Z",
                        "git_url": "git://github.com/ravi03071991/gpt_index.git",
                        "ssh_url": "git@github.com:ravi03071991/gpt_index.git",
                        "clone_url": "https://github.com/ravi03071991/gpt_index.git",
                        "svn_url": "https://github.com/ravi03071991/gpt_index",
                        "homepage": "",
                        "size": 100148,
                        "stargazers_count": 2,
                        "watchers_count": 2,
                        "language": "Python",
                        "has_issues": false,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": false,
                        "forks_count": 1,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 0,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [],
                        "visibility": "public",
                        "forks": 1,
                        "open_issues": 0,
                        "watchers": 2,
                        "default_branch": "main"
                    }
                },
                "base": {
                    "label": "run-llama:main",
                    "ref": "main",
                    "sha": "3021eb169ffff784de7f1715967ccc3f59c6fefc",
                    "user": {
                        "login": "run-llama",
                        "id": 130722866,
                        "node_id": "O_kgDOB8qsMg",
                        "avatar_url": "https://avatars.githubusercontent.com/u/130722866?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/run-llama",
                        "html_url": "https://github.com/run-llama",
                        "followers_url": "https://api.github.com/users/run-llama/followers",
                        "following_url": "https://api.github.com/users/run-llama/following{/other_user}",
                        "gists_url": "https://api.github.com/users/run-llama/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/run-llama/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/run-llama/subscriptions",
                        "organizations_url": "https://api.github.com/users/run-llama/orgs",
                        "repos_url": "https://api.github.com/users/run-llama/repos",
                        "events_url": "https://api.github.com/users/run-llama/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/run-llama/received_events",
                        "type": "Organization",
                        "site_admin": false
                    },
                    "repo": {
                        "id": 560704231,
                        "node_id": "R_kgDOIWuq5w",
                        "name": "llama_index",
                        "full_name": "run-llama/llama_index",
                        "private": false,
                        "owner": {
                            "login": "run-llama",
                            "id": 130722866,
                            "node_id": "O_kgDOB8qsMg",
                            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?v=4",
                            "gravatar_id": "",
                            "url": "https://api.github.com/users/run-llama",
                            "html_url": "https://github.com/run-llama",
                            "followers_url": "https://api.github.com/users/run-llama/followers",
                            "following_url": "https://api.github.com/users/run-llama/following{/other_user}",
                            "gists_url": "https://api.github.com/users/run-llama/gists{/gist_id}",
                            "starred_url": "https://api.github.com/users/run-llama/starred{/owner}{/repo}",
                            "subscriptions_url": "https://api.github.com/users/run-llama/subscriptions",
                            "organizations_url": "https://api.github.com/users/run-llama/orgs",
                            "repos_url": "https://api.github.com/users/run-llama/repos",
                            "events_url": "https://api.github.com/users/run-llama/events{/privacy}",
                            "received_events_url": "https://api.github.com/users/run-llama/received_events",
                            "type": "Organization",
                            "site_admin": false
                        },
                        "html_url": "https://github.com/run-llama/llama_index",
                        "description": "LlamaIndex (formerly GPT Index) is a data framework for your LLM applications",
                        "fork": false,
                        "url": "https://api.github.com/repos/run-llama/llama_index",
                        "forks_url": "https://api.github.com/repos/run-llama/llama_index/forks",
                        "keys_url": "https://api.github.com/repos/run-llama/llama_index/keys{/key_id}",
                        "collaborators_url": "https://api.github.com/repos/run-llama/llama_index/collaborators{/collaborator}",
                        "teams_url": "https://api.github.com/repos/run-llama/llama_index/teams",
                        "hooks_url": "https://api.github.com/repos/run-llama/llama_index/hooks",
                        "issue_events_url": "https://api.github.com/repos/run-llama/llama_index/issues/events{/number}",
                        "events_url": "https://api.github.com/repos/run-llama/llama_index/events",
                        "assignees_url": "https://api.github.com/repos/run-llama/llama_index/assignees{/user}",
                        "branches_url": "https://api.github.com/repos/run-llama/llama_index/branches{/branch}",
                        "tags_url": "https://api.github.com/repos/run-llama/llama_index/tags",
                        "blobs_url": "https://api.github.com/repos/run-llama/llama_index/git/blobs{/sha}",
                        "git_tags_url": "https://api.github.com/repos/run-llama/llama_index/git/tags{/sha}",
                        "git_refs_url": "https://api.github.com/repos/run-llama/llama_index/git/refs{/sha}",
                        "trees_url": "https://api.github.com/repos/run-llama/llama_index/git/trees{/sha}",
                        "statuses_url": "https://api.github.com/repos/run-llama/llama_index/statuses/{sha}",
                        "languages_url": "https://api.github.com/repos/run-llama/llama_index/languages",
                        "stargazers_url": "https://api.github.com/repos/run-llama/llama_index/stargazers",
                        "contributors_url": "https://api.github.com/repos/run-llama/llama_index/contributors",
                        "subscribers_url": "https://api.github.com/repos/run-llama/llama_index/subscribers",
                        "subscription_url": "https://api.github.com/repos/run-llama/llama_index/subscription",
                        "commits_url": "https://api.github.com/repos/run-llama/llama_index/commits{/sha}",
                        "git_commits_url": "https://api.github.com/repos/run-llama/llama_index/git/commits{/sha}",
                        "comments_url": "https://api.github.com/repos/run-llama/llama_index/comments{/number}",
                        "issue_comment_url": "https://api.github.com/repos/run-llama/llama_index/issues/comments{/number}",
                        "contents_url": "https://api.github.com/repos/run-llama/llama_index/contents/{+path}",
                        "compare_url": "https://api.github.com/repos/run-llama/llama_index/compare/{base}...{head}",
                        "merges_url": "https://api.github.com/repos/run-llama/llama_index/merges",
                        "archive_url": "https://api.github.com/repos/run-llama/llama_index/{archive_format}{/ref}",
                        "downloads_url": "https://api.github.com/repos/run-llama/llama_index/downloads",
                        "issues_url": "https://api.github.com/repos/run-llama/llama_index/issues{/number}",
                        "pulls_url": "https://api.github.com/repos/run-llama/llama_index/pulls{/number}",
                        "milestones_url": "https://api.github.com/repos/run-llama/llama_index/milestones{/number}",
                        "notifications_url": "https://api.github.com/repos/run-llama/llama_index/notifications{?since,all,participating}",
                        "labels_url": "https://api.github.com/repos/run-llama/llama_index/labels{/name}",
                        "releases_url": "https://api.github.com/repos/run-llama/llama_index/releases{/id}",
                        "deployments_url": "https://api.github.com/repos/run-llama/llama_index/deployments",
                        "created_at": "2022-11-02T04:24:54Z",
                        "updated_at": "2023-10-27T10:37:44Z",
                        "pushed_at": "2023-10-27T10:41:05Z",
                        "git_url": "git://github.com/run-llama/llama_index.git",
                        "ssh_url": "git@github.com:run-llama/llama_index.git",
                        "clone_url": "https://github.com/run-llama/llama_index.git",
                        "svn_url": "https://github.com/run-llama/llama_index",
                        "homepage": "https://docs.llamaindex.ai",
                        "size": 84477,
                        "stargazers_count": 22927,
                        "watchers_count": 22927,
                        "language": "Python",
                        "has_issues": true,
                        "has_projects": true,
                        "has_downloads": true,
                        "has_wiki": true,
                        "has_pages": false,
                        "has_discussions": true,
                        "forks_count": 2772,
                        "mirror_url": null,
                        "archived": false,
                        "disabled": false,
                        "open_issues_count": 206,
                        "license": {
                            "key": "mit",
                            "name": "MIT License",
                            "spdx_id": "MIT",
                            "url": "https://api.github.com/licenses/mit",
                            "node_id": "MDc6TGljZW5zZTEz"
                        },
                        "allow_forking": true,
                        "is_template": false,
                        "web_commit_signoff_required": false,
                        "topics": [
                            "agents",
                            "application",
                            "data",
                            "fine-tuning",
                            "framework",
                            "llamaindex",
                            "llm",
                            "rag",
                            "vector-database"
                        ],
                        "visibility": "public",
                        "forks": 2772,
                        "open_issues": 206,
                        "watchers": 22927,
                        "default_branch": "main"
                    }
                },
                "_links": {
                    "self": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/8525"
                    },
                    "html": {
                        "href": "https://github.com/run-llama/llama_index/pull/8525"
                    },
                    "issue": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/issues/8525"
                    },
                    "comments": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/issues/8525/comments"
                    },
                    "review_comments": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/8525/comments"
                    },
                    "review_comment": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/comments{/number}"
                    },
                    "commits": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/pulls/8525/commits"
                    },
                    "statuses": {
                        "href": "https://api.github.com/repos/run-llama/llama_index/statuses/e19d6633a9b7f20867b100b74d17615e6d4f41c7"
                    }
                },
                "author_association": "CONTRIBUTOR",
                "auto_merge": null,
                "active_lock_reason": null,
                "merged": false,
                "mergeable": null,
                "rebaseable": null,
                "mergeable_state": "unknown",
                "merged_by": null,
                "comments": 0,
                "review_comments": 0,
                "maintainer_can_modify": true,
                "commits": 1,
                "additions": 1,
                "deletions": 0,
                "changed_files": 1
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:41:06Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895894994",
        "type": "WatchEvent",
        "actor": {
            "id": 858202,
            "login": "burakince",
            "display_login": "burakince",
            "gravatar_id": "",
            "url": "https://api.github.com/users/burakince",
            "avatar_url": "https://avatars.githubusercontent.com/u/858202?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T10:37:44Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895556616",
        "type": "WatchEvent",
        "actor": {
            "id": 1597027,
            "login": "fathoni",
            "display_login": "fathoni",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fathoni",
            "avatar_url": "https://avatars.githubusercontent.com/u/1597027?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T10:24:18Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895475078",
        "type": "IssuesEvent",
        "actor": {
            "id": 51911434,
            "login": "david20571015",
            "display_login": "david20571015",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8454",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8454",
                "id": 1958855460,
                "node_id": "I_kwDOIWuq5850wcMk",
                "number": 8454,
                "title": "[Feature Request]: Change the return type of `BaseReader.load_data` from `list` to `Iterable`",
                "user": {
                    "login": "david20571015",
                    "id": 51911434,
                    "node_id": "MDQ6VXNlcjUxOTExNDM0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/david20571015",
                    "html_url": "https://github.com/david20571015",
                    "followers_url": "https://api.github.com/users/david20571015/followers",
                    "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
                    "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
                    "organizations_url": "https://api.github.com/users/david20571015/orgs",
                    "repos_url": "https://api.github.com/users/david20571015/repos",
                    "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/david20571015/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318869,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-24T09:26:42Z",
                "updated_at": "2023-10-27T10:21:21Z",
                "closed_at": "2023-10-27T10:21:21Z",
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "### Feature Description\r\n\r\nThe proposal is to change the return type of the [`BaseReader.load_data`](https://github.com/run-llama/llama_index/blob/91649e1d7f0a97461ede59191e7da1413672c242/llama_index/readers/base.py#L14) method from `List[Document]` to `Iterable[Document]`.\r\n\r\nbefore:\r\n\r\n```python\r\ndef load_data(self) -> List[Document]:\r\n    documents = []\r\n    for file in files:\r\n        doc = read_file(file)\r\n        documents.append(doc)\r\n    return documents\r\n```\r\n\r\nafter:\r\n\r\n```python\r\ndef load_data(self) -> Iterable[Document]:\r\n    for file in files:\r\n        doc = read_file(file)\r\n        yield doc\r\n```\r\n\r\nThis change might be considered a *breaking change*.\r\n\r\nbefore:\r\n\r\n```python\r\ndocs = reader.load_data()\r\nprint(docs[0])\r\n```\r\n\r\nafter:\r\n\r\n```python\r\ndocs = list(reader.load_data())\r\nprint(docs[0])\r\n```\r\n\r\n\r\n### Reason\r\n\r\nThe current implementation of [`BaseReader.load_data`](https://github.com/run-llama/llama_index/blob/0c938097aa1415ad297dddc26fe2b616e2bb7f40/llama_index/readers/base.py#L14) returns `List[Document]`, which loads all data into memory at once, potentially causing memory exhaustion and `MemoryError`.\r\n\r\n### Value of Feature\r\n\r\nChanging the return type to `Iterable` and implementing lazy loading using a generator can significantly reduce memory usage.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8454/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:21:22Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895348328",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 131922026,
            "login": "dosubot[bot]",
            "display_login": "dosubot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosubot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/131922026?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8148",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8148",
                "id": 1945527791,
                "node_id": "I_kwDOIWuq585z9mXv",
                "number": 8148,
                "title": "[Feature Request]: Oobabooga API support",
                "user": {
                    "login": "CorentinvdBdO",
                    "id": 53038558,
                    "node_id": "MDQ6VXNlcjUzMDM4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53038558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/CorentinvdBdO",
                    "html_url": "https://github.com/CorentinvdBdO",
                    "followers_url": "https://api.github.com/users/CorentinvdBdO/followers",
                    "following_url": "https://api.github.com/users/CorentinvdBdO/following{/other_user}",
                    "gists_url": "https://api.github.com/users/CorentinvdBdO/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/CorentinvdBdO/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/CorentinvdBdO/subscriptions",
                    "organizations_url": "https://api.github.com/users/CorentinvdBdO/orgs",
                    "repos_url": "https://api.github.com/users/CorentinvdBdO/repos",
                    "events_url": "https://api.github.com/users/CorentinvdBdO/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/CorentinvdBdO/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318869,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-16T15:34:08Z",
                "updated_at": "2023-10-27T10:16:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Feature Description\n\nHi! \r\n\r\nDo you pan to add the oobabooga/text-generation-webui inference API into LlamaIndex LLMs ? i use it a lot to test different models and the easiest way for me would be to plug it directly into LlamaIndex.\r\n\r\nThanks for your efforts!\r\n\r\nPlease forgive me if this is already supported.\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782662531",
                "html_url": "https://github.com/run-llama/llama_index/issues/8148#issuecomment-1782662531",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148",
                "id": 1782662531,
                "node_id": "IC_kwDOIWuq585qQUWD",
                "user": {
                    "login": "dosubot[bot]",
                    "id": 131922026,
                    "node_id": "BOT_kgDOB9z4ag",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7771049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dosubot%5Bbot%5D",
                    "html_url": "https://github.com/apps/dosubot",
                    "followers_url": "https://api.github.com/users/dosubot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/dosubot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dosubot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dosubot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dosubot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/dosubot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/dosubot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/dosubot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dosubot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:16:49Z",
                "updated_at": "2023-10-27T10:16:49Z",
                "author_association": "NONE",
                "body": "_\ud83e\udd16_\n<!-- Answer -->\n@logan-markewich, I could use your expertise on this one.\n\n---\nThis response is meant to be useful and save you time. It is **not meant to be a precise solution**, but rather a starting point for your own research.\n\nHelp me be more useful! Please leave a \ud83d\udc4d if this is helpful and \ud83d\udc4e if it is irrelevant.\n\nIf you want to continue the conversation, start your reply with @dosu-bot.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782662531/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:16:50Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895214006",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 131922026,
            "login": "dosubot[bot]",
            "display_login": "dosubot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosubot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/131922026?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523",
                "id": 1965041323,
                "node_id": "I_kwDOIWuq5851ICar",
                "number": 8523,
                "title": "[Bug][Retriever]: ValueError: You must provide either query embeddings or query texts, but not both",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 4,
                "created_at": "2023-10-27T08:36:49Z",
                "updated_at": "2023-10-27T10:11:33Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\r\n\r\nchromadb==0.4.14\r\nllama_index==0.8.45.post1\r\n\r\n```\r\nimport chromadb\r\nfrom chromadb.config import Settings\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\n...\r\n\r\ndb = chromadb.PersistentClient(path=\"./chroma_db\", settings=Settings(anonymized_telemetry=False))\r\nchroma_collection = db.get_or_create_collection(\"cc\")\r\nvector_store= ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nres = vector_store.query(\r\n        VectorStoreQuery(\r\n            query_embedding=None, \r\n            similarity_top_k=2, \r\n            doc_ids=None, \r\n            node_ids=None, \r\n            query_str='', \r\n            output_fields=None, \r\n            embedding_field=None, \r\n            mode=VectorStoreQueryMode.DEFAULT, \r\n            alpha=None, \r\n            filters=MetadataFilters(filters=[ExactMatchFilter(key='location', value='France')]), \r\n            mmr_threshold=None, \r\n            sparse_top_k=None\r\n        )\r\n    )\r\n```\r\n\r\nFor info this is the standard query generated by the autoretriever function:\r\n```\r\nretriever = VectorIndexAutoRetriever(index, vector_store_info=vector_store_info)\r\nresponse = retriever.retrieve(input)\r\n```\r\n\r\nI try to send that vectorstorequery to Chroma but it fails with the following.\r\nI've tried adding text in the query_str field, or remove most of the fields including removing query_embedding, but nothing works and I get the following error:\r\n\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\r\n\r\n### Version\r\n\r\n0.8.45.post1\r\n\r\n### Steps to Reproduce\r\n\r\nRun code above\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782655632",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523#issuecomment-1782655632",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "id": 1782655632,
                "node_id": "IC_kwDOIWuq585qQSqQ",
                "user": {
                    "login": "dosubot[bot]",
                    "id": 131922026,
                    "node_id": "BOT_kgDOB9z4ag",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7771049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dosubot%5Bbot%5D",
                    "html_url": "https://github.com/apps/dosubot",
                    "followers_url": "https://api.github.com/users/dosubot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/dosubot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dosubot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dosubot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dosubot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/dosubot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/dosubot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/dosubot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dosubot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:11:32Z",
                "updated_at": "2023-10-27T10:11:32Z",
                "author_association": "NONE",
                "body": "_\ud83e\udd16_\n<!-- Answer -->\n@logan-markewich, I could use your expertise on this one.\n\n---\nThis response is meant to be useful and save you time. It is **not meant to be a precise solution**, but rather a starting point for your own research.\n\nHelp me be more useful! Please leave a \ud83d\udc4d if this is helpful and \ud83d\udc4e if it is irrelevant.\n\nIf you want to continue the conversation, start your reply with @dosu-bot.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782655632/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:11:33Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895199671",
        "type": "WatchEvent",
        "actor": {
            "id": 3027286,
            "login": "Sylvus",
            "display_login": "Sylvus",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sylvus",
            "avatar_url": "https://avatars.githubusercontent.com/u/3027286?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T10:11:00Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32895080549",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 51911434,
            "login": "david20571015",
            "display_login": "david20571015",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8508",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8508",
                "id": 1964354166,
                "node_id": "I_kwDOIWuq5851Fap2",
                "number": 8508,
                "title": "[Documentation]: test dependencies for developers",
                "user": {
                    "login": "david20571015",
                    "id": 51911434,
                    "node_id": "MDQ6VXNlcjUxOTExNDM0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/david20571015",
                    "html_url": "https://github.com/david20571015",
                    "followers_url": "https://api.github.com/users/david20571015/followers",
                    "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
                    "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
                    "organizations_url": "https://api.github.com/users/david20571015/orgs",
                    "repos_url": "https://api.github.com/users/david20571015/repos",
                    "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/david20571015/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318866,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                        "name": "documentation",
                        "color": "0075ca",
                        "default": true,
                        "description": "Improvements or additions to documentation"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-26T20:53:49Z",
                "updated_at": "2023-10-27T10:06:24Z",
                "closed_at": null,
                "author_association": "CONTRIBUTOR",
                "active_lock_reason": null,
                "body": "### Documentation Issue Description\n\n`data_requirements.txt` was removed in #8501, but the instructions in the CONTRIBUTING.md#testing still have developers to install it.\n\n### Documentation Link\n\nhttps://github.com/run-llama/llama_index/blob/main/CONTRIBUTING.md#testing",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782648716",
                "html_url": "https://github.com/run-llama/llama_index/issues/8508#issuecomment-1782648716",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8508",
                "id": 1782648716,
                "node_id": "IC_kwDOIWuq585qQQ-M",
                "user": {
                    "login": "david20571015",
                    "id": 51911434,
                    "node_id": "MDQ6VXNlcjUxOTExNDM0",
                    "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/david20571015",
                    "html_url": "https://github.com/david20571015",
                    "followers_url": "https://api.github.com/users/david20571015/followers",
                    "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
                    "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
                    "organizations_url": "https://api.github.com/users/david20571015/orgs",
                    "repos_url": "https://api.github.com/users/david20571015/repos",
                    "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/david20571015/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T10:06:24Z",
                "updated_at": "2023-10-27T10:06:24Z",
                "author_association": "CONTRIBUTOR",
                "body": "Yes, I am willing to fix it.\r\n\r\nHowever, I wonder whether it is acceptable to omit the installation of dependencies listed in `data_requirements.txt`. Some tests are skipped if these dependencies are not installed. (I'm not very familiar with testing, but I think all cases should be tested instead of skipping them.)\r\n\r\nbefore install `data_requirements.txt`\r\n![image](https://github.com/run-llama/llama_index/assets/51911434/68a776be-a7c9-405d-a682-d896371f25e2)\r\n5 failed, 354 passed, 152 skipped, 12 warnings\r\n\r\n(I also want to understand why you chose to pass `tests/text_splitter/test_code_splitter.py::test_python_code_splitter` by setting `CI` instead of using `pytest.mark.skipif` to skip the test if `tree_sitter_languages` isn't installed.)\r\n\r\nafter install `data_requirements.txt`\r\n![image](https://github.com/run-llama/llama_index/assets/51911434/98575b3c-8280-4b6e-9e72-7aa238e74017)\r\n2 failed, 376 passed, 133 skipped, 13 warnings\r\n\r\n(Is it normal to encounter an error like `botocore.exceptions.NoRegionError: You must specify a region.`?)\r\n\r\nMy env:\r\n- Ubuntu 22.04.3 LTS (in WSL2)\r\n- Python 3.10.12\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782648716/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T10:06:24Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894502028",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 131922026,
            "login": "dosubot[bot]",
            "display_login": "dosubot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosubot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/131922026?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524",
                "id": 1965127817,
                "node_id": "I_kwDOIWuq5851IXiJ",
                "number": 8524,
                "title": "[Question]: Why are meaningless words automatically filled in before the prompt?",
                "user": {
                    "login": "yixuantt",
                    "id": 102734371,
                    "node_id": "U_kgDOBh-aIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yixuantt",
                    "html_url": "https://github.com/yixuantt",
                    "followers_url": "https://api.github.com/users/yixuantt/followers",
                    "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
                    "organizations_url": "https://api.github.com/users/yixuantt/orgs",
                    "repos_url": "https://api.github.com/users/yixuantt/repos",
                    "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yixuantt/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318877,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-27T09:28:28Z",
                "updated_at": "2023-10-27T09:44:30Z",
                "closed_at": "2023-10-27T09:42:12Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my custom prompt.\r\n```\r\nqa_template = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\n\r\nrefine_template_str = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\nrefine_template = PromptTemplate(refine_template_str)\r\nqa_template = PromptTemplate(qa_template)\r\n```\r\n\r\nAnd here is the generated prompt: \r\n```\r\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\\n### Human: Got any creative ideas for a 10 year old\u2019s birthday?\\n### Assistant: Of course! Here are some creative ideas fora 10-year-old's birthday party:\\n1. Treasure Hunt: Organize a treasure hunt in your backyard or nearby park. Create clues and riddles for the kids to solve, leading them to hidden treasures and surprises.\\n2. Science Party: Plan a science-themed party wherekids can engage in fun and interactive experiments. You can set up different stations with activities like making slime, erupting volcanoes, or creating simple chemical reactions.\\n3. Outdoor Movie Night: Set up a backyard movie night with a projector and alarge screen or white sheet. Create a cozy seating area with blankets and pillows, and serve popcorn and snacks while the kids enjoy a favorite movie under the stars.\\n4. DIY Crafts Party: Arrange a craft party where kids can unleash their creativity. Provide a variety of craft supplies like beads, paints, and fabrics, and let them create their own unique masterpieces to take home asparty favors.\\n5. Sports Olympics: Host a mini Olympics event with various sports and games. Set up different stations for activities like sack races, relay races, basketball shooting, and obstacle courses. Give out medals or certificates to the participants.\\n6. Cooking Party: Have a cooking-themed party where the kids can prepare their own mini pizzas, cupcakes, or cookies. Providetoppings, frosting, and decorating supplies, and let them get hands-on in the kitchen.\\n7. Superhero Training Camp: Create a superhero-themed party where the kids can engage in fun training activities. Set up an obstacle course, have them design their own superhero capes or masks, and organize superhero-themed games and challenges.\\n8. Outdoor Adventure: Plan an outdoor adventure party at a local park or nature reserve. Arrange activities like hiking, nature scavenger hunts, or a picnic with games. Encourage exploration and appreciation for the outdoors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: ors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: Below is an instruction that describes a task, paired with further context. Write a response that appropriately completes the request.\\n\\nInstruction:\\nSummarize the text....\r\n\r\n\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782618484",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524#issuecomment-1782618484",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "id": 1782618484,
                "node_id": "IC_kwDOIWuq585qQJl0",
                "user": {
                    "login": "dosubot[bot]",
                    "id": 131922026,
                    "node_id": "BOT_kgDOB9z4ag",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7771049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dosubot%5Bbot%5D",
                    "html_url": "https://github.com/apps/dosubot",
                    "followers_url": "https://api.github.com/users/dosubot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/dosubot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dosubot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dosubot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dosubot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/dosubot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/dosubot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/dosubot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dosubot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:44:29Z",
                "updated_at": "2023-10-27T09:44:29Z",
                "author_association": "NONE",
                "body": "_\ud83e\udd16_\n<!-- Answer -->\n@logan-markewich, I could use your expertise on this one.\n\n---\nThis response is meant to be useful and save you time. It is **not meant to be a precise solution**, but rather a starting point for your own research.\n\nHelp me be more useful! Please leave a \ud83d\udc4d if this is helpful and \ud83d\udc4e if it is irrelevant.\n\nIf you want to continue the conversation, start your reply with @dosu-bot.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782618484/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:44:30Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894499516",
        "type": "ForkEvent",
        "actor": {
            "id": 4447956,
            "login": "chenxx08",
            "display_login": "chenxx08",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenxx08",
            "avatar_url": "https://avatars.githubusercontent.com/u/4447956?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "forkee": {
                "id": 710720384,
                "node_id": "R_kgDOKly7gA",
                "name": "llama_index",
                "full_name": "chenxx08/llama_index",
                "private": false,
                "owner": {
                    "login": "chenxx08",
                    "id": 4447956,
                    "node_id": "MDQ6VXNlcjQ0NDc5NTY=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/4447956?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/chenxx08",
                    "html_url": "https://github.com/chenxx08",
                    "followers_url": "https://api.github.com/users/chenxx08/followers",
                    "following_url": "https://api.github.com/users/chenxx08/following{/other_user}",
                    "gists_url": "https://api.github.com/users/chenxx08/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/chenxx08/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/chenxx08/subscriptions",
                    "organizations_url": "https://api.github.com/users/chenxx08/orgs",
                    "repos_url": "https://api.github.com/users/chenxx08/repos",
                    "events_url": "https://api.github.com/users/chenxx08/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/chenxx08/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/chenxx08/llama_index",
                "description": "LlamaIndex (formerly GPT Index) is a data framework for your LLM applications",
                "fork": true,
                "url": "https://api.github.com/repos/chenxx08/llama_index",
                "forks_url": "https://api.github.com/repos/chenxx08/llama_index/forks",
                "keys_url": "https://api.github.com/repos/chenxx08/llama_index/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/chenxx08/llama_index/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/chenxx08/llama_index/teams",
                "hooks_url": "https://api.github.com/repos/chenxx08/llama_index/hooks",
                "issue_events_url": "https://api.github.com/repos/chenxx08/llama_index/issues/events{/number}",
                "events_url": "https://api.github.com/repos/chenxx08/llama_index/events",
                "assignees_url": "https://api.github.com/repos/chenxx08/llama_index/assignees{/user}",
                "branches_url": "https://api.github.com/repos/chenxx08/llama_index/branches{/branch}",
                "tags_url": "https://api.github.com/repos/chenxx08/llama_index/tags",
                "blobs_url": "https://api.github.com/repos/chenxx08/llama_index/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/chenxx08/llama_index/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/chenxx08/llama_index/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/chenxx08/llama_index/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/chenxx08/llama_index/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/chenxx08/llama_index/languages",
                "stargazers_url": "https://api.github.com/repos/chenxx08/llama_index/stargazers",
                "contributors_url": "https://api.github.com/repos/chenxx08/llama_index/contributors",
                "subscribers_url": "https://api.github.com/repos/chenxx08/llama_index/subscribers",
                "subscription_url": "https://api.github.com/repos/chenxx08/llama_index/subscription",
                "commits_url": "https://api.github.com/repos/chenxx08/llama_index/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/chenxx08/llama_index/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/chenxx08/llama_index/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/chenxx08/llama_index/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/chenxx08/llama_index/contents/{+path}",
                "compare_url": "https://api.github.com/repos/chenxx08/llama_index/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/chenxx08/llama_index/merges",
                "archive_url": "https://api.github.com/repos/chenxx08/llama_index/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/chenxx08/llama_index/downloads",
                "issues_url": "https://api.github.com/repos/chenxx08/llama_index/issues{/number}",
                "pulls_url": "https://api.github.com/repos/chenxx08/llama_index/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/chenxx08/llama_index/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/chenxx08/llama_index/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/chenxx08/llama_index/labels{/name}",
                "releases_url": "https://api.github.com/repos/chenxx08/llama_index/releases{/id}",
                "deployments_url": "https://api.github.com/repos/chenxx08/llama_index/deployments",
                "created_at": "2023-10-27T09:44:23Z",
                "updated_at": "2023-10-27T09:44:23Z",
                "pushed_at": "2023-10-27T07:40:37Z",
                "git_url": "git://github.com/chenxx08/llama_index.git",
                "ssh_url": "git@github.com:chenxx08/llama_index.git",
                "clone_url": "https://github.com/chenxx08/llama_index.git",
                "svn_url": "https://github.com/chenxx08/llama_index",
                "homepage": "https://docs.llamaindex.ai",
                "size": 84477,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:44:24Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894442332",
        "type": "IssuesEvent",
        "actor": {
            "id": 102734371,
            "login": "yixuantt",
            "display_login": "yixuantt",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yixuantt",
            "avatar_url": "https://avatars.githubusercontent.com/u/102734371?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "closed",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524",
                "id": 1965127817,
                "node_id": "I_kwDOIWuq5851IXiJ",
                "number": 8524,
                "title": "[Question]: Why are meaningless words automatically filled in before the prompt?",
                "user": {
                    "login": "yixuantt",
                    "id": 102734371,
                    "node_id": "U_kgDOBh-aIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yixuantt",
                    "html_url": "https://github.com/yixuantt",
                    "followers_url": "https://api.github.com/users/yixuantt/followers",
                    "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
                    "organizations_url": "https://api.github.com/users/yixuantt/orgs",
                    "repos_url": "https://api.github.com/users/yixuantt/repos",
                    "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yixuantt/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318877,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "closed",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T09:28:28Z",
                "updated_at": "2023-10-27T09:42:12Z",
                "closed_at": "2023-10-27T09:42:12Z",
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my custom prompt.\r\n```\r\nqa_template = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\n\r\nrefine_template_str = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\nrefine_template = PromptTemplate(refine_template_str)\r\nqa_template = PromptTemplate(qa_template)\r\n```\r\n\r\nAnd here is the generated prompt: \r\n```\r\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\\n### Human: Got any creative ideas for a 10 year old\u2019s birthday?\\n### Assistant: Of course! Here are some creative ideas fora 10-year-old's birthday party:\\n1. Treasure Hunt: Organize a treasure hunt in your backyard or nearby park. Create clues and riddles for the kids to solve, leading them to hidden treasures and surprises.\\n2. Science Party: Plan a science-themed party wherekids can engage in fun and interactive experiments. You can set up different stations with activities like making slime, erupting volcanoes, or creating simple chemical reactions.\\n3. Outdoor Movie Night: Set up a backyard movie night with a projector and alarge screen or white sheet. Create a cozy seating area with blankets and pillows, and serve popcorn and snacks while the kids enjoy a favorite movie under the stars.\\n4. DIY Crafts Party: Arrange a craft party where kids can unleash their creativity. Provide a variety of craft supplies like beads, paints, and fabrics, and let them create their own unique masterpieces to take home asparty favors.\\n5. Sports Olympics: Host a mini Olympics event with various sports and games. Set up different stations for activities like sack races, relay races, basketball shooting, and obstacle courses. Give out medals or certificates to the participants.\\n6. Cooking Party: Have a cooking-themed party where the kids can prepare their own mini pizzas, cupcakes, or cookies. Providetoppings, frosting, and decorating supplies, and let them get hands-on in the kitchen.\\n7. Superhero Training Camp: Create a superhero-themed party where the kids can engage in fun training activities. Set up an obstacle course, have them design their own superhero capes or masks, and organize superhero-themed games and challenges.\\n8. Outdoor Adventure: Plan an outdoor adventure party at a local park or nature reserve. Arrange activities like hiking, nature scavenger hunts, or a picnic with games. Encourage exploration and appreciation for the outdoors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: ors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: Below is an instruction that describes a task, paired with further context. Write a response that appropriately completes the request.\\n\\nInstruction:\\nSummarize the text....\r\n\r\n\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/timeline",
                "performed_via_github_app": null,
                "state_reason": "completed"
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:42:13Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894440809",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 102734371,
            "login": "yixuantt",
            "display_login": "yixuantt",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yixuantt",
            "avatar_url": "https://avatars.githubusercontent.com/u/102734371?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524",
                "id": 1965127817,
                "node_id": "I_kwDOIWuq5851IXiJ",
                "number": 8524,
                "title": "[Question]: Why are meaningless words automatically filled in before the prompt?",
                "user": {
                    "login": "yixuantt",
                    "id": 102734371,
                    "node_id": "U_kgDOBh-aIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yixuantt",
                    "html_url": "https://github.com/yixuantt",
                    "followers_url": "https://api.github.com/users/yixuantt/followers",
                    "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
                    "organizations_url": "https://api.github.com/users/yixuantt/orgs",
                    "repos_url": "https://api.github.com/users/yixuantt/repos",
                    "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yixuantt/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318877,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T09:28:28Z",
                "updated_at": "2023-10-27T09:42:09Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my custom prompt.\r\n```\r\nqa_template = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\n\r\nrefine_template_str = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\nrefine_template = PromptTemplate(refine_template_str)\r\nqa_template = PromptTemplate(qa_template)\r\n```\r\n\r\nAnd here is the generated prompt: \r\n```\r\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\\n### Human: Got any creative ideas for a 10 year old\u2019s birthday?\\n### Assistant: Of course! Here are some creative ideas fora 10-year-old's birthday party:\\n1. Treasure Hunt: Organize a treasure hunt in your backyard or nearby park. Create clues and riddles for the kids to solve, leading them to hidden treasures and surprises.\\n2. Science Party: Plan a science-themed party wherekids can engage in fun and interactive experiments. You can set up different stations with activities like making slime, erupting volcanoes, or creating simple chemical reactions.\\n3. Outdoor Movie Night: Set up a backyard movie night with a projector and alarge screen or white sheet. Create a cozy seating area with blankets and pillows, and serve popcorn and snacks while the kids enjoy a favorite movie under the stars.\\n4. DIY Crafts Party: Arrange a craft party where kids can unleash their creativity. Provide a variety of craft supplies like beads, paints, and fabrics, and let them create their own unique masterpieces to take home asparty favors.\\n5. Sports Olympics: Host a mini Olympics event with various sports and games. Set up different stations for activities like sack races, relay races, basketball shooting, and obstacle courses. Give out medals or certificates to the participants.\\n6. Cooking Party: Have a cooking-themed party where the kids can prepare their own mini pizzas, cupcakes, or cookies. Providetoppings, frosting, and decorating supplies, and let them get hands-on in the kitchen.\\n7. Superhero Training Camp: Create a superhero-themed party where the kids can engage in fun training activities. Set up an obstacle course, have them design their own superhero capes or masks, and organize superhero-themed games and challenges.\\n8. Outdoor Adventure: Plan an outdoor adventure party at a local park or nature reserve. Arrange activities like hiking, nature scavenger hunts, or a picnic with games. Encourage exploration and appreciation for the outdoors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: ors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: Below is an instruction that describes a task, paired with further context. Write a response that appropriately completes the request.\\n\\nInstruction:\\nSummarize the text....\r\n\r\n\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782615294",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524#issuecomment-1782615294",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "id": 1782615294,
                "node_id": "IC_kwDOIWuq585qQIz-",
                "user": {
                    "login": "yixuantt",
                    "id": 102734371,
                    "node_id": "U_kgDOBh-aIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yixuantt",
                    "html_url": "https://github.com/yixuantt",
                    "followers_url": "https://api.github.com/users/yixuantt/followers",
                    "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
                    "organizations_url": "https://api.github.com/users/yixuantt/orgs",
                    "repos_url": "https://api.github.com/users/yixuantt/repos",
                    "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yixuantt/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:42:09Z",
                "updated_at": "2023-10-27T09:42:09Z",
                "author_association": "NONE",
                "body": "Happy to solve it.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782615294/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:42:10Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894353983",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 131922026,
            "login": "dosubot[bot]",
            "display_login": "dosubot",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dosubot[bot]",
            "avatar_url": "https://avatars.githubusercontent.com/u/131922026?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524",
                "id": 1965127817,
                "node_id": "I_kwDOIWuq5851IXiJ",
                "number": 8524,
                "title": "[Question]: Why are meaningless words automatically filled in before the prompt?",
                "user": {
                    "login": "yixuantt",
                    "id": 102734371,
                    "node_id": "U_kgDOBh-aIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yixuantt",
                    "html_url": "https://github.com/yixuantt",
                    "followers_url": "https://api.github.com/users/yixuantt/followers",
                    "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
                    "organizations_url": "https://api.github.com/users/yixuantt/orgs",
                    "repos_url": "https://api.github.com/users/yixuantt/repos",
                    "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yixuantt/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318877,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T09:28:28Z",
                "updated_at": "2023-10-27T09:38:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my custom prompt.\r\n```\r\nqa_template = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\n\r\nrefine_template_str = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\nrefine_template = PromptTemplate(refine_template_str)\r\nqa_template = PromptTemplate(qa_template)\r\n```\r\n\r\nAnd here is the generated prompt: \r\n```\r\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\\n### Human: Got any creative ideas for a 10 year old\u2019s birthday?\\n### Assistant: Of course! Here are some creative ideas fora 10-year-old's birthday party:\\n1. Treasure Hunt: Organize a treasure hunt in your backyard or nearby park. Create clues and riddles for the kids to solve, leading them to hidden treasures and surprises.\\n2. Science Party: Plan a science-themed party wherekids can engage in fun and interactive experiments. You can set up different stations with activities like making slime, erupting volcanoes, or creating simple chemical reactions.\\n3. Outdoor Movie Night: Set up a backyard movie night with a projector and alarge screen or white sheet. Create a cozy seating area with blankets and pillows, and serve popcorn and snacks while the kids enjoy a favorite movie under the stars.\\n4. DIY Crafts Party: Arrange a craft party where kids can unleash their creativity. Provide a variety of craft supplies like beads, paints, and fabrics, and let them create their own unique masterpieces to take home asparty favors.\\n5. Sports Olympics: Host a mini Olympics event with various sports and games. Set up different stations for activities like sack races, relay races, basketball shooting, and obstacle courses. Give out medals or certificates to the participants.\\n6. Cooking Party: Have a cooking-themed party where the kids can prepare their own mini pizzas, cupcakes, or cookies. Providetoppings, frosting, and decorating supplies, and let them get hands-on in the kitchen.\\n7. Superhero Training Camp: Create a superhero-themed party where the kids can engage in fun training activities. Set up an obstacle course, have them design their own superhero capes or masks, and organize superhero-themed games and challenges.\\n8. Outdoor Adventure: Plan an outdoor adventure party at a local park or nature reserve. Arrange activities like hiking, nature scavenger hunts, or a picnic with games. Encourage exploration and appreciation for the outdoors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: ors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: Below is an instruction that describes a task, paired with further context. Write a response that appropriately completes the request.\\n\\nInstruction:\\nSummarize the text....\r\n\r\n\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/reactions",
                    "total_count": 1,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 1
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782610570",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524#issuecomment-1782610570",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "id": 1782610570,
                "node_id": "IC_kwDOIWuq585qQHqK",
                "user": {
                    "login": "dosubot[bot]",
                    "id": 131922026,
                    "node_id": "BOT_kgDOB9z4ag",
                    "avatar_url": "https://avatars.githubusercontent.com/u/7771049?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/dosubot%5Bbot%5D",
                    "html_url": "https://github.com/apps/dosubot",
                    "followers_url": "https://api.github.com/users/dosubot%5Bbot%5D/followers",
                    "following_url": "https://api.github.com/users/dosubot%5Bbot%5D/following{/other_user}",
                    "gists_url": "https://api.github.com/users/dosubot%5Bbot%5D/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/dosubot%5Bbot%5D/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/dosubot%5Bbot%5D/subscriptions",
                    "organizations_url": "https://api.github.com/users/dosubot%5Bbot%5D/orgs",
                    "repos_url": "https://api.github.com/users/dosubot%5Bbot%5D/repos",
                    "events_url": "https://api.github.com/users/dosubot%5Bbot%5D/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/dosubot%5Bbot%5D/received_events",
                    "type": "Bot",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:38:49Z",
                "updated_at": "2023-10-27T09:38:49Z",
                "author_association": "NONE",
                "body": "_\ud83e\udd16_\n<!-- Answer -->\nHello @yixuantt,\n\nI'm here to assist you with your query. I'm an AI bot designed to help with bug solving, answering questions, and aiding contributors while waiting for a human maintainer.\n\nFrom the code you've shared, it seems like you're using a custom prompt template for your LlamaIndex application. The \"meaningless\" words you're seeing before your custom prompt are likely part of the default prompt templates defined in the `default_prompts.py` file. These templates are used to structure the prompts that are fed into the model for generating responses.\n\nFor example, in the `DEFAULT_SUMMARY_PROMPT_TMPL`, the text \"Write a summary of the following. Try to use only the information provided. Try to include as many key details as possible.\" is a part of the prompt template. This text is used to instruct the model on what it should do with the `{context_str}` that follows.\n\nIf you want to change these instructions or remove them, you can modify the corresponding prompt templates in the `default_prompts.py` file. Be aware that any changes to these templates will affect how the model generates responses. You can find the `default_prompts.py` file in the LlamaIndex codebase [here](https://github.com/run-llama/llama_index/blob/main/llama_index/prompts/default_prompts.py).\n\nI also found a similar issue titled [[Bug]: Seeing Chain of Thought Prompts in Responses Using Azure](https://github.com/run-llama/llama_index/issues/6631) which was last updated on July 11, 2023. The suggested solution is to switch to `AzureChatOpenAI` from `gpt-3.5` when using Azure. Streaming is also supported in the LlamaIndex class.\n\nI hope this helps! If you have any more questions or need further clarification, feel free to ask.\n\nBest,\nDosu\n\n## Sources\n- [[Bug]: Seeing Chain of Thought Prompts in Responses Using Azure](https://github.com/run-llama/llama_index/issues/6631)\n- [llama_index/prompts/default_prompts.py](https://github.com/run-llama/llama_index/blob/main/llama_index/prompts/default_prompts.py)\n\n---\nThis response is meant to be useful and save you time. It is **not meant to be a precise solution**, but rather a starting point for your own research.\n\nHelp me be more useful! Please leave a \ud83d\udc4d if this is helpful and \ud83d\udc4e if it is irrelevant.\n\nIf you want to continue the conversation, start your reply with @dosu-bot.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782610570/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:38:50Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894115483",
        "type": "WatchEvent",
        "actor": {
            "id": 43817262,
            "login": "sengiv",
            "display_login": "sengiv",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sengiv",
            "avatar_url": "https://avatars.githubusercontent.com/u/43817262?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:29:53Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894078414",
        "type": "IssuesEvent",
        "actor": {
            "id": 102734371,
            "login": "yixuantt",
            "display_login": "yixuantt",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yixuantt",
            "avatar_url": "https://avatars.githubusercontent.com/u/102734371?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8524",
                "id": 1965127817,
                "node_id": "I_kwDOIWuq5851IXiJ",
                "number": 8524,
                "title": "[Question]: Why are meaningless words automatically filled in before the prompt?",
                "user": {
                    "login": "yixuantt",
                    "id": 102734371,
                    "node_id": "U_kgDOBh-aIw",
                    "avatar_url": "https://avatars.githubusercontent.com/u/102734371?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/yixuantt",
                    "html_url": "https://github.com/yixuantt",
                    "followers_url": "https://api.github.com/users/yixuantt/followers",
                    "following_url": "https://api.github.com/users/yixuantt/following{/other_user}",
                    "gists_url": "https://api.github.com/users/yixuantt/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/yixuantt/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/yixuantt/subscriptions",
                    "organizations_url": "https://api.github.com/users/yixuantt/orgs",
                    "repos_url": "https://api.github.com/users/yixuantt/repos",
                    "events_url": "https://api.github.com/users/yixuantt/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/yixuantt/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318877,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                        "name": "question",
                        "color": "d876e3",
                        "default": true,
                        "description": "Further information is requested"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T09:28:28Z",
                "updated_at": "2023-10-27T09:28:28Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my custom prompt.\r\n```\r\nqa_template = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\n\r\nrefine_template_str = (\r\n    \"Below is an instruction that describes a task, paired with further context. \"\r\n    \"Write a response that appropriately completes the request.\\n\\n\"\r\n    \"Instruction:\\n{query_str}\\n\\n Input:\\n{context_str}\\n\\n Response:\"\r\n)\r\nrefine_template = PromptTemplate(refine_template_str)\r\nqa_template = PromptTemplate(qa_template)\r\n```\r\n\r\nAnd here is the generated prompt: \r\n```\r\nA chat between a curious human and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the human's questions.\\n### Human: Got any creative ideas for a 10 year old\u2019s birthday?\\n### Assistant: Of course! Here are some creative ideas fora 10-year-old's birthday party:\\n1. Treasure Hunt: Organize a treasure hunt in your backyard or nearby park. Create clues and riddles for the kids to solve, leading them to hidden treasures and surprises.\\n2. Science Party: Plan a science-themed party wherekids can engage in fun and interactive experiments. You can set up different stations with activities like making slime, erupting volcanoes, or creating simple chemical reactions.\\n3. Outdoor Movie Night: Set up a backyard movie night with a projector and alarge screen or white sheet. Create a cozy seating area with blankets and pillows, and serve popcorn and snacks while the kids enjoy a favorite movie under the stars.\\n4. DIY Crafts Party: Arrange a craft party where kids can unleash their creativity. Provide a variety of craft supplies like beads, paints, and fabrics, and let them create their own unique masterpieces to take home asparty favors.\\n5. Sports Olympics: Host a mini Olympics event with various sports and games. Set up different stations for activities like sack races, relay races, basketball shooting, and obstacle courses. Give out medals or certificates to the participants.\\n6. Cooking Party: Have a cooking-themed party where the kids can prepare their own mini pizzas, cupcakes, or cookies. Providetoppings, frosting, and decorating supplies, and let them get hands-on in the kitchen.\\n7. Superhero Training Camp: Create a superhero-themed party where the kids can engage in fun training activities. Set up an obstacle course, have them design their own superhero capes or masks, and organize superhero-themed games and challenges.\\n8. Outdoor Adventure: Plan an outdoor adventure party at a local park or nature reserve. Arrange activities like hiking, nature scavenger hunts, or a picnic with games. Encourage exploration and appreciation for the outdoors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: ors.\\nRemember to tailor the activities to the birthday child's interests and preferences. Have a great celebration!\\n### Human: Below is an instruction that describes a task, paired with further context. Write a response that appropriately completes the request.\\n\\nInstruction:\\nSummarize the text....\r\n\r\n\r\n```",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8524/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:28:29Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32894034927",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 16136533,
            "login": "vincentteyssier",
            "display_login": "vincentteyssier",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincentteyssier",
            "avatar_url": "https://avatars.githubusercontent.com/u/16136533?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523",
                "id": 1965041323,
                "node_id": "I_kwDOIWuq5851ICar",
                "number": 8523,
                "title": "[Bug][Retriever]: ValueError: You must provide either query embeddings or query texts, but not both",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 3,
                "created_at": "2023-10-27T08:36:49Z",
                "updated_at": "2023-10-27T09:26:50Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\r\n\r\nchromadb==0.4.14\r\nllama_index==0.8.45.post1\r\n\r\n```\r\nimport chromadb\r\nfrom chromadb.config import Settings\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\n...\r\n\r\ndb = chromadb.PersistentClient(path=\"./chroma_db\", settings=Settings(anonymized_telemetry=False))\r\nchroma_collection = db.get_or_create_collection(\"cc\")\r\nvector_store= ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nres = vector_store.query(\r\n        VectorStoreQuery(\r\n            query_embedding=None, \r\n            similarity_top_k=2, \r\n            doc_ids=None, \r\n            node_ids=None, \r\n            query_str='', \r\n            output_fields=None, \r\n            embedding_field=None, \r\n            mode=VectorStoreQueryMode.DEFAULT, \r\n            alpha=None, \r\n            filters=MetadataFilters(filters=[ExactMatchFilter(key='location', value='France')]), \r\n            mmr_threshold=None, \r\n            sparse_top_k=None\r\n        )\r\n    )\r\n```\r\n\r\nFor info this is the standard query generated by the autoretriever function:\r\n```\r\nretriever = VectorIndexAutoRetriever(index, vector_store_info=vector_store_info)\r\nresponse = retriever.retrieve(input)\r\n```\r\n\r\nI try to send that vectorstorequery to Chroma but it fails with the following.\r\nI've tried adding text in the query_str field, or remove most of the fields including removing query_embedding, but nothing works and I get the following error:\r\n\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\r\n\r\n### Version\r\n\r\n0.8.45.post1\r\n\r\n### Steps to Reproduce\r\n\r\nRun code above\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\r\n```\r\n",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782593683",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523#issuecomment-1782593683",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "id": 1782593683,
                "node_id": "IC_kwDOIWuq585qQDiT",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T09:26:50Z",
                "updated_at": "2023-10-27T09:26:50Z",
                "author_association": "NONE",
                "body": "I think ultimately what we would want is to be able to do a wildcard text query to chroma if there is no query string output from the LLM, or a similarity search if we have a query string that can be transformed into embedding.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782593683/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T09:26:51Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32893787259",
        "type": "WatchEvent",
        "actor": {
            "id": 15094759,
            "login": "bishwarup307",
            "display_login": "bishwarup307",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bishwarup307",
            "avatar_url": "https://avatars.githubusercontent.com/u/15094759?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:17:27Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32893606871",
        "type": "WatchEvent",
        "actor": {
            "id": 30471421,
            "login": "Beckschen",
            "display_login": "Beckschen",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Beckschen",
            "avatar_url": "https://avatars.githubusercontent.com/u/30471421?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:10:46Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32893588824",
        "type": "WatchEvent",
        "actor": {
            "id": 39209037,
            "login": "bearlike",
            "display_login": "bearlike",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bearlike",
            "avatar_url": "https://avatars.githubusercontent.com/u/39209037?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:10:06Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32893403352",
        "type": "WatchEvent",
        "actor": {
            "id": 697014,
            "login": "nuc",
            "display_login": "nuc",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nuc",
            "avatar_url": "https://avatars.githubusercontent.com/u/697014?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T09:03:04Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32893247247",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 16136533,
            "login": "vincentteyssier",
            "display_login": "vincentteyssier",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincentteyssier",
            "avatar_url": "https://avatars.githubusercontent.com/u/16136533?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523",
                "id": 1965041323,
                "node_id": "I_kwDOIWuq5851ICar",
                "number": 8523,
                "title": "[Bug][Retriever]: ValueError: You must provide either query embeddings or query texts, but not both",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-27T08:36:49Z",
                "updated_at": "2023-10-27T08:57:14Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\n\nchromadb==0.4.14\r\nllama_index==0.8.45.post1\r\n\r\n```\r\nimport chromadb\r\nfrom chromadb.config import Settings\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\n...\r\n\r\ndb = chromadb.PersistentClient(path=\"./chroma_db\", settings=Settings(anonymized_telemetry=False))\r\nchroma_collection = db.get_or_create_collection(\"cc\")\r\nvector_store= ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nres = vector_store.query(\r\n        VectorStoreQuery(\r\n            query_embedding=None, \r\n            similarity_top_k=2, \r\n            doc_ids=None, \r\n            node_ids=None, \r\n            query_str='', \r\n            output_fields=None, \r\n            embedding_field=None, \r\n            mode=VectorStoreQueryMode.DEFAULT, \r\n            alpha=None, \r\n            filters=MetadataFilters(filters=[ExactMatchFilter(key='location', value='France')]), \r\n            mmr_threshold=None, \r\n            sparse_top_k=None\r\n        )\r\n    )\r\n```\r\n\r\nFor info this is the standard query generated by the autoretriever function/\r\n\r\nI try to send that vectorstorequery to Chroma but it fails with the following.\r\nI've tried adding text in the query_str field, or remove most of the fields including removing query_embedding, but nothing works and I get the following error:\r\n\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\n\n### Version\n\n0.8.45.post1\n\n### Steps to Reproduce\n\nRun code above\n\n### Relevant Logs/Tracbacks\n\n```shell\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\n```\n",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782551717",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523#issuecomment-1782551717",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "id": 1782551717,
                "node_id": "IC_kwDOIWuq585qP5Sl",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T08:57:14Z",
                "updated_at": "2023-10-27T08:57:14Z",
                "author_association": "NONE",
                "body": "The query function in the vector_store/chroma.py doesn't seem to support query strings, but if the autoretriever doesn't find a query string, it will not generate any embedding and therefore query_embeddings will be None and query_texts not passed:\r\n\r\n```\r\nresults = self._collection.query(\r\n            query_embeddings=query.query_embedding,\r\n            n_results=query.similarity_top_k,\r\n            where=where,\r\n            **kwargs,\r\n        )\r\n```\r\n\r\nThe query_str generated by the autoretriever should therefore be passed as query_texts in the query function of the chroma connector. Am I correct?\r\nNot competent enough to fix it and submit a PR though",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782551717/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:57:15Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32893202787",
        "type": "WatchEvent",
        "actor": {
            "id": 133182989,
            "login": "Maq-cognify",
            "display_login": "Maq-cognify",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Maq-cognify",
            "avatar_url": "https://avatars.githubusercontent.com/u/133182989?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "started"
        },
        "public": true,
        "created_at": "2023-10-27T08:55:37Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32892907658",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 16136533,
            "login": "vincentteyssier",
            "display_login": "vincentteyssier",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincentteyssier",
            "avatar_url": "https://avatars.githubusercontent.com/u/16136533?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523",
                "id": 1965041323,
                "node_id": "I_kwDOIWuq5851ICar",
                "number": 8523,
                "title": "[Bug][Retriever]: ValueError: You must provide either query embeddings or query texts, but not both",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 1,
                "created_at": "2023-10-27T08:36:49Z",
                "updated_at": "2023-10-27T08:44:27Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\n\nchromadb==0.4.14\r\nllama_index==0.8.45.post1\r\n\r\n```\r\nimport chromadb\r\nfrom chromadb.config import Settings\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\n...\r\n\r\ndb = chromadb.PersistentClient(path=\"./chroma_db\", settings=Settings(anonymized_telemetry=False))\r\nchroma_collection = db.get_or_create_collection(\"cc\")\r\nvector_store= ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nres = vector_store.query(\r\n        VectorStoreQuery(\r\n            query_embedding=None, \r\n            similarity_top_k=2, \r\n            doc_ids=None, \r\n            node_ids=None, \r\n            query_str='', \r\n            output_fields=None, \r\n            embedding_field=None, \r\n            mode=VectorStoreQueryMode.DEFAULT, \r\n            alpha=None, \r\n            filters=MetadataFilters(filters=[ExactMatchFilter(key='location', value='France')]), \r\n            mmr_threshold=None, \r\n            sparse_top_k=None\r\n        )\r\n    )\r\n```\r\n\r\nFor info this is the standard query generated by the autoretriever function/\r\n\r\nI try to send that vectorstorequery to Chroma but it fails with the following.\r\nI've tried adding text in the query_str field, or remove most of the fields including removing query_embedding, but nothing works and I get the following error:\r\n\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\n\n### Version\n\n0.8.45.post1\n\n### Steps to Reproduce\n\nRun code above\n\n### Relevant Logs/Tracbacks\n\n```shell\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\n```\n",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/reactions",
                    "total_count": 1,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 1
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782533972",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523#issuecomment-1782533972",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "id": 1782533972,
                "node_id": "IC_kwDOIWuq585qP09U",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T08:44:27Z",
                "updated_at": "2023-10-27T08:44:27Z",
                "author_association": "NONE",
                "body": "From what I see in Chroma code the error comes because of this:\r\n\r\n```\r\nif (query_embeddings is None and query_texts is None) or (\r\n            query_embeddings is not None and query_texts is not None\r\n        ):\r\n            raise ValueError(\r\n                \"You must provide either query embeddings or query texts, but not both\"\r\n            )\r\n```\r\n\r\nHowever I don't find where query_str from llama_index query is mapped to query_texts.\r\nI guess the issue is somewhere there.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782533972/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:44:27Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32892711752",
        "type": "IssuesEvent",
        "actor": {
            "id": 16136533,
            "login": "vincentteyssier",
            "display_login": "vincentteyssier",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincentteyssier",
            "avatar_url": "https://avatars.githubusercontent.com/u/16136533?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "opened",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8523",
                "id": 1965041323,
                "node_id": "I_kwDOIWuq5851ICar",
                "number": 8523,
                "title": "[Bug][Retriever]: ValueError: You must provide either query embeddings or query texts, but not both",
                "user": {
                    "login": "vincentteyssier",
                    "id": 16136533,
                    "node_id": "MDQ6VXNlcjE2MTM2NTMz",
                    "avatar_url": "https://avatars.githubusercontent.com/u/16136533?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/vincentteyssier",
                    "html_url": "https://github.com/vincentteyssier",
                    "followers_url": "https://api.github.com/users/vincentteyssier/followers",
                    "following_url": "https://api.github.com/users/vincentteyssier/following{/other_user}",
                    "gists_url": "https://api.github.com/users/vincentteyssier/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/vincentteyssier/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/vincentteyssier/subscriptions",
                    "organizations_url": "https://api.github.com/users/vincentteyssier/orgs",
                    "repos_url": "https://api.github.com/users/vincentteyssier/repos",
                    "events_url": "https://api.github.com/users/vincentteyssier/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/vincentteyssier/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318865,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                        "name": "bug",
                        "color": "d73a4a",
                        "default": true,
                        "description": "Something isn't working"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 0,
                "created_at": "2023-10-27T08:36:49Z",
                "updated_at": "2023-10-27T08:36:49Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Bug Description\n\nchromadb==0.4.14\r\nllama_index==0.8.45.post1\r\n\r\n```\r\nimport chromadb\r\nfrom chromadb.config import Settings\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\n...\r\n\r\ndb = chromadb.PersistentClient(path=\"./chroma_db\", settings=Settings(anonymized_telemetry=False))\r\nchroma_collection = db.get_or_create_collection(\"cc\")\r\nvector_store= ChromaVectorStore(chroma_collection=chroma_collection)\r\n\r\nres = vector_store.query(\r\n        VectorStoreQuery(\r\n            query_embedding=None, \r\n            similarity_top_k=2, \r\n            doc_ids=None, \r\n            node_ids=None, \r\n            query_str='', \r\n            output_fields=None, \r\n            embedding_field=None, \r\n            mode=VectorStoreQueryMode.DEFAULT, \r\n            alpha=None, \r\n            filters=MetadataFilters(filters=[ExactMatchFilter(key='location', value='France')]), \r\n            mmr_threshold=None, \r\n            sparse_top_k=None\r\n        )\r\n    )\r\n```\r\n\r\nFor info this is the standard query generated by the autoretriever function/\r\n\r\nI try to send that vectorstorequery to Chroma but it fails with the following.\r\nI've tried adding text in the query_str field, or remove most of the fields including removing query_embedding, but nothing works and I get the following error:\r\n\r\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\n\n### Version\n\n0.8.45.post1\n\n### Steps to Reproduce\n\nRun code above\n\n### Relevant Logs/Tracbacks\n\n```shell\n_Error:\r\n\"  File \"//venv/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 200, in query\r\n    raise ValueError(\r\nValueError: You must provide either query embeddings or query texts, but not both\"_\n```\n",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8523/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:36:51Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32892345518",
        "type": "IssueCommentEvent",
        "actor": {
            "id": 53038558,
            "login": "CorentinvdBdO",
            "display_login": "CorentinvdBdO",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CorentinvdBdO",
            "avatar_url": "https://avatars.githubusercontent.com/u/53038558?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "action": "created",
            "issue": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/8148",
                "repository_url": "https://api.github.com/repos/run-llama/llama_index",
                "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/labels{/name}",
                "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/comments",
                "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/events",
                "html_url": "https://github.com/run-llama/llama_index/issues/8148",
                "id": 1945527791,
                "node_id": "I_kwDOIWuq585z9mXv",
                "number": 8148,
                "title": "[Feature Request]: Oobabooga API support",
                "user": {
                    "login": "CorentinvdBdO",
                    "id": 53038558,
                    "node_id": "MDQ6VXNlcjUzMDM4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53038558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/CorentinvdBdO",
                    "html_url": "https://github.com/CorentinvdBdO",
                    "followers_url": "https://api.github.com/users/CorentinvdBdO/followers",
                    "following_url": "https://api.github.com/users/CorentinvdBdO/following{/other_user}",
                    "gists_url": "https://api.github.com/users/CorentinvdBdO/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/CorentinvdBdO/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/CorentinvdBdO/subscriptions",
                    "organizations_url": "https://api.github.com/users/CorentinvdBdO/orgs",
                    "repos_url": "https://api.github.com/users/CorentinvdBdO/repos",
                    "events_url": "https://api.github.com/users/CorentinvdBdO/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/CorentinvdBdO/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "labels": [
                    {
                        "id": 4751318869,
                        "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                        "name": "enhancement",
                        "color": "a2eeef",
                        "default": true,
                        "description": "New feature or request"
                    },
                    {
                        "id": 5584919374,
                        "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                        "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                        "name": "triage",
                        "color": "FBCA04",
                        "default": false,
                        "description": "Issue needs to be triaged/prioritized"
                    }
                ],
                "state": "open",
                "locked": false,
                "assignee": null,
                "assignees": [],
                "milestone": null,
                "comments": 2,
                "created_at": "2023-10-16T15:34:08Z",
                "updated_at": "2023-10-27T08:22:36Z",
                "closed_at": null,
                "author_association": "NONE",
                "active_lock_reason": null,
                "body": "### Feature Description\n\nHi! \r\n\r\nDo you pan to add the oobabooga/text-generation-webui inference API into LlamaIndex LLMs ? i use it a lot to test different models and the easiest way for me would be to plug it directly into LlamaIndex.\r\n\r\nThanks for your efforts!\r\n\r\nPlease forgive me if this is already supported.\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148/timeline",
                "performed_via_github_app": null,
                "state_reason": null
            },
            "comment": {
                "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782503735",
                "html_url": "https://github.com/run-llama/llama_index/issues/8148#issuecomment-1782503735",
                "issue_url": "https://api.github.com/repos/run-llama/llama_index/issues/8148",
                "id": 1782503735,
                "node_id": "IC_kwDOIWuq585qPtk3",
                "user": {
                    "login": "CorentinvdBdO",
                    "id": 53038558,
                    "node_id": "MDQ6VXNlcjUzMDM4NTU4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/53038558?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/CorentinvdBdO",
                    "html_url": "https://github.com/CorentinvdBdO",
                    "followers_url": "https://api.github.com/users/CorentinvdBdO/followers",
                    "following_url": "https://api.github.com/users/CorentinvdBdO/following{/other_user}",
                    "gists_url": "https://api.github.com/users/CorentinvdBdO/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/CorentinvdBdO/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/CorentinvdBdO/subscriptions",
                    "organizations_url": "https://api.github.com/users/CorentinvdBdO/orgs",
                    "repos_url": "https://api.github.com/users/CorentinvdBdO/repos",
                    "events_url": "https://api.github.com/users/CorentinvdBdO/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/CorentinvdBdO/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "created_at": "2023-10-27T08:22:36Z",
                "updated_at": "2023-10-27T08:22:36Z",
                "author_association": "NONE",
                "body": "You're right on oobabooga/text-generation-webui, but it also allows to open the model as a blocking or streaming API. Is it possible to handle this API like the OpenAI API? It's an easy way to have a free and model agnostic endpoint. However it may lacks some features like the logits.",
                "reactions": {
                    "url": "https://api.github.com/repos/run-llama/llama_index/issues/comments/1782503735/reactions",
                    "total_count": 0,
                    "+1": 0,
                    "-1": 0,
                    "laugh": 0,
                    "hooray": 0,
                    "confused": 0,
                    "heart": 0,
                    "rocket": 0,
                    "eyes": 0
                },
                "performed_via_github_app": null
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:22:36Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    },
    {
        "id": "32892146219",
        "type": "ForkEvent",
        "actor": {
            "id": 1871311,
            "login": "feisuo",
            "display_login": "feisuo",
            "gravatar_id": "",
            "url": "https://api.github.com/users/feisuo",
            "avatar_url": "https://avatars.githubusercontent.com/u/1871311?"
        },
        "repo": {
            "id": 560704231,
            "name": "run-llama/llama_index",
            "url": "https://api.github.com/repos/run-llama/llama_index"
        },
        "payload": {
            "forkee": {
                "id": 710686259,
                "node_id": "R_kgDOKlw2Mw",
                "name": "llama_index",
                "full_name": "feisuo/llama_index",
                "private": false,
                "owner": {
                    "login": "feisuo",
                    "id": 1871311,
                    "node_id": "MDQ6VXNlcjE4NzEzMTE=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1871311?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/feisuo",
                    "html_url": "https://github.com/feisuo",
                    "followers_url": "https://api.github.com/users/feisuo/followers",
                    "following_url": "https://api.github.com/users/feisuo/following{/other_user}",
                    "gists_url": "https://api.github.com/users/feisuo/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/feisuo/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/feisuo/subscriptions",
                    "organizations_url": "https://api.github.com/users/feisuo/orgs",
                    "repos_url": "https://api.github.com/users/feisuo/repos",
                    "events_url": "https://api.github.com/users/feisuo/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/feisuo/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "html_url": "https://github.com/feisuo/llama_index",
                "description": "LlamaIndex (formerly GPT Index) is a data framework for your LLM applications",
                "fork": true,
                "url": "https://api.github.com/repos/feisuo/llama_index",
                "forks_url": "https://api.github.com/repos/feisuo/llama_index/forks",
                "keys_url": "https://api.github.com/repos/feisuo/llama_index/keys{/key_id}",
                "collaborators_url": "https://api.github.com/repos/feisuo/llama_index/collaborators{/collaborator}",
                "teams_url": "https://api.github.com/repos/feisuo/llama_index/teams",
                "hooks_url": "https://api.github.com/repos/feisuo/llama_index/hooks",
                "issue_events_url": "https://api.github.com/repos/feisuo/llama_index/issues/events{/number}",
                "events_url": "https://api.github.com/repos/feisuo/llama_index/events",
                "assignees_url": "https://api.github.com/repos/feisuo/llama_index/assignees{/user}",
                "branches_url": "https://api.github.com/repos/feisuo/llama_index/branches{/branch}",
                "tags_url": "https://api.github.com/repos/feisuo/llama_index/tags",
                "blobs_url": "https://api.github.com/repos/feisuo/llama_index/git/blobs{/sha}",
                "git_tags_url": "https://api.github.com/repos/feisuo/llama_index/git/tags{/sha}",
                "git_refs_url": "https://api.github.com/repos/feisuo/llama_index/git/refs{/sha}",
                "trees_url": "https://api.github.com/repos/feisuo/llama_index/git/trees{/sha}",
                "statuses_url": "https://api.github.com/repos/feisuo/llama_index/statuses/{sha}",
                "languages_url": "https://api.github.com/repos/feisuo/llama_index/languages",
                "stargazers_url": "https://api.github.com/repos/feisuo/llama_index/stargazers",
                "contributors_url": "https://api.github.com/repos/feisuo/llama_index/contributors",
                "subscribers_url": "https://api.github.com/repos/feisuo/llama_index/subscribers",
                "subscription_url": "https://api.github.com/repos/feisuo/llama_index/subscription",
                "commits_url": "https://api.github.com/repos/feisuo/llama_index/commits{/sha}",
                "git_commits_url": "https://api.github.com/repos/feisuo/llama_index/git/commits{/sha}",
                "comments_url": "https://api.github.com/repos/feisuo/llama_index/comments{/number}",
                "issue_comment_url": "https://api.github.com/repos/feisuo/llama_index/issues/comments{/number}",
                "contents_url": "https://api.github.com/repos/feisuo/llama_index/contents/{+path}",
                "compare_url": "https://api.github.com/repos/feisuo/llama_index/compare/{base}...{head}",
                "merges_url": "https://api.github.com/repos/feisuo/llama_index/merges",
                "archive_url": "https://api.github.com/repos/feisuo/llama_index/{archive_format}{/ref}",
                "downloads_url": "https://api.github.com/repos/feisuo/llama_index/downloads",
                "issues_url": "https://api.github.com/repos/feisuo/llama_index/issues{/number}",
                "pulls_url": "https://api.github.com/repos/feisuo/llama_index/pulls{/number}",
                "milestones_url": "https://api.github.com/repos/feisuo/llama_index/milestones{/number}",
                "notifications_url": "https://api.github.com/repos/feisuo/llama_index/notifications{?since,all,participating}",
                "labels_url": "https://api.github.com/repos/feisuo/llama_index/labels{/name}",
                "releases_url": "https://api.github.com/repos/feisuo/llama_index/releases{/id}",
                "deployments_url": "https://api.github.com/repos/feisuo/llama_index/deployments",
                "created_at": "2023-10-27T08:14:54Z",
                "updated_at": "2023-10-27T08:14:54Z",
                "pushed_at": "2023-10-27T07:40:37Z",
                "git_url": "git://github.com/feisuo/llama_index.git",
                "ssh_url": "git@github.com:feisuo/llama_index.git",
                "clone_url": "https://github.com/feisuo/llama_index.git",
                "svn_url": "https://github.com/feisuo/llama_index",
                "homepage": "https://docs.llamaindex.ai",
                "size": 84477,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": null,
                "has_issues": false,
                "has_projects": true,
                "has_downloads": true,
                "has_wiki": true,
                "has_pages": false,
                "has_discussions": false,
                "forks_count": 0,
                "mirror_url": null,
                "archived": false,
                "disabled": false,
                "open_issues_count": 0,
                "license": null,
                "allow_forking": true,
                "is_template": false,
                "web_commit_signoff_required": false,
                "topics": [],
                "visibility": "public",
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "main",
                "public": true
            }
        },
        "public": true,
        "created_at": "2023-10-27T08:14:55Z",
        "org": {
            "id": 130722866,
            "login": "run-llama",
            "gravatar_id": "",
            "url": "https://api.github.com/orgs/run-llama",
            "avatar_url": "https://avatars.githubusercontent.com/u/130722866?"
        }
    }
]